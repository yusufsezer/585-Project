'js' "s" ; Object . defineProperty ( exports , "s" , { value : true } ) ; const express = require ( "s" ) ; const request = require ( "s" ) ; const 0 = require ( "s" ) ; let app = express ( ) ; let appId = 's' ; let appsecret = 's' ; let url = 's' ; let nonceStr = 's' ; function getWXConfig ( cb ) { request . get ( 's' + appId + 's' + appsecret , ( err , res , body ) => { request . get ( 's' + JSON . parse ( body ) . access_token + 's' , ( err , res , body ) => { let ticket = JSON . parse ( body ) . ticket ; let o = { appId : appId , nonceStr : nonceStr , timestamp : new Date ( ) . getTime ( ) / 0 + 's' , signature : 's' } ; o . signature = 0 ( 's' + ticket + 's' + o . nonceStr + 's' + o . timestamp + 's' + url ) . toString ( ) ; cb ( o ) ; } ) ; } ) ; } app . engine ( 's' , require ( 's' ) . __express ) ; app . set ( 's' , __dirname + 's' ) ; app . set ( 's' , 's' ) ; app . use ( express . static ( 's' ) ) ; app . get ( 's' , function ( req , res ) { getWXConfig ( config => { res . render ( 's' , { appId : config . appId , timestamp : config . timestamp , nonceStr : config . nonceStr , signature : config . signature , } ) ; } ) ; } ) ; app . listen ( 0 ) ;	O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $string$ O O O O $string$ O O O O $string$ O O O O $string$ O O O O $void$ O $any$ O O $any$ O $any$ O O O $string$ O O O $string$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $JSON$ O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $JSON$ O $any$ O $any$ O O $any$ O O $complex$ O O $string$ O $string$ O $string$ O $string$ O $string$ O O $DateConstructor$ O O O $number$ O O O O O O O $string$ O O O O $complex$ O $string$ O $any$ O O O $any$ O O O $complex$ O $string$ O O O $complex$ O $string$ O O O $string$ O O $any$ O O O $any$ O $complex$ O O O O O O O O O $any$ O $any$ O O O $any$ O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O $void$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O O
import * as express from "s" ; import * as request from "s" ; import 0 = require ( "s" ) ; let app = express ( ) ; let appId = 's' ; let appsecret = 's' ; let url = 's' ; let nonceStr = 's' ; interface configObj { appId : string , timestamp : string , nonceStr : string , signature : string } function getWXConfig ( cb ) { request . get ( 's' + appId + 's' + appsecret , ( err , res , body ) => { request . get ( 's' + JSON . parse ( body ) . access_token + 's' , ( err , res , body ) => { let ticket = JSON . parse ( body ) . ticket ; let o = { appId : appId , nonceStr : nonceStr , timestamp : new Date ( ) . getTime ( ) / 0 + 's' , signature : 's' } ; o . signature = 0 ( 's' + ticket + 's' + o . nonceStr + 's' + o . timestamp + 's' + url ) . toString ( ) ; cb ( o ) ; } ) ; } ) ; } app . engine ( 's' , require ( 's' ) . __express ) ; app . set ( 's' , __dirname + 's' ) ; app . set ( 's' , 's' ) ; app . use ( express . static ( 's' ) ) app . get ( 's' , function ( req , res ) { getWXConfig ( config => { res . render ( 's' , { appId : config . appId , timestamp : config . timestamp , nonceStr : config . nonceStr , signature : config . signature , } ) ; } ) } ) ; app . listen ( 0 ) ;	O O O $any$ O O O O O O $any$ O O O O $any$ O O O O O O O $any$ O $any$ O O O O $string$ O O O O $string$ O O O O $string$ O O O O $string$ O O O O $any$ O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O $void$ O $any$ O O $any$ O $any$ O O O $string$ O O O $string$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $JSON$ O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $JSON$ O $any$ O $any$ O O $any$ O O $configObj$ O O $string$ O $string$ O $string$ O $string$ O $string$ O O $DateConstructor$ O O O $number$ O O O O O O O $string$ O O O O $configObj$ O $string$ O $any$ O O O $any$ O O O $configObj$ O $string$ O O O $configObj$ O $string$ O O O $string$ O O $any$ O O O $any$ O $configObj$ O O O O O O O O O $any$ O $any$ O O O $any$ O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O $any$ O O $void$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O
'js' wx . ready ( ( ) => { wx . openLocation ( { latitude : 0 , longitude : 0 , name : 's' , address : 's' , scale : 0 , infoUrl : 's' } ) ; } ) ; wx . error ( ( err ) => alert ( err ) ) ;	O $any$ O $void$ O O O O O $any$ O $void$ O O $number$ O O O $number$ O O O $string$ O O O $string$ O O O $number$ O O O $string$ O O O O O O O O $any$ O $void$ O O $any$ O O $void$ O $any$ O O O
wx . ready ( ( ) => { wx . openLocation ( { latitude : 0 , longitude : 0 , name : 's' , address : 's' , scale : 0 , infoUrl : 's' } ) ; } ) wx . error ( ( err ) => alert ( err ) ) ;	$any$ O $void$ O O O O O $any$ O $void$ O O $number$ O O O $number$ O O O $string$ O O O $string$ O O O $number$ O O O $string$ O O O O O O O $any$ O $void$ O O $any$ O O $void$ O $any$ O O O