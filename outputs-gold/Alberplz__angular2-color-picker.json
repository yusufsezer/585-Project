import { Component } from 's' ; import { ColorPickerDirective , ColorPickerService , Rgba } from 's' ; export class Cmyk { constructor ( public c , public m , public y , public k ) { } } @ Component ( { selector : 's' , templateUrl : 's' } ) export class AppComponent { constructor ( private cpService ) { this . arrayColors [ 's' ] = 's' ; this . arrayColors [ 's' ] = 's' ; this . arrayColors [ 's' ] = 's' ; this . arrayColors [ 's' ] = 's' ; this . arrayColors [ 's' ] = 's' ; } private color : string = 's' ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private arrayColors : any = { } ; private selectedColor : string = 's' ; private toggle : boolean ; private 0 : boolean ; private lastColor = 's' ; private cmyk : Cmyk = new Cmyk ( 0 , 0 , 0 , 0 ) ; onChangeColor ( color ) { return this . rgbaToCmyk ( this . cpService . hsvaToRgba ( this . cpService . stringToHsva ( color ) ) ) ; } rgbaToCmyk ( rgba ) { let cmyk = new Cmyk ( 0 , 0 , 0 , 0 ) , k ; k = 0 - Math . max ( rgba . r , rgba . g , rgba . b ) ; if ( k == 0 ) return new Cmyk ( 0 , 0 , 0 , 0 ) ; cmyk . c = ( 0 - rgba . r - k ) / ( 0 - k ) ; cmyk . m = ( 0 - rgba . g - k ) / ( 0 - k ) ; cmyk . y = ( 0 - rgba . b - k ) / ( 0 - k ) ; cmyk . k = k ; return cmyk ; } 0 ( color ) { return this . cpService . outputFormat ( this . cpService . stringToHsva ( color , true ) , 's' , true ) ; } }	O O O O O O O O O O O O O O O O O O O O O O O O O $number$ O O $number$ O O $number$ O O $number$ O O O O O O O O O O O O O O O O O O O O O O O O $ColorPickerService$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Cmyk$ O $string$ O O O O O O O O O O O O O O O O O O O O O O O O O $Cmyk$ O $Rgba$ O O O $Cmyk$ O O O O O O O O O O O O O $number$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $string$ O $string$ O O O O O O O O O O O O O O O O O O O O O O O O O O O
import { NgModule } from 's' ; import { BrowserModule } from 's' ; import { ColorPickerModule } from 's' ; import { AppComponent } from 's' ; @ NgModule ( { bootstrap : [ AppComponent ] , declarations : [ AppComponent ] , imports : [ BrowserModule , ColorPickerModule ] } ) export class AppModule { }	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
import { platformBrowserDynamic } from 's' ; import { AppModule } from 's' ; platformBrowserDynamic ( ) . bootstrapModule ( AppModule ) ;	O O O O O O O O O O O O O O O O O O O O O O O
'js' ( function ( global ) { System . config ( { transpiler : 's' , typescriptOptions : { tsconfig : true } , meta : { 's' : { "s" : "s" } } , paths : { 's' : 's' } , map : { app : 's' , 's' : 's' , 's' : 's' , 's' : 's' , 's' : 's' , 's' : 's' , 's' : 's' , 's' : 's' , 's' : 's' , 's' : 's' , 's' : 's' , 's' : 's' , 's' : 's' , 's' : 's' } , packages : { app : { main : 's' , defaultExtension : 's' } , rxjs : { defaultExtension : 's' } , 's' : { main : 's' , defaultExtension : 's' } , 's' : { main : 's' , defaultExtension : 's' } } } ) ; } ) ( this ) ;	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
'js' var path = require ( 's' ) ; var _root = path . resolve ( __dirname , 's' ) ; function root ( args ) { args = Array . prototype . slice . call ( arguments , 0 ) ; return path . join . apply ( path , [ _root ] . concat ( args ) ) ; } exports . root = root ;	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
'js' Error . stackTraceLimit = Infinity ; require ( 's' ) ; require ( 's' ) ; require ( 's' ) ; require ( 's' ) ; require ( 's' ) ; require ( 's' ) ; require ( 's' ) ; require ( 's' ) ; require ( 's' ) ; var appContext = require . context ( 's' , true , "s" ) ; appContext . keys ( ) . forEach ( appContext ) ; var testing = require ( 's' ) ; var browser = require ( 's' ) ; testing . TestBed . initTestEnvironment ( browser . BrowserDynamicTestingModule , browser . platformBrowserDynamicTesting ( ) ) ;	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
'js' var webpack = require ( 's' ) ; var helpers = require ( 's' ) ; module . exports = { devtool : 's' , resolve : { extensions : [ 's' , 's' ] } , module : { rules : [ { test : "s" , loaders : [ 's' , 's' ] } , { test : "s" , loader : 's' } , { test : "s" , loader : 's' } , { test : "s" , exclude : helpers . root ( 's' , 's' ) , loader : 's' } , { test : "s" , include : helpers . root ( 's' , 's' ) , loader : 's' } ] } , plugins : [ new webpack . ContextReplacementPlugin ( "s" , helpers . root ( 's' ) , { } ) ] }	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
'js' var webpackConfig = require ( 's' ) ; module . exports = function ( config ) { var _config = { basePath : 's' , frameworks : [ 's' ] , files : [ { pattern : 's' , watched : false } ] , preprocessors : { 's' : [ 's' , 's' ] } , webpack : webpackConfig , webpackMiddleware : { stats : 's' } , webpackServer : { noInfo : true } , reporters : [ 's' ] , port : 0 , colors : true , logLevel : config . LOG_INFO , autoWatch : false , browsers : [ 's' ] , singleRun : true } ; config . set ( _config ) ; } ;	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
'js' var webpack = require ( 's' ) ; var HtmlWebpackPlugin = require ( 's' ) ; var ExtractTextPlugin = require ( 's' ) ; var helpers = require ( 's' ) ; module . exports = { entry : { 's' : 's' , 's' : 's' , 's' : 's' } , resolve : { extensions : [ 's' , 's' ] } , module : { rules : [ { test : "s" , loaders : [ 's' , 's' ] } , { test : "s" , loader : 's' } , { test : "s" , loader : 's' } , { test : "s" , exclude : helpers . root ( 's' , 's' ) , loader : ExtractTextPlugin . extract ( { fallbackLoader : 's' , loader : 's' } ) } , { test : "s" , include : helpers . root ( 's' , 's' ) , loader : 's' } ] } , plugins : [ new webpack . ContextReplacementPlugin ( "s" , helpers . root ( 's' ) , { } ) , new webpack . optimize . CommonsChunkPlugin ( { name : [ 's' , 's' , 's' ] } ) , new HtmlWebpackPlugin ( { template : 's' } ) ] } ;	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
'js' var webpackMerge = require ( 's' ) ; var ExtractTextPlugin = require ( 's' ) ; var commonConfig = require ( 's' ) ; var helpers = require ( 's' ) ; module . exports = webpackMerge ( commonConfig , { devtool : 's' , output : { path : helpers . root ( 's' ) , publicPath : 's' , filename : 's' , chunkFilename : 's' } , plugins : [ new ExtractTextPlugin ( 's' ) ] , devServer : { historyApiFallback : true , stats : 's' } } ) ;	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
'js' var webpack = require ( 's' ) ; var webpackMerge = require ( 's' ) ; var ExtractTextPlugin = require ( 's' ) ; var commonConfig = require ( 's' ) ; var helpers = require ( 's' ) ; const ENV = process . env . NODE_ENV = process . env . ENV = 's' ; module . exports = webpackMerge ( commonConfig , { devtool : 's' , output : { path : helpers . root ( 's' ) , publicPath : 's' , filename : 's' , chunkFilename : 's' } , plugins : [ new webpack . NoEmitOnErrorsPlugin ( ) , new webpack . optimize . UglifyJsPlugin ( { mangle : { keep_fnames : true } } ) , new ExtractTextPlugin ( 's' ) , new webpack . DefinePlugin ( { 's' : { 's' : JSON . stringify ( ENV ) } } ) , new webpack . LoaderOptionsPlugin ( { htmlLoader : { minimize : false } } ) ] } ) ;	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
'js' module . exports = require ( 's' ) ;	O O O O O O O O O O
import { Component } from 's' ; import 's' ; import { ColorPickerService , Rgba } from 's' ; export class Cmyk { constructor ( public c , public m , public y , public k ) { } } @ Component ( { selector : 's' , templateUrl : 's' , styleUrls : [ 's' ] } ) export class AppComponent { constructor ( private cpService ) { this . arrayColors [ 's' ] = 's' ; this . arrayColors [ 's' ] = 's' ; this . arrayColors [ 's' ] = 's' ; this . arrayColors [ 's' ] = 's' ; this . arrayColors [ 's' ] = 's' ; } private color : string = 's' ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private 0 : string = "s" ; private arrayColors : any = { } ; private selectedColor : string = 's' ; private toggle : boolean ; private 0 : boolean ; private lastColor = 's' ; private cmyk : Cmyk = new Cmyk ( 0 , 0 , 0 , 0 ) ; onChangeColor ( color ) { return this . rgbaToCmyk ( this . cpService . hsvaToRgba ( this . cpService . stringToHsva ( color ) ) ) ; } rgbaToCmyk ( rgba ) { let cmyk = new Cmyk ( 0 , 0 , 0 , 0 ) , k ; k = 0 - Math . max ( rgba . r , rgba . g , rgba . b ) ; if ( k == 0 ) return new Cmyk ( 0 , 0 , 0 , 0 ) ; cmyk . c = ( 0 - rgba . r - k ) / ( 0 - k ) ; cmyk . m = ( 0 - rgba . g - k ) / ( 0 - k ) ; cmyk . y = ( 0 - rgba . b - k ) / ( 0 - k ) ; cmyk . k = k ; return cmyk ; } 0 ( color ) { return this . cpService . outputFormat ( this . cpService . stringToHsva ( color , true ) , 's' , true ) ; } }	O O O O O O O O O O O O O O O O O O O O O O O O O O $number$ O O $number$ O O $number$ O O $number$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $ColorPickerService$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Cmyk$ O $string$ O O O O O O O O O O O O O O O O O O O O O O O O O $Cmyk$ O $Rgba$ O O O $Cmyk$ O O O O O O O O O O O O O $number$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $string$ O $string$ O O O O O O O O O O O O O O O O O O O O O O O O O O O
import { TestBed } from 's' ; import { AppComponent } from 's' ; describe ( 's' , ( ) => { beforeEach ( ( ) => { TestBed . configureTestingModule ( { declarations : [ AppComponent ] } ) ; } ) ; it ( 's' , ( ) => { let fixture = TestBed . createComponent ( AppComponent ) ; expect ( fixture . componentInstance instanceof AppComponent ) . toBe ( true , 's' ) ; } ) ; } ) ;	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
import { NgModule } from 's' ; import { BrowserModule } from 's' ; import { AppComponent } from 's' ; import { ColorPickerModule , ColorPickerService } from 's' ; @ NgModule ( { imports : [ BrowserModule , ColorPickerModule ] , declarations : [ AppComponent ] , providers : [ ColorPickerService ] , bootstrap : [ AppComponent ] } ) export class AppModule { }	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
import { platformBrowserDynamic } from 's' ; import { enableProdMode } from 's' ; import { AppModule } from 's' ; if ( process . env . ENV === 's' ) { enableProdMode ( ) ; } platformBrowserDynamic ( ) . bootstrapModule ( AppModule ) ;	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
import 's' ; import 's' ; require ( 's' ) ; if ( process . env . ENV === 's' ) { } else { Error [ 's' ] = Infinity ; require ( 's' ) ; }	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
import 's' ; import 's' ; import 's' ; import 's' ; import 's' ; import 's' ; import 's' ; import 's' ;	O O O O O O O O O O O O O O O O O O O O O O O O
'js' module . exports = require ( 's' ) ;	O O O O O O O O O O
'js' var gulp = require ( 's' ) ; var del = require ( 's' ) ; var tsc = require ( 's' ) ; var gulpTypings = require ( "s" ) ; var sourcemaps = require ( 's' ) ; var tscConfig = require ( 's' ) ; var sass = require ( 's' ) ; var uglify = require ( 's' ) ; var 0 = require ( 's' ) ; var runSequence = require ( 's' ) ; gulp . task ( 's' , function ( ) { return del . sync ( 's' ) ; } ) ; gulp . task ( "s" , function ( ) { return gulp . src ( "s" ) . pipe ( gulpTypings ( ) ) ; } ) ; gulp . task ( 's' , function ( ) { return gulp . src ( 's' ) . pipe ( sass ( { outputStyle : 's' } ) ) . pipe ( gulp . dest ( 's' ) ) ; } ) ; gulp . task ( 's' , function ( ) { return gulp . src ( [ 's' ] ) . pipe ( 0 ( { base : 's' } ) ) . pipe ( gulp . dest ( 's' ) ) ; } ) ; gulp . task ( 's' , function ( ) { var r = gulp . src ( [ 's' , 's' ] ) . pipe ( sourcemaps . init ( ) ) . pipe ( tsc ( tscConfig . compilerOptions ) ) ; r . dts . pipe ( gulp . dest ( 's' ) ) ; r . js . pipe ( uglify ( ) ) . pipe ( gulp . dest ( 's' ) ) ; return r . pipe ( sourcemaps . write ( 's' ) ) . pipe ( gulp . dest ( 's' ) ) ; } ) ; gulp . task ( 's' , function ( ) { var r = gulp . src ( [ 's' , 's' ] ) . pipe ( sourcemaps . init ( ) ) . pipe ( tsc ( tscConfig . compilerOptions ) ) ; r . dts . pipe ( gulp . dest ( 's' ) ) ; r . js . pipe ( gulp . dest ( 's' ) ) ; return r . pipe ( sourcemaps . write ( 's' ) ) . pipe ( gulp . dest ( 's' ) ) ; } ) ; gulp . task ( 's' , function ( ) { return del . sync ( 's' ) ; } ) ; gulp . task ( 's' , function ( callback ) { runSequence ( 's' , 's' , 's' , 's' , 's' , 's' , 's' , callback ) ; } ) ; gulp . task ( 's' , function ( callback ) { runSequence ( 's' , 's' , 's' , callback ) ; } ) ; gulp . task ( 's' , function ( ) { return gulp . src ( [ 's' ] ) . pipe ( gulp . dest ( 's' ) ) . pipe ( gulp . dest ( 's' ) ) ; } ) ; gulp . task ( 's' , function ( ) { return gulp . src ( [ 's' ] ) . pipe ( gulp . dest ( 's' ) ) . pipe ( gulp . dest ( 's' ) ) ; } ) ; gulp . task ( 's' , function ( ) { return del . sync ( 's' , 's' ) ; } ) ;	
export class Hsva { constructor ( public h , public s , public v , public a ) { } } export class Hsla { constructor ( public h , public s , public l , public a ) { } } export class Rgba { constructor ( public r , public g , public b , public a ) { } } export class SliderPosition { constructor ( public h , public s , public v , public a ) { } } export class SliderDimension { constructor ( public h , public s , public v , public a ) { } }	O O O O O O O $number$ O O $number$ O O $number$ O O $number$ O O O O O O O O O O O $number$ O O $number$ O O $number$ O O $number$ O O O O O O O O O O O $number$ O O $number$ O O $number$ O O $number$ O O O O O O O O O O O $number$ O O $number$ O O $number$ O O $number$ O O O O O O O O O O O $number$ O O $number$ O O $number$ O O $number$ O O O O
import { Injectable } from 's' ; import { Rgba , Hsla , Hsva } from 's' ; @ Injectable ( ) export class ColorPickerService { constructor ( ) { } 0 ( hsla ) { let h = Math . min ( hsla . h , 0 ) , s = Math . min ( hsla . s , 0 ) , l = Math . min ( hsla . l , 0 ) , a = Math . min ( hsla . a , 0 ) ; if ( l === 0 ) { return new Hsva ( h , 0 , 0 , a ) ; } else { let v = l + s * ( 0 - Math . abs ( 0 * l - 0 ) ) / 0 ; return new Hsva ( h , 0 * ( v - l ) / v , v , a ) ; } } 0 ( hsva ) { let h = hsva . h , s = hsva . s , v = hsva . v , a = hsva . a ; if ( v === 0 ) { return new Hsla ( h , 0 , 0 , a ) } else if ( s === 0 && v === 0 ) { return new Hsla ( h , 0 , 0 , a ) } else { let l = v * ( 0 - s ) / 0 ; return new Hsla ( h , v * s / ( 0 - Math . abs ( 0 * l - 0 ) ) , l , a ) } } rgbaToHsva ( rgba ) { let r = Math . min ( rgba . r , 0 ) , g = Math . min ( rgba . g , 0 ) , b = Math . min ( rgba . b , 0 ) , a = Math . min ( rgba . a , 0 ) ; let max = Math . max ( r , g , b ) , min = Math . min ( r , g , b ) ; let h , s , v = max ; let d = max - min ; s = max === 0 ? 0 : d / max ; if ( max === min ) { h = 0 ; } else { switch ( max ) { case r : h = ( g - b ) / d + ( g < b ? 0 : 0 ) ; break ; case g : h = ( b - r ) / d + 0 ; break ; case b : h = ( r - g ) / d + 0 ; break ; } h /= 0 ; } return new Hsva ( h , s , v , a ) } hsvaToRgba ( hsva ) { let h = hsva . h , s = hsva . s , v = hsva . v , a = hsva . a ; let r , g , b ; let i = Math . floor ( h * 0 ) ; let f = h * 0 - i ; let p = v * ( 0 - s ) ; let q = v * ( 0 - f * s ) ; let t = v * ( 0 - ( 0 - f ) * s ) ; switch ( i % 0 ) { case 0 : r = v , g = t , b = p ; break ; case 0 : r = q , g = v , b = p ; break ; case 0 : r = p , g = v , b = t ; break ; case 0 : r = p , g = q , b = v ; break ; case 0 : r = t , g = p , b = v ; break ; case 0 : r = v , g = p , b = q ; break ; } return new Rgba ( r , g , b , a ) } stringToHsva ( colorString = 's' , 0 = false ) { let stringParsers = [ { re : "s" , parse : function ( execResult ) { return new Rgba ( parseInt ( execResult [ 0 ] ) / 0 , parseInt ( execResult [ 0 ] ) / 0 , parseInt ( execResult [ 0 ] ) / 0 , isNaN ( parseFloat ( execResult [ 0 ] ) ) ? 0 : parseFloat ( execResult [ 0 ] ) ) ; } } , { re : "s" , parse : function ( execResult ) { return new Hsla ( parseInt ( execResult [ 0 ] ) / 0 , parseInt ( execResult [ 0 ] ) / 0 , parseInt ( execResult [ 0 ] ) / 0 , isNaN ( parseFloat ( execResult [ 0 ] ) ) ? 0 : parseFloat ( execResult [ 0 ] ) ) ; } } ] ; if ( 0 ) { stringParsers . push ( { re : "s" , parse : function ( execResult ) { return new Rgba ( parseInt ( execResult [ 0 ] , 0 ) / 0 , parseInt ( execResult [ 0 ] , 0 ) / 0 , parseInt ( execResult [ 0 ] , 0 ) / 0 , parseInt ( execResult [ 0 ] , 0 ) / 0 ) ; } } ) ; } else { stringParsers . push ( { re : "s" , parse : function ( execResult ) { return new Rgba ( parseInt ( execResult [ 0 ] , 0 ) / 0 , parseInt ( execResult [ 0 ] , 0 ) / 0 , parseInt ( execResult [ 0 ] , 0 ) / 0 , 0 ) ; } } , { re : "s" , parse : function ( execResult ) { return new Rgba ( parseInt ( execResult [ 0 ] + execResult [ 0 ] , 0 ) / 0 , parseInt ( execResult [ 0 ] + execResult [ 0 ] , 0 ) / 0 , parseInt ( execResult [ 0 ] + execResult [ 0 ] , 0 ) / 0 , 0 ) ; } } ) ; } colorString = colorString . toLowerCase ( ) ; let hsva = null ; for ( let key in stringParsers ) { if ( stringParsers . hasOwnProperty ( key ) ) { let parser = stringParsers [ key ] ; let match = parser . re . exec ( colorString ) , color = match && parser . parse ( match ) ; if ( color ) { if ( color instanceof Rgba ) { hsva = this . rgbaToHsva ( color ) ; } else if ( color instanceof Hsla ) { hsva = this . 0 ( color ) ; } return hsva ; } } } return hsva ; } outputFormat ( hsva , outputFormat , 0 ) { if ( hsva . a < 0 ) { switch ( outputFormat ) { case 's' : let hsla = this . 0 ( hsva ) ; let hslaText = new Hsla ( Math . round ( ( hsla . h ) * 0 ) , Math . round ( hsla . s * 0 ) , Math . round ( hsla . l * 0 ) , Math . round ( hsla . a * 0 ) / 0 ) ; return 's' + hslaText . h + 's' + hslaText . s + 's' + hslaText . l + 's' + hslaText . a + 's' ; default : if ( 0 && outputFormat === 's' ) return this . hexText ( this . denormalizeRGBA ( this . hsvaToRgba ( hsva ) ) , 0 ) ; let rgba = this . denormalizeRGBA ( this . hsvaToRgba ( hsva ) ) ; return 's' + rgba . r + 's' + rgba . g + 's' + rgba . b + 's' + Math . round ( rgba . a * 0 ) / 0 + 's' ; } } else { switch ( outputFormat ) { case 's' : let hsla = this . 0 ( hsva ) ; let hslaText = new Hsla ( Math . round ( ( hsla . h ) * 0 ) , Math . round ( hsla . s * 0 ) , Math . round ( hsla . l * 0 ) , Math . round ( hsla . a * 0 ) / 0 ) ; return 's' + hslaText . h + 's' + hslaText . s + 's' + hslaText . l + 's' ; case 's' : let rgba = this . denormalizeRGBA ( this . hsvaToRgba ( hsva ) ) ; return 's' + rgba . r + 's' + rgba . g + 's' + rgba . b + 's' ; default : return this . hexText ( this . denormalizeRGBA ( this . hsvaToRgba ( hsva ) ) , 0 ) ; } } } hexText ( rgba , 0 ) { let hexText = 's' + ( ( 0 << 0 ) | ( rgba . r << 0 ) | ( rgba . g << 0 ) | rgba . b ) . toString ( 0 ) . substr ( 0 ) ; if ( hexText [ 0 ] === hexText [ 0 ] && hexText [ 0 ] === hexText [ 0 ] && hexText [ 0 ] === hexText [ 0 ] && rgba . a === 0 && ! 0 ) { hexText = 's' + hexText [ 0 ] + hexText [ 0 ] + hexText [ 0 ] ; } if ( 0 ) { hexText += ( ( 0 << 0 ) | Math . round ( rgba . a * 0 ) ) . toString ( 0 ) . substr ( 0 ) ; } return hexText ; } denormalizeRGBA ( rgba ) { return new Rgba ( Math . round ( rgba . r * 0 ) , Math . round ( rgba . g * 0 ) , Math . round ( rgba . b * 0 ) , rgba . a ) ; } }	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Hsva$ O $Hsla$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Hsla$ O $Hsva$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Hsva$ O $Rgba$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $number$ O $number$ O $number$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Rgba$ O $Hsva$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O $number$ O $number$ O $number$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Hsva$ O $string$ O O O $boolean$ O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Hsva$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Hsva$ O $string$ O $boolean$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $string$ O $Rgba$ O $boolean$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Rgba$ O $Rgba$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
import { Component , OnChanges , Directive , Input , Output , ViewContainerRef , ElementRef , EventEmitter , OnInit , ViewChild } from 's' ; import { ColorPickerService } from 's' ; import { Rgba , Hsla , Hsva , SliderPosition , SliderDimension } from 's' ; import { NgModule , Compiler , ReflectiveInjector } from 's' ; import { BrowserModule } from 's' ; @ Directive ( { selector : 's' , host : { 's' : 's' , 's' : 's' } } ) export class ColorPickerDirective implements OnInit , OnChanges { @ Input ( 's' ) colorPicker : string ; @ Output ( 's' ) colorPickerChange = new EventEmitter < string > ( true ) ; @ Input ( 's' ) cpToggle : boolean ; @ Output ( 's' ) cpToggleChange = new EventEmitter < boolean > ( true ) ; @ Input ( 's' ) cpPosition : string = 's' ; @ Input ( 's' ) cpPositionOffset : string = 's' ; @ Input ( 's' ) cpPositionRelativeToArrow : boolean = false ; @ Input ( 's' ) cpOutputFormat : string = 's' ; @ Input ( 's' ) cpPresetLabel : string = 's' ; @ Input ( 's' ) cpPresetColors : Array < string > ; @ Input ( 's' ) cpCancelButton : boolean = false ; @ Input ( 's' ) cpCancelButtonClass : string = 's' ; @ Input ( 's' ) cpCancelButtonText : string = 's' ; @ Input ( 's' ) cpOKButton : boolean = false ; @ Input ( 's' ) cpOKButtonClass : string = 's' ; @ Input ( 's' ) cpOKButtonText : string = 's' ; @ Input ( 's' ) cpFallbackColor : string = 's' ; @ Input ( 's' ) cpHeight : string = 's' ; @ Input ( 's' ) cpWidth : string = 's' ; @ Input ( 's' ) cpIgnoredElements : any = [ ] ; @ Input ( 's' ) cpDialogDisplay : string = 's' ; @ Input ( 's' ) cpSaveClickOutside : boolean = true ; @ Input ( 's' ) cpAlphaChannel : string = 's' ; private dialog : any ; private created : boolean ; private ignoreChanges : boolean = false ; constructor ( private compiler , private vcRef , private el , private service ) { this . created = false ; } ngOnChanges ( changes ) { if ( changes . cpToggle ) { if ( changes . cpToggle . currentValue ) this . openDialog ( ) ; if ( ! changes . cpToggle . currentValue && this . dialog ) this . dialog . closeColorPicker ( ) ; } if ( changes . colorPicker ) { if ( this . dialog && ! this . ignoreChanges ) { if ( this . cpDialogDisplay === 's' ) { this . dialog . setInitialColor ( changes . colorPicker . currentValue ) ; } this . dialog . setColorFromString ( changes . colorPicker . currentValue , false ) ; } this . ignoreChanges = false ; } } ngOnInit ( ) { let hsva = this . service . stringToHsva ( this . colorPicker ) ; if ( hsva === null ) hsva = this . service . stringToHsva ( this . colorPicker , true ) ; if ( hsva == null ) { hsva = this . service . stringToHsva ( this . cpFallbackColor ) ; } this . colorPickerChange . emit ( this . service . outputFormat ( hsva , this . cpOutputFormat , this . cpAlphaChannel === 's' ) ) ; } onClick ( ) { if ( this . cpIgnoredElements . filter ( ( item ) => item === this . el . nativeElement ) . length === 0 ) { this . openDialog ( ) ; } } openDialog ( ) { if ( ! this . created ) { this . created = true ; this . compiler . compileModuleAndAllComponentsAsync ( DynamicCpModule ) . then ( factory => { const compFactory = factory . componentFactories . find ( x => x . componentType === DialogComponent ) ; const injector = ReflectiveInjector . fromResolvedProviders ( [ ] , this . vcRef . parentInjector ) ; const cmpRef = this . vcRef . createComponent ( compFactory , 0 , injector , [ ] ) ; cmpRef . instance . setDialog ( this , this . el , this . colorPicker , this . cpPosition , this . cpPositionOffset , this . cpPositionRelativeToArrow , this . cpOutputFormat , this . cpPresetLabel , this . cpPresetColors , this . cpCancelButton , this . cpCancelButtonClass , this . cpCancelButtonText , this . cpOKButton , this . cpOKButtonClass , this . cpOKButtonText , this . cpHeight , this . cpWidth , this . cpIgnoredElements , this . cpDialogDisplay , this . cpSaveClickOutside , this . cpAlphaChannel ) ; this . dialog = cmpRef . instance ; } ) ; } else if ( this . dialog ) { this . dialog . openDialog ( this . colorPicker ) ; } } colorChanged ( value , ignore = true ) { this . ignoreChanges = ignore ; this . colorPickerChange . emit ( value ) } changeInput ( value ) { this . dialog . setColorFromString ( value , true ) ; } toggle ( value ) { this . cpToggleChange . emit ( value ) ; } } @ Directive ( { selector : 's' , host : { 's' : 's' } } ) export class TextDirective { @ Output ( 's' ) newValue = new EventEmitter < any > ( ) ; @ Input ( 's' ) text : any ; @ Input ( 's' ) rg : number ; changeInput ( value ) { if ( this . rg === undefined ) { this . newValue . emit ( value ) ; } else { let numeric = parseFloat ( value ) if ( ! isNaN ( numeric ) && numeric >= 0 && numeric <= this . rg ) { this . newValue . emit ( { v : numeric , rg : this . rg } ) ; } } } } @ Directive ( { selector : 's' , host : { 's' : 's' , 's' : 's' } } ) export class SliderDirective { @ Output ( 's' ) newValue = new EventEmitter < any > ( ) ; @ Input ( 's' ) slider : string ; @ Input ( 's' ) rgX : number ; @ Input ( 's' ) rgY : number ; private listenerMove : any ; private listenerStop : any ; constructor ( private el ) { this . listenerMove = ( event ) => { this . move ( event ) } ; this . listenerStop = ( ) => { this . stop ( ) } ; } setCursor ( event ) { let height = this . el . nativeElement . offsetHeight ; let width = this . el . nativeElement . offsetWidth ; let x = Math . max ( 0 , Math . min ( this . getX ( event ) , width ) ) ; let y = Math . max ( 0 , Math . min ( this . getY ( event ) , height ) ) ; if ( this . rgX !== undefined && this . rgY !== undefined ) { this . newValue . emit ( { s : x / width , v : ( 0 - y / height ) , rgX : this . rgX , rgY : this . rgY } ) ; } else if ( this . rgX === undefined && this . rgY !== undefined ) { this . newValue . emit ( { v : y / height , rg : this . rgY } ) ; } else { this . newValue . emit ( { v : x / width , rg : this . rgX } ) ; } } move ( event ) { event . preventDefault ( ) ; this . setCursor ( event ) ; } start ( event ) { this . setCursor ( event ) ; document . addEventListener ( 's' , this . listenerMove ) ; document . addEventListener ( 's' , this . listenerMove ) ; document . addEventListener ( 's' , this . listenerStop ) ; document . addEventListener ( 's' , this . listenerStop ) ; } stop ( ) { document . removeEventListener ( 's' , this . listenerMove ) ; document . removeEventListener ( 's' , this . listenerMove ) ; document . removeEventListener ( 's' , this . listenerStop ) ; document . removeEventListener ( 's' , this . listenerStop ) ; } getX ( event ) { return ( event . pageX !== undefined ? event . pageX : event . touches [ 0 ] . pageX ) - this . el . nativeElement . getBoundingClientRect ( ) . left - window . pageXOffset ; } getY ( event ) { return ( event . pageY !== undefined ? event . pageY : event . touches [ 0 ] . pageY ) - this . el . nativeElement . getBoundingClientRect ( ) . top - window . pageYOffset ; } } @ Component ( { selector : 's' , template : `template` , styles : [ `template` ] } ) export class DialogComponent implements OnInit { private hsva : Hsva ; private rgbaText : Rgba ; private hslaText : Hsla ; private hexText : string ; private outputColor : string ; private selectedColor : string ; private alphaSliderColor : string ; private hueSliderColor : string ; private slider : SliderPosition ; private sliderDimMax : SliderDimension ; private format : number ; private show : boolean ; private top : number ; private left : number ; private position : string ; private directiveInstance : any ; private initialColor : string ; private directiveElementRef : ElementRef ; private listenerMouseDown : any ; private listenerResize : any ; private cpPosition : string ; private cpPositionOffset : number ; private cpOutputFormat : string ; private cpPresetLabel : string ; private cpPresetColors : Array < string > ; private cpCancelButton : boolean ; private cpCancelButtonClass : string ; private cpCancelButtonText : string ; private cpOKButton : boolean ; private cpOKButtonClass : string ; private cpOKButtonText : string ; private cpHeight : number ; private cpWidth : number ; private cpIgnoredElements : any ; private cpDialogDisplay : string ; private cpSaveClickOutside : boolean ; private cpAlphaChannel : string ; private dialogArrowSize : number = 0 ; private dialogArrowOffset : number = 0 ; private arrowTop : number ; @ ViewChild ( 's' ) hueSlider : any ; @ ViewChild ( 's' ) alphaSlider : any ; @ ViewChild ( 's' ) dialogElement : any ; constructor ( private el , private service ) { } setDialog ( instance , elementRef , color , cpPosition , cpPositionOffset , cpPositionRelativeToArrow , cpOutputFormat , cpPresetLabel , cpPresetColors < string > , cpCancelButton , cpCancelButtonClass , cpCancelButtonText , cpOKButton , cpOKButtonClass , cpOKButtonText , cpHeight , cpWidth , cpIgnoredElements , cpDialogDisplay , cpSaveClickOutside , cpAlphaChannel ) { this . directiveInstance = instance ; this . initialColor = color ; this . directiveElementRef = elementRef ; this . cpPosition = cpPosition ; this . cpPositionOffset = parseInt ( cpPositionOffset ) ; if ( ! cpPositionRelativeToArrow ) { this . dialogArrowOffset = 0 ; } this . cpOutputFormat = cpOutputFormat ; this . cpPresetLabel = cpPresetLabel ; this . cpPresetColors = cpPresetColors ; this . cpCancelButton = cpCancelButton ; this . cpCancelButtonClass = cpCancelButtonClass ; this . cpCancelButtonText = cpCancelButtonText ; this . cpOKButton = cpOKButton ; this . cpOKButtonClass = cpOKButtonClass ; this . cpOKButtonText = cpOKButtonText ; this . cpHeight = parseInt ( cpHeight ) ; this . cpWidth = parseInt ( cpWidth ) ; this . cpIgnoredElements = cpIgnoredElements ; this . cpDialogDisplay = cpDialogDisplay ; if ( this . cpDialogDisplay === 's' ) { this . dialogArrowOffset = 0 ; this . dialogArrowSize = 0 ; } this . cpSaveClickOutside = cpSaveClickOutside ; this . cpAlphaChannel = cpAlphaChannel ; } ngOnInit ( ) { let alphaWidth = this . alphaSlider . nativeElement . offsetWidth ; let hueWidth = this . hueSlider . nativeElement . offsetWidth ; this . sliderDimMax = new SliderDimension ( hueWidth , this . cpWidth , 0 , alphaWidth ) ; this . slider = new SliderPosition ( 0 , 0 , 0 , 0 ) ; if ( this . cpOutputFormat === 's' ) { this . format = 0 ; } else if ( this . cpOutputFormat === 's' ) { this . format = 0 ; } else { this . format = 0 ; } this . listenerMouseDown = ( event ) => { this . onMouseDown ( event ) } ; this . listenerResize = ( ) => { this . onResize ( ) } ; this . openDialog ( this . initialColor , false ) ; } setInitialColor ( color ) { this . initialColor = color ; } openDialog ( color , emit = true ) { this . setInitialColor ( color ) ; this . setColorFromString ( color , emit ) ; this . openColorPicker ( ) ; } cancelColor ( ) { this . setColorFromString ( this . initialColor , true ) ; if ( this . cpDialogDisplay === 's' ) { this . directiveInstance . colorChanged ( this . initialColor , true ) ; this . closeColorPicker ( ) ; } } oKColor ( ) { if ( this . cpDialogDisplay === 's' ) { this . closeColorPicker ( ) ; } } setColorFromString ( value , emit = true ) { let hsva ; if ( this . cpAlphaChannel === 's' ) { hsva = this . service . stringToHsva ( value , true ) ; if ( ! hsva && ! this . hsva ) { hsva = this . service . stringToHsva ( value , false ) ; } } else { hsva = this . service . stringToHsva ( value , false ) ; } if ( hsva ) { this . hsva = hsva ; this . update ( emit ) ; } } onMouseDown ( event ) { if ( ( ! this . isDescendant ( this . el . nativeElement , event . target ) && event . target != this . directiveElementRef . nativeElement && this . cpIgnoredElements . filter ( ( item ) => item === event . target ) . length === 0 ) && this . cpDialogDisplay === 's' ) { if ( ! this . cpSaveClickOutside ) { this . setColorFromString ( this . initialColor , false ) ; this . directiveInstance . colorChanged ( this . initialColor ) } this . closeColorPicker ( ) ; } } openColorPicker ( ) { if ( ! this . show ) { this . setDialogPosition ( ) ; this . show = true ; this . directiveInstance . toggle ( true ) ; document . addEventListener ( 's' , this . listenerMouseDown ) ; window . addEventListener ( 's' , this . listenerResize ) ; } } closeColorPicker ( ) { if ( this . show ) { this . show = false ; this . directiveInstance . toggle ( false ) ; document . removeEventListener ( 's' , this . listenerMouseDown ) ; window . removeEventListener ( 's' , this . listenerResize ) ; } } onResize ( ) { if ( this . position === 's' ) { this . setDialogPosition ( ) ; } } setDialogPosition ( ) { let dialogHeight = this . dialogElement . nativeElement . offsetHeight ; let node = this . directiveElementRef . nativeElement , position = 's' ; let parentNode = null ; while ( node !== null && node . tagName !== 's' ) { position = window . getComputedStyle ( node ) . getPropertyValue ( "s" ) ; if ( position !== 's' && parentNode === null ) { parentNode = node ; } if ( position === 's' ) { break ; } node = node . parentNode ; } if ( position !== 's' ) { var boxDirective = this . createBox ( this . directiveElementRef . nativeElement , true ) ; if ( parentNode === null ) { parentNode = node } var boxParent = this . createBox ( parentNode , true ) ; this . top = boxDirective . top - boxParent . top ; this . left = boxDirective . left - boxParent . left ; } else { var boxDirective = this . createBox ( this . directiveElementRef . nativeElement , false ) ; this . top = boxDirective . top ; this . left = boxDirective . left ; this . position = 's' ; } if ( this . cpPosition === 's' ) { this . top += boxDirective . height * this . cpPositionOffset / 0 - this . dialogArrowOffset ; this . left -= this . cpWidth + this . dialogArrowSize - 0 ; } else if ( this . cpPosition === 's' ) { this . top -= dialogHeight + this . dialogArrowSize ; this . left += this . cpPositionOffset / 0 * boxDirective . width - this . dialogArrowOffset ; this . arrowTop = dialogHeight - 0 ; } else if ( this . cpPosition === 's' ) { this . top += boxDirective . height + this . dialogArrowSize ; this . left += this . cpPositionOffset / 0 * boxDirective . width - this . dialogArrowOffset ; } else { this . top += boxDirective . height * this . cpPositionOffset / 0 - this . dialogArrowOffset ; this . left += boxDirective . width + this . dialogArrowSize ; } } setSaturation ( val : { v : number , rg : number } ) { let hsla = this . service . 0 ( this . hsva ) ; hsla . s = val . v / val . rg ; this . hsva = this . service . 0 ( hsla ) ; this . update ( ) ; } setLightness ( val : { v : number , rg : number } ) { let hsla = this . service . 0 ( this . hsva ) ; hsla . l = val . v / val . rg ; this . hsva = this . service . 0 ( hsla ) ; this . update ( ) ; } setHue ( val : { v : number , rg : number } ) { this . hsva . h = val . v / val . rg ; this . update ( ) ; } setAlpha ( val : { v : number , rg : number } ) { this . hsva . a = val . v / val . rg ; this . update ( ) ; } setR ( val : { v : number , rg : number } ) { let rgba = this . service . hsvaToRgba ( this . hsva ) ; rgba . r = val . v / val . rg ; this . hsva = this . service . rgbaToHsva ( rgba ) ; this . update ( ) ; } setG ( val : { v : number , rg : number } ) { let rgba = this . service . hsvaToRgba ( this . hsva ) ; rgba . g = val . v / val . rg ; this . hsva = this . service . rgbaToHsva ( rgba ) ; this . update ( ) ; } setB ( val : { v : number , rg : number } ) { let rgba = this . service . hsvaToRgba ( this . hsva ) ; rgba . b = val . v / val . rg ; this . hsva = this . service . rgbaToHsva ( rgba ) ; this . update ( ) ; } setSaturationAndBrightness ( val : { s : number , v : number , rgX : number , rgY : number } ) { this . hsva . s = val . s / val . rgX ; this . hsva . v = val . v / val . rgY ; this . update ( ) ; } formatPolicy ( ) { this . format = ( this . format + 0 ) % 0 ; if ( this . format === 0 && this . hsva . a < 0 && this . cpAlphaChannel === 's' ) { this . format ++ ; } return this . format ; } update ( emit = true ) { let hsla = this . service . 0 ( this . hsva ) ; let rgba = this . service . denormalizeRGBA ( this . service . hsvaToRgba ( this . hsva ) ) ; let hueRgba = this . service . denormalizeRGBA ( this . service . hsvaToRgba ( new Hsva ( this . hsva . h , 0 , 0 , 0 ) ) ) ; this . hslaText = new Hsla ( Math . round ( ( hsla . h ) * 0 ) , Math . round ( hsla . s * 0 ) , Math . round ( hsla . l * 0 ) , Math . round ( hsla . a * 0 ) / 0 ) ; this . rgbaText = new Rgba ( rgba . r , rgba . g , rgba . b , Math . round ( rgba . a * 0 ) / 0 ) ; this . hexText = this . service . hexText ( rgba , this . cpAlphaChannel === 's' ) ; this . alphaSliderColor = 's' + rgba . r + 's' + rgba . g + 's' + rgba . b + 's' ; this . hueSliderColor = 's' + hueRgba . r + 's' + hueRgba . g + 's' + hueRgba . b + 's' ; if ( this . format === 0 && this . hsva . a < 0 && this . cpAlphaChannel === 's' ) { this . format ++ ; } let lastOutput = this . outputColor ; this . outputColor = this . service . outputFormat ( this . hsva , this . cpOutputFormat , this . cpAlphaChannel === 's' ) ; this . selectedColor = this . service . outputFormat ( this . hsva , 's' , false ) ; this . slider = new SliderPosition ( ( this . hsva . h ) * this . sliderDimMax . h - 0 , this . hsva . s * this . sliderDimMax . s - 0 , ( 0 - this . hsva . v ) * this . sliderDimMax . v - 0 , this . hsva . a * this . sliderDimMax . a - 0 ) if ( emit && lastOutput !== this . outputColor ) { this . directiveInstance . colorChanged ( this . outputColor ) ; } } isDescendant ( parent , child ) { let node = child . parentNode ; while ( node !== null ) { if ( node === parent ) { return true ; } node = node . parentNode ; } return false ; } createBox ( element , offset ) { return { top : element . getBoundingClientRect ( ) . top + ( offset ? window . pageYOffset : 0 ) , left : element . getBoundingClientRect ( ) . left + ( offset ? window . pageXOffset : 0 ) , width : element . offsetWidth , height : element . offsetHeight } ; } } @ NgModule ( { imports : [ BrowserModule ] , declarations : [ DialogComponent , TextDirective , SliderDirective ] } ) class DynamicCpModule { } ;	ompiler$ O O $ViewContainerRef$ O O $ElementRef$ O O $ColorPickerService$ O O O O O O O O O $void$ O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $string$ O $boolean$ O O O O O O O O O O O O O O O O O O O O O $string$ O O O O O O O O O O O O O O O O $boolean$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $string$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $ElementRef$ O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $number$ O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $number$ O $anylementRef$ O O $ColorPickerService$ O O O O O $any$ O $ElementRef$ O $any$ O $string$ O $string$ O $boolean$ O $string$ O $string$ O $Array$ O O O O $boolean$ O $string$ O $string$ O $boolean$ O $string$ O $string$ O $string$ O $string$ O $any$ O $string$ O $boolean$ O $stringany$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O $any$ O $boolean$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $string$ O $boolean$ O O O O O $Hsva$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $anynumber$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $booleanboolean$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O $any$ O $boolean$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
import { NgModule } from 's' ; import { CommonModule } from 's' ; import { ColorPickerService } from 's' ; import { ColorPickerDirective } from 's' ; @ NgModule ( { imports : [ CommonModule ] , providers : [ ColorPickerService ] , declarations : [ ColorPickerDirective ] , exports : [ ColorPickerDirective ] } ) export class ColorPickerModule { }	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
export * from 's' ; export * from 's' ; export * from 's' ; export * from 's' ;	O O O O O O O O O O O O O O O O O O O O
'js' "s" ; function __export ( m ) { for ( var p in m ) if ( ! exports . hasOwnProperty ( p ) ) exports [ p ] = m [ p ] ; } __export ( require ( "s" ) ) ;	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
export * from 's' ;	O O O O O
'js' "s" ; var Hsva = function ( ) { function i ( i , t , s , n ) { this . h = i , this . s = t , this . v = s , this . a = n } return i } ( ) ; exports . Hsva = Hsva ; var Hsla = function ( ) { function i ( i , t , s , n ) { this . h = i , this . s = t , this . l = s , this . a = n } return i } ( ) ; exports . Hsla = Hsla ; var Rgba = function ( ) { function i ( i , t , s , n ) { this . r = i , this . g = t , this . b = s , this . a = n } return i } ( ) ; exports . Rgba = Rgba ; var SliderPosition = function ( ) { function i ( i , t , s , n ) { this . h = i , this . s = t , this . v = s , this . a = n } return i } ( ) ; exports . SliderPosition = SliderPosition ; var SliderDimension = function ( ) { function i ( i , t , s , n ) { this . h = i , this . s = t , this . v = s , this . a = n } return i } ( ) ; exports . SliderDimension = SliderDimension ;	
'js' "s" ; var __decorate = this && this . __decorate || function ( t , e , i , o ) { var r , s = arguments . length , n = s < 0 ? e : null === o ? o = Object . getOwnPropertyDescriptor ( e , i ) : o ; if ( "s" == typeof Reflect && "s" == typeof Reflect . decorate ) n = Reflect . decorate ( t , e , i , o ) ; else for ( var a = t . length - 0 ; a >= 0 ; a -- ) ( r = t [ a ] ) && ( n = ( s < 0 ? r ( n ) : s > 0 ? r ( e , i , n ) : r ( e , i ) ) || n ) ; return s > 0 && n && Object . defineProperty ( e , i , n ) , n } , __metadata = this && this . __metadata || function ( t , e ) { if ( "s" == typeof Reflect && "s" == typeof Reflect . metadata ) return Reflect . metadata ( t , e ) } , 0 = require ( "s" ) , 0 = require ( "s" ) , 0 = require ( "s" ) , 0 = require ( "s" ) , 0 = require ( "s" ) , ColorPickerDirective = function ( ) { function t ( t , e , i , o ) { this . compiler = t , this . vcRef = e , this . el = i , this . service = o , this . colorPickerChange = new 0 . EventEmitter ( ! 0 ) , this . cpToggleChange = new 0 . EventEmitter ( ! 0 ) , this . cpPosition = "s" , this . cpPositionOffset = "s" , this . cpPositionRelativeToArrow = ! 0 , this . cpOutputFormat = "s" , this . cpPresetLabel = "s" , this . cpCancelButton = ! 0 , this . cpCancelButtonClass = "s" , this . cpCancelButtonText = "s" , this . cpOKButton = ! 0 , this . cpOKButtonClass = "s" , this . cpOKButtonText = "s" , this . cpFallbackColor = "s" , this . cpHeight = "s" , this . cpWidth = "s" , this . cpIgnoredElements = [ ] , this . cpDialogDisplay = "s" , this . cpSaveClickOutside = ! 0 , this . cpAlphaChannel = "s" , this . ignoreChanges = ! 0 , this . created = ! 0 } return t . prototype . ngOnChanges = function ( t ) { t . cpToggle && ( t . cpToggle . currentValue && this . openDialog ( ) , ! t . cpToggle . currentValue && this . dialog && this . dialog . closeColorPicker ( ) ) , t . colorPicker && ( this . dialog && ! this . ignoreChanges && ( "s" === this . cpDialogDisplay && this . dialog . setInitialColor ( t . colorPicker . currentValue ) , this . dialog . setColorFromString ( t . colorPicker . currentValue , ! 0 ) ) , this . ignoreChanges = ! 0 ) } , t . prototype . ngOnInit = function ( ) { var t = this . service . stringToHsva ( this . colorPicker ) ; null === t && ( t = this . service . stringToHsva ( this . colorPicker , ! 0 ) ) , null == t && ( t = this . service . stringToHsva ( this . cpFallbackColor ) ) , this . colorPickerChange . emit ( this . service . outputFormat ( t , this . cpOutputFormat , "s" === this . cpAlphaChannel ) ) } , t . prototype . onClick = function ( ) { var t = this ; 0 === this . cpIgnoredElements . filter ( function ( e ) { return e === t . el . nativeElement } ) . length && this . openDialog ( ) } , t . prototype . openDialog = function ( ) { var t = this ; this . created ? this . dialog && this . dialog . openDialog ( this . colorPicker ) : ( this . created = ! 0 , this . compiler . compileModuleAndAllComponentsAsync ( DynamicCpModule ) . then ( function ( e ) { var i = e . componentFactories . find ( function ( t ) { return t . componentType === DialogComponent } ) , o = 0 . ReflectiveInjector . fromResolvedProviders ( [ ] , t . vcRef . parentInjector ) , r = t . vcRef . createComponent ( i , 0 , o , [ ] ) ; r . instance . setDialog ( t , t . el , t . colorPicker , t . cpPosition , t . cpPositionOffset , t . cpPositionRelativeToArrow , t . cpOutputFormat , t . cpPresetLabel , t . cpPresetColors , t . cpCancelButton , t . cpCancelButtonClass , t . cpCancelButtonText , t . cpOKButton , t . cpOKButtonClass , t . cpOKButtonText , t . cpHeight , t . cpWidth , t . cpIgnoredElements , t . cpDialogDisplay , t . cpSaveClickOutside , t . cpAlphaChannel ) , t . dialog = r . instance } ) ) } , t . prototype . colorChanged = function ( t , e ) { void 0 === e && ( e = ! 0 ) , this . ignoreChanges = e , this . colorPickerChange . emit ( t ) } , t . prototype . changeInput = function ( t ) { this . dialog . setColorFromString ( t , ! 0 ) } , t . prototype . toggle = function ( t ) { this . cpToggleChange . emit ( t ) } , t } ( ) ; __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , String ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Output ( "s" ) , __metadata ( "s" , Object ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , Boolean ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Output ( "s" ) , __metadata ( "s" , Object ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , String ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , String ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , Boolean ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , String ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , String ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , Array ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , Boolean ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , String ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , String ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , Boolean ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , String ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , String ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , String ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , String ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , String ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , Object ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , String ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , Boolean ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , String ) ] , ColorPickerDirective . prototype , "s" , void 0 ) , ColorPickerDirective = __decorate ( [ 0 . Directive ( { selector : "s" , host : { "s" : "s" , "s" : "s" } } ) , __metadata ( "s" , [ 0 . Compiler , 0 . ViewContainerRef , 0 . ElementRef , 0 . ColorPickerService ] ) ] , ColorPickerDirective ) , exports . ColorPickerDirective = ColorPickerDirective ; var TextDirective = function ( ) { function t ( ) { this . newValue = new 0 . EventEmitter } return t . prototype . changeInput = function ( t ) { if ( void 0 === this . rg ) this . newValue . emit ( t ) ; else { var e = parseFloat ( t ) ; ! isNaN ( e ) && e >= 0 && e <= this . rg && this . newValue . emit ( { v : e , rg : this . rg } ) } } , t } ( ) ; __decorate ( [ 0 . Output ( "s" ) , __metadata ( "s" , Object ) ] , TextDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , Object ) ] , TextDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , Number ) ] , TextDirective . prototype , "s" , void 0 ) , TextDirective = __decorate ( [ 0 . Directive ( { selector : "s" , host : { "s" : "s" } } ) ] , TextDirective ) , exports . TextDirective = TextDirective ; var SliderDirective = function ( ) { function t ( t ) { var e = this ; this . el = t , this . newValue = new 0 . EventEmitter , this . listenerMove = function ( t ) { e . move ( t ) } , this . listenerStop = function ( ) { e . stop ( ) } } return t . prototype . setCursor = function ( t ) { var e = this . el . nativeElement . offsetHeight , i = this . el . nativeElement . offsetWidth , o = Math . max ( 0 , Math . min ( this . getX ( t ) , i ) ) , r = Math . max ( 0 , Math . min ( this . getY ( t ) , e ) ) ; void 0 !== this . rgX && void 0 !== this . rgY ? this . newValue . emit ( { s : o / i , v : 0 - r / e , rgX : this . rgX , rgY : this . rgY } ) : void 0 === this . rgX && void 0 !== this . rgY ? this . newValue . emit ( { v : r / e , rg : this . rgY } ) : this . newValue . emit ( { v : o / i , rg : this . rgX } ) } , t . prototype . move = function ( t ) { t . preventDefault ( ) , this . setCursor ( t ) } , t . prototype . start = function ( t ) { this . setCursor ( t ) , document . addEventListener ( "s" , this . listenerMove ) , document . addEventListener ( "s" , this . listenerMove ) , document . addEventListener ( "s" , this . listenerStop ) , document . addEventListener ( "s" , this . listenerStop ) } , t . prototype . stop = function ( ) { document . removeEventListener ( "s" , this . listenerMove ) , document . removeEventListener ( "s" , this . listenerMove ) , document . removeEventListener ( "s" , this . listenerStop ) , document . removeEventListener ( "s" , this . listenerStop ) } , t . prototype . getX = function ( t ) { return ( void 0 !== t . pageX ? t . pageX : t . touches [ 0 ] . pageX ) - this . el . nativeElement . getBoundingClientRect ( ) . left - window . pageXOffset } , t . prototype . getY = function ( t ) { return ( void 0 !== t . pageY ? t . pageY : t . touches [ 0 ] . pageY ) - this . el . nativeElement . getBoundingClientRect ( ) . top - window . pageYOffset } , t } ( ) ; __decorate ( [ 0 . Output ( "s" ) , __metadata ( "s" , Object ) ] , SliderDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , String ) ] , SliderDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , Number ) ] , SliderDirective . prototype , "s" , void 0 ) , __decorate ( [ 0 . Input ( "s" ) , __metadata ( "s" , Number ) ] , SliderDirective . prototype , "s" , void 0 ) , SliderDirective = __decorate ( [ 0 . Directive ( { selector : "s" , host : { "s" : "s" , "s" : "s" } } ) , __metadata ( "s" , [ 0 . ElementRef ] ) ] , SliderDirective ) , exports . SliderDirective = SliderDirective ; var DialogComponent = function ( ) { function t ( t , e ) { this . el = t , this . service = e , this . dialogArrowSize = 0 , this . dialogArrowOffset = 0 } return t . prototype . setDialog = function ( t , e , i , o , r , s , n , a , p , l , c , d , h , u , g , v , A , m , x , f , C ) { this . directiveInstance = t , this . initialColor = i , this . directiveElementRef = e , this . cpPosition = o , this . cpPositionOffset = parseInt ( r ) , s || ( this . dialogArrowOffset = 0 ) , this . cpOutputFormat = n , this . cpPresetLabel = a , this . cpPresetColors = p , this . cpCancelButton = l , this . cpCancelButtonClass = c , this . cpCancelButtonText = d , this . cpOKButton = h , this . cpOKButtonClass = u , this . cpOKButtonText = g , this . cpHeight = parseInt ( v ) , this . cpWidth = parseInt ( A ) , this . cpIgnoredElements = m , this . cpDialogDisplay = x , "s" === this . cpDialogDisplay && ( this . dialogArrowOffset = 0 , this . dialogArrowSize = 0 ) , this . cpSaveClickOutside = f , this . cpAlphaChannel = C } , t . prototype . ngOnInit = function ( ) { var t = this , e = this . alphaSlider . nativeElement . offsetWidth , i = this . hueSlider . nativeElement . offsetWidth ; this . sliderDimMax = new 0 . SliderDimension ( i , this . cpWidth , 0 , e ) , this . slider = new 0 . SliderPosition ( 0 , 0 , 0 , 0 ) , "s" === this . cpOutputFormat ? this . format = 0 : "s" === this . cpOutputFormat ? this . format = 0 : this . format = 0 , this . listenerMouseDown = function ( e ) { t . onMouseDown ( e ) } , this . listenerResize = function ( ) { t . onResize ( ) } , this . openDialog ( this . initialColor , ! 0 ) } , t . prototype . setInitialColor = function ( t ) { this . initialColor = t } , t . prototype . openDialog = function ( t , e ) { void 0 === e && ( e = ! 0 ) , this . setInitialColor ( t ) , this . setColorFromString ( t , e ) , this . openColorPicker ( ) } , t . prototype . cancelColor = function ( ) { this . setColorFromString ( this . initialColor , ! 0 ) , "s" === this . cpDialogDisplay && ( this . directiveInstance . colorChanged ( this . initialColor , ! 0 ) , this . closeColorPicker ( ) ) } , t . prototype . oKColor = function ( ) { "s" === this . cpDialogDisplay && this . closeColorPicker ( ) } , t . prototype . setColorFromString = function ( t , e ) { void 0 === e && ( e = ! 0 ) ; var i ; "s" === this . cpAlphaChannel ? ( i = this . service . stringToHsva ( t , ! 0 ) , i || this . hsva || ( i = this . service . stringToHsva ( t , ! 0 ) ) ) : i = this . service . stringToHsva ( t , ! 0 ) , i && ( this . hsva = i , this . update ( e ) ) } , t . prototype . onMouseDown = function ( t ) { this . isDescendant ( this . el . nativeElement , t . target ) || t . target == this . directiveElementRef . nativeElement || 0 !== this . cpIgnoredElements . filter ( function ( e ) { return e === t . target } ) . length || "s" !== this . cpDialogDisplay || ( this . cpSaveClickOutside || ( this . setColorFromString ( this . initialColor , ! 0 ) , this . directiveInstance . colorChanged ( this . initialColor ) ) , this . closeColorPicker ( ) ) } , t . prototype . openColorPicker = function ( ) { this . show || ( this . setDialogPosition ( ) , this . show = ! 0 , this . directiveInstance . toggle ( ! 0 ) , document . addEventListener ( "s" , this . listenerMouseDown ) , window . addEventListener ( "s" , this . listenerResize ) ) } , t . prototype . closeColorPicker = function ( ) { this . show && ( this . show = ! 0 , this . directiveInstance . toggle ( ! 0 ) , document . removeEventListener ( "s" , this . listenerMouseDown ) , window . removeEventListener ( "s" , this . listenerResize ) ) } , t . prototype . onResize = function ( ) { "s" === this . position && this . setDialogPosition ( ) } , t . prototype . setDialogPosition = function ( ) { for ( var t = this . dialogElement . nativeElement . offsetHeight , e = this . directiveElementRef . nativeElement , i = "s" , o = null ; null !== e && "s" !== e . tagName && ( i = window . getComputedStyle ( e ) . getPropertyValue ( "s" ) , "s" !== i && null === o && ( o = e ) , "s" !== i ) ; ) e = e . parentNode ; if ( "s" !== i ) { var r = this . createBox ( this . directiveElementRef . nativeElement , ! 0 ) ; null === o && ( o = e ) ; var s = this . createBox ( o , ! 0 ) ; this . top = r . top - s . top , this . left = r . left - s . left } else { var r = this . createBox ( this . directiveElementRef . nativeElement , ! 0 ) ; this . top = r . top , this . left = r . left , this . position = "s" } "s" === this . cpPosition ? ( this . top += r . height * this . cpPositionOffset / 0 - this . dialogArrowOffset , this . left -= this . cpWidth + this . dialogArrowSize - 0 ) : "s" === this . cpPosition ? ( this . top -= t + this . dialogArrowSize , this . left += this . cpPositionOffset / 0 * r . width - this . dialogArrowOffset , this . arrowTop = t - 0 ) : "s" === this . cpPosition ? ( this . top += r . height + this . dialogArrowSize , this . left += this . cpPositionOffset / 0 * r . width - this . dialogArrowOffset ) : ( this . top += r . height * this . cpPositionOffset / 0 - this . dialogArrowOffset , this . left += r . width + this . dialogArrowSize ) } , t . prototype . setSaturation = function ( t ) { var e = this . service . 0 ( this . hsva ) ; e . s = t . v / t . rg , this . hsva = this . service . 0 ( e ) , this . update ( ) } , t . prototype . setLightness = function ( t ) { var e = this . service . 0 ( this . hsva ) ; e . l = t . v / t . rg , this . hsva = this . service . 0 ( e ) , this . update ( ) } , t . prototype . setHue = function ( t ) { this . hsva . h = t . v / t . rg , this . update ( ) } , t . prototype . setAlpha = function ( t ) { this . hsva . a = t . v / t . rg , this . update ( ) } , t . prototype . setR = function ( t ) { var e = this . service . hsvaToRgba ( this . hsva ) ; e . r = t . v / t . rg , this . hsva = this . service . rgbaToHsva ( e ) , this . update ( ) } , t . prototype . setG = function ( t ) { var e = this . service . hsvaToRgba ( this . hsva ) ; e . g = t . v / t . rg , this . hsva = this . service . rgbaToHsva ( e ) , this . update ( ) } , t . prototype . setB = function ( t ) { var e = this . service . hsvaToRgba ( this . hsva ) ; e . b = t . v / t . rg , this . hsva = this . service . rgbaToHsva ( e ) , this . update ( ) } , t . prototype . setSaturationAndBrightness = function ( t ) { this . hsva . s = t . s / t . rgX , this . hsva . v = t . v / t . rgY , this . update ( ) } , t . prototype . formatPolicy = function ( ) { return this . format = ( this . format + 0 ) % 0 , 0 === this . format && this . hsva . a < 0 && "s" === this . cpAlphaChannel && this . format ++ , this . format } , t . prototype . update = function ( t ) { void 0 === t && ( t = ! 0 ) ; var e = this . service . 0 ( this . hsva ) , i = this . service . denormalizeRGBA ( this . service . hsvaToRgba ( this . hsva ) ) , o = this . service . denormalizeRGBA ( this . service . hsvaToRgba ( new 0 . Hsva ( this . hsva . h , 0 , 0 , 0 ) ) ) ; this . hslaText = new 0 . Hsla ( Math . round ( 0 * e . h ) , Math . round ( 0 * e . s ) , Math . round ( 0 * e . l ) , Math . round ( 0 * e . a ) / 0 ) , this . rgbaText = new 0 . Rgba ( i . r , i . g , i . b , Math . round ( 0 * i . a ) / 0 ) , this . hexText = this . service . hexText ( i , "s" === this . cpAlphaChannel ) , this . alphaSliderColor = "s" + i . r + "s" + i . g + "s" + i . b + "s" , this . hueSliderColor = "s" + o . r + "s" + o . g + "s" + o . b + "s" , 0 === this . format && this . hsva . a < 0 && "s" === this . cpAlphaChannel && this . format ++ ; var r = this . outputColor ; this . outputColor = this . service . outputFormat ( this . hsva , this . cpOutputFormat , "s" === this . cpAlphaChannel ) , this . selectedColor = this . service . outputFormat ( this . hsva , "s" , ! 0 ) , this . slider = new 0 . SliderPosition ( this . hsva . h * this . sliderDimMax . h - 0 , this . hsva . s * this . sliderDimMax . s - 0 , ( 0 - this . hsva . v ) * this . sliderDimMax . v - 0 , this . hsva . a * this . sliderDimMax . a - 0 ) , t && r !== this . outputColor && this . directiveInstance . colorChanged ( this . outputColor ) } , t . prototype . isDescendant = function ( t , e ) { for ( var i = e . parentNode ; null !== i ; ) { if ( i === t ) return ! 0 ; i = i . parentNode } return ! 0 } , t . prototype . createBox = function ( t , e ) { return { top : t . getBoundingClientRect ( ) . top + ( e ? window . pageYOffset : 0 ) , left : t . getBoundingClientRect ( ) . left + ( e ? window . pageXOffset : 0 ) , width : t . offsetWidth , height : t . offsetHeight } } , t } ( ) ; __decorate ( [ 0 . ViewChild ( "s" ) , __metadata ( "s" , Object ) ] , DialogComponent . prototype , "s" , void 0 ) , __decorate ( [ 0 . ViewChild ( "s" ) , __metadata ( "s" , Object ) ] , DialogComponent . prototype , "s" , void 0 ) , __decorate ( [ 0 . ViewChild ( "s" ) , __metadata ( "s" , Object ) ] , DialogComponent . prototype , "s" , void 0 ) , DialogComponent = __decorate ( [ 0 . Component ( { selector : "s" , template : 's' , styles : [ 's' ] } ) , __metadata ( "s" , [ 0 . ElementRef , 0 . ColorPickerService ] ) ] , DialogComponent ) , exports . DialogComponent = DialogComponent ; var DynamicCpModule = function ( ) { function t ( ) { } return t } ( ) ; DynamicCpModule = __decorate ( [ 0 . NgModule ( { imports : [ 0 . BrowserModule ] , declarations : [ DialogComponent , TextDirective , SliderDirective ] } ) ] , DynamicCpModule ) ;	
'js' "s" ; var __decorate = this && this . __decorate || function ( e , r , o , c ) { var i , t = arguments . length , l = t < 0 ? r : null === c ? c = Object . getOwnPropertyDescriptor ( r , o ) : c ; if ( "s" == typeof Reflect && "s" == typeof Reflect . decorate ) l = Reflect . decorate ( e , r , o , c ) ; else for ( var _ = e . length - 0 ; _ >= 0 ; _ -- ) ( i = e [ _ ] ) && ( l = ( t < 0 ? i ( l ) : t > 0 ? i ( r , o , l ) : i ( r , o ) ) || l ) ; return t > 0 && l && Object . defineProperty ( r , o , l ) , l } , 0 = require ( "s" ) , 0 = require ( "s" ) , 0 = require ( "s" ) , 0 = require ( "s" ) , ColorPickerModule = function ( ) { function e ( ) { } return e } ( ) ; ColorPickerModule = __decorate ( [ 0 . NgModule ( { imports : [ 0 . CommonModule ] , providers : [ 0 . ColorPickerService ] , declarations : [ 0 . ColorPickerDirective ] , exports : [ 0 . ColorPickerDirective ] } ) ] , ColorPickerModule ) , exports . ColorPickerModule = ColorPickerModule ;	
'js' "s" ; var __decorate = this && this . __decorate || function ( a , e , s , r ) { var t , n = arguments . length , o = n < 0 ? e : null === r ? r = Object . getOwnPropertyDescriptor ( e , s ) : r ; if ( "s" == typeof Reflect && "s" == typeof Reflect . decorate ) o = Reflect . decorate ( a , e , s , r ) ; else for ( var i = a . length - 0 ; i >= 0 ; i -- ) ( t = a [ i ] ) && ( o = ( n < 0 ? t ( o ) : n > 0 ? t ( e , s , o ) : t ( e , s ) ) || o ) ; return n > 0 && o && Object . defineProperty ( e , s , o ) , o } , __metadata = this && this . __metadata || function ( a , e ) { if ( "s" == typeof Reflect && "s" == typeof Reflect . metadata ) return Reflect . metadata ( a , e ) } , 0 = require ( "s" ) , 0 = require ( "s" ) , ColorPickerService = function ( ) { function a ( ) { } return a . prototype . 0 = function ( a ) { var e = Math . min ( a . h , 0 ) , s = Math . min ( a . s , 0 ) , r = Math . min ( a . l , 0 ) , t = Math . min ( a . a , 0 ) ; if ( 0 === r ) return new 0 . Hsva ( e , 0 , 0 , t ) ; var n = r + s * ( 0 - Math . abs ( 0 * r - 0 ) ) / 0 ; return new 0 . Hsva ( e , 0 * ( n - r ) / n , n , t ) } , a . prototype . 0 = function ( a ) { var e = a . h , s = a . s , r = a . v , t = a . a ; if ( 0 === r ) return new 0 . Hsla ( e , 0 , 0 , t ) ; if ( 0 === s && 0 === r ) return new 0 . Hsla ( e , 0 , 0 , t ) ; var n = r * ( 0 - s ) / 0 ; return new 0 . Hsla ( e , r * s / ( 0 - Math . abs ( 0 * n - 0 ) ) , n , t ) } , a . prototype . rgbaToHsva = function ( a ) { var e , s , r = Math . min ( a . r , 0 ) , t = Math . min ( a . g , 0 ) , n = Math . min ( a . b , 0 ) , o = Math . min ( a . a , 0 ) , i = Math . max ( r , t , n ) , c = Math . min ( r , t , n ) , h = i , l = i - c ; if ( s = 0 === i ? 0 : l / i , i === c ) e = 0 ; else { switch ( i ) { case r : e = ( t - n ) / l + ( t < n ? 0 : 0 ) ; break ; case t : e = ( n - r ) / l + 0 ; break ; case n : e = ( r - t ) / l + 0 } e /= 0 } return new 0 . Hsva ( e , s , h , o ) } , a . prototype . hsvaToRgba = function ( a ) { var e , s , r , t = a . h , n = a . s , o = a . v , i = a . a , c = Math . floor ( 0 * t ) , h = 0 * t - c , l = o * ( 0 - n ) , u = o * ( 0 - h * n ) , f = o * ( 0 - ( 0 - h ) * n ) ; switch ( c % 0 ) { case 0 : e = o , s = f , r = l ; break ; case 0 : e = u , s = o , r = l ; break ; case 0 : e = l , s = o , r = f ; break ; case 0 : e = l , s = u , r = o ; break ; case 0 : e = f , s = l , r = o ; break ; case 0 : e = o , s = l , r = u } return new 0 . Rgba ( e , s , r , i ) } , a . prototype . stringToHsva = function ( a , e ) { void 0 === a && ( a = "s" ) , void 0 === e && ( e = ! 0 ) ; var s = [ { re : "s" , parse : function ( a ) { return new 0 . Rgba ( parseInt ( a [ 0 ] ) / 0 , parseInt ( a [ 0 ] ) / 0 , parseInt ( a [ 0 ] ) / 0 , isNaN ( parseFloat ( a [ 0 ] ) ) ? 0 : parseFloat ( a [ 0 ] ) ) } } , { re : "s" , parse : function ( a ) { return new 0 . Hsla ( parseInt ( a [ 0 ] ) / 0 , parseInt ( a [ 0 ] ) / 0 , parseInt ( a [ 0 ] ) / 0 , isNaN ( parseFloat ( a [ 0 ] ) ) ? 0 : parseFloat ( a [ 0 ] ) ) } } ] ; e ? s . push ( { re : "s" , parse : function ( a ) { return new 0 . Rgba ( parseInt ( a [ 0 ] , 0 ) / 0 , parseInt ( a [ 0 ] , 0 ) / 0 , parseInt ( a [ 0 ] , 0 ) / 0 , parseInt ( a [ 0 ] , 0 ) / 0 ) } } ) : s . push ( { re : "s" , parse : function ( a ) { return new 0 . Rgba ( parseInt ( a [ 0 ] , 0 ) / 0 , parseInt ( a [ 0 ] , 0 ) / 0 , parseInt ( a [ 0 ] , 0 ) / 0 , 0 ) } } , { re : "s" , parse : function ( a ) { return new 0 . Rgba ( parseInt ( a [ 0 ] + a [ 0 ] , 0 ) / 0 , parseInt ( a [ 0 ] + a [ 0 ] , 0 ) / 0 , parseInt ( a [ 0 ] + a [ 0 ] , 0 ) / 0 , 0 ) } } ) , a = a . toLowerCase ( ) ; var r = null ; for ( var t in s ) if ( s . hasOwnProperty ( t ) ) { var n = s [ t ] , o = n . re . exec ( a ) , i = o && n . parse ( o ) ; if ( i ) return i instanceof 0 . Rgba ? r = this . rgbaToHsva ( i ) : i instanceof 0 . Hsla && ( r = this . 0 ( i ) ) , r } return r } , a . prototype . outputFormat = function ( a , e , s ) { if ( a . a < 0 ) switch ( e ) { case "s" : var r = this . 0 ( a ) , t = new 0 . Hsla ( Math . round ( 0 * r . h ) , Math . round ( 0 * r . s ) , Math . round ( 0 * r . l ) , Math . round ( 0 * r . a ) / 0 ) ; return "s" + t . h + "s" + t . s + "s" + t . l + "s" + t . a + "s" ; default : if ( s && "s" === e ) return this . hexText ( this . denormalizeRGBA ( this . hsvaToRgba ( a ) ) , s ) ; var n = this . denormalizeRGBA ( this . hsvaToRgba ( a ) ) ; return "s" + n . r + "s" + n . g + "s" + n . b + "s" + Math . round ( 0 * n . a ) / 0 + "s" } else switch ( e ) { case "s" : var r = this . 0 ( a ) , t = new 0 . Hsla ( Math . round ( 0 * r . h ) , Math . round ( 0 * r . s ) , Math . round ( 0 * r . l ) , Math . round ( 0 * r . a ) / 0 ) ; return "s" + t . h + "s" + t . s + "s" + t . l + "s" ; case "s" : var n = this . denormalizeRGBA ( this . hsvaToRgba ( a ) ) ; return "s" + n . r + "s" + n . g + "s" + n . b + "s" ; default : return this . hexText ( this . denormalizeRGBA ( this . hsvaToRgba ( a ) ) , s ) } } , a . prototype . hexText = function ( a , e ) { var s = "s" + ( 0 << 0 | a . r << 0 | a . g << 0 | a . b ) . toString ( 0 ) . substr ( 0 ) ; return s [ 0 ] !== s [ 0 ] || s [ 0 ] !== s [ 0 ] || s [ 0 ] !== s [ 0 ] || 0 !== a . a || e || ( s = "s" + s [ 0 ] + s [ 0 ] + s [ 0 ] ) , e && ( s += ( 0 | Math . round ( 0 * a . a ) ) . toString ( 0 ) . substr ( 0 ) ) , s } , a . prototype . denormalizeRGBA = function ( a ) { return new 0 . Rgba ( Math . round ( 0 * a . r ) , Math . round ( 0 * a . g ) , Math . round ( 0 * a . b ) , a . a ) } , a } ( ) ; ColorPickerService = __decorate ( [ 0 . Injectable ( ) , __metadata ( "s" , [ ] ) ] , ColorPickerService ) , exports . ColorPickerService = ColorPickerService ;	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
'js' "s" ; function __export ( r ) { for ( var e in r ) exports . hasOwnProperty ( e ) || ( exports [ e ] = r [ e ] ) } __export ( require ( "s" ) ) , __export ( require ( "s" ) ) , __export ( require ( "s" ) ) , __export ( require ( "s" ) ) ;	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
export class Hsva { constructor ( public h , public s , public v , public a ) { } } export class Hsla { constructor ( public h , public s , public l , public a ) { } } export class Rgba { constructor ( public r , public g , public b , public a ) { } } export class SliderPosition { constructor ( public h , public s , public v , public a ) { } } export class SliderDimension { constructor ( public h , public s , public v , public a ) { } }	O O O O O O O $number$ O O $number$ O O $number$ O O $number$ O O O O O O O O O O O $number$ O O $number$ O O $number$ O O $number$ O O O O O O O O O O O $number$ O O $number$ O O $number$ O O $number$ O O O O O O O O O O O $number$ O O $number$ O O $number$ O O $number$ O O O O O O O O O O O $number$ O O $number$ O O $number$ O O $number$ O O O O
import { Injectable } from 's' ; import { Rgba , Hsla , Hsva } from 's' ; @ Injectable ( ) export class ColorPickerService { constructor ( ) { } 0 ( hsla ) { let h = Math . min ( hsla . h , 0 ) , s = Math . min ( hsla . s , 0 ) , l = Math . min ( hsla . l , 0 ) , a = Math . min ( hsla . a , 0 ) ; if ( l === 0 ) { return new Hsva ( h , 0 , 0 , a ) ; } else { let v = l + s * ( 0 - Math . abs ( 0 * l - 0 ) ) / 0 ; return new Hsva ( h , 0 * ( v - l ) / v , v , a ) ; } } 0 ( hsva ) { let h = hsva . h , s = hsva . s , v = hsva . v , a = hsva . a ; if ( v === 0 ) { return new Hsla ( h , 0 , 0 , a ) } else if ( s === 0 && v === 0 ) { return new Hsla ( h , 0 , 0 , a ) } else { let l = v * ( 0 - s ) / 0 ; return new Hsla ( h , v * s / ( 0 - Math . abs ( 0 * l - 0 ) ) , l , a ) } } rgbaToHsva ( rgba ) { let r = Math . min ( rgba . r , 0 ) , g = Math . min ( rgba . g , 0 ) , b = Math . min ( rgba . b , 0 ) , a = Math . min ( rgba . a , 0 ) ; let max = Math . max ( r , g , b ) , min = Math . min ( r , g , b ) ; let h , s , v = max ; let d = max - min ; s = max === 0 ? 0 : d / max ; if ( max === min ) { h = 0 ; } else { switch ( max ) { case r : h = ( g - b ) / d + ( g < b ? 0 : 0 ) ; break ; case g : h = ( b - r ) / d + 0 ; break ; case b : h = ( r - g ) / d + 0 ; break ; } h /= 0 ; } return new Hsva ( h , s , v , a ) } hsvaToRgba ( hsva ) { let h = hsva . h , s = hsva . s , v = hsva . v , a = hsva . a ; let r , g , b ; let i = Math . floor ( h * 0 ) ; let f = h * 0 - i ; let p = v * ( 0 - s ) ; let q = v * ( 0 - f * s ) ; let t = v * ( 0 - ( 0 - f ) * s ) ; switch ( i % 0 ) { case 0 : r = v , g = t , b = p ; break ; case 0 : r = q , g = v , b = p ; break ; case 0 : r = p , g = v , b = t ; break ; case 0 : r = p , g = q , b = v ; break ; case 0 : r = t , g = p , b = v ; break ; case 0 : r = v , g = p , b = q ; break ; } return new Rgba ( r , g , b , a ) } stringToHsva ( colorString = 's' , 0 = false ) { let stringParsers = [ { re : "s" , parse : function ( execResult ) { return new Rgba ( parseInt ( execResult [ 0 ] ) / 0 , parseInt ( execResult [ 0 ] ) / 0 , parseInt ( execResult [ 0 ] ) / 0 , isNaN ( parseFloat ( execResult [ 0 ] ) ) ? 0 : parseFloat ( execResult [ 0 ] ) ) ; } } , { re : "s" , parse : function ( execResult ) { return new Hsla ( parseInt ( execResult [ 0 ] ) / 0 , parseInt ( execResult [ 0 ] ) / 0 , parseInt ( execResult [ 0 ] ) / 0 , isNaN ( parseFloat ( execResult [ 0 ] ) ) ? 0 : parseFloat ( execResult [ 0 ] ) ) ; } } ] ; if ( 0 ) { stringParsers . push ( { re : "s" , parse : function ( execResult ) { return new Rgba ( parseInt ( execResult [ 0 ] , 0 ) / 0 , parseInt ( execResult [ 0 ] , 0 ) / 0 , parseInt ( execResult [ 0 ] , 0 ) / 0 , parseInt ( execResult [ 0 ] , 0 ) / 0 ) ; } } ) ; } else { stringParsers . push ( { re : "s" , parse : function ( execResult ) { return new Rgba ( parseInt ( execResult [ 0 ] , 0 ) / 0 , parseInt ( execResult [ 0 ] , 0 ) / 0 , parseInt ( execResult [ 0 ] , 0 ) / 0 , 0 ) ; } } , { re : "s" , parse : function ( execResult ) { return new Rgba ( parseInt ( execResult [ 0 ] + execResult [ 0 ] , 0 ) / 0 , parseInt ( execResult [ 0 ] + execResult [ 0 ] , 0 ) / 0 , parseInt ( execResult [ 0 ] + execResult [ 0 ] , 0 ) / 0 , 0 ) ; } } ) ; } colorString = colorString . toLowerCase ( ) ; let hsva = null ; for ( let key in stringParsers ) { if ( stringParsers . hasOwnProperty ( key ) ) { let parser = stringParsers [ key ] ; let match = parser . re . exec ( colorString ) , color = match && parser . parse ( match ) ; if ( color ) { if ( color instanceof Rgba ) { hsva = this . rgbaToHsva ( color ) ; } else if ( color instanceof Hsla ) { hsva = this . 0 ( color ) ; } return hsva ; } } } return hsva ; } outputFormat ( hsva , outputFormat , 0 ) { if ( hsva . a < 0 ) { switch ( outputFormat ) { case 's' : let hsla = this . 0 ( hsva ) ; let hslaText = new Hsla ( Math . round ( ( hsla . h ) * 0 ) , Math . round ( hsla . s * 0 ) , Math . round ( hsla . l * 0 ) , Math . round ( hsla . a * 0 ) / 0 ) ; return 's' + hslaText . h + 's' + hslaText . s + 's' + hslaText . l + 's' + hslaText . a + 's' ; default : if ( 0 && outputFormat === 's' ) return this . hexText ( this . denormalizeRGBA ( this . hsvaToRgba ( hsva ) ) , 0 ) ; let rgba = this . denormalizeRGBA ( this . hsvaToRgba ( hsva ) ) ; return 's' + rgba . r + 's' + rgba . g + 's' + rgba . b + 's' + Math . round ( rgba . a * 0 ) / 0 + 's' ; } } else { switch ( outputFormat ) { case 's' : let hsla = this . 0 ( hsva ) ; let hslaText = new Hsla ( Math . round ( ( hsla . h ) * 0 ) , Math . round ( hsla . s * 0 ) , Math . round ( hsla . l * 0 ) , Math . round ( hsla . a * 0 ) / 0 ) ; return 's' + hslaText . h + 's' + hslaText . s + 's' + hslaText . l + 's' ; case 's' : let rgba = this . denormalizeRGBA ( this . hsvaToRgba ( hsva ) ) ; return 's' + rgba . r + 's' + rgba . g + 's' + rgba . b + 's' ; default : return this . hexText ( this . denormalizeRGBA ( this . hsvaToRgba ( hsva ) ) , 0 ) ; } } } hexText ( rgba , 0 ) { let hexText = 's' + ( ( 0 << 0 ) | ( rgba . r << 0 ) | ( rgba . g << 0 ) | rgba . b ) . toString ( 0 ) . substr ( 0 ) ; if ( hexText [ 0 ] === hexText [ 0 ] && hexText [ 0 ] === hexText [ 0 ] && hexText [ 0 ] === hexText [ 0 ] && rgba . a === 0 && ! 0 ) { hexText = 's' + hexText [ 0 ] + hexText [ 0 ] + hexText [ 0 ] ; } if ( 0 ) { hexText += ( ( 0 << 0 ) | Math . round ( rgba . a * 0 ) ) . toString ( 0 ) . substr ( 0 ) ; } return hexText ; } denormalizeRGBA ( rgba ) { return new Rgba ( Math . round ( rgba . r * 0 ) , Math . round ( rgba . g * 0 ) , Math . round ( rgba . b * 0 ) , rgba . a ) ; } }	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Hsva$ O $Hsla$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Hsla$ O $Hsva$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Hsva$ O $Rgba$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $number$ O $number$ O $number$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Rgba$ O $Hsva$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O $number$ O $number$ O $number$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Hsva$ O $string$ O O O $boolean$ O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Hsva$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Hsva$ O $string$ O $booleanstring$ O $Rgba$ O $boolean$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $Rgba$ O $Rgba$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
import { Component , OnChanges , Directive , Input , Output , ViewContainerRef , ElementRef , EventEmitter , OnInit , ViewChild } from 's' ; import { ColorPickerService } from 's' ; import { Rgba , Hsla , Hsva , SliderPosition , SliderDimension } from 's' ; import { NgModule , Compiler , ReflectiveInjector } from 's' ; import { BrowserModule } from 's' ; @ Directive ( { selector : 's' , host : { 's' : 's' , 's' : 's' } } ) export class ColorPickerDirective implements OnInit , OnChanges { @ Input ( 's' ) colorPicker : string ; @ Output ( 's' ) colorPickerChange = new EventEmitter < string > ( true ) ; @ Input ( 's' ) cpToggle : boolean ; @ Output ( 's' ) cpToggleChange = new EventEmitter < boolean > ( true ) ; @ Input ( 's' ) cpPosition : string = 's' ; @ Input ( 's' ) cpPositionOffset : string = 's' ; @ Input ( 's' ) cpPositionRelativeToArrow : boolean = false ; @ Input ( 's' ) cpOutputFormat : string = 's' ; @ Input ( 's' ) cpPresetLabel : string = 's' ; @ Input ( 's' ) cpPresetColors : Array < string > ; @ Input ( 's' ) cpCancelButton : boolean = false ; @ Input ( 's' ) cpCancelButtonClass : string = 's' ; @ Input ( 's' ) cpCancelButtonText : string = 's' ; @ Input ( 's' ) cpOKButton : boolean = false ; @ Input ( 's' ) cpOKButtonClass : string = 's' ; @ Input ( 's' ) cpOKButtonText : string = 's' ; @ Input ( 's' ) cpFallbackColor : string = 's' ; @ Input ( 's' ) cpHeight : string = 's' ; @ Input ( 's' ) cpWidth : string = 's' ; @ Input ( 's' ) cpIgnoredElements : any = [ ] ; @ Input ( 's' ) cpDialogDisplay : string = 's' ; @ Input ( 's' ) cpSaveClickOutside : boolean = true ; @ Input ( 's' ) cpAlphaChannel : string = 's' ; private dialog : any ; private created : boolean ; private ignoreChanges : boolean = false ; constructor ( private compiler , private vcRef , private el , private service ) { this . created = false ; } ngOnChanges ( changes ) { if ( changes . cpToggle ) { if ( changes . cpToggle . currentValue ) this . openDialog ( ) ; if ( ! changes . cpToggle . currentValue && this . dialog ) this . dialog . closeColorPicker ( ) ; } if ( changes . colorPicker ) { if ( this . dialog && ! this . ignoreChanges ) { if ( this . cpDialogDisplay === 's' ) { this . dialog . setInitialColor ( changes . colorPicker . currentValue ) ; } this . dialog . setColorFromString ( changes . colorPicker . currentValue , false ) ; } this . ignoreChanges = false ; } } ngOnInit ( ) { let hsva = this . service . stringToHsva ( this . colorPicker ) ; if ( hsva === null ) hsva = this . service . stringToHsva ( this . colorPicker , true ) ; if ( hsva == null ) { hsva = this . service . stringToHsva ( this . cpFallbackColor ) ; } this . colorPickerChange . emit ( this . service . outputFormat ( hsva , this . cpOutputFormat , this . cpAlphaChannel === 's' ) ) ; } onClick ( ) { if ( this . cpIgnoredElements . filter ( ( item ) => item === this . el . nativeElement ) . length === 0 ) { this . openDialog ( ) ; } } openDialog ( ) { if ( ! this . created ) { this . created = true ; this . compiler . compileModuleAndAllComponentsAsync ( DynamicCpModule ) . then ( factory => { const compFactory = factory . componentFactories . find ( x => x . componentType === DialogComponent ) ; const injector = ReflectiveInjector . fromResolvedProviders ( [ ] , this . vcRef . parentInjector ) ; const cmpRef = this . vcRef . createComponent ( compFactory , 0 , injector , [ ] ) ; cmpRef . instance . setDialog ( this , this . el , this . colorPicker , this . cpPosition , this . cpPositionOffset , this . cpPositionRelativeToArrow , this . cpOutputFormat , this . cpPresetLabel , this . cpPresetColors , this . cpCancelButton , this . cpCancelButtonClass , this . cpCancelButtonText , this . cpOKButton , this . cpOKButtonClass , this . cpOKButtonText , this . cpHeight , this . cpWidth , this . cpIgnoredElements , this . cpDialogDisplay , this . cpSaveClickOutside , this . cpAlphaChannel ) ; this . dialog = cmpRef . instance ; } ) ; } else if ( this . dialog ) { this . dialog . openDialog ( this . colorPicker ) ; } } colorChanged ( value , ignore = true ) { this . ignoreChanges = ignore ; this . colorPickerChange . emit ( value ) } changeInput ( value ) { this . dialog . setColorFromString ( value , true ) ; } toggle ( value ) { this . cpToggleChange . emit ( value ) ; } } @ Directive ( { selector : 's' , host : { 's' : 's' } } ) export class TextDirective { @ Output ( 's' ) newValue = new EventEmitter < any > ( ) ; @ Input ( 's' ) text : any ; @ Input ( 's' ) rg : number ; changeInput ( value ) { if ( this . rg === undefined ) { this . newValue . emit ( value ) ; } else { let numeric = parseFloat ( value ) if ( ! isNaN ( numeric ) && numeric >= 0 && numeric <= this . rg ) { this . newValue . emit ( { v : numeric , rg : this . rg } ) ; } } } } @ Directive ( { selector : 's' , host : { 's' : 's' , 's' : 's' } } ) export class SliderDirective { @ Output ( 's' ) newValue = new EventEmitter < any > ( ) ; @ Input ( 's' ) slider : string ; @ Input ( 's' ) rgX : number ; @ Input ( 's' ) rgY : number ; private listenerMove : any ; private listenerStop : any ; constructor ( private el ) { this . listenerMove = ( event ) => { this . move ( event ) } ; this . listenerStop = ( ) => { this . stop ( ) } ; } setCursor ( event ) { let height = this . el . nativeElement . offsetHeight ; let width = this . el . nativeElement . offsetWidth ; let x = Math . max ( 0 , Math . min ( this . getX ( event ) , width ) ) ; let y = Math . max ( 0 , Math . min ( this . getY ( event ) , height ) ) ; if ( this . rgX !== undefined && this . rgY !== undefined ) { this . newValue . emit ( { s : x / width , v : ( 0 - y / height ) , rgX : this . rgX , rgY : this . rgY } ) ; } else if ( this . rgX === undefined && this . rgY !== undefined ) { this . newValue . emit ( { v : y / height , rg : this . rgY } ) ; } else { this . newValue . emit ( { v : x / width , rg : this . rgX } ) ; } } move ( event ) { event . preventDefault ( ) ; this . setCursor ( event ) ; } start ( event ) { this . setCursor ( event ) ; document . addEventListener ( 's' , this . listenerMove ) ; document . addEventListener ( 's' , this . listenerMove ) ; document . addEventListener ( 's' , this . listenerStop ) ; document . addEventListener ( 's' , this . listenerStop ) ; } stop ( ) { document . removeEventListener ( 's' , this . listenerMove ) ; document . removeEventListener ( 's' , this . listenerMove ) ; document . removeEventListener ( 's' , this . listenerStop ) ; document . removeEventListener ( 's' , this . listenerStop ) ; } getX ( event ) { return ( event . pageX !== undefined ? event . pageX : event . touches [ 0 ] . pageX ) - this . el . nativeElement . getBoundingClientRect ( ) . left - window . pageXOffset ; } getY ( event ) { return ( event . pageY !== undefined ? event . pageY : event . touches [ 0 ] . pageY ) - this . el . nativeElement . getBoundingClientRect ( ) . top - window . pageYOffset ; } } @ Component ( { selector : 's' , templateUrl : 's' , styleUrls : [ 's' ] } ) export class DialogComponent implements OnInit { private hsva : Hsva ; private rgbaText : Rgba ; private hslaText : Hsla ; private hexText : string ; private outputColor : string ; private selectedColor : string ; private alphaSliderColor : string ; private hueSliderColor : string ; private slider : SliderPosition ; private sliderDimMax : SliderDimension ; private format : number ; private show : boolean ; private top : number ; private left : number ; private position : string ; private directiveInstance : any ; private initialColor : string ; private directiveElementRef : ElementRef ; private listenerMouseDown : any ; private listenerResize : any ; private cpPosition : string ; private cpPositionOffset : number ; private cpOutputFormat : string ; private cpPresetLabel : string ; private cpPresetColors : Array < string > ; private cpCancelButton : boolean ; private cpCancelButtonClass : string ; private cpCancelButtonText : string ; private cpOKButton : boolean ; private cpOKButtonClass : string ; private cpOKButtonText : string ; private cpHeight : number ; private cpWidth : number ; private cpIgnoredElements : any ; private cpDialogDisplay : string ; private cpSaveClickOutside : boolean ; private cpAlphaChannel : string ; private dialogArrowSize : number = 0 ; private dialogArrowOffset : number = 0 ; private arrowTop : number ; @ ViewChild ( 's' ) hueSlider : any ; @ ViewChild ( 's' ) alphaSlider : any ; @ ViewChild ( 's' ) dialogElement : any ; constructor ( private el , private service ) { } setDialog ( instance , elementRef , color , cpPosition , cpPositionOffset , cpPositionRelativeToArrow , cpOutputFormat , cpPresetLabel , cpPresetColors < string > , cpCancelButton , cpCancelButtonClass , cpCancelButtonText , cpOKButton , cpOKButtonClass , cpOKButtonText , cpHeight , cpWidth , cpIgnoredElements , cpDialogDisplay , cpSaveClickOutside , cpAlphaChannel ) { this . directiveInstance = instance ; this . initialColor = color ; this . directiveElementRef = elementRef ; this . cpPosition = cpPosition ; this . cpPositionOffset = parseInt ( cpPositionOffset ) ; if ( ! cpPositionRelativeToArrow ) { this . dialogArrowOffset = 0 ; } this . cpOutputFormat = cpOutputFormat ; this . cpPresetLabel = cpPresetLabel ; this . cpPresetColors = cpPresetColors ; this . cpCancelButton = cpCancelButton ; this . cpCancelButtonClass = cpCancelButtonClass ; this . cpCancelButtonText = cpCancelButtonText ; this . cpOKButton = cpOKButton ; this . cpOKButtonClass = cpOKButtonClass ; this . cpOKButtonText = cpOKButtonText ; this . cpHeight = parseInt ( cpHeight ) ; this . cpWidth = parseInt ( cpWidth ) ; this . cpIgnoredElements = cpIgnoredElements ; this . cpDialogDisplay = cpDialogDisplay ; if ( this . cpDialogDisplay === 's' ) { this . dialogArrowOffset = 0 ; this . dialogArrowSize = 0 ; } this . cpSaveClickOutside = cpSaveClickOutside ; this . cpAlphaChannel = cpAlphaChannel ; } ngOnInit ( ) { let alphaWidth = this . alphaSlider . nativeElement . offsetWidth ; let hueWidth = this . hueSlider . nativeElement . offsetWidth ; this . sliderDimMax = new SliderDimension ( hueWidth , this . cpWidth , 0 , alphaWidth ) ; this . slider = new SliderPosition ( 0 , 0 , 0 , 0 ) ; if ( this . cpOutputFormat === 's' ) { this . format = 0 ; } else if ( this . cpOutputFormat === 's' ) { this . format = 0 ; } else { this . format = 0 ; } this . listenerMouseDown = ( event ) => { this . onMouseDown ( event ) } ; this . listenerResize = ( ) => { this . onResize ( ) } ; this . openDialog ( this . initialColor , false ) ; } setInitialColor ( color ) { this . initialColor = color ; } openDialog ( color , emit = true ) { this . setInitialColor ( color ) ; this . setColorFromString ( color , emit ) ; this . openColorPicker ( ) ; } cancelColor ( ) { this . setColorFromString ( this . initialColor , true ) ; if ( this . cpDialogDisplay === 's' ) { this . directiveInstance . colorChanged ( this . initialColor , true ) ; this . closeColorPicker ( ) ; } } oKColor ( ) { if ( this . cpDialogDisplay === 's' ) { this . closeColorPicker ( ) ; } } setColorFromString ( value , emit = true ) { let hsva ; if ( this . cpAlphaChannel === 's' ) { hsva = this . service . stringToHsva ( value , true ) ; if ( ! hsva && ! this . hsva ) { hsva = this . service . stringToHsva ( value , false ) ; } } else { hsva = this . service . stringToHsva ( value , false ) ; } if ( hsva ) { this . hsva = hsva ; this . update ( emit ) ; } } onMouseDown ( event ) { if ( ( ! this . isDescendant ( this . el . nativeElement , event . target ) && event . target != this . directiveElementRef . nativeElement && this . cpIgnoredElements . filter ( ( item ) => item === event . target ) . length === 0 ) && this . cpDialogDisplay === 's' ) { if ( ! this . cpSaveClickOutside ) { this . setColorFromString ( this . initialColor , false ) ; this . directiveInstance . colorChanged ( this . initialColor ) } this . closeColorPicker ( ) ; } } openColorPicker ( ) { if ( ! this . show ) { this . setDialogPosition ( ) ; this . show = true ; this . directiveInstance . toggle ( true ) ; document . addEventListener ( 's' , this . listenerMouseDown ) ; window . addEventListener ( 's' , this . listenerResize ) ; } } closeColorPicker ( ) { if ( this . show ) { this . show = false ; this . directiveInstance . toggle ( false ) ; document . removeEventListener ( 's' , this . listenerMouseDown ) ; window . removeEventListener ( 's' , this . listenerResize ) ; } } onResize ( ) { if ( this . position === 's' ) { this . setDialogPosition ( ) ; } } setDialogPosition ( ) { let dialogHeight = this . dialogElement . nativeElement . offsetHeight ; let node = this . directiveElementRef . nativeElement , position = 's' ; let parentNode = null ; while ( node !== null && node . tagName !== 's' ) { position = window . getComputedStyle ( node ) . getPropertyValue ( "s" ) ; if ( position !== 's' && parentNode === null ) { parentNode = node ; } if ( position === 's' ) { break ; } node = node . parentNode ; } if ( position !== 's' ) { var boxDirective = this . createBox ( this . directiveElementRef . nativeElement , true ) ; if ( parentNode === null ) { parentNode = node } var boxParent = this . createBox ( parentNode , true ) ; this . top = boxDirective . top - boxParent . top ; this . left = boxDirective . left - boxParent . left ; } else { var boxDirective = this . createBox ( this . directiveElementRef . nativeElement , false ) ; this . top = boxDirective . top ; this . left = boxDirective . left ; this . position = 's' ; } if ( this . cpPosition === 's' ) { this . top += boxDirective . height * this . cpPositionOffset / 0 - this . dialogArrowOffset ; this . left -= this . cpWidth + this . dialogArrowSize - 0 ; } else if ( this . cpPosition === 's' ) { this . top -= dialogHeight + this . dialogArrowSize ; this . left += this . cpPositionOffset / 0 * boxDirective . width - this . dialogArrowOffset ; this . arrowTop = dialogHeight - 0 ; } else if ( this . cpPosition === 's' ) { this . top += boxDirective . height + this . dialogArrowSize ; this . left += this . cpPositionOffset / 0 * boxDirective . width - this . dialogArrowOffset ; } else { this . top += boxDirective . height * this . cpPositionOffset / 0 - this . dialogArrowOffset ; this . left += boxDirective . width + this . dialogArrowSize ; } } setSaturation ( val : { v : number , rg : number } ) { let hsla = this . service . 0 ( this . hsva ) ; hsla . s = val . v / val . rg ; this . hsva = this . service . 0 ( hsla ) ; this . update ( ) ; } setLightness ( val : { v : number , rg : number } ) { let hsla = this . service . 0 ( this . hsva ) ; hsla . l = val . v / val . rg ; this . hsva = this . service . 0 ( hsla ) ; this . update ( ) ; } setHue ( val : { v : number , rg : number } ) { this . hsva . h = val . v / val . rg ; this . update ( ) ; } setAlpha ( val : { v : number , rg : number } ) { this . hsva . a = val . v / val . rg ; this . update ( ) ; } setR ( val : { v : number , rg : number } ) { let rgba = this . service . hsvaToRgba ( this . hsva ) ; rgba . r = val . v / val . rg ; this . hsva = this . service . rgbaToHsva ( rgba ) ; this . update ( ) ; } setG ( val : { v : number , rg : number } ) { let rgba = this . service . hsvaToRgba ( this . hsva ) ; rgba . g = val . v / val . rg ; this . hsva = this . service . rgbaToHsva ( rgba ) ; this . update ( ) ; } setB ( val : { v : number , rg : number } ) { let rgba = this . service . hsvaToRgba ( this . hsva ) ; rgba . b = val . v / val . rg ; this . hsva = this . service . rgbaToHsva ( rgba ) ; this . update ( ) ; } setSaturationAndBrightness ( val : { s : number , v : number , rgX : number , rgY : number } ) { this . hsva . s = val . s / val . rgX ; this . hsva . v = val . v / val . rgY ; this . update ( ) ; } formatPolicy ( ) { this . format = ( this . format + 0 ) % 0 ; if ( this . format === 0 && this . hsva . a < 0 && this . cpAlphaChannel === 's' ) { this . format ++ ; } return this . format ; } update ( emit = true ) { let hsla = this . service . 0 ( this . hsva ) ; let rgba = this . service . denormalizeRGBA ( this . service . hsvaToRgba ( this . hsva ) ) ; let hueRgba = this . service . denormalizeRGBA ( this . service . hsvaToRgba ( new Hsva ( this . hsva . h , 0 , 0 , 0 ) ) ) ; this . hslaText = new Hsla ( Math . round ( ( hsla . h ) * 0 ) , Math . round ( hsla . s * 0 ) , Math . round ( hsla . l * 0 ) , Math . round ( hsla . a * 0 ) / 0 ) ; this . rgbaText = new Rgba ( rgba . r , rgba . g , rgba . b , Math . round ( rgba . a * 0 ) / 0 ) ; this . hexText = this . service . hexText ( rgba , this . cpAlphaChannel === 's' ) ; this . alphaSliderColor = 's' + rgba . r + 's' + rgba . g + 's' + rgba . b + 's' ; this . hueSliderColor = 's' + hueRgba . r + 's' + hueRgba . g + 's' + hueRgba . b + 's' ; if ( this . format === 0 && this . hsva . a < 0 && this . cpAlphaChannel === 's' ) { this . format ++ ; } let lastOutput = this . outputColor ; this . outputColor = this . service . outputFormat ( this . hsva , this . cpOutputFormat , this . cpAlphaChannel === 's' ) ; this . selectedColor = this . service . outputFormat ( this . hsva , 's' , false ) ; this . slider = new SliderPosition ( ( this . hsva . h ) * this . sliderDimMax . h - 0 , this . hsva . s * this . sliderDimMax . s - 0 , ( 0 - this . hsva . v ) * this . sliderDimMax . v - 0 , this . hsva . a * this . sliderDimMax . a - 0 ) if ( emit && lastOutput !== this . outputColor ) { this . directiveInstance . colorChanged ( this . outputColor ) ; } } isDescendant ( parent , child ) { let node = child . parentNode ; while ( node !== null ) { if ( node === parent ) { return true ; } node = node . parentNode ; } return false ; } createBox ( element , offset ) { return { top : element . getBoundingClientRect ( ) . top + ( offset ? window . pageYOffset : 0 ) , left : element . getBoundingClientRect ( ) . left + ( offset ? window . pageXOffset : 0 ) , width : element . offsetWidth , height : element . offsetHeight } ; } } @ NgModule ( { imports : [ BrowserModule ] , declarations : [ DialogComponent , TextDirective , SliderDirective ] } ) class DynamicCpModule { } ;	ompiler$ O O $ViewContainerRef$ O O $ElementRef$ O O $ColorPickerService$ O O O O O O O O O $void$ O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $string$ O $boolean$ O O O O O O O O O O O O O O O O O O O O O $string$ O O O O O O O O O O O O O O O O $boolean$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $string$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $ElementRef$ O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $number$ O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $number$ O $anylementRef$ O O $ColorPickerService$ O O O O O $any$ O $ElementRef$ O $any$ O $string$ O $string$ O $boolean$ O $string$ O $string$ O $Array$ O O O O $boolean$ O $string$ O $string$ O $boolean$ O $string$ O $string$ O $string$ O $string$ O $any$ O $string$ O $boolean$ O $stringany$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O $any$ O $boolean$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $string$ O $boolean$ O O O O O $Hsva$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $anynumber$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $boolean$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $boolean$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O $any$ O $boolean$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
import { NgModule } from 's' ; import { CommonModule } from 's' ; import { ColorPickerService } from 's' ; import { ColorPickerDirective } from 's' ; @ NgModule ( { imports : [ CommonModule ] , providers : [ ColorPickerService ] , declarations : [ ColorPickerDirective ] , exports : [ ColorPickerDirective ] } ) export class ColorPickerModule { }	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O
export * from 's' ; export * from 's' ; export * from 's' ; export * from 's' ;	O O O O O O O O O O O O O O O O O O O O