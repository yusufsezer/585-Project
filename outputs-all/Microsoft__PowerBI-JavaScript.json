'js' $ ( function ( ) { var models = window [ 's' ] . models ; console . log ( 's' ) ; var reportUrl = 's' ; var $reportContainer = $ ( 's' ) ; var report ; var $dataSelectedContainer = $ ( "s" ) ; fetch ( reportUrl ) . then ( function ( response ) { if ( response . ok ) { return response . json ( ) . then ( function ( embedConfig ) { report = powerbi . embed ( $reportContainer . get ( 0 ) , embedConfig ) ; initializeDataSelection ( report , $dataSelectedContainer ) ; return report ; } ) ; } else { return response . json ( ) . then ( function ( error ) { throw new Error ( error ) ; } ) ; } } ) ; } ) ; function initializeDataSelection ( report , $dataSelectedContainer ) { report . on ( 's' , function ( event ) { console . log ( 's' , event ) ; var data = event . detail ; $dataSelectedContainer . text ( JSON . stringify ( data , null , 's' ) ) ; } ) ; }	O $any$ O O O O O O $any$ O $complex$ O O O O $any$ O $Console$ O $void$ O O O O O $string$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O $Promise<Response>$ O $string$ O O O O O O $Response$ O O O O $Response$ O $boolean$ O O O $Response$ O $Promise<any>$ O O O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $void$ O $any$ O $any$ O O O $any$ O O O O O O O O $Response$ O $Promise<any>$ O O O O O O O $any$ O O O O $ErrorConstructor$ O $any$ O O O O O O O O O O O O O $void$ O $any$ O $any$ O O $any$ O $any$ O O O O O $any$ O O $Console$ O $void$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $JSON$ O $complex$ O $any$ O O O O O O O O O O O
'js' $ ( function ( ) { var models = window [ 's' ] . models ; console . log ( 's' ) ; var staticReportUrl = 's' ; var $defaultPageReportContainer = $ ( 's' ) ; var defaultPageReport ; var defaultPageName = 's' ; var defaultFilter = new models . AdvancedFilter ( { table : "s" , column : "s" } , "s" , [ { operator : "s" , value : "s" } , { operator : "s" , value : "s" } ] ) ; var defaultFilters = [ defaultFilter ] ; fetch ( staticReportUrl ) . then ( function ( response ) { if ( response . ok ) { return response . json ( ) . then ( function ( embedConfig ) { var defaultsEmbedConfig = $ . extend ( { } , embedConfig , { pageName : defaultPageName , filter : defaultFilters , settings : { filterPaneEnabled : true , navContentPaneEnabled : true } } ) ; defaultPageReport = powerbi . embed ( $defaultPageReportContainer . get ( 0 ) , defaultsEmbedConfig ) ; return defaultPageReport ; } ) ; } else { return response . json ( ) . then ( function ( error ) { throw new Error ( error ) ; } ) ; } } ) ; } ) ;	O $any$ O O O O O O $any$ O $complex$ O O O O $any$ O $Console$ O $void$ O O O O O $string$ O O O O $any$ O $any$ O O O O O $any$ O O $string$ O O O O $any$ O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any[]$ O O $any$ O O $Promise<Response>$ O $string$ O O O O O O $Response$ O O O O $Response$ O $boolean$ O O O $Response$ O $Promise<any>$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $string$ O $string$ O $any[]$ O $any[]$ O $complex$ O O $boolean$ O O O $boolean$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O O O O O O $Response$ O $Promise<any>$ O O O O O O O $any$ O O O O $ErrorConstructor$ O $any$ O O O O O O O O O O O O
'js' $ ( function ( ) { var models = window [ 's' ] . models ; console . log ( 's' ) ; var allReportsUrl = 's' ; var $reportsList = $ ( 's' ) ; var $resetButton = $ ( 's' ) ; var $dynamicReportContainer = $ ( 's' ) ; $reportsList . on ( 's' , 's' , function ( event ) { var button = event . target ; var report = $ ( button ) . data ( 's' ) ; var url = allReportsUrl + 's' + report . id ; fetch ( url ) . then ( function ( response ) { if ( response . ok ) { return response . json ( ) . then ( function ( embedConfig ) { return powerbi . embed ( $dynamicReportContainer . get ( 0 ) , embedConfig ) ; } ) ; } else { return response . json ( ) . then ( function ( error ) { throw new Error ( error ) ; } ) ; } } ) ; } ) ; $resetButton . on ( 's' , function ( event ) { powerbi . reset ( $dynamicReportContainer . get ( 0 ) ) ; } ) ; function generateReportListItem ( report ) { var button = $ ( 's' ) . attr ( { type : 's' } ) . addClass ( 's' ) . data ( 's' , report ) . text ( 's' ) ; var reportName = $ ( 's' ) . addClass ( 's' ) . text ( report . name ) var element = $ ( 's' ) . append ( reportName ) . append ( button ) ; return element ; } fetch ( allReportsUrl ) . then ( function ( response ) { if ( response . ok ) { return response . json ( ) . then ( function ( reports ) { reports . map ( generateReportListItem ) . forEach ( function ( element ) { $reportsList . append ( element ) ; } ) ; } ) ; } } ) ; } ) ;	O $any$ O O O O O O $any$ O $complex$ O O O O $any$ O $Console$ O $void$ O O O O O $string$ O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O O $string$ O $string$ O O O $any$ O $any$ O $Promise<Response>$ O $string$ O O O O O O $Response$ O O O O $Response$ O $boolean$ O O O $Response$ O $Promise<any>$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $Response$ O $Promise<any>$ O O O O O O O $any$ O O O O $ErrorConstructor$ O $any$ O O O O O O O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O O $string$ O O O O O $any$ O O O O $any$ O O O $any$ O O $any$ O O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O $Promise<Response>$ O $string$ O O O O O O $Response$ O O O O $Response$ O $boolean$ O O O $Response$ O $Promise<any>$ O O O O O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O O O O O O
'js' $ ( function ( ) { var models = window [ 's' ] . models ; console . log ( 's' ) ; var reportUrl = 's' ; var $customFilterPaneContainer = $ ( 's' ) ; var customFilterPaneReport ; var customFilterPaneReportPages ; var $customFilterForm = $ ( 's' ) ; var $filterType = $ ( 's' ) ; var $typeFields = $ ( 's' ) ; var $operatorTypeFields = $ ( 's' ) ; var $operatorFields = $ ( 's' ) ; var $targetTypeFields = $ ( 's' ) ; var $targetFields = $ ( 's' ) ; var $reloadButton = $ ( 's' ) ; var 0 = $ ( 's' ) ; var 0 = new models . AdvancedFilter ( { table : "s" , column : "s" } , "s" , [ { operator : "s" , value : "s" } ] ) ; var 0 = $ ( 's' ) ; var 0 = new models . AdvancedFilter ( { table : "s" , column : "s" } , "s" , [ { operator : "s" , value : "s" } , { operator : "s" , value : "s" } ] ) ; var 0 = $ ( 's' ) ; var 0 = new models . AdvancedFilter ( { table : "s" , column : "s" } , "s" , [ { operator : "s" , value : "s" } , { operator : "s" , value : "s" } ] ) ; $reloadButton . on ( 's' , function ( event ) { event . preventDefault ( ) ; console . log ( 's' ) ; customFilterPaneReport . reload ( ) ; } ) ; $customFilterForm . on ( 's' , function ( event ) { event . preventDefault ( ) ; console . log ( 's' ) ; var data = { target : getFilterTypeTarget ( ) , operator : getFilterOperatorAndValues ( ) , reportTarget : getReportTarget ( ) } ; var filter ; var values = Array . prototype . slice . call ( data . operator . values ) ; if ( data . operator . type === "s" ) { filter = new models . BasicFilter ( data . target , data . operator . operator , values ) ; } else if ( data . operator . type === "s" ) { filter = new models . AdvancedFilter ( data . target , data . operator . operator , values ) ; } var filterTargetLevel = customFilterPaneReport ; if ( data . reportTarget . type === "s" ) { filterTargetLevel = customFilterPaneReport . page ( data . reportTarget . name ) ; } else if ( data . reportTarget . type === "s" ) { filterTargetLevel = customFilterPaneReport . page ( 's' ) . visual ( data . reportTarget . name ) ; } var filterJson = filter . toJSON ( ) ; filterTargetLevel . setFilters ( [ filterJson ] ) ; } ) ; $filterType . on ( 's' , function ( event ) { console . log ( 's' ) ; var value = $filterType . val ( ) . toLowerCase ( ) ; updateFieldsForType ( value ) ; } ) ; $operatorTypeFields . on ( 's' , function ( event ) { var checkedType = $ ( 's' ) . val ( ) ; console . log ( 's' , checkedType ) ; updateFieldsForOperator ( checkedType . toLowerCase ( ) ) ; } ) ; $targetTypeFields . on ( 's' , function ( event ) { var checkedTarget = $ ( 's' ) . val ( ) ; console . log ( 's' , checkedTarget ) ; updateTargetFields ( checkedTarget . toLowerCase ( ) ) ; } ) ; 0 . on ( 's' , function ( event ) { customFilterPaneReport . setFilters ( [ 0 . toJSON ( ) ] ) ; updateFiltersPane ( ) ; } ) ; 0 . on ( 's' , function ( event ) { customFilterPaneReport . setFilters ( [ 0 . toJSON ( ) ] ) ; updateFiltersPane ( ) ; } ) ; 0 . on ( 's' , function ( event ) { customFilterPaneReport . page ( 's' ) . setFilters ( [ 0 . toJSON ( ) ] ) ; updateFiltersPane ( ) ; } ) ; function getFilterTypeTarget ( ) { var filterType = $filterType . val ( ) . toLowerCase ( ) ; var filterTypeTarget = { } ; filterTypeTarget . table = $ ( 's' ) . val ( ) ; if ( filterType === "s" ) { filterTypeTarget . column = $ ( 's' ) . val ( ) ; } else if ( filterType === "s" ) { filterTypeTarget . hierarchy = $ ( 's' ) . val ( ) ; filterTypeTarget . hierarchyLevel = $ ( 's' ) . val ( ) ; } else if ( filterType === "s" ) { filterTypeTarget . measure = $ ( 's' ) . val ( ) ; } return filterTypeTarget ; } function getFilterOperatorAndValues ( ) { var operatorType = $ ( 's' ) . val ( ) ; var operatorAndValues = { type : operatorType } ; if ( operatorType === "s" ) { operatorAndValues . operator = $ ( 's' ) . val ( ) ; operatorAndValues . values = $ ( 's' ) . map ( function ( index , element ) { return $ ( element ) . val ( ) ; } ) ; } else if ( operatorType === "s" ) { operatorAndValues . operator = $ ( 's' ) . val ( ) ; operatorAndValues . values = $ ( 's' ) . map ( function ( index , element ) { return { value : $ ( element ) . find ( 's' ) . val ( ) , operator : $ ( element ) . find ( 's' ) . val ( ) } ; } ) ; } return operatorAndValues ; } function getReportTarget ( ) { var checkedTarget = $ ( 's' ) . val ( ) ; var target = { type : checkedTarget } ; if ( checkedTarget === "s" ) { target . name = $ ( 's' ) . val ( ) ; } else if ( checkedTarget === "s" ) { target . id = undefined ; } return target ; } function updateFieldsForType ( type ) { $typeFields . hide ( ) ; $ ( 's' + type ) . show ( ) ; } function updateFieldsForOperator ( type ) { $operatorFields . hide ( ) ; $ ( 's' + type ) . show ( ) ; } function updateTargetFields ( target ) { $targetFields . hide ( ) ; $ ( 's' + target ) . show ( ) ; } function updateFiltersPane ( ) { const $filters = $ ( 's' ) ; $ . each ( $filters , function ( index , element ) { const $element = $ ( element ) ; const filterable = $element . data ( 's' ) ; console . log ( $element , filterable ) ; filterable . getFilters ( ) . then ( function ( filters ) { console . log ( filterable . displayName , filters ) ; $element . empty ( ) ; filters . map ( generateFilterElement ) . forEach ( function ( $filter ) { $element . append ( $filter ) ; } ) ; } ) ; } ) ; } updateFieldsForType ( "s" ) ; updateFieldsForOperator ( "s" ) ; updateTargetFields ( "s" ) ; function generateFilterElement ( filter ) { var $removeButton = $ ( 's' ) . addClass ( 's' ) . addClass ( 's' ) . addClass ( 's' ) . data ( 's' , filter ) . html ( 's' ) ; var $filterText = $ ( 's' ) . addClass ( 's' ) . text ( JSON . stringify ( filter , null , 's' ) ) ; var $filter = $ ( 's' ) . addClass ( 's' ) . append ( $removeButton ) . append ( $filterText ) ; return $filter ; } function createAppliedFiltersPane ( $element , report ) { var $appliedFiltersContainer = $ ( 's' ) ; var $reportFilters = $ ( 's' ) ; var $pageFilters = $ ( 's' ) ; var $refreshAppliedFilters = $ ( 's' ) ; let reportPages ; var filtersTree = { filterable : report , filters : [ ] , nodes : [ ] } ; function generatePageFiltersContainer ( page ) { var $heading = $ ( 's' ) . text ( page . name ) ; var $filters = $ ( 's' ) . addClass ( 's' ) . data ( 's' , page ) ; var $filtersContainer = $ ( 's' ) . append ( $heading ) . append ( $filters ) ; return $filtersContainer ; } $reportFilters . data ( 's' , report ) ; report . getPages ( ) . then ( function ( pages ) { reportPages = pages ; pages . map ( generatePageFiltersContainer ) . forEach ( function ( $pageFiltersContainer ) { $pageFilters . append ( $pageFiltersContainer ) } ) ; } ) ; $refreshAppliedFilters . on ( 's' , function ( event ) { event . preventDefault ( ) ; updateFiltersPane ( ) ; } ) ; $appliedFiltersContainer . on ( 's' , 's' , function ( event ) { event . preventDefault ( ) ; const $element = $ ( event . target ) ; const filterToRemove = $element . data ( 's' ) ; const $filter = $element . closest ( 's' ) ; const $filtersContainer = $element . closest ( 's' ) ; const filterable = $filtersContainer . data ( 's' ) ; console . log ( 's' , $element , $filtersContainer , filterToRemove , filterable ) ; filterable . getFilters ( ) . then ( function ( filters ) { let index = - 0 ; filters . some ( function ( filter , i ) { if ( JSON . stringify ( filter ) === JSON . stringify ( filterToRemove ) ) { index = i ; return true ; } } ) ; if ( index !== - 0 ) { filters . splice ( index , 0 ) ; filterable . setFilters ( filters ) ; $filter . remove ( ) ; } } ) ; } ) ; } ; var $removeFiltersReportForm = $ ( 's' ) ; var $removeFiltersPageForm = $ ( 's' ) ; var $removeFiltersVisualForm = $ ( 's' ) ; var $removeFiltersPagesList = $ ( 's' ) ; var $removeFiltersVisualsList = $ ( 's' ) ; $removeFiltersReportForm . on ( 's' , function ( event ) { event . preventDefault ( ) ; console . log ( 's' ) ; customFilterPaneReport . removeFilters ( ) ; updateFiltersPane ( ) ; } ) ; $removeFiltersPageForm . on ( 's' , function ( event ) { event . preventDefault ( ) ; var pageName = $removeFiltersPagesList . val ( ) ; console . log ( 's' , pageName ) ; customFilterPaneReport . page ( pageName ) . removeFilters ( ) ; updateFiltersPane ( ) ; } ) ; $removeFiltersVisualForm . on ( 's' , function ( event ) { event . preventDefault ( ) ; var visualName = $removeFiltersVisualsList . val ( ) ; console . log ( 's' , visualName ) ; customFilterPaneReport . page ( 's' ) . visual ( visualName ) . removeFilters ( ) ; updateFiltersPane ( ) ; } ) ; fetch ( reportUrl ) . then ( function ( response ) { if ( response . ok ) { return response . json ( ) . then ( function ( embedConfig ) { var customFilterPaneConfig = $ . extend ( { } , embedConfig , { settings : { filterPaneEnabled : false , navContentPaneEnabled : true } } ) ; customFilterPaneReport = powerbi . embed ( $customFilterPaneContainer . get ( 0 ) , customFilterPaneConfig ) ; return customFilterPaneReport ; } ) ; } else { return response . json ( ) . then ( function ( error ) { throw new Error ( error ) ; } ) ; } } ) . then ( function ( report ) { report . on ( 's' , function ( event ) { createAppliedFiltersPane ( null , report ) ; console . log ( 's' ) ; report . getPages ( ) . then ( function ( pages ) { customFilterPaneReportPages = pages ; var $pagesSelect = $ ( 's' ) ; var $removeFiltersPagesList = $ ( 's' ) ; pages . forEach ( function ( page ) { var $pageOption = $ ( 's' ) . val ( page . name ) . text ( page . displayName ) . data ( page ) ; var 0 = $ ( 's' ) . val ( page . name ) . text ( page . displayName ) . data ( page ) ; $removeFiltersPagesList . append ( $pageOption ) ; $pagesSelect . append ( 0 ) ; } ) ; } ) ; } ) ; } ) ; } ) ;	O $any$ O O O O O O $any$ O $complex$ O O O O $any$ O $Console$ O $void$ O O O O O $string$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $Console$ O $void$ O O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $Console$ O $void$ O O O O O $complex$ O O $complex$ O $complex$ O O O $complex$ O $complex$ O O O $complex$ O $complex$ O O O O O $any$ O O $any$ O $ArrayConstructor$ O $any[]$ O $any[]$ O $any$ O $complex$ O $complex$ O $any$ O O O O $complex$ O $complex$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O $complex$ O $complex$ O $complex$ O $any$ O $any$ O O O O O O $complex$ O $complex$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O $complex$ O $complex$ O $complex$ O $any$ O $any$ O O O O $any$ O $any$ O O O $complex$ O $complex$ O $any$ O O O O $any$ O $any$ O $any$ O $complex$ O $complex$ O $any$ O O O O O O $complex$ O $complex$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $complex$ O $complex$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O O O O O $any$ O O $Console$ O $void$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O $void$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $Console$ O $void$ O O O $any$ O O $void$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $Console$ O $void$ O O O $any$ O O $void$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O O O O O $void$ O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O O O O O $void$ O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O O O O O $void$ O O O O O O O $complex$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O $complex$ O O O O $complex$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O O O O $complex$ O $any$ O $any$ O O O O $any$ O O O O O O O $any$ O O O O $complex$ O $any$ O $any$ O O O O $any$ O O O $complex$ O $any$ O $any$ O O O O $any$ O O O O O O O $any$ O O O O $complex$ O $any$ O $any$ O O O O $any$ O O O O O $complex$ O O O $complex$ O O O O $any$ O $any$ O O O O $any$ O O O O $complex$ O O $any$ O $any$ O O O O $any$ O O O O $complex$ O $any$ O $any$ O O O O $any$ O O O $complex$ O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O O O O O O O O O O $any$ O O O O $complex$ O $any$ O $any$ O O O O $any$ O O O $complex$ O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O O O O O O O O $complex$ O O O $complex$ O O O O $any$ O $any$ O O O O $any$ O O O O $complex$ O O $any$ O $any$ O O O O $any$ O O O O $complex$ O $any$ O $any$ O O O O $any$ O O O O O O O $any$ O O O O $complex$ O $any$ O $undefined$ O O O $complex$ O O O $void$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O O O O O $void$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O O O O O $void$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O O O O O $void$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $Console$ O $void$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $Console$ O $void$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O O O $void$ O O O O $void$ O O O O $void$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O $any$ O O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $JSON$ O $complex$ O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $void$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O $complex$ O O $any$ O $any$ O $undefined[]$ O O O O $undefined[]$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $void$ O O O O O O $any$ O $any$ O O O O O O O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O $Console$ O $void$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O $number$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $JSON$ O $complex$ O $any$ O O $JSON$ O $complex$ O $any$ O O O $number$ O $any$ O O O O O O O O O O $number$ O O O O O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $Console$ O $void$ O O O O $any$ O $any$ O O O $void$ O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $Console$ O $void$ O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $void$ O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $Console$ O $void$ O O O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $void$ O O O O O O $Promise<Response>$ O $string$ O O O O O O $Response$ O O O O $Response$ O $boolean$ O O O $Response$ O $Promise<any>$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $complex$ O O $boolean$ O O O $boolean$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O O O O O O $Response$ O $Promise<any>$ O O O O O O O $any$ O O O O $ErrorConstructor$ O $any$ O O O O O O O O O O O O O $any$ O O $any$ O $any$ O O O O O $any$ O O $void$ O O O $any$ O O $Console$ O $void$ O O O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O O O O O O O O
'js' $ ( function ( ) { var models = window [ 's' ] . models ; var staticReportUrl = 's' ; var $staticReportContainer = $ ( 's' ) ; var staticReport ; fetch ( staticReportUrl ) . then ( function ( response ) { if ( response . ok ) { return response . json ( ) . then ( function ( embedConfig ) { staticReport = powerbi . embed ( $staticReportContainer . get ( 0 ) , embedConfig ) ; } ) ; } else { return response . json ( ) . then ( function ( error ) { throw new Error ( error ) ; } ) ; } } ) ; var $getId = $ ( 's' ) ; $getId . on ( 's' , function ( event ) { alert ( staticReport . getId ( ) ) ; } ) ; var $fullscreen = $ ( 's' ) ; $fullscreen . on ( 's' , function ( event ) { staticReport . fullscreen ( ) ; } ) ; var $reloadReport = $ ( 's' ) ; $reloadReport . on ( 's' , function ( event ) { staticReport . reload ( ) . catch ( function ( error ) { alert ( error ) ; } ) ; } ) ; var $printReport = $ ( 's' ) ; $printReport . on ( 's' , function ( event ) { staticReport . print ( ) ; } ) ; } ) ;	O $any$ O O O O O O $any$ O $complex$ O O O O $any$ O O $string$ O O O O $any$ O $any$ O O O O O $any$ O $Promise<Response>$ O $string$ O O O O O O $Response$ O O O O $Response$ O $boolean$ O O O $Response$ O $Promise<any>$ O O O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $Response$ O $Promise<any>$ O O O O O O O $any$ O O O O $ErrorConstructor$ O $any$ O O O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $void$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $void$ O $any$ O O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O O O O O O
'js' $ ( function ( ) { var models = window [ 's' ] . models ; console . log ( 's' ) ; var staticReportUrl = 's' ; var $customPageNavContainer = $ ( 's' ) ; var customPageNavReport ; var $reportPagesList = $ ( 's' ) ; var $prevButton = $ ( 's' ) ; var $nextButton = $ ( 's' ) ; var $cycleButton = $ ( 's' ) ; var cycleIntervalId ; function generateReportPage ( page ) { var $page = $ ( 's' ) . attr ( { type : 's' } ) . addClass ( 's' ) . data ( 's' , page ) . text ( page . displayName ) ; if ( page . isActive ) { $page . addClass ( 's' ) ; } return $page ; } function updateActivePage ( newPage ) { var reportButtons = $reportPagesList . children ( 's' ) ; reportButtons . each ( function ( index , element ) { var $element = $ ( element ) ; var buttonPage = $element . data ( 's' ) ; if ( buttonPage . isActive ) { buttonPage . isActive = false ; $element . removeClass ( 's' ) ; } } ) ; reportButtons . each ( function ( index , element ) { var $element = $ ( element ) ; var buttonPage = $element . data ( 's' ) ; if ( buttonPage . name === newPage . name ) { buttonPage . isActive = true ; $element . addClass ( 's' ) ; } } ) ; } function changePage ( forwards ) { var reportButtons = $reportPagesList . children ( 's' ) ; var $activeButtonIndex = - 0 ; reportButtons . each ( function ( index , element ) { var $element = $ ( element ) ; var buttonPage = $element . data ( 's' ) ; if ( buttonPage . isActive ) { $activeButtonIndex = index ; } } ) ; if ( forwards ) { $activeButtonIndex += 0 ; } else { $activeButtonIndex -= 0 ; } if ( $activeButtonIndex > reportButtons . length - 0 ) { $activeButtonIndex = 0 ; } if ( $activeButtonIndex < 0 ) { $activeButtonIndex = reportButtons . length - 0 ; } reportButtons . each ( function ( index , element ) { if ( $activeButtonIndex === index ) { var $element = $ ( element ) ; var buttonPage = $element . data ( 's' ) ; customPageNavReport . setPage ( buttonPage . name ) ; } } ) ; } $prevButton . on ( 's' , function ( event ) { changePage ( false ) ; } ) ; $nextButton . on ( 's' , function ( event ) { changePage ( true ) ; } ) ; $cycleButton . on ( 's' , function ( event ) { $cycleButton . toggleClass ( 's' ) ; $cycleButton . data ( 's' , ! $cycleButton . data ( 's' ) ) ; if ( $cycleButton . data ( 's' ) ) { cycleIntervalId = setInterval ( function ( ) { console . log ( 's' ) ; changePage ( true ) ; } , 0 ) ; } else { clearInterval ( cycleIntervalId ) ; } } ) ; $reportPagesList . on ( 's' , 's' , function ( event ) { var button = event . target ; var report = $ ( button ) . data ( 's' ) ; var page = $ ( button ) . data ( 's' ) ; console . log ( 's' , page . name ) ; customPageNavReport . setPage ( page . name ) . then ( function ( response ) { console . log ( 's' ) ; } ) ; } ) ; fetch ( staticReportUrl ) . then ( function ( response ) { if ( response . ok ) { return response . json ( ) . then ( function ( report ) { var embedConfig = $ . extend ( { settings : { filterPaneEnabled : false , navContentPaneEnabled : false } } , report ) ; customPageNavReport = powerbi . embed ( $customPageNavContainer . get ( 0 ) , embedConfig ) ; return customPageNavReport ; } ) ; } else { return response . json ( ) . then ( function ( error ) { throw new Error ( error ) ; } ) ; } } ) . then ( function ( report ) { report . on ( 's' , function ( event ) { console . log ( 's' ) ; report . getPages ( ) . then ( function ( pages ) { console . log ( 's' , pages ) ; if ( pages . length > 0 ) { const firstPage = pages [ 0 ] ; firstPage . isActive = true ; pages . map ( function ( page ) { return generateReportPage ( page ) ; } ) . forEach ( function ( element ) { $reportPagesList . append ( element ) ; } ) ; } } ) ; } ) ; report . on ( 's' , function ( event ) { console . log ( 's' , event ) ; } ) ; report . on ( 's' , function ( event ) { console . log ( 's' , event ) ; updateActivePage ( event . detail . newPage ) ; } ) ; } ) ; } ) ;	O $any$ O O O O O O $any$ O $complex$ O O O O $any$ O $Console$ O $void$ O O O O O $string$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O O $string$ O O O O O $any$ O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O O O O O O $any$ O O O $void$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O O O O O O $void$ O $any$ O O O $any$ O $any$ O $any$ O O O O O $number$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O $number$ O $any$ O O O O O O O $any$ O O $number$ O O O O O O $number$ O O O O O O $number$ O $any$ O $any$ O O O O $number$ O O O O O O $number$ O O O O $number$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $number$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O O $void$ O O O O O O O $any$ O $any$ O O O O O $any$ O O $void$ O O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O $number$ O O O O O $Console$ O $void$ O O O O $void$ O O O O O O O O O O O O $void$ O $any$ O O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O O $any$ O $any$ O $any$ O O $any$ O O O O $Console$ O $void$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O $Console$ O $void$ O O O O O O O O O O $Promise<Response>$ O $string$ O O O O O O $Response$ O O O O $Response$ O $boolean$ O O O $Response$ O $Promise<any>$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O $complex$ O O $boolean$ O O O $boolean$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O O O O O O $Response$ O $Promise<any>$ O O O O O O O $any$ O O O O $ErrorConstructor$ O $any$ O O O O O O O O O O O O O $any$ O O $any$ O $any$ O O O O O $any$ O O $Console$ O $void$ O O O O $any$ O $any$ O O O $any$ O O O $any$ O O $Console$ O $void$ O O O $any$ O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O O O O O $any$ O O $Console$ O $void$ O O O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O $Console$ O $void$ O O O $any$ O O $void$ O $any$ O $any$ O $any$ O O O O O O O O O O O
'js' $ ( function ( ) { var models = window [ 's' ] . models ; console . log ( 's' ) ; var reportUrl = 's' ; var $updateSettingsReport = $ ( 's' ) ; var updateSettingsReport ; var updateSettingsReportFilterPaneEnabled = false ; var updateSettingsReprotNavContentPaneEnabled = false ; var $toggleFilterPaneButton = $ ( 's' ) ; var $toggleNavContentPaneButton = $ ( 's' ) ; $toggleFilterPaneButton . on ( 's' , function ( ) { updateSettingsReportFilterPaneEnabled = ! updateSettingsReportFilterPaneEnabled ; updateSettingsReport . updateSettings ( { filterPaneEnabled : updateSettingsReportFilterPaneEnabled } ) ; } ) ; $toggleNavContentPaneButton . on ( 's' , function ( ) { updateSettingsReprotNavContentPaneEnabled = ! updateSettingsReprotNavContentPaneEnabled ; updateSettingsReport . updateSettings ( { navContentPaneEnabled : updateSettingsReprotNavContentPaneEnabled } ) ; } ) ; fetch ( reportUrl ) . then ( function ( response ) { if ( response . ok ) { return response . json ( ) . then ( function ( embedConfig ) { var updateSettingsEmbedConfig = $ . extend ( { } , embedConfig , { settings : { filterPaneEnabled : updateSettingsReportFilterPaneEnabled , navContentPaneEnabled : updateSettingsReprotNavContentPaneEnabled } } ) ; updateSettingsReport = powerbi . embed ( $updateSettingsReport . get ( 0 ) , updateSettingsEmbedConfig ) ; return updateSettingsReport ; } ) ; } else { return response . json ( ) . then ( function ( error ) { throw new Error ( error ) ; } ) ; } } ) ; } ) ;	O $any$ O O O O O O $any$ O $complex$ O O O O $any$ O $Console$ O $void$ O O O O O $string$ O O O O $any$ O $any$ O O O O O $any$ O O $boolean$ O O O O $boolean$ O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $boolean$ O O $boolean$ O $any$ O $any$ O O $boolean$ O $boolean$ O O O O O O $any$ O $any$ O O O O O O O $boolean$ O O $boolean$ O $any$ O $any$ O O $boolean$ O $boolean$ O O O O O O $Promise<Response>$ O $string$ O O O O O O $Response$ O O O O $Response$ O $boolean$ O O O $Response$ O $Promise<any>$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $complex$ O O $boolean$ O $boolean$ O $boolean$ O $boolean$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O O O O O O $Response$ O $Promise<any>$ O O O O O O O $any$ O O O O $ErrorConstructor$ O $any$ O O O O O O O O O O O O
'js' function _Embed_BasicEmbed ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedReportId = $ ( 's' ) . val ( ) ; var models = window [ 's' ] . models ; var permissions = models . Permissions . All ; var config = { type : 's' , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , id : txtEmbedReportId , permissions : permissions , settings : { filterPaneEnabled : true , navContentPaneEnabled : true } } ; var reportContainer = $ ( 's' ) [ 0 ] ; var report = powerbi . embed ( reportContainer , config ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; report . off ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; if ( event . detail . saveAs ) { Log . logText ( 's' ) ; } } ) ; } function _Mock_Embed_BasicEmbed ( isEdit ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedReportId = $ ( 's' ) . val ( ) ; var models = window [ 's' ] . models ; var permissions = models . Permissions . Copy | models . Permissions . Read ; var viewMode = isEdit ? models . ViewMode . Edit : models . ViewMode . View ; var config = { type : 's' , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , id : txtEmbedReportId , permissions : permissions , viewMode : viewMode , settings : { filterPaneEnabled : true , navContentPaneEnabled : true , useCustomSaveAsDialog : true } } ; var reportContainer = $ ( 's' ) [ 0 ] ; var report = powerbi . embed ( reportContainer , config ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; if ( event . detail . saveAs ) { Log . logText ( 's' ) ; } } ) ; } function _Mock_Embed_BasicEmbed_EditMode ( ) { _Mock_Embed_BasicEmbed ( true ) ; } function _Mock_Embed_BasicEmbed_ViewMode ( ) { _Mock_Embed_BasicEmbed ( false ) ; } function _Embed_BasicEmbed_EditMode ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedReportId = $ ( 's' ) . val ( ) ; var models = window [ 's' ] . models ; var config = { type : 's' , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , id : txtEmbedReportId , permissions : models . Permissions . All , viewMode : models . ViewMode . Edit , settings : { filterPaneEnabled : true , navContentPaneEnabled : true } } ; var reportContainer = $ ( 's' ) [ 0 ] ; var report = powerbi . embed ( reportContainer , config ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; if ( event . detail . saveAs ) { Log . logText ( 's' ) ; } } ) ; } function _Embed_EmbedWithDefaultFilter ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedReportId = $ ( 's' ) . val ( ) ; const filter = { $schema : "s" , target : { table : "s" , column : "s" } , operator : "s" , values : [ "s" ] } ; var embedConfiguration = { type : 's' , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , id : txtEmbedReportId , settings : { filterPaneEnabled : false , navContentPaneEnabled : false } , filters : [ filter ] } ; var reportContainer = document . getElementById ( 's' ) ; powerbi . embed ( reportContainer , embedConfiguration ) ; } function _Embed_Create ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedDatasetId = $ ( 's' ) . val ( ) ; var embedCreateConfiguration = { accessToken : txtAccessToken , embedUrl : txtEmbedUrl , datasetId : txtEmbedDatasetId , } ; var reportContainer = $ ( 's' ) [ 0 ] ; var report = powerbi . createReport ( reportContainer , embedCreateConfiguration ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; Log . logText ( 's' ) ; } ) ; } function _Mock_Embed_Create ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedDatasetId = $ ( 's' ) . val ( ) ; var embedCreateConfiguration = { accessToken : txtAccessToken , embedUrl : txtEmbedUrl , datasetId : txtEmbedDatasetId , settings : { useCustomSaveAsDialog : true } } ; var reportContainer = $ ( 's' ) [ 0 ] ; var report = powerbi . createReport ( reportContainer , embedCreateConfiguration ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; } ) ; } function _Report_GetId ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; var reportId = report . getId ( ) ; Log . logText ( reportId ) ; } function _Report_UpdateSettings ( ) { const newSettings = { navContentPaneEnabled : true , filterPaneEnabled : false } ; var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . updateSettings ( newSettings ) . then ( function ( result ) { $ ( "s" ) . html ( result ) ; } ) . catch ( function ( error ) { $ ( "s" ) . html ( error ) ; } ) ; } function _Report_GetPages ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . getPages ( ) . then ( function ( pages ) { pages . forEach ( function ( page ) { var log = page . name + "s" + page . displayName ; Log . logText ( log ) ; } ) ; } ) . catch ( function ( error ) { Log . log ( error ) ; } ) ; } function _Report_SetPage ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . setPage ( "s" ) . then ( function ( result ) { Log . log ( result ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { var page = event . detail . newPage ; Log . logText ( page . name + "s" + page . displayName ) ; } ) ; } function _Report_GetFilters ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . getFilters ( ) . then ( function ( filters ) { Log . log ( filters ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_SetFilters ( ) { const filter = { $schema : "s" , target : { table : "s" , column : "s" } , operator : "s" , values : [ "s" ] } ; var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . setFilters ( [ filter ] ) . then ( function ( result ) { Log . log ( result ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_RemoveFilters ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . removeFilters ( ) . then ( function ( result ) { Log . log ( result ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_PrintCurrentReport ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . print ( ) . then ( function ( result ) { Log . log ( result ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_Reload ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . reload ( ) . then ( function ( result ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_Refresh ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . refresh ( ) . then ( function ( result ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_FullScreen ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . fullscreen ( ) ; } function _Report_ExitFullScreen ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . exitFullscreen ( ) ; } function _Report_switchModeEdit ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . switchMode ( "s" ) ; } function _Report_switchModeView ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . switchMode ( "s" ) ; } function _Report_save ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . save ( ) ; } function _Mock_Report_save ( ) { Log . logText ( 's' ) ; } function _Report_saveAs ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; var saveAsParameters = { name : "s" } ; report . saveAs ( saveAsParameters ) ; } function _Page_SetActive ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . getPages ( ) . then ( function ( pages ) { pages [ 0 ] . setActive ( ) . then ( function ( result ) { Log . log ( result ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Page_GetFilters ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . getPages ( ) . then ( function ( pages ) { pages [ 0 ] . getFilters ( ) . then ( function ( filters ) { Log . log ( filters ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Page_SetFilters ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; const filter = { $schema : "s" , target : { table : "s" , column : "s" } , operator : "s" , values : [ "s" ] } ; report . getPages ( ) . then ( function ( pages ) { pages [ 0 ] . setFilters ( [ filter ] ) . then ( function ( result ) { Log . log ( result ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Page_RemoveFilters ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . getPages ( ) . then ( function ( pages ) { pages [ 0 ] . removeFilters ( ) . then ( function ( result ) { Log . log ( result ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Events_PageChanged ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { var page = event . detail . newPage ; Log . logText ( "s" + page . name + "s" + page . displayName ) ; } ) ; Log . logText ( "s" ) ; } function _Events_DataSelected ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { var data = event . detail ; Log . log ( data ) ; } ) ; Log . logText ( "s" ) ; } function _Events_SaveAsTriggered ( ) { var reportContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( reportContainer ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event ) ; } ) ; Log . logText ( "s" ) ; }	O O $complex$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $boolean$ O O O $boolean$ O O O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O O $complex$ O $any$ O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $number$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $number$ O $number$ O $any$ O $any$ O $complex$ O O $boolean$ O O O $boolean$ O O O $boolean$ O O O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O O $complex$ O O O $complex$ O O O O O O $complex$ O O O $complex$ O O O O O O $complex$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $boolean$ O O O $boolean$ O O O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O O $complex$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O $string$ O O O $string[]$ O O O O O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $boolean$ O O O $boolean$ O O O O $complex$ O O $complex$ O O O O $HTMLElement$ O $Document$ O $HTMLElement$ O O O O $any$ O $any$ O $HTMLElement$ O $complex$ O O O O $complex$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O $complex$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $boolean$ O O O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $complex$ O O O O $complex$ O O $boolean$ O O O $boolean$ O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O $any$ O O O $any$ O O $any$ O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O O O O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O O $string$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $string$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O $string$ O O O $string[]$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O $complex$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $complex$ O O O $any$ O $any$ O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O O $complex$ O O $string$ O O O O $any$ O $any$ O $complex$ O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O O O O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O O O O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O $string$ O O O $string[]$ O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O O O O $any$ O O $complex$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O O O O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O
'js' const mockDict = { _Report_GetPages : datasetNotSupported , _Report_SetPage : datasetNotSupported , _Report_SetFilters : datasetNotSupported , _Report_GetFilters : datasetNotSupported , _Report_RemoveFilters : datasetNotSupported , _Report_PrintCurrentReport : datasetNotSupported , _Report_UpdateSettings : datasetNotSupported , _Report_Reload : datasetNotSupported , _Page_SetActive : datasetNotSupported , _Page_SetFilters : datasetNotSupported , _Page_GetFilters : datasetNotSupported , _Page_RemoveFilters : datasetNotSupported , _Report_switchModeEdit : datasetNotSupported , _Report_switchModeView : datasetNotSupported , _Embed_BasicEmbed : _Mock_Embed_BasicEmbed_ViewMode , _Embed_BasicEmbed_EditMode : _Mock_Embed_BasicEmbed_EditMode , _Report_save : _Mock_Report_save , _Report_saveAs : _Mock_Report_save , _Embed_Create : _Mock_Embed_Create } ; function datasetNotSupported ( ) { Log . logText ( 's' ) } function IsSaveMock ( funcName ) { return ( ( funcName === 's' || funcName === 's' ) && ( _session . embedId === 's' || _session . embedId === 's' ) ) ; } function IsBasicMock ( funcName ) { return ( ( funcName === 's' || funcName === 's' ) && _session . embedId === 's' ) ; } function IsCreateMock ( funcName ) { return ( funcName === 's' && _session . embedId === 's' ) ; } function IsNotSupported ( funcName ) { if ( powerbi . embeds . length === 0 ) { return false } var embed = powerbi . get ( $ ( 's' ) [ 0 ] ) ; if ( embed . config . type !== 's' ) { return false ; } var runFunc = mockDict [ funcName ] ; return ( runFunc && runFunc === datasetNotSupported ) ? true : false ; } function IsMock ( funcName ) { return ( IsBasicMock ( funcName ) || IsSaveMock ( funcName ) || IsCreateMock ( funcName ) || IsNotSupported ( funcName ) ) ; } function mapFunc ( func ) { var funcName = getFuncName ( func ) ; return IsMock ( funcName ) ? mockDict [ funcName ] : func ; } function getFuncName ( func ) { var funcName = func . name ; if ( ! funcName ) { funcName = func . toString ( ) . match ( "s" ) [ 0 ] ; } return funcName ; }	O O O O O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O O O $complex$ O O O $any$ O $any$ O O O O O $complex$ O $any$ O O O O O $any$ O O O $any$ O O O O O ${}$ O $any$ O O O ${}$ O $any$ O O O O O O O $complex$ O $any$ O O O O O $any$ O O O $any$ O O O O ${}$ O $any$ O O O O O O $complex$ O $any$ O O O O $any$ O O O ${}$ O $any$ O O O O O O $complex$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O $any$ O O O O O O O O O $any$ O O O $any$ O O O O $any$ O $any$ O $complex$ O O O O O O O O $complex$ O $any$ O O O O $complex$ O $any$ O O $complex$ O $any$ O O $complex$ O $any$ O O $complex$ O $any$ O O O O O $complex$ O $any$ O O O $any$ O $complex$ O $any$ O O O $complex$ O $any$ O O O O $any$ O O $any$ O O O $complex$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O $any$ O O
'js' var sampleContentLoaded = false ; var documentationContentLoaded = false ; var anyReportSectionLoaded = false ; $ ( function ( ) { OpenSampleSection ( ) ; } ) ; function OpenSampleSection ( ) { OpenEmbedWorkspace ( "s" , "s" ) ; } function OpenAnyReportSection ( ) { OpenEmbedWorkspace ( "s" , "s" ) ; } function OpenEmbedWorkspace ( activeTabSelector , authStepHtml ) { if ( ! sampleContentLoaded ) { $ ( "s" ) . load ( "s" , function ( ) { $ ( "s" ) . load ( "s" ) ; sampleContentLoaded = true ; } ) ; } $ ( "s" ) . load ( authStepHtml ) ; SetActiveStyle ( activeTabSelector ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . show ( ) ; OpenAuthStep ( ) ; } function OpenDocumentationSection ( ) { if ( ! documentationContentLoaded ) { $ ( "s" ) . load ( "s" ) ; documentationContentLoaded = true ; } SetActiveStyle ( "s" ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . show ( ) ; } function SetActiveStyle ( id ) { $ ( "s" ) . removeClass ( "s" ) ; $ ( id ) . addClass ( "s" ) ; }	O O $boolean$ O O O O $boolean$ O O O O $boolean$ O O O $any$ O O O O O $complex$ O O O O O O O $complex$ O O O $complex$ O O O O O O O O $void$ O O O $complex$ O O O O O O O O $complex$ O $any$ O $any$ O O O O O $boolean$ O O $any$ O O O O $any$ O O O O O O O $any$ O O O O $any$ O O O O $boolean$ O O O O O O O $any$ O O O O $any$ O $any$ O O $complex$ O $any$ O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $void$ O O O O O $complex$ O O O O O O $boolean$ O O $any$ O O O O $any$ O O O O $boolean$ O O O O $complex$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O $complex$ O $any$ O O $any$ O O O O $any$ O O O O $any$ O $any$ O O $any$ O O O O O
'js' function InitLogger ( divId ) { var Logger = { } ; Logger . log = function name ( event ) { this . logText ( "s" + JSON . stringify ( event , null , "s" ) ) ; } ; Logger . logText = function name ( text ) { var textbox = document . getElementById ( divId ) ; if ( ! textbox . value ) { textbox . value = "s" ; } textbox . value += "s" + text + "s" ; textbox . scrollTop = textbox . scrollHeight ; } ; return Logger ; }	O O $complex$ O $any$ O O O $complex$ O O O O $complex$ O $void$ O O $void$ O $any$ O O O O $void$ O O O $JSON$ O $complex$ O $any$ O O O O O O O O O $complex$ O $void$ O O $void$ O $any$ O O O $HTMLElement$ O $Document$ O $HTMLElement$ O $any$ O O O O O $HTMLElement$ O $any$ O O $HTMLElement$ O $any$ O O O O $HTMLElement$ O $any$ O O O $any$ O O O $HTMLElement$ O $number$ O $HTMLElement$ O $number$ O O O O $complex$ O O
'js' const active_class = 's' ; const active_li = 's' ; const EmbedViewMode = "s" ; const EmbedEditMode = "s" ; const EmbedCreateMode = "s" ; function OpenAuthStep ( ) { $ ( 's' ) . removeClass ( active_class ) ; $ ( "s" ) . removeClass ( active_li ) ; $ ( "s" ) . addClass ( active_class ) ; $ ( "s" ) . addClass ( active_li ) ; $ ( "s" ) . show ( ) ; $ ( "s" ) . hide ( ) ; } function OpenEmbedStep ( mode ) { $ ( 's' ) . removeClass ( active_class ) ; $ ( "s" ) . removeClass ( active_li ) ; $ ( 's' ) . addClass ( active_class ) ; $ ( 's' ) . addClass ( active_li ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . show ( ) ; $ ( "s" ) . load ( "s" , function ( ) { OpenEmbedMode ( mode ) ; var reportContainer = $ ( "s" ) ; reportContainer . height ( reportContainer . width ( ) * 0 ) ; } ) ; } function OpenInteractStep ( ) { $ ( 's' ) . removeClass ( active_class ) ; $ ( "s" ) . removeClass ( active_li ) ; $ ( 's' ) . addClass ( active_class ) ; $ ( 's' ) . addClass ( active_li ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . show ( ) ; $ ( "s" ) . load ( "s" , function ( ) { SetToggleHandler ( "s" ) ; SetToggleHandler ( "s" ) ; SetToggleHandler ( "s" ) ; SetToggleHandler ( "s" ) ; LoadCodeArea ( "s" , _Report_GetId ) ; } ) ; } function setCodeArea ( mode ) { if ( mode === EmbedViewMode ) { LoadCodeArea ( "s" , _Embed_BasicEmbed ) ; } else if ( mode === EmbedEditMode ) { LoadCodeArea ( "s" , _Embed_BasicEmbed_EditMode ) ; } else if ( mode === EmbedCreateMode ) { LoadCodeArea ( "s" , _Embed_Create ) ; } } function showEmbedSettings ( mode ) { var inputDivToShow = "s" ; var inputDivToHide = "s" ; if ( mode === EmbedCreateMode ) { inputDivToShow = "s" ; inputDivToHide = "s" ; } $ ( inputDivToShow ) . show ( ) ; $ ( inputDivToHide ) . hide ( ) ; var embedModeRadios = $ ( 's' ) ; embedModeRadios . filter ( 's' + mode + 's' ) . prop ( 's' , true ) ; } function OpenEmbedMode ( mode ) { if ( mode == EmbedCreateMode ) { if ( IsEmbeddingSampleReport ( ) ) { LoadSampleDatasetIntoSession ( ) ; } SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" ) ; } else { if ( IsEmbeddingSampleReport ( ) ) { LoadSampleReportIntoSession ( ) ; } SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" ) ; } setCodeArea ( mode ) ; showEmbedSettings ( mode ) ; } function OpenViewMode ( ) { OpenEmbedMode ( EmbedViewMode ) ; } function OpenEditMode ( ) { OpenEmbedMode ( EmbedEditMode ) ; } function OpenCreateMode ( ) { OpenEmbedMode ( EmbedCreateMode ) ; } function IsEmbeddingSampleReport ( ) { return GetSession ( SessionKeys . IsSampleReport ) == true ; }	O O O O O O O O O O O O O O O O O O O O O O O O O O O $void$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O $void$ O $any$ O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O O $complex$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O O O O $void$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O O $complex$ O O O O $complex$ O O O O $complex$ O O O O $complex$ O O O O $complex$ O O O $complex$ O O O O O O O $complex$ O $any$ O O O O $any$ O O O O $complex$ O O O $complex$ O O O O O O $any$ O O O O $complex$ O O O $complex$ O O O O O O $any$ O O O O $complex$ O O O $complex$ O O O O O $complex$ O $any$ O O O $string$ O O O O $string$ O O O O O $any$ O O O O $string$ O O O $string$ O O O O $any$ O $string$ O O $any$ O O O $any$ O $string$ O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O O $any$ O O O O O O O O $complex$ O $any$ O O O O $any$ O O O O O O $complex$ O O O O $complex$ O O O O $complex$ O O O O O O O O O O O O O $complex$ O O O O $complex$ O O O O $complex$ O O O O O O O O O $complex$ O $any$ O O $complex$ O $any$ O O O O $complex$ O O O $complex$ O O O O O O $complex$ O O O $complex$ O O O O O O $complex$ O O O $complex$ O O O O O O $complex$ O O O O $complex$ O $complex$ O $string$ O O O O O
'js' var _session = { } ; const SessionKeys = { AccessToken : "s" , EmbedUrl : "s" , EmbedId : "s" , GroupId : "s" , IsSampleReport : "s" , QnaQuestion : "s" , EntityIsAlreadyEmbedded : "s" , } ; function GetParameterByName ( name , url ) { if ( ! url ) { url = window . location . href ; } name = name . replace ( "s" , "s" ) ; var regex = new RegExp ( "s" + name + "s" ) , results = regex . exec ( url ) ; if ( ! results ) return null ; if ( ! results [ 0 ] ) return 's' ; return decodeURIComponent ( results [ 0 ] . replace ( "s" , "s" ) ) ; } function SetSession ( key , value ) { _session [ key ] = value ; } function GetSession ( key ) { return _session [ key ] ; } function UpdateSession ( button , sessionKey ) { var value = $ ( button ) . val ( ) ; if ( value ) { SetSession ( sessionKey , value ) ; } } function SetTextBoxesFromSessionOrUrlParam ( accessTokenSelector , embedUrlSelector , embedIdSelector ) { var accessToken = GetParameterByName ( SessionKeys . AccessToken ) ; if ( ! accessToken ) { accessToken = GetSession ( SessionKeys . AccessToken ) ; } var embedUrl = GetParameterByName ( SessionKeys . EmbedUrl ) ; if ( ! embedUrl ) { embedUrl = GetSession ( SessionKeys . EmbedUrl ) ; } else { var groupId = GetParameterByName ( SessionKeys . GroupId ) ; if ( groupId ) { if ( embedUrl . indexOf ( "s" ) != - 0 ) { embedUrl += "s" + groupId ; } else { embedUrl += "s" + groupId ; } } } var embedId = GetParameterByName ( SessionKeys . EmbedId ) ; if ( ! embedId ) { embedId = GetSession ( SessionKeys . EmbedId ) ; } $ ( accessTokenSelector ) . val ( accessToken ) ; $ ( embedUrlSelector ) . val ( embedUrl ) ; $ ( embedIdSelector ) . val ( embedId ) ; }	O O ${}$ O O O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O O O $complex$ O $any$ O $any$ O O O O O $any$ O O $any$ O $complex$ O $Location$ O $string$ O O $any$ O $any$ O $any$ O O O O O O O $RegExp$ O O $RegExpConstructor$ O O O $any$ O O O O $RegExpExecArray$ O $RegExp$ O $RegExpExecArray$ O $any$ O O O O O $RegExpExecArray$ O O O O O O O $RegExpExecArray$ O O O O O O O O $string$ O $RegExpExecArray$ O O O O $complex$ O O O O O O O O O $complex$ O $any$ O $any$ O O ${}$ O $any$ O O $any$ O O O $complex$ O $any$ O O O ${}$ O $any$ O O O O $complex$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O O $any$ O O $complex$ O $any$ O $any$ O O O O O $complex$ O $any$ O $any$ O $any$ O O O $string$ O $complex$ O $complex$ O $string$ O O O O O $string$ O O $string$ O $complex$ O $complex$ O $string$ O O O O $string$ O $complex$ O $complex$ O $string$ O O O O O $string$ O O $string$ O $complex$ O $complex$ O $string$ O O O O O O $string$ O $complex$ O $complex$ O $string$ O O O O $string$ O O O O $string$ O $number$ O O O O O O O O $string$ O O O $string$ O O O O $string$ O O O $string$ O O O O O $string$ O $complex$ O $complex$ O $string$ O O O O O $string$ O O $string$ O $complex$ O $complex$ O $string$ O O O $any$ O $any$ O O $any$ O $string$ O O $any$ O $any$ O O $any$ O $string$ O O $any$ O $any$ O O $any$ O $string$ O O O
'js' const SampleReport = { AccessToken : "s" , EmbedUrl : "s" , EmbedId : "s" } ; const SampleDataset = { AccessToken : "s" , EmbedUrl : "s" , EmbedId : "s" } ; function LoadSampleReportIntoSession ( ) { setSession ( SampleReport . AccessToken , SampleReport . EmbedUrl , SampleReport . EmbedId ) ; } function LoadSampleDatasetIntoSession ( ) { setSession ( SampleDataset . AccessToken , SampleDataset . EmbedUrl , SampleDataset . EmbedId ) ; } function OpenEmbedStepWithSample ( ) { SetSession ( SessionKeys . IsSampleReport , true ) ; OpenEmbedStep ( EmbedViewMode ) ; } function OpenEmbedStepCreateWithSample ( ) { SetSession ( SessionKeys . IsSampleReport , true ) ; OpenEmbedStep ( EmbedCreateMode ) ; } function OpenEmbedStepFromUserSettings ( ) { SetSession ( SessionKeys . IsSampleReport , false ) ; OpenEmbedStep ( EmbedViewMode ) ; } function setSession ( accessToken , embedUrl , embedId ) { SetSession ( SessionKeys . AccessToken , accessToken ) ; SetSession ( SessionKeys . EmbedUrl , embedUrl ) ; SetSession ( SessionKeys . EmbedId , embedId ) ; }	O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O O O $complex$ O O O $complex$ O $complex$ O $string$ O $complex$ O $string$ O $complex$ O $string$ O O O O $complex$ O O O $complex$ O $complex$ O $string$ O $complex$ O $string$ O $complex$ O $string$ O O O O $void$ O O O $complex$ O $complex$ O $string$ O O O O $void$ O O O O O O $void$ O O O $complex$ O $complex$ O $string$ O O O O $void$ O O O O O O $void$ O O O $complex$ O $complex$ O $string$ O O O O $void$ O O O O O O $complex$ O $any$ O $any$ O $any$ O O $complex$ O $complex$ O $string$ O $any$ O O $complex$ O $complex$ O $string$ O $any$ O O $complex$ O $complex$ O $string$ O $any$ O O O
'js' function Report_GetId ( ) { SetCode ( _Report_GetId ) ; } function Report_UpdateSettings ( ) { SetCode ( _Report_UpdateSettings ) ; } function Report_GetPages ( ) { SetCode ( _Report_GetPages ) ; } function Report_SetPage ( ) { SetCode ( _Report_SetPage ) ; } function Report_GetFilters ( ) { SetCode ( _Report_GetFilters ) ; } function Report_SetFilters ( ) { SetCode ( _Report_SetFilters ) ; } function Report_RemoveFilters ( ) { SetCode ( _Report_RemoveFilters ) ; } function Report_PrintCurrentReport ( ) { SetCode ( _Report_PrintCurrentReport ) ; } function Report_Reload ( ) { SetCode ( _Report_Reload ) ; } function Report_Refresh ( ) { SetCode ( _Report_Refresh ) ; } function Report_FullScreen ( ) { SetCode ( _Report_FullScreen ) ; } function Report_ExitFullScreen ( ) { SetCode ( _Report_ExitFullScreen ) ; } function Page_SetActive ( ) { SetCode ( _Page_SetActive ) ; } function Page_GetFilters ( ) { SetCode ( _Page_GetFilters ) ; } function Page_SetFilters ( ) { SetCode ( _Page_SetFilters ) ; } function Page_RemoveFilters ( ) { SetCode ( _Page_RemoveFilters ) ; } function Events_PageChanged ( ) { SetCode ( _Events_PageChanged ) ; } function Events_DataSelected ( ) { SetCode ( _Events_DataSelected ) ; } function Events_SaveAsTriggered ( ) { SetCode ( _Events_SaveAsTriggered ) ; } function Report_switchModeEdit ( ) { SetCode ( _Report_switchModeEdit ) ; } function Report_switchModeView ( ) { SetCode ( _Report_switchModeView ) ; } function Report_save ( ) { SetCode ( _Report_save ) ; } function Report_saveAs ( ) { SetCode ( _Report_saveAs ) ; }	O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O
'js' function OpenReportOperations ( ) { $ ( "s" ) . show ( ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . addClass ( 's' ) ; $ ( 's' ) . removeClass ( 's' ) ; $ ( 's' ) . removeClass ( 's' ) ; $ ( 's' ) . removeClass ( 's' ) ; $ ( "s" ) . click ( ) $ ( "s" ) . html ( "s" ) ; } function OpenPageOperations ( ) { $ ( "s" ) . show ( ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . addClass ( 's' ) ; $ ( 's' ) . removeClass ( 's' ) ; $ ( 's' ) . removeClass ( 's' ) ; $ ( 's' ) . removeClass ( 's' ) ; $ ( "s" ) . click ( ) ; $ ( "s" ) . html ( "s" ) ; } function OpenEventOperations ( ) { $ ( "s" ) . hide ( ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . show ( ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . removeClass ( 's' ) ; $ ( 's' ) . removeClass ( 's' ) ; $ ( 's' ) . addClass ( 's' ) ; $ ( 's' ) . removeClass ( 's' ) ; $ ( "s" ) . click ( ) ; $ ( "s" ) . html ( "s" ) ; } function OpenEditAndSaveOperations ( ) { $ ( "s" ) . hide ( ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . show ( ) ; $ ( "s" ) . removeClass ( 's' ) ; $ ( 's' ) . removeClass ( 's' ) ; $ ( 's' ) . removeClass ( 's' ) ; $ ( 's' ) . addClass ( 's' ) ; $ ( "s" ) . click ( ) ; $ ( "s" ) . html ( "s" ) ; } function SetToggleHandler ( devId ) { var selector = "s" + devId + "s" ; $ ( selector ) . each ( function ( index , li ) { $ ( li ) . click ( function ( ) { $ ( selector ) . removeClass ( 's' ) ; $ ( li ) . addClass ( 's' ) ; } ) ; } ) ; }	O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $complex$ O $any$ O O O $string$ O O O $any$ O O O $any$ O $string$ O O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O $any$ O O O O O $any$ O $string$ O O $any$ O O O O $any$ O $any$ O O $any$ O O O O O O O O O O O
'js' function ValidateEmbedUrl ( embedUrl ) { var embedUrl = $ ( 's' ) . val ( ) ; if ( ! embedUrl ) { alert ( "s" ) ; return false ; } var id = null ; var parts = embedUrl . split ( "s" ) ; if ( parts && parts . length > 0 ) { var guidParts = parts [ parts . length - 0 ] . split ( "s" ) ; if ( guidParts && guidParts . length > 0 ) { id = guidParts [ 0 ] ; } } if ( ! id ) { alert ( "s" ) ; return false ; } return true ; } function BodyCodeOfFunction ( func ) { var lines = func . toString ( ) . split ( 's' ) ; lines = lines . slice ( 0 , lines . length - 0 ) ; for ( var i = 0 ; i < lines . length ; ++ i ) { lines [ i ] = lines [ i ] . substring ( 0 ) ; } return lines . join ( 's' ) ; } function LoadCodeArea ( divSelector , initialFunctionCode ) { $ ( divSelector ) . load ( "s" , function ( ) { SetCode ( initialFunctionCode ) ; } ) ; } function LoadLogWindow ( divSelector ) { $ ( divSelector ) . load ( "s" ) ; } function SetCode ( func ) { var codeHtml = 's' ; codeHtml = codeHtml + BodyCodeOfFunction ( func ) + 's' ; $ ( "s" ) . html ( codeHtml ) ; var runFunc = mapFunc ( func ) ; $ ( 's' ) . off ( 's' ) ; $ ( 's' ) . click ( runFunc ) ; } function CopyCode ( ) { CopyTextArea ( "s" , "s" ) ; } function CopyResponseWindow ( ) { CopyTextArea ( "s" , "s" ) ; } function CopyTextArea ( textAreaSelector , buttonSelector ) { $ ( textAreaSelector ) . select ( ) ; document . execCommand ( 's' ) ; window . getSelection ( ) . removeAllRanges ( ) ; $ ( buttonSelector ) . focus ( ) ; } function ClearTextArea ( textAreaSelector ) { $ ( textAreaSelector ) . val ( "s" ) ; }	O O $boolean$ O $any$ O O O $any$ O $any$ O O O O $any$ O O O O O O $any$ O O $void$ O O O O O O O O O $any$ O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O O $any$ O O $void$ O O O O O O O O O O O O O $complex$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $number$ O O O $number$ O $any$ O $any$ O O $number$ O O $any$ O $number$ O O $any$ O $number$ O O $any$ O O O O O O $any$ O $any$ O O O O O O $complex$ O $any$ O $any$ O O $any$ O $any$ O O $any$ O O O O O O O $complex$ O $any$ O O O O O O O $complex$ O $any$ O O $any$ O $any$ O O $any$ O O O O O O $complex$ O $any$ O O O $string$ O O O $string$ O $string$ O $complex$ O $any$ O O O O $any$ O O O O $any$ O $string$ O O O $any$ O $complex$ O $any$ O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $complex$ O O O $complex$ O O O O O O O O $complex$ O O O $complex$ O O O O O O O O $complex$ O $any$ O $any$ O O $any$ O $any$ O O $any$ O O O $Document$ O $boolean$ O O O O $complex$ O $Selection)$ O O O $void$ O O O $any$ O $any$ O O $any$ O O O O O $complex$ O $any$ O O $any$ O $any$ O O $any$ O O O O O
'js' ( function ( modules ) { var installedModules = { } ; function __webpack_require__ ( moduleId ) { if ( installedModules [ moduleId ] ) return installedModules [ moduleId ] . exports ; var module = installedModules [ moduleId ] = { exports : { } , id : moduleId , loaded : false } ; modules [ moduleId ] . call ( module . exports , module , module . exports , __webpack_require__ ) ; module . loaded = true ; return module . exports ; } __webpack_require__ . m = modules ; __webpack_require__ . c = installedModules ; __webpack_require__ . p = "s" ; return __webpack_require__ ( 0 ) ; } ) ( [ function ( module , exports , __webpack_require__ ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; var _core = __webpack_require__ ( 0 ) ; Object . keys ( _core ) . forEach ( function ( key ) { if ( key === "s" || key === "s" ) return ; Object . defineProperty ( exports , key , { enumerable : true , get : function get ( ) { return _core [ key ] ; } } ) ; } ) ; var _domready = __webpack_require__ ( 0 ) ; var 0 = _interopRequireDefault ( _domready ) ; var 0 = _interopRequireDefault ( _core ) ; var _dasherize = __webpack_require__ ( 0 ) ; var dasherize = _interopRequireWildcard ( _dasherize ) ; function _interopRequireWildcard ( obj ) { if ( obj && obj . __esModule ) { return obj ; } else { var newObj = { } ; if ( obj != null ) { for ( var key in obj ) { if ( Object . prototype . hasOwnProperty . call ( obj , key ) ) newObj [ key ] = obj [ key ] ; } } newObj . default = obj ; return newObj ; } } function _interopRequireDefault ( obj ) { return obj && obj . __esModule ? obj : { default : obj } ; } if ( false ) { require ( 's' ) ; } ( 0 , 0 . default ) ( function ( ) { return 0 . default . highlight ( dasherize . object ( window . syntaxhighlighterConfig || { } ) ) ; } ) ; } , function ( module , exports , __webpack_require__ ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; var optsParser = __webpack_require__ ( 0 ) , match = __webpack_require__ ( 0 ) , Renderer = __webpack_require__ ( 0 ) . default , utils = __webpack_require__ ( 0 ) , transformers = __webpack_require__ ( 0 ) , dom = __webpack_require__ ( 0 ) , config = __webpack_require__ ( 0 ) , defaults = __webpack_require__ ( 0 ) , HtmlScript = __webpack_require__ ( 0 ) ; var sh = { Match : match . Match , Highlighter : __webpack_require__ ( 0 ) , config : __webpack_require__ ( 0 ) , regexLib : __webpack_require__ ( 0 ) . commonRegExp , vars : { discoveredBrushes : null , highlighters : { } } , brushes : { } , findElements : function findElements ( globalParams , element ) { var elements = element ? [ element ] : utils . toArray ( document . getElementsByTagName ( sh . config . tagName ) ) , conf = sh . config , result = [ ] ; elements = elements . concat ( dom . getSyntaxHighlighterScriptTags ( ) ) ; if ( elements . length === 0 ) return result ; for ( var i = 0 , l = elements . length ; i < l ; i ++ ) { var item = { target : elements [ i ] , params : optsParser . defaults ( optsParser . parse ( elements [ i ] . className ) , globalParams ) } ; if ( item . params [ 's' ] == null ) continue ; result . push ( item ) ; } return result ; } , highlight : function highlight ( globalParams , element ) { var elements = sh . findElements ( globalParams , element ) , propertyName = 's' , brush = null , renderer , conf = sh . config ; if ( elements . length === 0 ) return ; for ( var i = 0 , l = elements . length ; i < l ; i ++ ) { var element = elements [ i ] , target = element . target , params = element . params , brushName = params . brush , brush , matches , code ; if ( brushName == null ) continue ; brush = findBrush ( brushName ) ; if ( ! brush ) continue ; params = optsParser . defaults ( params || { } , defaults ) ; params = optsParser . defaults ( params , config ) ; if ( params [ 's' ] == true || defaults [ 's' ] == true ) { brush = new HtmlScript ( findBrush ( 's' ) , brush ) ; brushName = 's' ; } else { brush = new brush ( ) ; } code = target [ propertyName ] ; if ( conf . useScriptTags ) code = stripCData ( code ) ; if ( ( target . title || 's' ) != 's' ) params . title = target . title ; params [ 's' ] = brushName ; code = transformers ( code , params ) ; matches = match . applyRegexList ( code , brush . regexList , params ) ; renderer = new Renderer ( code , matches , params ) ; element = dom . create ( 's' ) ; element . innerHTML = renderer . getHtml ( ) ; if ( params . quickCode ) dom . attachEvent ( dom . findElement ( element , 's' ) , 's' , dom . quickCodeHandler ) ; if ( ( target . id || 's' ) != 's' ) element . id = target . id ; target . parentNode . replaceChild ( element , target ) ; } } } ; function alert ( str ) { window . alert ( 's' + str ) ; } ; function findBrush ( alias , showAlert ) { var brushes = sh . vars . discoveredBrushes , result = null ; if ( brushes == null ) { brushes = { } ; for ( var brushName in sh . brushes ) { var brush = sh . brushes [ brushName ] , aliases = brush . aliases ; if ( aliases == null ) { continue ; } brush . className = brush . className || brush . aliases [ 0 ] ; brush . brushName = brush . className || brushName . toLowerCase ( ) ; for ( var i = 0 , l = aliases . length ; i < l ; i ++ ) { brushes [ aliases [ i ] ] = brushName ; } } sh . vars . discoveredBrushes = brushes ; } result = sh . brushes [ brushes [ alias ] ] ; if ( result == null && showAlert ) alert ( sh . config . strings . noBrush + alias ) ; return result ; } ; function stripCData ( original ) { var left = 's' , right = 's' , copy = utils . trim ( original ) , changed = false , leftLength = left . length , rightLength = right . length ; if ( copy . indexOf ( left ) == 0 ) { copy = copy . substring ( leftLength ) ; changed = true ; } var copyLength = copy . length ; if ( copy . indexOf ( right ) == copyLength - rightLength ) { copy = copy . substring ( 0 , copyLength - rightLength ) ; changed = true ; } return changed ? copy : original ; } ; var brushCounter = 0 ; exports . default = sh ; var registerBrush = exports . registerBrush = function registerBrush ( brush ) { return sh . brushes [ 's' + brushCounter ++ ] = brush . default || brush ; } ; var clearRegisteredBrushes = exports . clearRegisteredBrushes = function clearRegisteredBrushes ( ) { sh . brushes = { } ; brushCounter = 0 ; } ; registerBrush ( __webpack_require__ ( 0 ) ) ; } , function ( module , exports , __webpack_require__ ) { 's' ; var XRegExp = __webpack_require__ ( 0 ) . XRegExp ; var BOOLEANS = { 's' : true , 's' : false } ; function camelize ( key ) { return key . replace ( "s" , function ( match , word ) { return word . charAt ( 0 ) . toUpperCase ( ) + word . substr ( 0 ) ; } ) ; } function process ( value ) { var result = BOOLEANS [ value ] ; return result == null ? value : result ; } module . exports = { defaults : function defaults ( target , source ) { for ( var key in source || { } ) { if ( ! target . hasOwnProperty ( key ) ) target [ key ] = target [ camelize ( key ) ] = source [ key ] ; } return target ; } , parse : function parse ( str ) { var match , key , result = { } , arrayRegex = XRegExp ( "s" ) , pos = 0 , regex = XRegExp ( "s" + "s" + "s" + "s" + "s" + 's' + "s" + "s" , "s" ) ; while ( ( match = XRegExp . exec ( str , regex , pos ) ) != null ) { var value = match . value . replace ( "s" , 's' ) ; if ( value != null && arrayRegex . test ( value ) ) { var m = XRegExp . exec ( value , arrayRegex ) ; value = m . values . length > 0 ? m . values . split ( "s" ) : [ ] ; } value = process ( value ) ; result [ match . name ] = result [ camelize ( match . name ) ] = value ; pos = match . index + match [ 0 ] . length ; } return result ; } } ; } , function ( module , exports , __webpack_require__ ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; exports . commonRegExp = exports . XRegExp = undefined ; var _xregexp = __webpack_require__ ( 0 ) ; var 0 = _interopRequireDefault ( _xregexp ) ; function _interopRequireDefault ( obj ) { return obj && obj . __esModule ? obj : { default : obj } ; } exports . XRegExp = 0 . default ; var commonRegExp = exports . commonRegExp = { multiLineCComments : ( 0 , 0 . default ) ( 's' , 's' ) , singleLineCComments : "s" , singleLinePerlComments : "s" , doubleQuotedString : "s" , singleQuotedString : "s" , multiLineDoubleQuotedString : ( 0 , 0 . default ) ( 's' , 's' ) , multiLineSingleQuotedString : ( 0 , 0 . default ) ( "s" , 's' ) , xmlComments : ( 0 , 0 . default ) ( 's' , 's' ) , url : "s" , phpScriptTags : { left : "s" , right : "s" , 's' : true } , aspScriptTags : { left : "s" , right : "s" } , scriptScriptTags : { left : "s" , right : "s" } } ; } , function ( module , exports ) { 's' ; var REGEX_DATA = 's' ; var features = { astral : false , natives : false } ; var nativ = { exec : RegExp . prototype . exec , test : RegExp . prototype . test , match : String . prototype . match , replace : String . prototype . replace , split : String . prototype . split } ; var fixed = { } ; var regexCache = { } ; var patternCache = { } ; var tokens = [ ] ; var defaultScope = 's' ; var classScope = 's' ; var nativeTokens = { 's' : "s" , 's' : "s" } ; var replacementToken = "s" ; var correctExecNpcg = nativ . exec . call ( "s" , 's' ) [ 0 ] === undefined ; var hasNativeU = function ( ) { var isSupported = true ; try { new RegExp ( 's' , 's' ) ; } catch ( exception ) { isSupported = false ; } return isSupported ; } ( ) ; var hasNativeY = function ( ) { var isSupported = true ; try { new RegExp ( 's' , 's' ) ; } catch ( exception ) { isSupported = false ; } return isSupported ; } ( ) ; var hasFlagsProp = "s" . flags !== undefined ; var registeredFlags = { g : true , i : true , m : true , u : hasNativeU , y : hasNativeY } ; var toString = { } . toString ; function augment ( regex , captureNames , xSource , xFlags , isInternalOnly ) { var p ; regex [ REGEX_DATA ] = { captureNames : captureNames } ; if ( isInternalOnly ) { return regex ; } if ( regex . __proto__ ) { regex . __proto__ = XRegExp . prototype ; } else { for ( p in XRegExp . prototype ) { regex [ p ] = XRegExp . prototype [ p ] ; } } regex [ REGEX_DATA ] . source = xSource ; regex [ REGEX_DATA ] . flags = xFlags ? xFlags . split ( 's' ) . sort ( ) . join ( 's' ) : xFlags ; return regex ; } function clipDuplicates ( str ) { return nativ . replace . call ( str , "s" , 's' ) ; } function copyRegex ( regex , options ) { if ( ! XRegExp . isRegExp ( regex ) ) { throw new TypeError ( 's' ) ; } var xData = regex [ REGEX_DATA ] || { } , flags = getNativeFlags ( regex ) , flagsToAdd = 's' , flagsToRemove = 's' , xregexpSource = null , xregexpFlags = null ; options = options || { } ; if ( options . removeG ) { flagsToRemove += 's' ; } if ( options . removeY ) { flagsToRemove += 's' ; } if ( flagsToRemove ) { flags = nativ . replace . call ( flags , new RegExp ( 's' + flagsToRemove + 's' , 's' ) , 's' ) ; } if ( options . addG ) { flagsToAdd += 's' ; } if ( options . addY ) { flagsToAdd += 's' ; } if ( flagsToAdd ) { flags = clipDuplicates ( flags + flagsToAdd ) ; } if ( ! options . isInternalOnly ) { if ( xData . source !== undefined ) { xregexpSource = xData . source ; } if ( xData . flags != null ) { xregexpFlags = flagsToAdd ? clipDuplicates ( xData . flags + flagsToAdd ) : xData . flags ; } } regex = augment ( new RegExp ( regex . source , flags ) , hasNamedCapture ( regex ) ? xData . captureNames . slice ( 0 ) : null , xregexpSource , xregexpFlags , options . isInternalOnly ) ; return regex ; } function dec ( hex ) { return parseInt ( hex , 0 ) ; } function getNativeFlags ( regex ) { return hasFlagsProp ? regex . flags : nativ . exec . call ( "s" , RegExp . prototype . toString . call ( regex ) ) [ 0 ] ; } function hasNamedCapture ( regex ) { return ! ! ( regex [ REGEX_DATA ] && regex [ REGEX_DATA ] . captureNames ) ; } function hex ( dec ) { return parseInt ( dec , 0 ) . toString ( 0 ) ; } function indexOf ( array , value ) { var len = array . length , i ; for ( i = 0 ; i < len ; ++ i ) { if ( array [ i ] === value ) { return i ; } } return - 0 ; } function isType ( value , type ) { return toString . call ( value ) === 's' + type + 's' ; } function isQuantifierNext ( pattern , pos , flags ) { return nativ . test . call ( flags . indexOf ( 's' ) > - 0 ? "s" : "s" , pattern . slice ( pos ) ) ; } function 0 ( str ) { while ( str . length < 0 ) { str = 's' + str ; } return str ; } function prepareFlags ( pattern , flags ) { var i ; if ( clipDuplicates ( flags ) !== flags ) { throw new SyntaxError ( 's' + flags ) ; } pattern = nativ . replace . call ( pattern , "s" , function ( 0 , 0 ) { if ( nativ . test . call ( "s" , 0 ) ) { throw new SyntaxError ( 's' + 0 ) ; } flags = clipDuplicates ( flags + 0 ) ; return 's' ; } ) ; for ( i = 0 ; i < flags . length ; ++ i ) { if ( ! registeredFlags [ flags . charAt ( i ) ] ) { throw new SyntaxError ( 's' + flags . charAt ( i ) ) ; } } return { pattern : pattern , flags : flags } ; } function prepareOptions ( value ) { var options = { } ; if ( isType ( value , 's' ) ) { XRegExp . forEach ( value , "s" , function ( match ) { options [ match ] = true ; } ) ; return options ; } return value ; } function registerFlag ( flag ) { if ( ! "s" . test ( flag ) ) { throw new Error ( 's' ) ; } registeredFlags [ flag ] = true ; } function runTokens ( pattern , flags , pos , scope , context ) { var i = tokens . length , leadChar = pattern . charAt ( pos ) , result = null , match , t ; while ( i -- ) { t = tokens [ i ] ; if ( t . leadChar && t . leadChar !== leadChar || t . scope !== scope && t . scope !== 's' || t . flag && flags . indexOf ( t . flag ) === - 0 ) { continue ; } match = XRegExp . exec ( pattern , t . regex , pos , 's' ) ; if ( match ) { result = { matchLength : match [ 0 ] . length , output : t . handler . call ( context , match , scope , flags ) , reparse : t . reparse } ; break ; } } return result ; } function setAstral ( on ) { features . astral = on ; } function setNatives ( on ) { RegExp . prototype . exec = ( on ? fixed : nativ ) . exec ; RegExp . prototype . test = ( on ? fixed : nativ ) . test ; String . prototype . match = ( on ? fixed : nativ ) . match ; String . prototype . replace = ( on ? fixed : nativ ) . replace ; String . prototype . split = ( on ? fixed : nativ ) . split ; features . natives = on ; } function toObject ( value ) { if ( value == null ) { throw new TypeError ( 's' ) ; } return value ; } function XRegExp ( pattern , flags ) { var context = { hasNamedCapture : false , captureNames : [ ] } , scope = defaultScope , output = 's' , pos = 0 , result , token , generated , appliedPattern , appliedFlags ; if ( XRegExp . isRegExp ( pattern ) ) { if ( flags !== undefined ) { throw new TypeError ( 's' ) ; } return copyRegex ( pattern ) ; } pattern = pattern === undefined ? 's' : String ( pattern ) ; flags = flags === undefined ? 's' : String ( flags ) ; if ( XRegExp . isInstalled ( 's' ) && flags . indexOf ( 's' ) === - 0 ) { flags += 's' ; } if ( ! patternCache [ pattern ] ) { patternCache [ pattern ] = { } ; } if ( ! patternCache [ pattern ] [ flags ] ) { result = prepareFlags ( pattern , flags ) ; appliedPattern = result . pattern ; appliedFlags = result . flags ; while ( pos < appliedPattern . length ) { do { result = runTokens ( appliedPattern , appliedFlags , pos , scope , context ) ; if ( result && result . reparse ) { appliedPattern = appliedPattern . slice ( 0 , pos ) + result . output + appliedPattern . slice ( pos + result . matchLength ) ; } } while ( result && result . reparse ) ; if ( result ) { output += result . output ; pos += result . matchLength || 0 ; } else { token = XRegExp . exec ( appliedPattern , nativeTokens [ scope ] , pos , 's' ) [ 0 ] ; output += token ; pos += token . length ; if ( token === 's' && scope === defaultScope ) { scope = classScope ; } else if ( token === 's' && scope === classScope ) { scope = defaultScope ; } } } patternCache [ pattern ] [ flags ] = { pattern : nativ . replace . call ( output , "s" , 's' ) , flags : nativ . replace . call ( appliedFlags , "s" , 's' ) , captures : context . hasNamedCapture ? context . captureNames : null } ; } generated = patternCache [ pattern ] [ flags ] ; return augment ( new RegExp ( generated . pattern , generated . flags ) , generated . captures , pattern , flags ) ; } ; XRegExp . prototype = new RegExp ( ) ; XRegExp . version = 's' ; XRegExp . addToken = function ( regex , handler , options ) { options = options || { } ; var optionalFlags = options . optionalFlags , i ; if ( options . flag ) { registerFlag ( options . flag ) ; } if ( optionalFlags ) { optionalFlags = nativ . split . call ( optionalFlags , 's' ) ; for ( i = 0 ; i < optionalFlags . length ; ++ i ) { registerFlag ( optionalFlags [ i ] ) ; } } tokens . push ( { regex : copyRegex ( regex , { addG : true , addY : hasNativeY , isInternalOnly : true } ) , handler : handler , scope : options . scope || defaultScope , flag : options . flag , reparse : options . reparse , leadChar : options . leadChar } ) ; XRegExp . cache . flush ( 's' ) ; } ; XRegExp . cache = function ( pattern , flags ) { if ( ! regexCache [ pattern ] ) { regexCache [ pattern ] = { } ; } return regexCache [ pattern ] [ flags ] || ( regexCache [ pattern ] [ flags ] = XRegExp ( pattern , flags ) ) ; } ; XRegExp . cache . flush = function ( cacheName ) { if ( cacheName === 's' ) { patternCache = { } ; } else { regexCache = { } ; } } ; XRegExp . escape = function ( str ) { return nativ . replace . call ( toObject ( str ) , "s" , 's' ) ; } ; XRegExp . exec = function ( str , regex , pos , sticky ) { var cacheKey = 's' , addY = false , match , 0 ; addY = hasNativeY && ! ! ( sticky || regex . sticky && sticky !== false ) ; if ( addY ) { cacheKey += 's' ; } regex [ REGEX_DATA ] = regex [ REGEX_DATA ] || { } ; 0 = regex [ REGEX_DATA ] [ cacheKey ] || ( regex [ REGEX_DATA ] [ cacheKey ] = copyRegex ( regex , { addG : true , addY : addY , removeY : sticky === false , isInternalOnly : true } ) ) ; 0 . lastIndex = pos = pos || 0 ; match = fixed . exec . call ( 0 , str ) ; if ( sticky && match && match . index !== pos ) { match = null ; } if ( regex . global ) { regex . lastIndex = match ? 0 . lastIndex : 0 ; } return match ; } ; XRegExp . forEach = function ( str , regex , callback ) { var pos = 0 , i = - 0 , match ; while ( match = XRegExp . exec ( str , regex , pos ) ) { callback ( match , ++ i , str , regex ) ; pos = match . index + ( match [ 0 ] . length || 0 ) ; } } ; XRegExp . globalize = function ( regex ) { return copyRegex ( regex , { addG : true } ) ; } ; XRegExp . install = function ( options ) { options = prepareOptions ( options ) ; if ( ! features . astral && options . astral ) { setAstral ( true ) ; } if ( ! features . natives && options . natives ) { setNatives ( true ) ; } } ; XRegExp . isInstalled = function ( feature ) { return ! ! features [ feature ] ; } ; XRegExp . isRegExp = function ( value ) { return toString . call ( value ) === 's' ; } ; XRegExp . match = function ( str , regex , scope ) { var global = regex . global && scope !== 's' || scope === 's' , cacheKey = ( global ? 's' : 's' ) + ( regex . sticky ? 's' : 's' ) || 's' , result , 0 ; regex [ REGEX_DATA ] = regex [ REGEX_DATA ] || { } ; 0 = regex [ REGEX_DATA ] [ cacheKey ] || ( regex [ REGEX_DATA ] [ cacheKey ] = copyRegex ( regex , { addG : ! ! global , addY : ! ! regex . sticky , removeG : scope === 's' , isInternalOnly : true } ) ) ; result = nativ . match . call ( toObject ( str ) , 0 ) ; if ( regex . global ) { regex . lastIndex = scope === 's' && result ? result . index + result [ 0 ] . length : 0 ; } return global ? result || [ ] : result && result [ 0 ] ; } ; XRegExp . matchChain = function ( str , chain ) { return function recurseChain ( values , level ) { var item = chain [ level ] . regex ? chain [ level ] : { regex : chain [ level ] } , matches = [ ] , addMatch = function addMatch ( match ) { if ( item . backref ) { if ( ! ( match . hasOwnProperty ( item . backref ) || + item . backref < match . length ) ) { throw new ReferenceError ( 's' + item . backref ) ; } matches . push ( match [ item . backref ] || 's' ) ; } else { matches . push ( match [ 0 ] ) ; } } , i ; for ( i = 0 ; i < values . length ; ++ i ) { XRegExp . forEach ( values [ i ] , item . regex , addMatch ) ; } return level === chain . length - 0 || ! matches . length ? matches : recurseChain ( matches , level + 0 ) ; } ( [ str ] , 0 ) ; } ; XRegExp . replace = function ( str , search , replacement , scope ) { var isRegex = XRegExp . isRegExp ( search ) , global = search . global && scope !== 's' || scope === 's' , cacheKey = ( global ? 's' : 's' ) + ( search . sticky ? 's' : 's' ) || 's' , 0 = search , result ; if ( isRegex ) { search [ REGEX_DATA ] = search [ REGEX_DATA ] || { } ; 0 = search [ REGEX_DATA ] [ cacheKey ] || ( search [ REGEX_DATA ] [ cacheKey ] = copyRegex ( search , { addG : ! ! global , addY : ! ! search . sticky , removeG : scope === 's' , isInternalOnly : true } ) ) ; } else if ( global ) { 0 = new RegExp ( XRegExp . escape ( String ( search ) ) , 's' ) ; } result = fixed . replace . call ( toObject ( str ) , 0 , replacement ) ; if ( isRegex && search . global ) { search . lastIndex = 0 ; } return result ; } ; XRegExp . replaceEach = function ( str , replacements ) { var i , r ; for ( i = 0 ; i < replacements . length ; ++ i ) { r = replacements [ i ] ; str = XRegExp . replace ( str , r [ 0 ] , r [ 0 ] , r [ 0 ] ) ; } return str ; } ; XRegExp . split = function ( str , separator , limit ) { return fixed . split . call ( toObject ( str ) , separator , limit ) ; } ; XRegExp . test = function ( str , regex , pos , sticky ) { return ! ! XRegExp . exec ( str , regex , pos , sticky ) ; } ; XRegExp . uninstall = function ( options ) { options = prepareOptions ( options ) ; if ( features . astral && options . astral ) { setAstral ( false ) ; } if ( features . natives && options . natives ) { setNatives ( false ) ; } } ; XRegExp . union = function ( patterns , flags ) { var parts = "s" , output = [ ] , numCaptures = 0 , numPriorCaptures , captureNames , pattern , rewrite = function rewrite ( match , paren , backref ) { var name = captureNames [ numCaptures - numPriorCaptures ] ; if ( paren ) { ++ numCaptures ; if ( name ) { return 's' + name + 's' ; } } else if ( backref ) { return 's' + ( + backref + numPriorCaptures ) ; } return match ; } , i ; if ( ! ( isType ( patterns , 's' ) && patterns . length ) ) { throw new TypeError ( 's' ) ; } for ( i = 0 ; i < patterns . length ; ++ i ) { pattern = patterns [ i ] ; if ( XRegExp . isRegExp ( pattern ) ) { numPriorCaptures = numCaptures ; captureNames = pattern [ REGEX_DATA ] && pattern [ REGEX_DATA ] . captureNames || [ ] ; output . push ( nativ . replace . call ( XRegExp ( pattern . source ) . source , parts , rewrite ) ) ; } else { output . push ( XRegExp . escape ( pattern ) ) ; } } return XRegExp ( output . join ( 's' ) , flags ) ; } ; fixed . exec = function ( str ) { var origLastIndex = this . lastIndex , match = nativ . exec . apply ( this , arguments ) , name , 0 , i ; if ( match ) { if ( ! correctExecNpcg && match . length > 0 && indexOf ( match , 's' ) > - 0 ) { 0 = copyRegex ( this , { removeG : true , isInternalOnly : true } ) ; nativ . replace . call ( String ( str ) . slice ( match . index ) , 0 , function ( ) { var len = arguments . length , i ; for ( i = 0 ; i < len - 0 ; ++ i ) { if ( arguments [ i ] === undefined ) { match [ i ] = undefined ; } } } ) ; } if ( this [ REGEX_DATA ] && this [ REGEX_DATA ] . captureNames ) { for ( i = 0 ; i < match . length ; ++ i ) { name = this [ REGEX_DATA ] . captureNames [ i - 0 ] ; if ( name ) { match [ name ] = match [ i ] ; } } } if ( this . global && ! match [ 0 ] . length && this . lastIndex > match . index ) { this . lastIndex = match . index ; } } if ( ! this . global ) { this . lastIndex = origLastIndex ; } return match ; } ; fixed . test = function ( str ) { return ! ! fixed . exec . call ( this , str ) ; } ; fixed . match = function ( regex ) { var result ; if ( ! XRegExp . isRegExp ( regex ) ) { regex = new RegExp ( regex ) ; } else if ( regex . global ) { result = nativ . match . apply ( this , arguments ) ; regex . lastIndex = 0 ; return result ; } return fixed . exec . call ( regex , toObject ( this ) ) ; } ; fixed . replace = function ( search , replacement ) { var isRegex = XRegExp . isRegExp ( search ) , origLastIndex , captureNames , result ; if ( isRegex ) { if ( search [ REGEX_DATA ] ) { captureNames = search [ REGEX_DATA ] . captureNames ; } origLastIndex = search . lastIndex ; } else { search += 's' ; } if ( isType ( replacement , 's' ) ) { result = nativ . replace . call ( String ( this ) , search , function ( ) { var args = arguments , i ; if ( captureNames ) { args [ 0 ] = new String ( args [ 0 ] ) ; for ( i = 0 ; i < captureNames . length ; ++ i ) { if ( captureNames [ i ] ) { args [ 0 ] [ captureNames [ i ] ] = args [ i + 0 ] ; } } } if ( isRegex && search . global ) { search . lastIndex = args [ args . length - 0 ] + args [ 0 ] . length ; } return replacement . apply ( undefined , args ) ; } ) ; } else { result = nativ . replace . call ( this == null ? this : String ( this ) , search , function ( ) { var args = arguments ; return nativ . replace . call ( String ( replacement ) , replacementToken , function ( 0 , 0 , 0 ) { var n ; if ( 0 ) { n = + 0 ; if ( n <= args . length - 0 ) { return args [ n ] || 's' ; } n = captureNames ? indexOf ( captureNames , 0 ) : - 0 ; if ( n < 0 ) { throw new SyntaxError ( 's' + 0 ) ; } return args [ n + 0 ] || 's' ; } if ( 0 === 's' ) { return 's' ; } if ( 0 === 's' || + 0 === 0 ) { return args [ 0 ] ; } if ( 0 === 's' ) { return args [ args . length - 0 ] . slice ( 0 , args [ args . length - 0 ] ) ; } if ( 0 === "s" ) { return args [ args . length - 0 ] . slice ( args [ args . length - 0 ] + args [ 0 ] . length ) ; } 0 = + 0 ; if ( ! isNaN ( 0 ) ) { if ( 0 > args . length - 0 ) { throw new SyntaxError ( 's' + 0 ) ; } return args [ 0 ] || 's' ; } throw new SyntaxError ( 's' + 0 ) ; } ) ; } ) ; } if ( isRegex ) { if ( search . global ) { search . lastIndex = 0 ; } else { search . lastIndex = origLastIndex ; } } return result ; } ; fixed . split = function ( separator , limit ) { if ( ! XRegExp . isRegExp ( separator ) ) { return nativ . split . apply ( this , arguments ) ; } var str = String ( this ) , output = [ ] , origLastIndex = separator . lastIndex , lastLastIndex = 0 , lastLength ; limit = ( limit === undefined ? - 0 : limit ) >>> 0 ; XRegExp . forEach ( str , separator , function ( match ) { if ( match . index + match [ 0 ] . length > lastLastIndex ) { output . push ( str . slice ( lastLastIndex , match . index ) ) ; if ( match . length > 0 && match . index < str . length ) { Array . prototype . push . apply ( output , match . slice ( 0 ) ) ; } lastLength = match [ 0 ] . length ; lastLastIndex = match . index + lastLength ; } } ) ; if ( lastLastIndex === str . length ) { if ( ! nativ . test . call ( separator , 's' ) || lastLength ) { output . push ( 's' ) ; } } else { output . push ( str . slice ( lastLastIndex ) ) ; } separator . lastIndex = origLastIndex ; return output . length > limit ? output . slice ( 0 , limit ) : output ; } ; XRegExp . addToken ( "s" , function ( match , scope ) { if ( match [ 0 ] === 's' && scope === defaultScope ) { return match [ 0 ] ; } throw new SyntaxError ( 's' + match [ 0 ] ) ; } , { scope : 's' , leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match , scope , flags ) { var code = dec ( match [ 0 ] ) ; if ( code > 0 ) { throw new SyntaxError ( 's' + match [ 0 ] ) ; } if ( code <= 0 ) { return 's' + 0 ( hex ( code ) ) ; } if ( hasNativeU && flags . indexOf ( 's' ) > - 0 ) { return match [ 0 ] ; } throw new SyntaxError ( 's' ) ; } , { scope : 's' , leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match ) { return match [ 0 ] ? 's' : 's' ; } , { leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match , scope , flags ) { return isQuantifierNext ( match . input , match . index + match [ 0 ] . length , flags ) ? 's' : 's' ; } , { leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match , scope , flags ) { return isQuantifierNext ( match . input , match . index + match [ 0 ] . length , flags ) ? 's' : 's' ; } , { flag : 's' } ) ; XRegExp . addToken ( "s" , function ( ) { return 's' ; } , { flag : 's' , leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match ) { var index = isNaN ( match [ 0 ] ) ? indexOf ( this . captureNames , match [ 0 ] ) + 0 : + match [ 0 ] , endIndex = match . index + match [ 0 ] . length ; if ( ! index || index > this . captureNames . length ) { throw new SyntaxError ( 's' + match [ 0 ] ) ; } return 's' + index + ( endIndex === match . input . length || isNaN ( match . input . charAt ( endIndex ) ) ? 's' : 's' ) ; } , { leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match , scope ) { if ( ! ( scope === defaultScope && "s" . test ( match [ 0 ] ) && + match [ 0 ] <= this . captureNames . length ) && match [ 0 ] !== 's' ) { throw new SyntaxError ( 's' + match [ 0 ] ) ; } return match [ 0 ] ; } , { scope : 's' , leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match ) { if ( ! isNaN ( match [ 0 ] ) ) { throw new SyntaxError ( 's' + match [ 0 ] ) ; } if ( match [ 0 ] === 's' || match [ 0 ] === 's' ) { throw new SyntaxError ( 's' + match [ 0 ] ) ; } if ( indexOf ( this . captureNames , match [ 0 ] ) > - 0 ) { throw new SyntaxError ( 's' + match [ 0 ] ) ; } this . captureNames . push ( match [ 0 ] ) ; this . hasNamedCapture = true ; return 's' ; } , { leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match , scope , flags ) { if ( flags . indexOf ( 's' ) > - 0 ) { return 's' ; } this . captureNames . push ( null ) ; return 's' ; } , { optionalFlags : 's' , leadChar : 's' } ) ; module . exports = XRegExp ; } , function ( module , exports , __webpack_require__ ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; var _match = __webpack_require__ ( 0 ) ; Object . keys ( _match ) . forEach ( function ( key ) { if ( key === "s" || key === "s" ) return ; Object . defineProperty ( exports , key , { enumerable : true , get : function get ( ) { return _match [ key ] ; } } ) ; } ) ; var _applyRegexList = __webpack_require__ ( 0 ) ; Object . keys ( _applyRegexList ) . forEach ( function ( key ) { if ( key === "s" || key === "s" ) return ; Object . defineProperty ( exports , key , { enumerable : true , get : function get ( ) { return _applyRegexList [ key ] ; } } ) ; } ) ; } , function ( module , exports ) { "s" ; Object . defineProperty ( exports , "s" , { value : true } ) ; var _createClass = function ( ) { function defineProperties ( target , props ) { for ( var i = 0 ; i < props . length ; i ++ ) { var descriptor = props [ i ] ; descriptor . enumerable = descriptor . enumerable || false ; descriptor . configurable = true ; if ( "s" in descriptor ) descriptor . writable = true ; Object . defineProperty ( target , descriptor . key , descriptor ) ; } } return function ( Constructor , protoProps , staticProps ) { if ( protoProps ) defineProperties ( Constructor . prototype , protoProps ) ; if ( staticProps ) defineProperties ( Constructor , staticProps ) ; return Constructor ; } ; } ( ) ; function _classCallCheck ( instance , Constructor ) { if ( ! ( instance instanceof Constructor ) ) { throw new TypeError ( "s" ) ; } } var Match = exports . Match = function ( ) { function Match ( value , index , css ) { _classCallCheck ( this , Match ) ; this . value = value ; this . index = index ; this . length = value . length ; this . css = css ; this . brushName = null ; } _createClass ( Match , [ { key : "s" , value : function toString ( ) { return this . value ; } } ] ) ; return Match ; } ( ) ; } , function ( module , exports , __webpack_require__ ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; var _typeof = typeof Symbol === "s" && typeof Symbol . iterator === "s" ? function ( obj ) { return typeof obj ; } : function ( obj ) { return obj && typeof Symbol === "s" && obj . constructor === Symbol && obj !== Symbol . prototype ? "s" : typeof obj ; } ; exports . applyRegexList = applyRegexList ; var _matches = __webpack_require__ ( 0 ) ; function applyRegexList ( code , regexList ) { var result = [ ] ; regexList = regexList || [ ] ; for ( var i = 0 , l = regexList . length ; i < l ; i ++ ) { if ( _typeof ( regexList [ i ] ) === 's' ) result = result . concat ( ( 0 , _matches . find ) ( code , regexList [ i ] ) ) ; } result = ( 0 , _matches . sort ) ( result ) ; result = ( 0 , _matches . removeNested ) ( result ) ; result = ( 0 , _matches . compact ) ( result ) ; return result ; } } , function ( module , exports , __webpack_require__ ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; exports . find = find ; exports . sort = sort ; exports . compact = compact ; exports . removeNested = removeNested ; var _match = __webpack_require__ ( 0 ) ; var _syntaxhighlighterRegex = __webpack_require__ ( 0 ) ; function find ( code , regexInfo ) { function defaultAdd ( match , regexInfo ) { return match [ 0 ] ; } ; var index = 0 , match = null , matches = [ ] , process = regexInfo . func ? regexInfo . func : defaultAdd , pos = 0 ; while ( match = _syntaxhighlighterRegex . XRegExp . exec ( code , regexInfo . regex , pos ) ) { var resultMatch = process ( match , regexInfo ) ; if ( typeof resultMatch === 's' ) resultMatch = [ new _match . Match ( resultMatch , match . index , regexInfo . css ) ] ; matches = matches . concat ( resultMatch ) ; pos = match . index + match [ 0 ] . length ; } return matches ; } ; function sort ( matches ) { function sortMatchesCallback ( 0 , 0 ) { if ( 0 . index < 0 . index ) return - 0 ; else if ( 0 . index > 0 . index ) return 0 ; else { if ( 0 . length < 0 . length ) return - 0 ; else if ( 0 . length > 0 . length ) return 0 ; } return 0 ; } return matches . sort ( sortMatchesCallback ) ; } function compact ( matches ) { var result = [ ] , i , l ; for ( i = 0 , l = matches . length ; i < l ; i ++ ) { if ( matches [ i ] ) result . push ( matches [ i ] ) ; } return result ; } function removeNested ( matches ) { for ( var i = 0 , l = matches . length ; i < l ; i ++ ) { if ( matches [ i ] === null ) continue ; var itemI = matches [ i ] , itemIEndPos = itemI . index + itemI . length ; for ( var j = i + 0 , l = matches . length ; j < l && matches [ i ] !== null ; j ++ ) { var itemJ = matches [ j ] ; if ( itemJ === null ) continue ; else if ( itemJ . index > itemIEndPos ) break ; else if ( itemJ . index == itemI . index && itemJ . length > itemI . length ) matches [ i ] = null ; else if ( itemJ . index >= itemI . index && itemJ . index < itemIEndPos ) matches [ j ] = null ; } } return matches ; } } , function ( module , exports ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; exports . default = Renderer ; function padNumber ( number , length ) { var result = number . toString ( ) ; while ( result . length < length ) { result = 's' + result ; } return result ; } ; function getLines ( str ) { return str . split ( "s" ) ; } function getLinesToHighlight ( opts ) { var results = { } , linesToHighlight , l , i ; linesToHighlight = opts . highlight || [ ] ; if ( typeof linesToHighlight . push !== 's' ) linesToHighlight = [ linesToHighlight ] ; for ( i = 0 , l = linesToHighlight . length ; i < l ; i ++ ) { results [ linesToHighlight [ i ] ] = true ; } return results ; } function Renderer ( code , matches , opts ) { var _this = this ; _this . opts = opts ; _this . code = code ; _this . matches = matches ; _this . lines = getLines ( code ) ; _this . linesToHighlight = getLinesToHighlight ( opts ) ; } Renderer . prototype = { wrapLinesWithCode : function wrapLinesWithCode ( str , css ) { if ( str == null || str . length == 0 || str == 's' || css == null ) return str ; var _this = this , results = [ ] , lines , line , spaces , i , l ; str = str . replace ( "s" , 's' ) ; str = str . replace ( "s" , function ( m ) { spaces = 's' ; for ( i = 0 , l = m . length ; i < l - 0 ; i ++ ) { spaces += _this . opts . space ; } return spaces + 's' ; } ) ; lines = getLines ( str ) ; for ( i = 0 , l = lines . length ; i < l ; i ++ ) { line = lines [ i ] ; spaces = 's' ; if ( line . length > 0 ) { line = line . replace ( "s" , function ( s ) { spaces = s ; return 's' ; } ) ; line = line . length === 0 ? spaces : spaces + 's' + css + 's' + line + 's' ; } results . push ( line ) ; } return results . join ( 's' ) ; } , processUrls : function processUrls ( code ) { var gt = "s" , url = "s" ; return code . replace ( url , function ( m ) { var suffix = 's' , match = null ; if ( match = gt . exec ( m ) ) { m = match [ 0 ] ; suffix = match [ 0 ] ; } return 's' + m + 's' + m + 's' + suffix ; } ) ; } , figureOutLineNumbers : function figureOutLineNumbers ( code ) { var lineNumbers = [ ] , lines = this . lines , firstLine = parseInt ( this . opts . firstLine || 0 ) , i , l ; for ( i = 0 , l = lines . length ; i < l ; i ++ ) { lineNumbers . push ( i + firstLine ) ; } return lineNumbers ; } , wrapLine : function wrapLine ( lineIndex , lineNumber , lineHtml ) { var classes = [ 's' , 's' + lineNumber , 's' + lineIndex , 's' + ( lineNumber % 0 == 0 ? 0 : 0 ) . toString ( ) ] ; if ( this . linesToHighlight [ lineNumber ] ) classes . push ( 's' ) ; if ( lineNumber == 0 ) classes . push ( 's' ) ; return 's' + classes . join ( 's' ) + 's' + lineHtml + 's' ; } , renderLineNumbers : function renderLineNumbers ( code , lineNumbers ) { var _this = this , opts = _this . opts , html = 's' , count = _this . lines . length , firstLine = parseInt ( opts . firstLine || 0 ) , pad = opts . padLineNumbers , lineNumber , i ; if ( pad == true ) pad = ( firstLine + count - 0 ) . toString ( ) . length ; else if ( isNaN ( pad ) == true ) pad = 0 ; for ( i = 0 ; i < count ; i ++ ) { lineNumber = lineNumbers ? lineNumbers [ i ] : firstLine + i ; code = lineNumber == 0 ? opts . space : padNumber ( lineNumber , pad ) ; html += _this . wrapLine ( i , lineNumber , code ) ; } return html ; } , getCodeLinesHtml : function getCodeLinesHtml ( html , lineNumbers ) { var _this = this , opts = _this . opts , lines = getLines ( html ) , padLength = opts . padLineNumbers , firstLine = parseInt ( opts . firstLine || 0 ) , brushName = opts . brush , html = 's' ; for ( var i = 0 , l = lines . length ; i < l ; i ++ ) { var line = lines [ i ] , indent = "s" . exec ( line ) , spaces = null , lineNumber = lineNumbers ? lineNumbers [ i ] : firstLine + i ; ; if ( indent != null ) { spaces = indent [ 0 ] . toString ( ) ; line = line . substr ( spaces . length ) ; spaces = spaces . replace ( 's' , opts . space ) ; } if ( line . length == 0 ) line = opts . space ; html += _this . wrapLine ( i , lineNumber , ( spaces != null ? 's' + brushName + 's' + spaces + 's' : 's' ) + line ) ; } return html ; } , getTitleHtml : function getTitleHtml ( title ) { return title ? 's' + title + 's' : 's' ; } , getMatchesHtml : function getMatchesHtml ( code , matches ) { function getBrushNameCss ( match ) { var result = match ? match . brushName || brushName : brushName ; return result ? result + 's' : 's' ; } ; var _this = this , pos = 0 , result = 's' , brushName = _this . opts . brush || 's' , match , matchBrushName , i , l ; for ( i = 0 , l = matches . length ; i < l ; i ++ ) { match = matches [ i ] ; if ( match === null || match . length === 0 ) continue ; matchBrushName = getBrushNameCss ( match ) ; result += _this . wrapLinesWithCode ( code . substr ( pos , match . index - pos ) , matchBrushName + 's' ) + _this . wrapLinesWithCode ( match . value , matchBrushName + match . css ) ; pos = match . index + match . length + ( match . offset || 0 ) ; } result += _this . wrapLinesWithCode ( code . substr ( pos ) , getBrushNameCss ( ) + 's' ) ; return result ; } , getHtml : function getHtml ( ) { var _this = this , opts = _this . opts , code = _this . code , matches = _this . matches , classes = [ 's' ] , lineNumbers , gutter , html ; if ( opts . collapse === true ) classes . push ( 's' ) ; gutter = opts . gutter !== false ; if ( ! gutter ) classes . push ( 's' ) ; classes . push ( opts . className ) ; classes . push ( opts . brush ) ; if ( gutter ) lineNumbers = _this . figureOutLineNumbers ( code ) ; html = _this . getMatchesHtml ( code , matches ) ; html = _this . getCodeLinesHtml ( html , lineNumbers ) ; if ( opts . autoLinks ) html = _this . processUrls ( html ) ; html = 's' + classes . join ( 's' ) + 's' + _this . getTitleHtml ( opts . title ) + 's' + ( gutter ? 's' + _this . renderLineNumbers ( code ) + 's' : 's' ) + 's' + html + 's' ; return html ; } } ; } , function ( module , exports ) { 's' ; function splitLines ( block ) { return block . split ( "s" ) ; } function eachLine ( str , callback ) { var lines = splitLines ( str ) ; for ( var i = 0 , l = lines . length ; i < l ; i ++ ) { lines [ i ] = callback ( lines [ i ] , i ) ; } return lines . join ( 's' ) ; } function guid ( prefix ) { return ( prefix || 's' ) + Math . round ( Math . random ( ) * 0 ) . toString ( ) ; } function merge ( 0 , 0 ) { var result = { } , name ; for ( name in 0 ) { result [ name ] = 0 [ name ] ; } for ( name in 0 ) { result [ name ] = 0 [ name ] ; } return result ; } function trim ( str ) { return str . replace ( "s" , 's' ) ; } function toArray ( source ) { return Array . prototype . slice . apply ( source ) ; } function toBoolean ( value ) { var result = { "s" : true , "s" : false } [ value ] ; return result == null ? value : result ; } module . exports = { splitLines : splitLines , eachLine : eachLine , guid : guid , merge : merge , trim : trim , toArray : toArray , toBoolean : toBoolean } ; } , function ( module , exports , __webpack_require__ ) { 's' ; var trim = __webpack_require__ ( 0 ) , bloggerMode = __webpack_require__ ( 0 ) , stripBrs = __webpack_require__ ( 0 ) , unindenter = __webpack_require__ ( 0 ) , retabber = __webpack_require__ ( 0 ) ; module . exports = function ( code , opts ) { code = trim ( code , opts ) ; code = bloggerMode ( code , opts ) ; code = stripBrs ( code , opts ) ; code = unindenter . unindent ( code , opts ) ; var tabSize = opts [ 's' ] ; code = opts [ 's' ] === true ? retabber . smart ( code , tabSize ) : retabber . regular ( code , tabSize ) ; return code ; } ; } , function ( module , exports ) { 's' ; module . exports = function ( code , opts ) { return code . replace ( "s" , 's' ) . replace ( "s" , 's' ) ; } ; } , function ( module , exports ) { 's' ; module . exports = function ( code , opts ) { var br = "s" ; if ( opts [ 's' ] === true ) code = code . replace ( br , 's' ) ; return code ; } ; } , function ( module , exports ) { 's' ; module . exports = function ( code , opts ) { var br = "s" ; if ( opts [ 's' ] === true ) code = code . replace ( br , 's' ) ; return code ; } ; } , function ( module , exports ) { 's' ; function isEmpty ( str ) { return ( "s" . test ( str ) ) ; } module . exports = { unindent : function unindent ( code ) { var lines = code . split ( "s" ) , regex = "s" , min = 0 , line , matches , i , l ; for ( i = 0 , l = lines . length ; i < l && min > 0 ; i ++ ) { line = lines [ i ] ; if ( isEmpty ( line ) ) continue ; matches = regex . exec ( line ) ; if ( matches == null ) return code ; min = Math . min ( matches [ 0 ] . length , min ) ; } if ( min > 0 ) for ( i = 0 , l = lines . length ; i < l ; i ++ ) { if ( ! isEmpty ( lines [ i ] ) ) lines [ i ] = lines [ i ] . substr ( min ) ; } return lines . join ( 's' ) ; } } ; } , function ( module , exports ) { 's' ; var spaces = 's' ; for ( var i = 0 ; i < 0 ; i ++ ) { spaces += 's' ; } function insertSpaces ( line , pos , count ) { return line . substr ( 0 , pos ) + spaces . substr ( 0 , count ) + line . substr ( pos + 0 , line . length ) ; } module . exports = { smart : function smart ( code , tabSize ) { var lines = code . split ( "s" ) , tab = 's' , line , pos , i , l ; for ( i = 0 , l = lines . length ; i < l ; i ++ ) { line = lines [ i ] ; if ( line . indexOf ( tab ) === - 0 ) continue ; pos = 0 ; while ( ( pos = line . indexOf ( tab ) ) !== - 0 ) { line = insertSpaces ( line , pos , tabSize - pos % tabSize ) ; } lines [ i ] = line ; } return lines . join ( 's' ) ; } , regular : function regular ( code , tabSize ) { return code . replace ( "s" , spaces . substr ( 0 , tabSize ) ) ; } } ; } , function ( module , exports ) { 's' ; function getSyntaxHighlighterScriptTags ( ) { var tags = document . getElementsByTagName ( 's' ) , result = [ ] ; for ( var i = 0 ; i < tags . length ; i ++ ) { if ( tags [ i ] . type == 's' || tags [ i ] . type == 's' ) result . push ( tags [ i ] ) ; } return result ; } ; function hasClass ( target , className ) { return target . className . indexOf ( className ) != - 0 ; } function addClass ( target , className ) { if ( ! hasClass ( target , className ) ) target . className += 's' + className ; } function removeClass ( target , className ) { target . className = target . className . replace ( className , 's' ) ; } function attachEvent ( obj , type , func , scope ) { function handler ( e ) { e = e || window . event ; if ( ! e . target ) { e . target = e . srcElement ; e . preventDefault = function ( ) { this . returnValue = false ; } ; } func . call ( scope || window , e ) ; } ; if ( obj . attachEvent ) { obj . attachEvent ( 's' + type , handler ) ; } else { obj . addEventListener ( type , handler , false ) ; } } function findElement ( target , search , reverse ) { if ( target == null ) return null ; var nodes = reverse != true ? target . childNodes : [ target . parentNode ] , propertyToFind = { 's' : 's' , 's' : 's' } [ search . substr ( 0 , 0 ) ] || 's' , expectedValue , found ; expectedValue = propertyToFind != 's' ? search . substr ( 0 ) : search . toUpperCase ( ) ; if ( ( target [ propertyToFind ] || 's' ) . indexOf ( expectedValue ) != - 0 ) return target ; for ( var i = 0 , l = nodes . length ; nodes && i < l && found == null ; i ++ ) { found = findElement ( nodes [ i ] , search , reverse ) ; } return found ; } function findParentElement ( target , className ) { return findElement ( target , className , true ) ; } function popup ( url , name , width , height , options ) { var x = ( screen . width - width ) / 0 , y = ( screen . height - height ) / 0 ; options += 's' + x + 's' + y + 's' + width + 's' + height ; options = options . replace ( "s" , 's' ) ; var win = window . open ( url , name , options ) ; win . focus ( ) ; return win ; } function getElementsByTagName ( name ) { return document . getElementsByTagName ( name ) ; } function findElementsToHighlight ( opts ) { var elements = getElementsByTagName ( opts [ 's' ] ) , scripts , i ; if ( opts [ 's' ] ) { scripts = getElementsByTagName ( 's' ) ; for ( i = 0 ; i < scripts . length ; i ++ ) { if ( scripts [ i ] . type . match ( "s" ) ) elements . push ( scripts [ i ] ) ; } } return elements ; } function create ( name ) { return document . createElement ( name ) ; } function quickCodeHandler ( e ) { var target = e . target , highlighterDiv = findParentElement ( target , 's' ) , container = findParentElement ( target , 's' ) , textarea = document . createElement ( 's' ) , highlighter ; if ( ! container || ! highlighterDiv || findElement ( container , 's' ) ) return ; addClass ( highlighterDiv , 's' ) ; var lines = container . childNodes , code = [ ] ; for ( var i = 0 , l = lines . length ; i < l ; i ++ ) { code . push ( lines [ i ] . innerText || lines [ i ] . textContent ) ; } code = code . join ( 's' ) ; code = code . replace ( "s" , "s" ) ; textarea . readOnly = true ; textarea . appendChild ( document . createTextNode ( code ) ) ; container . appendChild ( textarea ) ; textarea . focus ( ) ; textarea . select ( ) ; attachEvent ( textarea , 's' , function ( e ) { textarea . parentNode . removeChild ( textarea ) ; removeClass ( highlighterDiv , 's' ) ; } ) ; } ; module . exports = { quickCodeHandler : quickCodeHandler , create : create , popup : popup , hasClass : hasClass , addClass : addClass , removeClass : removeClass , attachEvent : attachEvent , findElement : findElement , findParentElement : findParentElement , getSyntaxHighlighterScriptTags : getSyntaxHighlighterScriptTags , findElementsToHighlight : findElementsToHighlight } ; } , function ( module , exports ) { 's' ; module . exports = { space : 's' , useScriptTags : true , bloggerMode : false , stripBrs : false , tagName : 's' } ; } , function ( module , exports ) { 's' ; module . exports = { 's' : 's' , 's' : 0 , 's' : false , 's' : null , 's' : null , 's' : true , 's' : 0 , 's' : true , 's' : true , 's' : false , 's' : true , 's' : true , 's' : false } ; } , function ( module , exports , __webpack_require__ ) { ( function ( process ) { 's' ; var applyRegexList = __webpack_require__ ( 0 ) . applyRegexList ; function HtmlScript ( BrushXML , brushClass ) { var scriptBrush , xmlBrush = new BrushXML ( ) ; if ( brushClass == null ) return ; scriptBrush = new brushClass ( ) ; if ( scriptBrush . htmlScript == null ) throw new Error ( 's' + brushClass . brushName ) ; xmlBrush . regexList . push ( { regex : scriptBrush . htmlScript . code , func : process } ) ; this . regexList = xmlBrush . regexList ; function offsetMatches ( matches , offset ) { for ( var j = 0 , l = matches . length ; j < l ; j ++ ) { matches [ j ] . index += offset ; } } function process ( match , info ) { var code = match . code , results = [ ] , regexList = scriptBrush . regexList , offset = match . index + match . left . length , htmlScript = scriptBrush . htmlScript , matches ; function add ( matches ) { results = results . concat ( matches ) ; } matches = applyRegexList ( code , regexList ) ; offsetMatches ( matches , offset ) ; add ( matches ) ; if ( htmlScript . left != null && match . left != null ) { matches = applyRegexList ( match . left , [ htmlScript . left ] ) ; offsetMatches ( matches , match . index ) ; add ( matches ) ; } if ( htmlScript . right != null && match . right != null ) { matches = applyRegexList ( match . right , [ htmlScript . right ] ) ; offsetMatches ( matches , match . index + match [ 0 ] . lastIndexOf ( match . right ) ) ; add ( matches ) ; } for ( var j = 0 , l = results . length ; j < l ; j ++ ) { results [ j ] . brushName = brushClass . brushName ; } return results ; } } ; module . exports = HtmlScript ; } . call ( exports , __webpack_require__ ( 0 ) ) ) } , function ( module , exports ) { 's' ; var process = module . exports = { } ; var cachedSetTimeout ; var cachedClearTimeout ; function defaultSetTimout ( ) { throw new Error ( 's' ) ; } function defaultClearTimeout ( ) { throw new Error ( 's' ) ; } ( function ( ) { try { if ( typeof setTimeout === 's' ) { cachedSetTimeout = setTimeout ; } else { cachedSetTimeout = defaultSetTimout ; } } catch ( e ) { cachedSetTimeout = defaultSetTimout ; } try { if ( typeof clearTimeout === 's' ) { cachedClearTimeout = clearTimeout ; } else { cachedClearTimeout = defaultClearTimeout ; } } catch ( e ) { cachedClearTimeout = defaultClearTimeout ; } } ) ( ) ; function runTimeout ( fun ) { if ( cachedSetTimeout === setTimeout ) { return setTimeout ( fun , 0 ) ; } if ( ( cachedSetTimeout === defaultSetTimout || ! cachedSetTimeout ) && setTimeout ) { cachedSetTimeout = setTimeout ; return setTimeout ( fun , 0 ) ; } try { return cachedSetTimeout ( fun , 0 ) ; } catch ( e ) { try { return cachedSetTimeout . call ( null , fun , 0 ) ; } catch ( e ) { return cachedSetTimeout . call ( this , fun , 0 ) ; } } } function runClearTimeout ( marker ) { if ( cachedClearTimeout === clearTimeout ) { return clearTimeout ( marker ) ; } if ( ( cachedClearTimeout === defaultClearTimeout || ! cachedClearTimeout ) && clearTimeout ) { cachedClearTimeout = clearTimeout ; return clearTimeout ( marker ) ; } try { return cachedClearTimeout ( marker ) ; } catch ( e ) { try { return cachedClearTimeout . call ( null , marker ) ; } catch ( e ) { return cachedClearTimeout . call ( this , marker ) ; } } } var queue = [ ] ; var draining = false ; var currentQueue ; var queueIndex = - 0 ; function cleanUpNextTick ( ) { if ( ! draining || ! currentQueue ) { return ; } draining = false ; if ( currentQueue . length ) { queue = currentQueue . concat ( queue ) ; } else { queueIndex = - 0 ; } if ( queue . length ) { drainQueue ( ) ; } } function drainQueue ( ) { if ( draining ) { return ; } var timeout = runTimeout ( cleanUpNextTick ) ; draining = true ; var len = queue . length ; while ( len ) { currentQueue = queue ; queue = [ ] ; while ( ++ queueIndex < len ) { if ( currentQueue ) { currentQueue [ queueIndex ] . run ( ) ; } } queueIndex = - 0 ; len = queue . length ; } currentQueue = null ; draining = false ; runClearTimeout ( timeout ) ; } process . nextTick = function ( fun ) { var args = new Array ( arguments . length - 0 ) ; if ( arguments . length > 0 ) { for ( var i = 0 ; i < arguments . length ; i ++ ) { args [ i - 0 ] = arguments [ i ] ; } } queue . push ( new Item ( fun , args ) ) ; if ( queue . length === 0 && ! draining ) { runTimeout ( drainQueue ) ; } } ; function Item ( fun , array ) { this . fun = fun ; this . array = array ; } Item . prototype . run = function ( ) { this . fun . apply ( null , this . array ) ; } ; process . title = 's' ; process . browser = true ; process . env = { } ; process . argv = [ ] ; process . version = 's' ; process . versions = { } ; function noop ( ) { } process . on = noop ; process . addListener = noop ; process . once = noop ; process . off = noop ; process . removeListener = noop ; process . removeAllListeners = noop ; process . emit = noop ; process . binding = function ( name ) { throw new Error ( 's' ) ; } ; process . cwd = function ( ) { return 's' ; } ; process . chdir = function ( dir ) { throw new Error ( 's' ) ; } ; process . umask = function ( ) { return 0 ; } ; } , function ( module , exports , __webpack_require__ ) { 's' ; var _createClass = function ( ) { function defineProperties ( target , props ) { for ( var i = 0 ; i < props . length ; i ++ ) { var descriptor = props [ i ] ; descriptor . enumerable = descriptor . enumerable || false ; descriptor . configurable = true ; if ( "s" in descriptor ) descriptor . writable = true ; Object . defineProperty ( target , descriptor . key , descriptor ) ; } } return function ( Constructor , protoProps , staticProps ) { if ( protoProps ) defineProperties ( Constructor . prototype , protoProps ) ; if ( staticProps ) defineProperties ( Constructor , staticProps ) ; return Constructor ; } ; } ( ) ; var _syntaxhighlighterHtmlRenderer = __webpack_require__ ( 0 ) ; var 0 = _interopRequireDefault ( _syntaxhighlighterHtmlRenderer ) ; var _syntaxhighlighterRegex = __webpack_require__ ( 0 ) ; var _syntaxhighlighterMatch = __webpack_require__ ( 0 ) ; function _interopRequireDefault ( obj ) { return obj && obj . __esModule ? obj : { default : obj } ; } function _classCallCheck ( instance , Constructor ) { if ( ! ( instance instanceof Constructor ) ) { throw new TypeError ( "s" ) ; } } module . exports = function ( ) { function BrushBase ( ) { _classCallCheck ( this , BrushBase ) ; } _createClass ( BrushBase , [ { key : 's' , value : function getKeywords ( str ) { var results = str . replace ( "s" , 's' ) . replace ( "s" , 's' ) ; return 's' + results + 's' ; } } , { key : 's' , value : function forHtmlScript ( regexGroup ) { var regex = { 's' : regexGroup . right . source } ; if ( regexGroup . eof ) { regex . end = 's' + regex . end + 's' ; } this . htmlScript = { left : { regex : regexGroup . left , css : 's' } , right : { regex : regexGroup . right , css : 's' } , code : ( 0 , _syntaxhighlighterRegex . XRegExp ) ( "s" + regexGroup . left . source + "s" + "s" + "s" + regex . end + "s" , "s" ) } ; } } , { key : 's' , value : function getHtml ( code ) { var params = arguments . length > 0 && arguments [ 0 ] !== undefined ? arguments [ 0 ] : { } ; var matches = ( 0 , _syntaxhighlighterMatch . applyRegexList ) ( code , this . regexList ) ; var renderer = new 0 . default ( code , matches , params ) ; return renderer . getHtml ( ) ; } } ] ) ; return BrushBase ; } ( ) ; } , function ( module , exports , __webpack_require__ ) { 's' ; var BrushBase = __webpack_require__ ( 0 ) ; var regexLib = __webpack_require__ ( 0 ) . commonRegExp ; function Brush ( ) { var keywords = 's' + 's' + 's' + 's' + 's' + 's' ; this . regexList = [ { regex : regexLib . multiLineDoubleQuotedString , css : 's' } , { regex : regexLib . multiLineSingleQuotedString , css : 's' } , { regex : regexLib . singleLineCComments , css : 's' } , { regex : regexLib . multiLineCComments , css : 's' } , { regex : "s" , css : 's' } , { regex : new RegExp ( this . getKeywords ( keywords ) , 's' ) , css : 's' } ] ; this . forHtmlScript ( regexLib . scriptScriptTags ) ; } Brush . prototype = new BrushBase ( ) ; Brush . aliases = [ 's' , 's' , 's' , 's' ] ; module . exports = Brush ; } , function ( module , exports , __webpack_require__ ) { 's' ; var _typeof = typeof Symbol === "s" && typeof Symbol . iterator === "s" ? function ( obj ) { return typeof obj ; } : function ( obj ) { return obj && typeof Symbol === "s" && obj . constructor === Symbol && obj !== Symbol . prototype ? "s" : typeof obj ; } ; ! function ( name , definition ) { if ( true ) module . exports = definition ( ) ; else if ( typeof define == 's' && _typeof ( define . amd ) == 's' ) define ( definition ) ; else this [ name ] = definition ( ) ; } ( 's' , function ( ) { var fns = [ ] , _listener , doc = document , hack = doc . documentElement . doScroll , domContentLoaded = 's' , loaded = ( hack ? "s" : "s" ) . test ( doc . readyState ) ; if ( ! loaded ) doc . addEventListener ( domContentLoaded , _listener = function listener ( ) { doc . removeEventListener ( domContentLoaded , _listener ) ; loaded = 0 ; while ( _listener = fns . shift ( ) ) { _listener ( ) ; } } ) ; return function ( fn ) { loaded ? setTimeout ( fn , 0 ) : fns . push ( fn ) ; } ; } ) ; } , function ( module , exports ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; var string = exports . string = function string ( value ) { return value . replace ( "s" , function ( _ , character ) { return character . toLowerCase ( ) ; } ) . replace ( "s" , function ( _ , character ) { return 's' + character . toLowerCase ( ) ; } ) ; } ; var object = exports . object = function object ( value ) { var result = { } ; Object . keys ( value ) . forEach ( function ( key ) { return result [ string ( key ) ] = value [ key ] ; } ) ; return result ; } ; } ] ) ;	O O O O $void)[]$ O O O ${}$ O O O O O $complex$ O $any$ O O O O ${}$ O $any$ O O O ${}$ O $any$ O O $any$ O O $complex$ O ${}$ O $any$ O O O ${}$ O O O O $any$ O $any$ O $boolean$ O O O O $void)[]$ O $any$ O O $any$ O $complex$ O ${}$ O $complex$ O $complex$ O ${}$ O $complex$ O O $complex$ O $boolean$ O O O O $complex$ O ${}$ O O $complex$ O $void)[]$ O $void)[]$ O $complex$ O ${}$ O ${}$ O $complex$ O $string$ O O O O $complex$ O O O O O O O O O O $any$ O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O $ObjectConstructor$ O $complex$ O $any$ O O $void$ O O O $string$ O O O O $string$ O O O $string$ O O O O O $ObjectConstructor$ O $any$ O $any$ O $string$ O O $true$ O O O $any$ O O $any$ O O O O $any$ O $string$ O O O O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $complex$ O O O O O O $any$ O O O O O O O $string$ O $any$ O O O O $ObjectConstructor$ O $Object$ O $boolean$ O $any$ O $any$ O $string$ O O $complex$ O $string$ O O $any$ O $string$ O O O O $complex$ O $any$ O $any$ O O $complex$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O $any$ O O O O O O O O O O O O O $any$ O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $complex$ O O $null$ O O O ${}$ O O O O O ${}$ O O O O $any[]$ O O $any[]$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O O $any$ O $any$ O $Document$ O O O $complex$ O $any$ O $any$ O O O $any$ O $complex$ O $any$ O $any[]$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O O $any[]$ O O O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O O $complex$ O O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $number$ O O $any$ O O $any$ O O O O O $complex$ O $any$ O O O O O O O O $any[]$ O $number$ O $complex$ O O O O $complex$ O O O $void$ O O $void$ O $any$ O $any$ O O O $any[]$ O $complex$ O $any[]$ O $any$ O $any$ O O $string$ O O O $any$ O O O $any$ O $any$ O $complex$ O $any$ O O O $any[]$ O $number$ O O O O O O O O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O $number$ O $number$ O O O O $any$ O $any[]$ O $number$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O O $any$ O O O O O O O $any$ O O $any$ O $any$ O O O O $any$ O O $any$ O O O O O O $any$ O O $any$ O O O O $any$ O $any$ O $string$ O O O O $any$ O $any$ O $any$ O $string$ O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $void$ O $string$ O O $complex$ O $void)$ O O O $string$ O O O O O $any$ O $string$ O $boolean$ O O O $any$ O $complex$ O $complex$ O $any$ O $any$ O O O O O $any$ O O O O $any$ O O O O O O O $string$ O $complex$ O ${}$ O O O $any$ O $complex$ O ${}$ O $string$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $string$ O $string$ O O O O O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O $any$ O $any$ O $number$ O O O $string$ O O O $complex$ O $complex$ O $any$ O $any$ O O $any$ O $complex$ O ${}$ O $any$ O $string$ O O O O O $any$ O O O $boolean$ O $void$ O $complex$ O $any$ O $any$ O $any$ O $string$ O O O $any$ O O O O $string$ O $string$ O O O $string$ O O O $string$ O O O $any$ O $any$ O $any$ O $string$ O O $boolean$ O O O $number$ O $string$ O $number$ O $number$ O $string$ O $number$ O O O $any$ O $any$ O $string$ O O O O O $any$ O $any$ O $any$ O $number$ O O $boolean$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $string$ O O $any$ O $number$ O O $any$ O $any$ O $any$ O O O $any$ O $number$ O O $boolean$ O O O O O $boolean$ O $any$ O $string$ O O O O $number$ O O O $complex$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $complex$ O ${}$ O O O $number$ O O O $any$ O $any$ O $any$ O O O O $void$ O $void$ O $void$ O O $void$ O O O $complex$ O ${}$ O O O O $number$ O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O O $complex$ O O O O O O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O $any$ O $complex$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O $any$ O O $any$ O $any$ O $any$ O O O O O $string$ O $any$ O O O O O O O O $any$ O $any$ O $string$ O O $any$ O $string$ O O $any$ O $any$ O $string$ O O O $any$ O $string$ O O O O $any$ O O O ${}$ O O ${}$ O $any$ O O O $any$ O $any$ O ${}$ O O O O $any$ O $any$ O O O O $number$ O O O $any$ O $any$ O O O O O O O O O O O O O O O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $number$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O $any$ O $any$ O O ${}$ O $any$ O $any$ O $any$ O O O $any$ O $number$ O $any$ O $any$ O $any$ O O O O $any$ O O O ${}$ O O O O O O O O $any$ O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O O O $any$ O $any$ O $undefined$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O O $any$ O O O O $any$ O $any$ O O O O O O O $RegExp$ O O O $RegExp$ O O O $RegExp$ O O O $RegExp$ O O O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O $any$ O O O O O O O $RegExp$ O O O $complex$ O O $RegExp$ O O O $RegExp$ O O O O O O O O $complex$ O O $RegExp$ O O O $RegExp$ O O O O $complex$ O O $RegExp$ O O O $RegExp$ O O O O O O O O O $any$ O $any$ O O O O O $string$ O O O O $complex$ O O $boolean$ O O O $boolean$ O O O O O $complex$ O O $RegExpExecArray$ O $RegExpConstructor$ O $RegExp$ O $RegExpExecArray$ O $boolean$ O $RegExpConstructor$ O $RegExp$ O $boolean$ O $complex$ O $StringConstructor$ O $String$ O $complex$ O $complex$ O $StringConstructor$ O $String$ O $complex$ O $complex$ O $StringConstructor$ O $String$ O $complex$ O O O $complex$ O O O O O ${}$ O O O O O ${}$ O O O O O $any[]$ O O O O O $string$ O O O O $string$ O O O O $complex$ O O O O O O O O O O O O $RegExp$ O O O O $boolean$ O $complex$ O $RegExpExecArray$ O $any$ O O O O O O O O O $undefined$ O O $boolean$ O O O O O O $boolean$ O O O O O O $RegExpConstructor$ O O O O O O O O O $any$ O O $boolean$ O O O O O $boolean$ O O O O O O $boolean$ O O O O O O $boolean$ O O O O O O $RegExpConstructor$ O O O O O O O O O $any$ O O $boolean$ O O O O O $boolean$ O O O O O O $boolean$ O O O $string$ O $undefined$ O O $complex$ O O $boolean$ O O O $boolean$ O O O $boolean$ O O O $boolean$ O $boolean$ O $boolean$ O $boolean$ O O O $string$ O O O O $string$ O O $RegExp$ O $RegExp$ O $any[]$ O $string$ O $string$ O $boolean$ O O O $any$ O $RegExp$ O $string$ O O O $any[]$ O $any[]$ O O O O $boolean$ O O O $RegExp$ O O O O $RegExp$ O $any$ O O $RegExp$ O $any$ O $any$ O $RegExp$ O O O O O O $any$ O $any$ O $RegExp$ O O $RegExp$ O $string$ O O $any$ O $RegExp$ O $string$ O O O O $RegExp$ O $string$ O O $any$ O $string$ O $RegExp$ O $string$ O O $any$ O $string$ O $string$ O $complex$ O O O O $string[]$ O O O $string$ O O O O $string$ O O $RegExp$ O O O $string$ O $string$ O O O $complex$ O $complex$ O $any$ O $string$ O O O O O O O O $RegExp$ O $RegExp$ O $any$ O O O O O $any$ O $boolean$ O $RegExp$ O O O O O $TypeErrorConstructor$ O O O O O O $any$ O $RegExp$ O $string$ O O O O O $string$ O $string$ O $RegExp$ O O $string$ O O O $string$ O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O $string$ O O O O O O $any$ O $any$ O O $string$ O O O O O O $string$ O O $string$ O $complex$ O $complex$ O $any$ O $string$ O O $RegExpConstructor$ O O O $string$ O O O O O O O O O O O O $any$ O $any$ O O $string$ O O O O O O $any$ O $any$ O O $string$ O O O O O O $string$ O O $string$ O $string$ O $string$ O $string$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O $undefined$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $string$ O $string$ O $any$ O $any$ O $string$ O O $any$ O $any$ O O O $RegExp$ O $RegExp$ O O $RegExpConstructor$ O $RegExp$ O $string$ O $string$ O O $boolean$ O $RegExp$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O $RegExp$ O O O $number$ O $string$ O O O $number$ O $string$ O O O O O O $string$ O $RegExp$ O O O $boolean$ O $RegExp$ O $string$ O $complex$ O $RegExpExecArray$ O $any$ O O O $RegExpConstructor$ O $RegExp$ O $string$ O $any$ O $RegExp$ O O O O O O O O $boolean$ O $RegExp$ O O O O O O $RegExp$ O $string$ O O $RegExp$ O $string$ O O $any$ O O O O $string$ O $complex$ O O O $number$ O $complex$ O O O O $string$ O O O O O O $number$ O $any[]$ O $any$ O O O $number$ O $any[]$ O $number$ O $any$ O O O $any$ O O O $number$ O $number$ O O $any$ O O O O $any[]$ O $number$ O O $any$ O O O $number$ O O O O O O O O O $boolean$ O $any$ O $string$ O O O $string$ O $any$ O $any$ O O O O $string$ O O O O O $boolean$ O $string$ O $number$ O $string$ O O O $complex$ O $boolean$ O $any$ O $string$ O $number$ O O O O O O O O O O O $string$ O $string$ O $number$ O O O O O $string$ O $string$ O O O O $string$ O $number$ O O O O $string$ O O O $string$ O O O $string$ O O O $any$ O $string$ O $string$ O O O $any$ O O O $string$ O $string$ O O $string$ O O O O $SyntaxErrorConstructor$ O O O $string$ O O O $string$ O $complex$ O $complex$ O $any$ O $string$ O O O O O $any$ O $any$ O O O O $complex$ O $boolean$ O $any$ O O O $any$ O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O $string$ O $string$ O $string$ O $any$ O O O O O O O O O O $any$ O O O $number$ O $string$ O $number$ O O $any$ O O O O O $complex$ O $string$ O $string$ O $number$ O O O O O O $SyntaxErrorConstructor$ O O O $string$ O $string$ O $number$ O O O O O O O $string$ O $string$ O $string$ O $string$ O O O O $any$ O $any$ O O O ${}$ O O O O O O $boolean$ O $any$ O O O O O $any$ O $void$ O $any$ O O O O O $any$ O O ${}$ O $any$ O O O O O O O O ${}$ O O O $any$ O O O $void$ O $string$ O O O O O O O $boolean$ O $string$ O O O O O $ErrorConstructor$ O O O O O $complex$ O $string$ O O O O O O $any$ O $string$ O $string$ O $number$ O $number$ O $any$ O O O $number$ O $any[]$ O $number$ O $string$ O $string$ O $string$ O $number$ O O $any$ O O O $any$ O $any$ O O O $number$ O O O $any$ O $any[]$ O $number$ O O O O $any$ O $any$ O $any$ O $any$ O $string$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O $any$ O $any$ O $string$ O $number$ O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any[]$ O $string$ O $any$ O $any$ O $number$ O O O O O O $any[]$ O O $any$ O O $any$ O $any[]$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any[]$ O $number$ O $string$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O $void$ O $boolean$ O O $complex$ O $boolean$ O $boolean$ O O O $void$ O $boolean$ O O $RegExpConstructor$ O $RegExp$ O $RegExpExecArray$ O O $boolean$ O $complex$ O $complex$ O O $complex$ O $RegExpConstructor$ O $RegExp$ O $boolean$ O O $boolean$ O $complex$ O $complex$ O O $boolean)$ O $StringConstructor$ O $String$ O $complex$ O O $boolean$ O $complex$ O $complex$ O O $any[])$ O $StringConstructor$ O $String$ O $complex$ O O $boolean$ O $complex$ O $complex$ O O $complex$ O $StringConstructor$ O $String$ O $complex$ O O $boolean$ O $complex$ O $complex$ O O $any[])$ O $complex$ O $boolean$ O $boolean$ O O O $any$ O $any$ O O O O $any$ O O O O O O $TypeErrorConstructor$ O O O O O O $any$ O O O $any$ O $complex$ O $string$ O O O $complex$ O O $boolean$ O O O $undefined[]$ O O O O O $string$ O $string$ O $string$ O O O $number$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $boolean$ O $complex$ O O O O O $string$ O $undefined$ O O O O $TypeErrorConstructor$ O O O O O O $RegExp$ O $complex$ O O O $complex$ O $complex$ O $undefined$ O O O $StringConstructor$ O $complex$ O O $string$ O $string$ O $undefined$ O O O $StringConstructor$ O $string$ O O O O $any$ O $boolean$ O O O O $string$ O $number$ O O O O O O O O $string$ O O O O O O O ${}$ O $string$ O O O ${}$ O $string$ O O O O O O O O O ${}$ O $string$ O O $string$ O O O $any$ O $any$ O $string$ O $string$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $number$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $number$ O $string$ O $complex$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $number$ O O $any$ O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O O $string$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any[]$ O $any$ O $complex$ O $string$ O O $number$ O O O O O O O $string$ O $any$ O $number$ O $any$ O $any$ O O O $any$ O O O $string$ O $string$ O O $string$ O $string$ O O O O O $any$ O O O $string$ O $string$ O O $string$ O $string$ O O O O ${}$ O $string$ O O $string$ O O O $any$ O $complex$ O $complex$ O $any$ O $string$ O O O O O O $any$ O $complex$ O $complex$ O $any$ O $any$ O O O O O O $any[]$ O $complex$ O $boolean$ O $complex$ O $any[]$ O O O O O $any$ O ${}$ O $string$ O O $string$ O O O $RegExp$ O O $RegExpConstructor$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $string$ O $string$ O O O O $any$ O $RegExp$ O O $RegExpConstructor$ O O O $any$ O $string$ O O O $any$ O $void$ O O O $RegExp$ O $Function$ O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $void$ O $any$ O $any$ O O O O O $any$ O O $any$ O $complex$ O $complex$ O $any$ O $any$ O O O O O O $any$ O O O $number$ O $any$ O $any$ O O $any$ O O $void$ O $any$ O $number$ O O O O O $any[]$ O $number$ O O $RegExp$ O $RegExp$ O $RegExp$ O O $boolean$ O O O $boolean$ O $boolean$ O $boolean$ O O O O O $Function$ O $Function$ O $any$ O $any$ O $any$ O $string$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $complex$ O $void$ O O O O O O $any$ O $complex$ O O O $string$ O $string$ O O O O O ${}$ O $string$ O O O ${}$ O $string$ O O O O O O O ${}$ O $string$ O O $string$ O O O ${}$ O $string$ O O $string$ O O $any$ O $string$ O $string$ O O O O O $any$ O $complex$ O $void$ O O O $any$ O O O O $any$ O O O O ${}$ O O O O O O O ${}$ O O O O O O O $any$ O $string$ O O O $string$ O O O $complex$ O $complex$ O $any$ O $any$ O $string$ O O O O O O O O O $any$ O $any[]$ O O O $string$ O $RegExp$ O $number$ O $complex$ O O O $string$ O O O $boolean$ O O O $any$ O $any$ O $boolean$ O $boolean$ O O O O $complex$ O $RegExp$ O $boolean$ O $complex$ O O O O O O $boolean$ O O $string$ O O O O $RegExp$ O $string$ O O $RegExp$ O $string$ O O O O O $any$ O $RegExp$ O $string$ O O $string$ O O O $RegExp$ O $string$ O O $string$ O O $RegExp$ O $RegExp$ O O $boolean$ O O O $boolean$ O $boolean$ O $boolean$ O $complex$ O O O $boolean$ O O O O O O $any$ O $any$ O $number$ O $number$ O O O $any$ O $complex$ O $any$ O $any$ O $any$ O $string$ O O O O $complex$ O $any$ O $any$ O $any$ O $number$ O O $any$ O O O O O O $RegExp$ O $boolean$ O O $RegExp$ O $number$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $void$ O O O $string$ O $RegExp$ O $Function$ O O O $number$ O O O $number$ O O O O $any$ O O O $any$ O $any$ O $any[]$ O $string$ O $RegExp$ O $number$ O O O $Function$ O $any[]$ O O $number$ O $string$ O $RegExp$ O O $number$ O $any[]$ O $any$ O O $any[]$ O O O O $any$ O O O O O O O $any$ O $RegExp$ O O O $RegExp$ O O O $RegExp$ O $RegExp$ O O $boolean$ O O O O O O O $any$ O $void$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $complex$ O $boolean$ O $any$ O $any$ O O $void$ O O O O O O O O $complex$ O $boolean$ O $any$ O $any$ O O $void$ O O O O O O O $any$ O $boolean$ O O O $string$ O O O O O $complex$ O $string$ O O O O $any$ O $boolean$ O O O $any$ O O O $string$ O $any$ O $any$ O O O O O O $any$ O $complex$ O O O $string$ O $RegExp$ O $string$ O O O $boolean$ O $RegExp$ O $boolean$ O $string$ O O O $string$ O O O $string$ O O $boolean$ O O O O O O O $RegExp$ O $boolean$ O O O O O O O O $any$ O $any$ O $RegExp$ O $string$ O O $RegExp$ O $string$ O O O O O $any$ O $RegExp$ O $string$ O O $string$ O O O $RegExp$ O $string$ O O $string$ O O $RegExp$ O $RegExp$ O O $boolean$ O O O $boolean$ O $boolean$ O O O $RegExp$ O $boolean$ O $boolean$ O $string$ O O O $boolean$ O O O O O O $any$ O $complex$ O $complex$ O $any$ O $any$ O $string$ O O $any$ O O O O $RegExp$ O $boolean$ O O $RegExp$ O $number$ O $string$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O $boolean$ O $any$ O O O O $any$ O $any$ O O O O O O $any$ O $any[]$ O O O $string$ O $any[]$ O O O O $any$ O $string[]$ O $number$ O O O $any$ O $any[]$ O $number$ O O $any$ O $any[]$ O $number$ O O O $any$ O $any[]$ O $number$ O O O $any[]$ O O O O $void$ O O $void$ O $any$ O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O $ReferenceErrorConstructor$ O O O $any$ O $any$ O O O $any[]$ O $number$ O $any$ O $any$ O $any$ O O O O O O O O $any[]$ O $number$ O $any$ O O O O O O O O $any$ O O O $any$ O O O $number$ O $string[]$ O $number$ O O $any$ O O $any$ O $void$ O $string[]$ O $number$ O O $any$ O $any$ O $void$ O O O O $number$ O $any[]$ O $number$ O O O O $any[]$ O $number$ O $any[]$ O $any$ O $any[]$ O $number$ O O O O O O O $string$ O O O O O O O $any$ O $string$ O O O $string$ O $complex$ O $TimerHandler$ O $string$ O O O $boolean$ O $any$ O $boolean$ O $complex$ O O $boolean$ O $complex$ O $any$ O $string$ O O O $string$ O O O $string$ O O $boolean$ O O O O O O O $complex$ O $any$ O O O O O O O O $complex$ O $complex$ O $any$ O O O $boolean$ O O $complex$ O $string$ O O $complex$ O $string$ O O O O O $complex$ O $complex$ O $string$ O O $string$ O O O $complex$ O $string$ O O $string$ O O $RegExp$ O $complex$ O O $boolean$ O O O $boolean$ O $boolean$ O O O $complex$ O $any$ O $boolean$ O $string$ O O O $boolean$ O O O O O O O O O O $boolean$ O O $complex$ O O $RegExpConstructor$ O $any$ O $string$ O $StringConstructor$ O $complex$ O O O O O O O $any$ O $complex$ O $string$ O $any$ O $any$ O $string$ O O $complex$ O $TimerHandler$ O O O O $boolean$ O $complex$ O $any$ O O $complex$ O $any$ O O O O O $any$ O O O $any$ O $string$ O O O $string$ O $any[]$ O O O $any$ O $any$ O O O $any$ O O O $number$ O $any[]$ O $number$ O O $any$ O O $any$ O $any[]$ O $number$ O O $string$ O $any$ O $string$ O $string$ O $any$ O O O O $any$ O O O O $any$ O O O O O O O $string$ O O O $any$ O $any[]$ O O O $string$ O $complex$ O $number$ O O O $complex$ O $any[]$ O $any$ O $any$ O $string$ O O $complex$ O $number$ O O O O $any$ O $boolean$ O O O $string$ O $RegExp$ O $number$ O $complex$ O O O O O $any$ O $any[]$ O $string$ O $RegExp$ O $number$ O $complex$ O O O O $any$ O $void$ O O O $any$ O O $any$ O $any$ O $any$ O O O O $complex$ O $boolean$ O $any$ O $any$ O O $void$ O O O O O O O $complex$ O $boolean$ O $any$ O $any$ O O $void$ O O O O O O O $any$ O $RegExp$ O O O $any[]$ O $string$ O O O $RegExp$ O O O $any[]$ O O O O $number$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $number$ O $any$ O O O O $any$ O O O $number$ O O O $any$ O O O O O $any$ O O O O O O O O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O O O $boolean$ O $any[]$ O O O O $any[]$ O $number$ O O O O O $TypeErrorConstructor$ O O O O O O O $any$ O O O $number$ O $any[]$ O $number$ O O $any$ O O $any$ O $any[]$ O $number$ O O O O $any$ O $boolean$ O $any$ O O O $any$ O $number$ O $any$ O $any$ O $string$ O O $any$ O $string$ O O $any$ O O O O $any[]$ O $number$ O $complex$ O $complex$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $RegExp$ O $any$ O O O O O O $any[]$ O $number$ O $any$ O $string$ O $any$ O O O O O O $any$ O $any[]$ O $string$ O O O O $string$ O O O O $complex$ O $any$ O O O $string$ O O O $any$ O O O $any$ O $any$ O $complex$ O $RegExpExecArray$ O $any$ O O O $IArguments$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $boolean$ O $any$ O $any$ O O O $number$ O $any$ O O O O O O O O $any$ O $RegExp$ O O O O $boolean$ O O O $boolean$ O O O O O $complex$ O $complex$ O $any$ O $StringConstructor$ O $string$ O O $string$ O $any$ O $any$ O O $RegExp$ O O O O O O $number$ O $IArguments$ O $number$ O $any$ O O O $any$ O O O $number$ O $number$ O O O O $any$ O O O O $IArguments$ O $number$ O O $undefined$ O O $any$ O $number$ O O $undefined$ O O O O O O O O O O O $string$ O O O O $string$ O O $any$ O O O O $any$ O O O $number$ O $any$ O $any$ O O $any$ O O $any$ O O O $string$ O O $any$ O $number$ O O O O O O $any$ O O $any$ O $any$ O O $any$ O $number$ O O O O O O O O O $any$ O O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O O $any$ O $any$ O O O $any$ O O O $complex$ O $boolean$ O O O $string$ O O O O O $complex$ O $any$ O $any$ O O O $string$ O O O O $complex$ O $any[]$ O O O $any$ O O O $any$ O O O O $any$ O $boolean$ O $any$ O O O $any$ O O $RegExpConstructor$ O $any$ O O O O O O $any$ O $any$ O O $any$ O $complex$ O $complex$ O $any$ O O O $IArguments$ O O $any$ O $any$ O O O O $any$ O O O $complex$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $complex$ O $string$ O O O $complex$ O $TimerHandler$ O O O $boolean$ O $any$ O $boolean$ O $complex$ O O $any$ O $any$ O $any$ O O O $boolean$ O O O O $complex$ O $string$ O O O $any$ O $complex$ O $string$ O O $any$ O O $any$ O $complex$ O $any$ O O O O $complex$ O O O O O O $boolean$ O $TimerHandler$ O O O O O $any$ O $complex$ O $complex$ O $any$ O $StringConstructor$ O O O O $complex$ O O O O O O $IArguments$ O $IArguments$ O $any$ O O O $any$ O O $IArguments$ O O O O O $StringConstructor$ O $IArguments$ O O O O O O O $any$ O O O $number$ O $any$ O $any$ O O $any$ O O O O $any$ O $number$ O O O $IArguments$ O O O O $any$ O $number$ O O O $IArguments$ O $number$ O O O O O O O O O $boolean$ O $complex$ O $any$ O O $complex$ O $any$ O $IArguments$ O $IArguments$ O $number$ O O O O $IArguments$ O O O O $any$ O O O $TimerHandler$ O $any$ O $undefined$ O $IArguments$ O O O O O O O O $any$ O $complex$ O $complex$ O $any$ O O O O O O O $StringConstructor$ O O O O $complex$ O O O O O O $IArguments$ O $IArguments$ O O $complex$ O $complex$ O $any$ O $StringConstructor$ O $TimerHandler$ O O $RegExp$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O O $any$ O O O $number$ O $IArguments$ O $number$ O O O O O $IArguments$ O $number$ O O O O O $any$ O $any$ O $number$ O $any$ O $any$ O O O O O O O $number$ O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O $IArguments$ O $number$ O O O O O O O O O $any$ O O O O O O O O O O $any$ O O O O $any$ O O O O O $IArguments$ O O O O O O O $any$ O O O O O $IArguments$ O $IArguments$ O $number$ O O O O $any$ O O O $IArguments$ O $IArguments$ O $number$ O O O O O O O O $any$ O O O O O $IArguments$ O $IArguments$ O $number$ O O O O $any$ O $IArguments$ O $IArguments$ O $number$ O O O O $IArguments$ O O O O $any$ O O O $any$ O O $any$ O O O O $boolean$ O $any$ O O O O O $any$ O $IArguments$ O $number$ O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O $IArguments$ O $any$ O O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O O O O O $boolean$ O O O O $complex$ O $any$ O O $complex$ O $any$ O O O O O O $complex$ O $any$ O $any$ O O O O $any$ O O O $complex$ O $any[]$ O O O $complex$ O $number$ O O O O O $any$ O $boolean$ O $complex$ O O O O $complex$ O $complex$ O $any$ O O O $IArguments$ O O O O $string$ O $StringConstructor$ O O O O $any[]$ O O O O $any$ O $complex$ O $any$ O $number$ O O O $any$ O $number$ O O $number$ O $undefined$ O O O O $number$ O O O O $any$ O $void$ O $string$ O $complex$ O O O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $number$ O O $any[]$ O $number$ O $string$ O $string$ O $number$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $string$ O $number$ O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O $any[]$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $number$ O $any$ O $any$ O $any$ O O O O O O O $number$ O $string$ O $number$ O O O O O $complex$ O $boolean$ O $any$ O $complex$ O O O O $undefined$ O O $any[]$ O $number$ O O O O O O O O $any[]$ O $number$ O $string$ O $string$ O $number$ O O O O $complex$ O $any$ O $any$ O O $any[]$ O $number$ O $number$ O $string[]$ O $string[]$ O O O $number$ O O $string[]$ O O O $any$ O $void$ O O O O O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $string$ O O O $any$ O O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O O $string$ O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O $any$ O $any$ O O O $number$ O $number$ O $any$ O O O O O O O $number$ O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O O $number$ O O O O O O O $string$ O $string$ O $number$ O O O O O O $boolean$ O $any$ O $any$ O O O O O O O O O $any$ O O O O O O O $SyntaxErrorConstructor$ O O O O O O O $string$ O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O O O $any$ O O O O O O O O O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O $any$ O $any$ O O O $boolean$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O $any$ O $any$ O O O $boolean$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O O $string$ O O O O O $any$ O $void$ O O O O O O O O O O O O O $string$ O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O O O $number$ O $boolean$ O $any$ O O O O O $number$ O O O $any$ O $any$ O O O O O O O O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O $number$ O $number$ O O O $any$ O $any$ O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O O O $number$ O O $any$ O $any$ O $any$ O $any$ O $boolean$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O $any$ O O O O O O $any$ O $string$ O O O $boolean$ O $any$ O O O O O O $any$ O O O O O O $any$ O $any$ O O $any$ O O O O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O $any$ O O O O O O O $string$ O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O O O O O $boolean$ O $any$ O O O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O O $any$ O O O O O O $any$ O O O O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O O $number$ O O O $any$ O $any$ O O O O O O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O O O O O $boolean$ O O O O O O O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O O O O O O O $any$ O $any$ O O O O O O O O O O $string$ O O O $string$ O O O O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O $ObjectConstructor$ O $complex$ O $any$ O O $void$ O O O $string$ O O O O $string$ O O O $string$ O O O O O $ObjectConstructor$ O $any$ O $any$ O $string$ O O $true$ O O O $any$ O O $any$ O O O O $any$ O $string$ O O O O O O O O O O $any$ O $any$ O O O O $ObjectConstructor$ O $complex$ O $any$ O O $void$ O O O $string$ O O O O $string$ O O O $string$ O O O O O $ObjectConstructor$ O $any$ O $any$ O $string$ O O $true$ O O O $any$ O O $any$ O O O O $any$ O $string$ O O O O O O O O O O O O O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O O O O O O $void$ O $any$ O $any$ O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $void$ O $any$ O $any$ O $any$ O O O O $any$ O $void$ O $any$ O $any$ O O O $any$ O O O O O O O O $void$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O O O $TypeErrorConstructor$ O O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O $void$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O $string$ O O O $any$ O O $any$ O O O O O O $any$ O O O O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $complex$ O O $SymbolConstructor$ O O O O $SymbolConstructor$ O $symbol$ O O O O O $any$ O O O O $any$ O O O O O $any$ O O O $any$ O O $SymbolConstructor$ O O O $any$ O $any$ O $SymbolConstructor$ O $any$ O $SymbolConstructor$ O $Symbol$ O O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any[]$ O O O O $any$ O $any$ O O O O O O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O O O $complex$ O $any$ O $number$ O O O O O $any[]$ O $any[]$ O $complex$ O O O O $any$ O $any$ O O $any$ O $any$ O $number$ O O O O O $any[]$ O O O O $any$ O $any$ O O $any[]$ O O $any[]$ O O O O $any$ O $any$ O O $any$ O O $any[]$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O $any[]$ O $any[]$ O $any[]$ O $any$ O $any$ O $any$ O $any[]$ O $any[]$ O $any[]$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any[]$ O $string$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O $number$ O O O $any$ O O O $any[]$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $number$ O O O O O $any$ O $any$ O $any$ O $any$ O $string$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $string$ O $any$ O $any$ O $any$ O $any$ O O O $any[]$ O $any[]$ O $complex$ O $any$ O O $number$ O $any$ O $any$ O $any$ O O O O $any$ O O O $any[]$ O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O O O O $any[]$ O $any$ O O O $any[]$ O O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O O O $any$ O $number$ O O $any[]$ O $number$ O $any$ O $number$ O O O O O $any[]$ O O O $any$ O $any$ O O O O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O O O $any$ O $number$ O O O O O O O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $number$ O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O $number$ O O O O $number$ O O O O $any$ O $any$ O $number$ O O O O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $number$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $number$ O O O O O O O $any$ O O O O O O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O $complex$ O $complex$ O $any$ O O $string$ O $number$ O $number$ O O O $string$ O $number$ O $string$ O O O O O $string$ O $number$ O $number$ O O $string$ O O O $string$ O O O $string$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O O ${}$ O $any$ O O O ${}$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O O $any$ O O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O ${}$ O $any$ O $number$ O O O O O O O ${}$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O ${}$ O $any$ O O O $any$ O O O O $string$ O O $string$ O $string$ O $string$ O O O O $string$ O O O $string$ O $number$ O O O $string$ O O O $string$ O O O O $string$ O O O O O O $any[]$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O $string$ O $complex$ O O O O O O $string$ O $string$ O $complex$ O O O O O $string$ O O $any$ O O O O O $any$ O O O $any$ O $string$ O $number$ O $number$ O $number$ O O O $any$ O O O $any$ O O O $any$ O $any$ O O O $string$ O O O O O O $any$ O $any$ O $string$ O O O O $any$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O $any$ O $any$ O $number$ O O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $string$ O $string$ O O O $string$ O O O $any$ O O O O $any[]$ O $number$ O $any$ O O O O $any[]$ O $string$ O O O O O O $string$ O O $string$ O $string$ O O O $RegExp$ O O O $RegExp$ O O O O $string$ O $complex$ O $RegExp$ O O O $string$ O O O $string$ O O O $any$ O O O O O $any$ O $RegExp$ O $RegExpExecArray$ O $string$ O O O $string$ O $RegExpExecArray$ O O O O $string$ O $RegExpExecArray$ O O O O O O O O $string$ O O O $string$ O O O $string$ O O O O O O $any[]$ O O $any[]$ O $any$ O O O $any[]$ O O O O $any$ O O O $any$ O $number$ O $number$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O $any[]$ O $number$ O $number$ O $number$ O O O O $number[]$ O O O $string$ O O $string$ O $any$ O $any$ O $any$ O O O $string[]$ O O O O O O $any$ O O O $any$ O O O O $any$ O O O O O O O O O O $string$ O O O O O O O O $any$ O $any$ O O $string[]$ O $number$ O O O O O O $any$ O O O $string[]$ O $number$ O O O O O O O $string[]$ O $string$ O O O O O O $any$ O O O O O $string$ O O $string$ O $string$ O $any[]$ O O O O O O O $any$ O O O $any$ O $string$ O O O $any$ O O O $any$ O $any$ O $number$ O $number$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O O $number$ O $any$ O O O O $string$ O O O $number$ O O O O $boolean$ O $any$ O O O O $any$ O O O O O $any$ O O O $number$ O $any$ O $any$ O O O $any$ O $any[]$ O $any[]$ O $number$ O O $number$ O $number$ O $string$ O $any$ O O O $any$ O $any$ O $string$ O $any$ O $any$ O O $string$ O O O $string$ O $number$ O $any$ O $string$ O O O O $string$ O O O $string$ O O $string$ O $any$ O $any[]$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $number$ O $number$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $RegExpExecArray$ O O O $RegExpExecArray$ O $any$ O O $any$ O O O $any$ O $any[]$ O $any[]$ O $number$ O O $number$ O $number$ O O O O $RegExpExecArray$ O O O O $any$ O $RegExpExecArray$ O O O O $string$ O O O $any$ O $any$ O $any$ O $string$ O $number$ O O $any$ O $string$ O $complex$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $string$ O $number$ O $any$ O O $string$ O O O O O $any$ O O O $string$ O O O O O O $any$ O O O O $any$ O O O $string$ O O $string$ O $any$ O O O $any$ O O O $any$ O O O O O O O $string$ O O $string$ O $string$ O $any[]$ O O O $string$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O O O O $number$ O O O $string$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any[]$ O $number$ O $number$ O $number$ O $any$ O O O $any$ O $any[]$ O $number$ O O O O $any$ O O O $any$ O $any$ O O O O O $any$ O $string$ O $any$ O O $string$ O O O $string$ O $string$ O $string$ O $number$ O $any$ O $any$ O $number$ O O $string$ O O O O O O $string$ O $any$ O $any$ O $string$ O $any$ O $any$ O O $number$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $string$ O O O $string$ O $string$ O $string$ O $number$ O O $string$ O O O O O O O $string$ O O O $string$ O O $string$ O O O O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $string[]$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $string[]$ O $number$ O O O O $any$ O $any$ O $any$ O O O O O O $boolean$ O $string[]$ O $number$ O O O O $string[]$ O $number$ O $any$ O $any$ O O $string[]$ O $number$ O $any$ O $any$ O O O O $boolean$ O $any$ O O O $any[]$ O $any$ O O $any$ O O O $string$ O $any$ O $any$ O O $any$ O O O $string$ O $string$ O $any[]$ O O O O $any$ O $any$ O $any$ O O O $string$ O $string$ O O $any$ O O O $string[]$ O $string$ O O O O O O O O $string$ O $any$ O $any$ O O O O O $boolean$ O O O O O $string$ O $any$ O O O O O O O O O $string$ O O O O $string$ O O O O O O O O $any$ O $any$ O O O O O $any[]$ O $string$ O O O $string$ O $complex$ O O O O O O $string$ O $any$ O $any$ O O O $any[]$ O $any[]$ O $any$ O O O O O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O $number$ O $number$ O O O $any[]$ O $number$ O O $any$ O $any[]$ O $number$ O O $number$ O O O O $any[]$ O $string$ O O O O O O $string$ O $any$ O O O O $any$ O O O O $Math$ O $number$ O $Math$ O $number$ O O O O O O $string$ O O O O O O O $any$ O $any$ O O O ${}$ O O O O $any$ O O O $any$ O $any$ O O ${}$ O $string$ O O $any$ O $string$ O O O O O $any$ O $any$ O O ${}$ O $string$ O O $any$ O $string$ O O O O ${}$ O O O $string$ O $string$ O O O $string$ O $complex$ O O O O O O O O $any[]$ O $any$ O O O $ArrayConstructor$ O $any[]$ O $any[]$ O $any$ O $any$ O O O O $boolean$ O $string$ O O O $any$ O O O O O O O O O O O $string$ O O O $any$ O O O $string$ O $any$ O O O O O O O $any[]$ O $any[]$ O $string$ O $string$ O $string$ O $string$ O O O O O $string$ O $string$ O $any[]$ O $any[]$ O $boolean$ O $boolean$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O O $any$ O O O O O O O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O $RegExp$ O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $RegExp$ O O O O O $any$ O O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O $RegExp$ O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $RegExp$ O O O O O $any$ O O O O O O O $any$ O $any$ O O O O O $boolean$ O $any$ O O O O O O $boolean$ O $any$ O O O O O O O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $RegExp$ O O O $number$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O $any$ O O O $any$ O $any$ O $number$ O O O O $boolean$ O $any$ O O O O $any$ O $RegExp$ O $RegExpExecArray$ O $any$ O O O O $RegExpExecArray$ O O O O $any$ O $number$ O $Math$ O $number$ O $RegExpExecArray$ O O O O $number$ O $number$ O O O O O $number$ O O O O O $any$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O O O O $boolean$ O $any$ O $number$ O O O $any$ O $number$ O O $any$ O $number$ O O $any$ O $number$ O O O O $any$ O $any$ O O O O O O O O O O O $any$ O $any$ O O O O O $string$ O O O O O O $number$ O O O $number$ O O O $number$ O O O $string$ O O O O O $string$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O $string$ O $string$ O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $string$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $string$ O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $string$ O O O O O O O $any$ O $string$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $number$ O O $any$ O O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $string$ O $string$ O O O $any$ O O O O O O O O O O $any$ O $any$ O O O O O $any[]$ O O O O $HTMLCollectionOf<HTMLScriptElement>$ O $Document$ O O O O O O $any[]$ O O O O O O O $number$ O O O $number$ O $HTMLCollectionOf<HTMLScriptElement>$ O $number$ O $number$ O O O O O $HTMLCollectionOf<HTMLScriptElement>$ O $number$ O O $string$ O O O $HTMLCollectionOf<HTMLScriptElement>$ O $number$ O O $string$ O O O $any[]$ O $number$ O $HTMLCollectionOf<HTMLScriptElement>$ O $number$ O O O O O $HTMLScriptElement[]$ O O O O $boolean$ O $any$ O $string$ O O O $any$ O $any$ O $any$ O $string$ O O O O O O O $void$ O $any$ O $string$ O O O O O $boolean$ O $any$ O $string$ O O $any$ O $any$ O O O $string$ O O O $void$ O $any$ O $string$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O O O O O O $void$ O $any$ O $string$ O $Function$ O $any$ O O O $void$ O $any$ O O $any$ O $any$ O $complex$ O $Event$ O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $boolean$ O O O O O O $Function$ O $any$ O $any$ O $complex$ O $any$ O O O O O O $any$ O $any$ O O $any$ O $any$ O O O $string$ O $void$ O O O O O $any$ O $any$ O $string$ O $void$ O O O O O O O $Element$ O $Element$ O $string$ O $boolean$ O O O O $Element$ O O O O O O O $complex$ O $boolean$ O O O $Element$ O $NodeListOf<ChildNode>$ O O $Element$ O $complex$ O O $any$ O O O O O O O O O O O $string$ O $string$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O $string$ O $string$ O O O O $string$ O $string$ O O O O O O $Element$ O $any$ O O O O O $any$ O $string$ O O O O O O $Element$ O O O O $number$ O O O $number$ O $complex$ O $number$ O $complex$ O $number$ O $number$ O $Element$ O O O $number$ O O O $any$ O $Element$ O $complex$ O $number$ O O $string$ O $boolean$ O O O O $Element$ O O O $Element$ O $Element$ O $string$ O O O $Element$ O $Element$ O $string$ O O O O O O $Window$ O $string$ O $string$ O $any$ O $any$ O $string$ O O O $number$ O O $Screen$ O $number$ O $any$ O O O O $number$ O O $Screen$ O $number$ O $any$ O O O O $string$ O O O $number$ O O O $number$ O O O $any$ O O O $any$ O $string$ O $string$ O $complex$ O O O O O O O $Window$ O $complex$ O $Window)$ O $string$ O $string$ O $string$ O O $Window$ O $void$ O O O O $Window$ O O O $HTMLCollectionOf<any>$ O $any$ O O O $Document$ O O O $any$ O O O O $HTMLCollectionOf<any>$ O $any$ O O O $HTMLCollectionOf<any>$ O $HTMLCollectionOf<any>$ O $any$ O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $HTMLCollectionOf<any>$ O O O O O O $any$ O O O $number$ O $HTMLCollectionOf<any>$ O $number$ O $any$ O O O O O $HTMLCollectionOf<any>$ O $number$ O O $any$ O $any$ O O O O $HTMLCollectionOf<any>$ O $any$ O $HTMLCollectionOf<any>$ O $number$ O O O O O O $HTMLCollectionOf<any>$ O O O $any$ O $any$ O O O $Document$ O O O $any$ O O O O $void$ O $any$ O O O $any$ O $any$ O $any$ O $Element$ O $Element$ O $any$ O O O O $Element$ O $Element$ O $any$ O O O O $HTMLTextAreaElement$ O $Document$ O O O O O O $any$ O O O O $Element$ O O $Element$ O $Element$ O $Element$ O O O O O O $void$ O $Element$ O O O O O $NodeListOf<ChildNode>$ O $Element$ O $NodeListOf<ChildNode>$ O $any[]$ O O O O O O O $number$ O O O $number$ O $NodeListOf<ChildNode>$ O $number$ O $number$ O $number$ O $number$ O O O $any[]$ O $number$ O $NodeListOf<ChildNode>$ O $number$ O O $any$ O $NodeListOf<ChildNode>$ O $number$ O O $string$ O O O $any[]$ O $any[]$ O $string$ O O O O $any[]$ O $any[]$ O $any$ O O O O O O $HTMLTextAreaElement$ O $boolean$ O O O $HTMLTextAreaElement$ O $T$ O $Document$ O $Text$ O $any$ O O O $Element$ O $T$ O $HTMLTextAreaElement$ O O $HTMLTextAreaElement$ O $void$ O O O $HTMLTextAreaElement$ O $void$ O O O $void$ O $HTMLTextAreaElement$ O O O O O $any$ O O $HTMLTextAreaElement$ O $complex$ O $T$ O $HTMLTextAreaElement$ O O $void$ O $Element$ O O O O O O O O O O O O O O $void$ O $void$ O $any$ O $any$ O $Window$ O $Window$ O $boolean$ O $boolean$ O $void$ O $void$ O $void$ O $void$ O $void$ O $void$ O $Element$ O $Element$ O $Element$ O $Element$ O $any[]$ O $any[]$ O $HTMLCollectionOf<any>$ O $HTMLCollectionOf<any>$ O O O O O O $any$ O $any$ O O O O O O O O O $string$ O O O $boolean$ O O O $boolean$ O O O $boolean$ O O O $string$ O O O O O O O O $any$ O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O O O O O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O O O O O $any$ O O O O O $any$ O O $any$ O O O O O $any$ O $any$ O O O O O $ErrorConstructor$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any[]$ O $any[]$ O O O O O $any$ O $any$ O $any$ O O $void$ O $any$ O $any$ O O O O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O $any$ O $number$ O O $any$ O $any$ O O O O $any[]$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any[]$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $void$ O $any$ O O $any[]$ O $any[]$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $void$ O $any$ O $any$ O O $void$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $void$ O $any$ O $any$ O $any$ O O $void$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $void$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $void$ O $any$ O O O O O O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O $number$ O $number$ O O O $any[]$ O $number$ O O $any$ O $any$ O $any$ O O O $any[]$ O O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O O $void$ O O O O O $ErrorConstructor$ O O O O O O $void$ O O O O O $ErrorConstructor$ O O O O O O O O O O O O O O O $number$ O O O O $any$ O $number$ O O O O $any$ O $void$ O O O O O $any$ O O $any$ O $void$ O O O O O O O $void$ O O O O $any$ O $void$ O O O O $any$ O $void$ O O O O O $any$ O O $any$ O $void$ O O O O O O O O $any$ O $any$ O O O O $any$ O $number$ O O O $number$ O $any$ O O O O O O O O $any$ O $void$ O O $any$ O O $number$ O O $any$ O $number$ O O $number$ O $any$ O O O O O O O O $any$ O $any$ O O O O O O O $any$ O O O O O $any$ O $any$ O O O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $void$ O O O $void$ O $any$ O O O O O O $any$ O $void$ O O $any$ O O $void$ O O $any$ O $void$ O O $void$ O $any$ O O O O O O $any$ O $any$ O O O O O $any$ O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O O O O O O $any[]$ O O O O O $boolean$ O O O O $any$ O O $number$ O O O O O $void$ O O O O O O $boolean$ O O $any$ O O O O O $boolean$ O O O O O $any$ O $any$ O O $any[]$ O $any$ O $any$ O $any[]$ O O O O O $number$ O O O O O O O $any[]$ O $number$ O O $void$ O O O O O O $void$ O O O O O $boolean$ O O O O O O $any$ O $any$ O $void$ O O $boolean$ O O O O $number$ O $any[]$ O $number$ O O O $number$ O O $any$ O $any[]$ O $any[]$ O O O O O O O $number$ O $number$ O O O O $any[]$ O O $any[]$ O $number$ O O $any$ O O O O O $number$ O O O O $number$ O $any[]$ O $number$ O O $any$ O O O $boolean$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O O $any[]$ O O $ArrayConstructor$ O $IArguments$ O $number$ O O O O O O $IArguments$ O $number$ O O O O O O O $number$ O O O $number$ O $IArguments$ O $number$ O $number$ O O O $any[]$ O $number$ O O O O $IArguments$ O $number$ O O O O $any[]$ O $number$ O O $any$ O $any$ O $any[]$ O O O O O $any[]$ O $number$ O O O O $boolean$ O O $any$ O $void$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $void$ O O O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O $void$ O O O O $any$ O $any$ O $void$ O $any$ O $any$ O $void$ O $any$ O $any$ O $void$ O $any$ O $any$ O $void$ O $any$ O $any$ O $void$ O $any$ O $any$ O $void$ O $any$ O $any$ O $void$ O $any$ O $any$ O O O $any$ O O O O $ErrorConstructor$ O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O $any$ O O O O $ErrorConstructor$ O O O O O O $any$ O $any$ O O O O O O O O O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O O O O O O $void$ O $any$ O $any$ O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $void$ O $any$ O $any$ O $any$ O O O O $any$ O $void$ O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $void$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O O O $TypeErrorConstructor$ O O O O O O O O O O O O O O O $void$ O O O $void$ O O O $void$ O O O $any$ O $void$ O O O $string$ O O O $string$ O O $string$ O $string$ O O O $string$ O $string$ O $complex$ O O O O O O $complex$ O O O O O O O O O $string$ O O O O O O O $string$ O O O $any$ O O $any$ O $any$ O O O $complex$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O $complex$ O $any$ O O O $complex$ O $any$ O O O O O O $complex$ O O $complex$ O O $any$ O $any$ O $any$ O $string$ O O O O $complex$ O O $any$ O $any$ O $any$ O $string$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O $complex$ O $any$ O O O O O O O O O O O $string$ O O O $any$ O O $any$ O $any$ O O O $any$ O $IArguments$ O $number$ O O O $IArguments$ O O O O $undefined$ O $IArguments$ O O O O O O O O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O O O $void$ O O O O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O O $any$ O O O O $string$ O O O O O O O O O O O O O O O $complex$ O O O $any$ O $any$ O $any$ O $string$ O O O O O $any$ O $any$ O $any$ O $string$ O O O O O $any$ O $any$ O $any$ O $string$ O O O O O $any$ O $any$ O $any$ O $string$ O O O O O $RegExp$ O O O $string$ O O O O O $RegExp$ O O $RegExpConstructor$ O O O $any$ O $string$ O O O O O $string$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O O O $any$ O $string[]$ O O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $complex$ O O $SymbolConstructor$ O O O O $SymbolConstructor$ O $symbol$ O O O O O $any$ O O O O $any$ O O O O O $any$ O O O $any$ O O $SymbolConstructor$ O O O $any$ O $any$ O $SymbolConstructor$ O $any$ O $SymbolConstructor$ O $Symbol$ O O O O $any$ O O O O O O $string$ O $void$ O O O O O O O O O O $void$ O O O O O O O $any$ O O O $complex$ O $any$ O $any$ O O O O $any$ O $void$ O O O O O $string$ O O $void$ O O O O O O O O O O O O $any[]$ O O O O $any$ O $Document$ O $Document$ O $any$ O $Document$ O $HTMLElement$ O $any$ O $string$ O O O $boolean$ O O $any$ O O O O O O $boolean$ O $Document$ O $DocumentReadyState$ O O O O O $boolean$ O $Document$ O O O $string$ O $any$ O O $void$ O O O $Document$ O O O $string$ O $any$ O O $boolean$ O O O O O $any$ O $any[]$ O $any$ O O O O $any$ O O O O O O O O O O $any$ O O $boolean$ O $number$ O $any$ O O O O $any[]$ O $number$ O $any$ O O O O O O O O O O O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O O O O ${}$ O ${}$ O ${}$ O O ${}$ O $any$ O O O ${}$ O O O O $ObjectConstructor$ O $complex$ O $any$ O O $void$ O O O $string$ O O O ${}$ O $any$ O $string$ O O O $any$ O $string$ O O O O O O ${}$ O O O O O O O
'js' var BookmarkShowcaseState = { bookmarksArray : null , bookmarksReport : null , nextBookmarkId : 0 } const dialogTextSelectTimeout = 0 ; function embedBookmarksReport ( ) { return LoadSampleReportIntoSession ( ) . then ( function ( ) { const models = window [ 's' ] . models ; var accessToken = GetSession ( SessionKeys . AccessToken ) ; var embedUrl = GetSession ( SessionKeys . EmbedUrl ) ; var embedReportId = GetSession ( SessionKeys . EmbedId ) ; var permissions = models . Permissions . View ; var config = { type : 's' , tokenType : models . TokenType . Embed , accessToken : accessToken , embedUrl : embedUrl , id : embedReportId , permissions : permissions , settings : { filterPaneEnabled : true , navContentPaneEnabled : false , } } ; var embedContainer = $ ( 's' ) [ 0 ] ; BookmarkShowcaseState . bookmarksReport = powerbi . embed ( embedContainer , config ) ; BookmarkShowcaseState . bookmarksReport . on ( "s" , function ( ) { BookmarkShowcaseState . bookmarksReport . bookmarksManager . getBookmarks ( ) . then ( function ( bookmarks ) { createBookmarksList ( bookmarks ) ; } ) ; } ) ; } ) ; } function embedSharedBookmark ( enableFilterPane , bookmarkState ) { LoadSampleReportIntoSession ( ) . then ( function ( ) { const models = window [ 's' ] . models ; var accessToken = GetSession ( SessionKeys . AccessToken ) ; var embedUrl = GetSession ( SessionKeys . EmbedUrl ) ; var embedReportId = GetSession ( SessionKeys . EmbedId ) ; var permissions = models . Permissions . View ; var bookmarkName = GetBookmarkNameFromURL ( ) ; var bookmarkState = localStorage . getItem ( bookmarkName ) ; var config = { type : 's' , tokenType : models . TokenType . Embed , accessToken : accessToken , embedUrl : embedUrl , id : embedReportId , permissions : permissions , settings : { filterPaneEnabled : false , navContentPaneEnabled : false , } , bookmark : { state : bookmarkState } } ; var embedContainer = $ ( 's' ) [ 0 ] ; BookmarkShowcaseState . bookmarksReport = powerbi . embed ( embedContainer , config ) ; } ) ; } function createBookmarksList ( bookmarks ) { BookmarkShowcaseState . nextBookmarkId = 0 ; BookmarkShowcaseState . bookmarksArray = bookmarks ; var bookmarksList = $ ( 's' ) ; for ( let i = 0 ; i < BookmarkShowcaseState . bookmarksArray . length ; i ++ ) { bookmarksList . append ( buildBookmarkElement ( BookmarkShowcaseState . bookmarksArray [ i ] ) ) ; } if ( bookmarksList . length ) { let firstBookmark = $ ( 's' + BookmarkShowcaseState . bookmarksArray [ 0 ] . name ) ; onBookmarkClicked ( firstBookmark [ 0 ] ) ; } } function onBookmarkCaptureClicked ( ) { elementClicked ( 's' ) ; BookmarkShowcaseState . bookmarksReport . bookmarksManager . capture ( ) . then ( function ( capturedBookmark ) { let bookmark = { name : "s" + BookmarkShowcaseState . nextBookmarkId , displayName : "s" + BookmarkShowcaseState . nextBookmarkId , state : capturedBookmark . state } $ ( 's' ) . append ( buildBookmarkElement ( bookmark ) ) ; setBookmarkActive ( $ ( 's' + BookmarkShowcaseState . nextBookmarkId ) ) ; BookmarkShowcaseState . bookmarksArray . push ( bookmark ) ; BookmarkShowcaseState . nextBookmarkId ++ ; } ) ; } function setBookmarkActive ( bookmarkSelector ) { $ ( 's' ) . remove ( ) ; let parentNode = ( bookmarkSelector [ 0 ] ) . parentNode ; $ ( parentNode ) . append ( buildShareElement ( ) ) ; bookmarkSelector . attr ( 's' , true ) ; } function onCloseDialogClicked ( ) { $ ( 's' ) . hide ( ) ; $ ( 's' ) . hide ( ) ; } function onDialogCopyClicked ( ) { CopyTextArea ( 's' , 's' ) ; $ ( 's' ) . select ( ) ; } function onBookmarkClicked ( element ) { setBookmarkActive ( $ ( element ) ) ; const bookmarkId = $ ( element ) . attr ( 's' ) ; let currentBookmark = getBookmarkByID ( bookmarkId ) ; BookmarkShowcaseState . bookmarksReport . bookmarksManager . applyState ( currentBookmark . state ) ; } function shareBookmark ( element ) { const bookmarkId = $ ( $ ( element ) . siblings ( 's' ) ) . attr ( 's' ) ; let currentBookmark = getBookmarkByID ( bookmarkId ) ; let shareUrl = location . href . substring ( 0 , location . href . lastIndexOf ( "s" ) ) + 's' + 's' + currentBookmark . name ; localStorage . setItem ( currentBookmark . name , currentBookmark . state ) ; $ ( 's' ) . empty ( ) ; var displayNameElement = document . createTextNode ( currentBookmark . displayName ) ; $ ( 's' ) . append ( displayNameElement ) ; $ ( 's' ) . val ( shareUrl ) ; $ ( 's' ) . show ( ) ; $ ( 's' ) . show ( ) ; setTimeout ( function ( ) { $ ( 's' ) . select ( ) ; } , dialogTextSelectTimeout ) ; } function getBookmarkByID ( bookmarkId ) { return jQuery . grep ( BookmarkShowcaseState . bookmarksArray , function ( bookmark ) { return bookmark . name === bookmarkId } ) [ 0 ] ; } function buildBookmarkElement ( bookmark ) { var labelElement = document . createElement ( "s" ) ; labelElement . setAttribute ( "s" , "s" ) ; var inputElement = document . createElement ( "s" ) ; inputElement . setAttribute ( "s" , "s" ) ; inputElement . setAttribute ( "s" , "s" ) ; inputElement . setAttribute ( "s" , bookmark . name ) ; inputElement . setAttribute ( "s" , "s" ) ; labelElement . appendChild ( inputElement ) ; var spanElement = document . createElement ( "s" ) ; spanElement . setAttribute ( "s" , "s" ) ; labelElement . appendChild ( spanElement ) ; var secondSpanElement = document . createElement ( "s" ) ; secondSpanElement . setAttribute ( "s" , "s" ) ; var radioTitleElement = document . createTextNode ( bookmark . displayName ) ; secondSpanElement . appendChild ( radioTitleElement ) ; labelElement . appendChild ( secondSpanElement ) ; return labelElement ; } function buildShareElement ( ) { var imgElement = document . createElement ( "s" ) ; imgElement . setAttribute ( "s" , "s" ) ; imgElement . setAttribute ( "s" , "s" ) ; imgElement . setAttribute ( "s" , "s" ) ; return imgElement ; } function GetBookmarkNameFromURL ( ) { url = window . location . href ; let regex = new RegExp ( "s" ) , results = regex . exec ( url ) ; if ( ! results ) return null ; if ( ! results [ 0 ] ) return 's' ; return decodeURIComponent ( results [ 0 ] ) ; }	O O $complex$ O O $null$ O O O $null$ O O O $number$ O O O O O O O O O $any$ O O O O $complex$ O O O $any$ O O O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $any$ O $any$ O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $boolean$ O O O $boolean$ O O O O O O O $any$ O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $complex$ O $any$ O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O O $void$ O $any$ O O O O O O O O O O O O O $void$ O $any$ O $any$ O O $complex$ O O O $any$ O O O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $any$ O $any$ O $any$ O O $string$ O $string$ O O O O $string$ O $Storage$ O $string$ O $string$ O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $boolean$ O O O $boolean$ O O O O O $complex$ O O $string$ O $string$ O O O O $any$ O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O O O O O O $void$ O $any$ O O $complex$ O $number$ O O O $complex$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $number$ O O O $number$ O $complex$ O $any$ O $any$ O $number$ O O O $any$ O $any$ O $HTMLLabelElement$ O $complex$ O $any$ O $number$ O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O $complex$ O $any$ O O O O $any$ O O $void$ O $any$ O O O O O O O O $void$ O O O $void$ O O O O $complex$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O O O $complex$ O O $string$ O O O $complex$ O $number$ O $string$ O O O $complex$ O $number$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $HTMLLabelElement$ O $complex$ O O O $void$ O $any$ O O O $complex$ O $number$ O O O $complex$ O $any$ O $any$ O $complex$ O O $complex$ O $number$ O O O O O O O $void$ O $any$ O O $any$ O O O O $any$ O O O O $any$ O O $any$ O O O O O $any$ O $any$ O $any$ O O $any$ O $HTMLImageElement$ O O O O $any$ O $any$ O O O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O $void$ O O O $complex$ O O O O O O $any$ O O O O $any$ O O O O O $void$ O $any$ O O $void$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O O O $any$ O $any$ O $any$ O O $complex$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $void$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O $any$ O O O O O $any$ O $any$ O $any$ O O O $string$ O $Location$ O $string$ O $string$ O O O $Location$ O $string$ O $number$ O O O O O O O O O $any$ O $any$ O $Storage$ O $void$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O O O $Text$ O $Document$ O $Text$ O $any$ O $any$ O O $any$ O O O O $any$ O $Text$ O O $any$ O O O O $any$ O $string$ O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $number$ O O O O O $any$ O O O O $any$ O O O O O O O O O O $any$ O $any$ O O O $any$ O $any$ O $complex$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O O O O O $HTMLLabelElement$ O $any$ O O O $HTMLLabelElement$ O $Document$ O O O O O O $HTMLLabelElement$ O $void$ O O O O O O O $HTMLInputElement$ O $Document$ O O O O O O $HTMLInputElement$ O $void$ O O O O O O $HTMLInputElement$ O $void$ O O O O O O $HTMLInputElement$ O $void$ O O O $any$ O $any$ O O $HTMLInputElement$ O $void$ O O O O O O $HTMLLabelElement$ O $T$ O $HTMLInputElement$ O O O $HTMLSpanElement$ O $Document$ O O O O O O $HTMLSpanElement$ O $void$ O O O O O O $HTMLLabelElement$ O $T$ O $HTMLSpanElement$ O O O $HTMLSpanElement$ O $Document$ O O O O O O $HTMLSpanElement$ O $void$ O O O O O O O $Text$ O $Document$ O $Text$ O $any$ O $any$ O O $HTMLSpanElement$ O $T$ O $Text$ O O $HTMLLabelElement$ O $T$ O $HTMLSpanElement$ O O O $HTMLLabelElement$ O O O $HTMLImageElement$ O O O O $HTMLImageElement$ O $Document$ O O O O O O $HTMLImageElement$ O $void$ O O O O O O $HTMLImageElement$ O $void$ O O O O O O $HTMLImageElement$ O $void$ O O O O O O O $HTMLImageElement$ O O O $string$ O O O $any$ O $complex$ O $Location$ O $string$ O O $RegExp$ O O $RegExpConstructor$ O O O O $RegExpExecArray$ O $RegExp$ O $RegExpExecArray$ O $any$ O O O O O $RegExpExecArray$ O O O O O O O $RegExpExecArray$ O O O O O O O O $string$ O $RegExpExecArray$ O O O O O O
'js' const ColumnsNumber = { One : 0 , Two : 0 , Three : 0 } const LayoutShowcaseConsts = { margin : 0 , minPageWidth : 0 } var LayoutShowcaseState = { columns : ColumnsNumber . Three , layoutVisuals : null , layoutReport : null , layoutPageName : null } function embedCustomLayoutReport ( ) { LayoutShowcaseState . columns = ColumnsNumber . Three ; LoadLayoutShowcaseReportIntoSession ( ) . then ( function ( ) { const models = window [ 's' ] . models ; var accessToken = GetSession ( SessionKeys . AccessToken ) ; var embedUrl = GetSession ( SessionKeys . EmbedUrl ) ; var embedReportId = GetSession ( SessionKeys . EmbedId ) ; var permissions = models . Permissions . View ; var config = { type : 's' , tokenType : models . TokenType . Embed , accessToken : accessToken , embedUrl : embedUrl , id : embedReportId , permissions : permissions , settings : { filterPaneEnabled : false , navContentPaneEnabled : false } } ; var embedContainer = $ ( 's' ) [ 0 ] ; LayoutShowcaseState . layoutReport = powerbi . embed ( embedContainer , config ) ; LayoutShowcaseState . layoutReport . on ( "s" , function ( ) { LayoutShowcaseState . layoutReport . getPages ( ) . then ( function ( pages ) { let activePage = jQuery . grep ( pages , function ( page ) { return page . isActive } ) [ 0 ] ; LayoutShowcaseState . layoutPageName = activePage . name ; activePage . getVisuals ( ) . then ( function ( visuals ) { var reportVisuals = visuals . map ( function ( visual ) { return { name : visual . name , title : visual . title , checked : true } ; } ) ; createVisualsArray ( reportVisuals ) ; } ) ; } ) ; } ) ; } ) ; } function createVisualsArray ( reportVisuals ) { LayoutShowcaseState . layoutVisuals = reportVisuals . filter ( function ( visual ) { return visual . title !== undefined ; } ) ; $ ( 's' ) . empty ( ) ; for ( let i = 0 ; i < LayoutShowcaseState . layoutVisuals . length ; i ++ ) { $ ( 's' ) . append ( buildVisualElement ( LayoutShowcaseState . layoutVisuals [ i ] ) ) ; } renderVisuals ( ) ; } function renderVisuals ( ) { if ( ! LayoutShowcaseState . layoutReport || ! LayoutShowcaseState . layoutVisuals ) return ; const models = window [ 's' ] . models ; let pageWidth = $ ( 's' ) . width ( ) ; let pageHeight = $ ( 's' ) . height ( ) ; let visualsTotalWidth = pageWidth - ( LayoutShowcaseConsts . margin * ( LayoutShowcaseState . columns + 0 ) ) ; let width = ( LayoutShowcaseState . columns === ColumnsNumber . Two ) ? ( visualsTotalWidth / 0 ) : ( visualsTotalWidth / 0 ) ; if ( LayoutShowcaseState . columns === ColumnsNumber . One ) { pageWidth = width + 0 * LayoutShowcaseConsts . margin ; if ( pageWidth < LayoutShowcaseConsts . minPageWidth ) { pageWidth = LayoutShowcaseConsts . minPageWidth ; width = LayoutShowcaseConsts . minPageWidth - 0 * LayoutShowcaseConsts . margin ; } } const height = width * ( 0 / 0 ) ; let x = LayoutShowcaseConsts . margin , y = LayoutShowcaseConsts . margin ; let checkedVisuals = LayoutShowcaseState . layoutVisuals . filter ( function ( visual ) { return visual . checked ; } ) ; const lines = Math . ceil ( checkedVisuals . length / LayoutShowcaseState . columns ) ; pageHeight = Math . max ( pageHeight , ( ( lines * height ) + ( ( lines + 0 ) * LayoutShowcaseConsts . margin ) ) ) ; let visualsLayout = { } ; for ( let i = 0 ; i < checkedVisuals . length ; i ++ ) { visualsLayout [ checkedVisuals [ i ] . name ] = { x : x , y : y , width : width , height : height , displayState : { mode : models . VisualContainerDisplayMode . Visible } } x += width + LayoutShowcaseConsts . margin ; if ( x + width > pageWidth ) { x = LayoutShowcaseConsts . margin ; y += height + LayoutShowcaseConsts . margin ; } } let pagesLayout = { } ; pagesLayout [ LayoutShowcaseState . layoutPageName ] = { defaultLayout : { displayState : { mode : models . VisualContainerDisplayMode . Hidden } } , visualsLayout : visualsLayout } ; let settings = { layoutType : models . LayoutType . Custom , customLayout : { pageSize : { type : models . PageSizeType . Custom , width : pageWidth - 0 , height : pageHeight - 0 } , displayOption : models . DisplayOption . FitToPage , pagesLayout : pagesLayout } } ; if ( pageWidth !== $ ( 's' ) . width ( ) || pageHeight !== $ ( 's' ) . height ( ) ) { settings . customLayout . displayOption = models . DisplayOption . ActualSize ; } settings . background = ( LayoutShowcaseState . columns === ColumnsNumber . One ) ? models . BackgroundType . Default : models . BackgroundType . Transparent ; LayoutShowcaseState . layoutReport . updateSettings ( settings ) ; } function onCheckboxClicked ( checkbox ) { let visual = jQuery . grep ( LayoutShowcaseState . layoutVisuals , function ( visual ) { return visual . name === checkbox . value } ) [ 0 ] ; visual . checked = $ ( checkbox ) . is ( 's' ) ; renderVisuals ( ) ; } ; function onColumnsClicked ( num ) { LayoutShowcaseState . columns = num ; setColumnButtonActive ( num ) ; renderVisuals ( ) ; } function buildVisualElement ( visual ) { var labelElement = document . createElement ( "s" ) ; labelElement . setAttribute ( "s" , "s" ) ; var inputElement = document . createElement ( "s" ) ; inputElement . setAttribute ( "s" , "s" ) ; inputElement . setAttribute ( "s" , 's' + visual . name ) ; inputElement . setAttribute ( "s" , visual . name ) ; inputElement . setAttribute ( "s" , "s" ) ; inputElement . setAttribute ( "s" , "s" ) ; labelElement . appendChild ( inputElement ) ; var spanElement = document . createElement ( "s" ) ; spanElement . setAttribute ( "s" , "s" ) ; labelElement . appendChild ( spanElement ) ; var secondSpanElement = document . createElement ( "s" ) ; secondSpanElement . setAttribute ( "s" , "s" ) ; var checkboxTitleElement = document . createTextNode ( visual . title ) ; secondSpanElement . appendChild ( checkboxTitleElement ) ; labelElement . appendChild ( secondSpanElement ) ; return labelElement ; } function setColumnButtonActive ( num ) { const active_btn_class = "s" ; $ ( 's' ) . removeClass ( active_btn_class ) ; $ ( 's' ) . removeClass ( active_btn_class ) ; $ ( 's' ) . removeClass ( active_btn_class ) ; if ( num === ColumnsNumber . Three ) { $ ( 's' ) . addClass ( active_btn_class ) ; } else if ( num === ColumnsNumber . Two ) { $ ( 's' ) . addClass ( active_btn_class ) ; } else { $ ( 's' ) . addClass ( active_btn_class ) ; } }	O O $complex$ O O $number$ O O O $number$ O O O $number$ O O O O $complex$ O O $number$ O O O $number$ O O O O $complex$ O O $number$ O $complex$ O $number$ O $null$ O O O $null$ O O O $null$ O O O O $void$ O O O $complex$ O $number$ O $complex$ O $number$ O $any$ O O O $any$ O O O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $any$ O $any$ O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $boolean$ O O O $boolean$ O O O O O O $any$ O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $complex$ O $any$ O $any$ O O O O O O O $complex$ O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $complex$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $boolean$ O O O O O O O $void$ O $any$ O O O O O O O O O O O O O O O O $void$ O $any$ O O $complex$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $undefined$ O O O O $any$ O O O O $any$ O O O O O O $number$ O O O $number$ O $complex$ O $any$ O $any$ O $number$ O O O $any$ O O O O $any$ O $HTMLLabelElement$ O $complex$ O $any$ O $number$ O O O O O $void$ O O O O O $void$ O O O O O O $complex$ O $any$ O O $complex$ O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $number$ O $any$ O O $complex$ O $number$ O O $complex$ O $number$ O O O O O O $number$ O O $complex$ O $number$ O $complex$ O $number$ O O O $number$ O O O O O $number$ O O O O O O $complex$ O $number$ O $complex$ O $number$ O O $any$ O $number$ O O O $complex$ O $number$ O O O $any$ O $complex$ O $number$ O O $any$ O $complex$ O $number$ O $number$ O $complex$ O $number$ O O O $complex$ O $number$ O O O O $number$ O $number$ O O O O O O O O $number$ O $complex$ O $number$ O $number$ O $complex$ O $number$ O O $any$ O $complex$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $number$ O $Math$ O $number$ O $any$ O $any$ O $complex$ O $number$ O O $any$ O $Math$ O $number$ O $any$ O O O $number$ O $number$ O O O O $number$ O O O O $complex$ O $number$ O O O O O ${}$ O O O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O ${}$ O $any$ O $number$ O O $any$ O O O $number$ O $number$ O $number$ O $number$ O $number$ O $number$ O $number$ O $number$ O $complex$ O O $any$ O $any$ O $any$ O $any$ O O $number$ O $number$ O $complex$ O $number$ O O O $number$ O $number$ O $any$ O O $number$ O $complex$ O $number$ O $number$ O $number$ O $complex$ O $number$ O O O O ${}$ O O O O ${}$ O $complex$ O $any$ O O O $complex$ O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O O ${}$ O ${}$ O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $number$ O $any$ O O O $number$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O ${}$ O ${}$ O O O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O O $complex$ O $complex$ O $any$ O $any$ O $any$ O $any$ O O $complex$ O $any$ O O $complex$ O $number$ O $complex$ O $number$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O $any$ O $any$ O $complex$ O O O O $void$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O $void$ O O O O O O $void$ O $any$ O O $complex$ O $number$ O $any$ O $void$ O $any$ O O $void$ O O O O O $HTMLLabelElement$ O $any$ O O O $HTMLLabelElement$ O $Document$ O O O O O O $HTMLLabelElement$ O $void$ O O O O O O O $HTMLInputElement$ O $Document$ O O O O O O $HTMLInputElement$ O $void$ O O O O O O $HTMLInputElement$ O $void$ O O O O O $any$ O $any$ O O $HTMLInputElement$ O $void$ O O O $any$ O $any$ O O $HTMLInputElement$ O $void$ O O O O O O $HTMLInputElement$ O $void$ O O O O O O $HTMLLabelElement$ O $T$ O $HTMLInputElement$ O O O $HTMLSpanElement$ O $Document$ O O O O O O $HTMLSpanElement$ O $void$ O O O O O O $HTMLLabelElement$ O $T$ O $HTMLSpanElement$ O O O $HTMLSpanElement$ O $Document$ O O O O O O $HTMLSpanElement$ O $void$ O O O O O O O $Text$ O $Document$ O $Text$ O $any$ O $any$ O O $HTMLSpanElement$ O $T$ O $Text$ O O $HTMLLabelElement$ O $T$ O $HTMLSpanElement$ O O O $HTMLLabelElement$ O O O $void$ O $any$ O O O O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O O O $any$ O $complex$ O $number$ O O $any$ O O O O $any$ O O O O O O O O $any$ O $complex$ O $number$ O O $any$ O O O O $any$ O O O O O O O $any$ O O O O $any$ O O O O O O
'js' let InsightToActionShowcaseState = { report : null , data : null , allChecked : false , tooltipNextPressed : false , } const dialogTooltipTimeout = 0 ; const sentMessageTimeout = 0 ; function embedInsightsToActionReport ( ) { InsightToActionShowcaseState . tooltipNextPressed = false ; return LoadInsightToActionShowcaseReportIntoSession ( ) . then ( function ( ) { const models = window [ 's' ] . models ; let accessToken = GetSession ( SessionKeys . AccessToken ) ; let embedUrl = GetSession ( SessionKeys . EmbedUrl ) ; let embedReportId = GetSession ( SessionKeys . EmbedId ) ; let permissions = models . Permissions . View ; const 0 = "s" const tableVisualName = "s" ; let config = { type : 's' , tokenType : models . TokenType . Embed , accessToken : accessToken , embedUrl : embedUrl , id : embedReportId , permissions : permissions , settings : { filterPaneEnabled : false , navContentPaneEnabled : false , extensions : [ { command : { name : "s" , title : "s" , icon : 0 , selector : { $schema : "s" , visualName : tableVisualName } , extend : { visualOptionsMenu : { title : "s" , menuLocation : models . MenuLocation . Top , } } } } , ] , commands : [ { spotlight : { selector : { visualName : tableVisualName } , displayOption : models . CommandDisplayOption . Hidden , } , exportData : { selector : { visualName : tableVisualName } , displayOption : models . CommandDisplayOption . Hidden , } , seeData : { selector : { visualName : tableVisualName } , displayOption : models . CommandDisplayOption . Hidden , } , } ] } , } ; let embedContainer = $ ( 's' ) [ 0 ] ; InsightToActionShowcaseState . report = powerbi . embed ( embedContainer , config ) ; InsightToActionShowcaseState . report . on ( "s" , function ( ) { setTooltipPosition ( ) ; $ ( 's' ) . addClass ( "s" ) ; InsightToActionShowcaseState . report . off ( "s" ) ; } ) ; InsightToActionShowcaseState . report . on ( "s" , function ( event ) { if ( event . detail . command === "s" ) { InsightToActionShowcaseState . report . getPages ( ) . then ( function ( pages ) { let activePage = pages . filter ( function ( page ) { return page . isActive } ) [ 0 ] ; activePage . getVisuals ( ) . then ( function ( visuals ) { let visual = visuals . filter ( function ( visual ) { return visual . name === tableVisualName ; } ) [ 0 ] ; visual . exportData ( models . ExportDataType . Underlying ) . then ( handleExportData ) ; } ) ; } ) ; } } ) ; } ) ; } function handleExportData ( result ) { let resultData = parseData ( result . data ) ; InsightToActionShowcaseState . data = filterTable ( [ "s" , "s" , "s" ] , resultData ) ; let table = createTable ( InsightToActionShowcaseState . data ) $ ( "s" ) . empty ( ) ; $ ( "s" ) . append ( table ) $ ( 's' ) . removeClass ( "s" ) ; $ ( 's' ) . show ( ) ; $ ( 's' ) . show ( ) ; setTimeout ( function ( ) { $ ( 's' ) . addClass ( "s" ) ; } , dialogTooltipTimeout ) ; } function parseData ( data ) { let result = [ ] ; data . split ( "s" ) . forEach ( function ( row ) { if ( row !== "s" ) { let rowArray = [ ] ; row . split ( "s" ) . forEach ( function ( cell ) { rowArray . push ( cell ) ; } ) ; result . push ( rowArray ) ; } } ) ; return result ; } function filterTable ( filterValues , table ) { for ( let i = 0 ; i < filterValues . length ; i ++ ) { valueIndex = table [ 0 ] . indexOf ( table [ 0 ] . filter ( function ( value ) { return value === filterValues [ i ] } ) [ 0 ] ) ; for ( let j = 0 ; j < table . length ; j ++ ) { table [ j ] . splice ( valueIndex , 0 ) ; } } return table ; } function onTootipClicked ( tooltipId ) { if ( ! InsightToActionShowcaseState . tooltipNextPressed && tooltipId === "s" ) { let newText = document . createTextNode ( "s" ) ; let startTooltipSubText = $ ( 's' ) ; const textOldHeight = startTooltipSubText [ 0 ] . offsetHeight ; startTooltipSubText . empty ( ) ; startTooltipSubText . append ( newText ) ; startTooltipSubText [ 0 ] . setAttribute ( "s" , "s" + textOldHeight + "s" ) ; let newTooltipNumber = document . createTextNode ( "s" ) ; $ ( 's' ) . empty ( ) ; $ ( 's' ) . append ( newTooltipNumber ) ; let newBtnText = document . createTextNode ( "s" ) ; $ ( 's' ) . empty ( ) ; $ ( 's' ) . append ( newBtnText ) ; InsightToActionShowcaseState . tooltipNextPressed = true ; } else { $ ( 's' + tooltipId ) . hide ( ) ; } } function onCloseDialog ( id ) { $ ( 's' ) . hide ( ) ; $ ( 's' ) . hide ( ) ; $ ( 's' + id ) . hide ( ) ; } function onSendClicked ( name ) { let headerText = document . createTextNode ( "s" + name + "s" ) ; $ ( 's' ) . empty ( ) ; $ ( 's' ) . append ( headerText ) ; const promotionToSend = name === "s" ? "s" : "s" ; let bodyText = "s" + promotionToSend + "s" ; $ ( 's' ) . val ( bodyText ) ; $ ( 's' ) . hide ( ) ; $ ( 's' ) . hide ( ) ; $ ( 's' ) . show ( ) ; } function onSendDialogSendClicked ( ) { $ ( 's' ) . hide ( ) ; $ ( 's' ) . hide ( ) ; $ ( 's' ) . addClass ( "s" ) ; setTimeout ( function ( ) { $ ( 's' ) . removeClass ( "s" ) ; } , sentMessageTimeout ) ; } function createTable ( tableData ) { let table = document . createElement ( 's' ) ; let tableBody = document . createElement ( 's' ) ; let rowIndex = 0 ; InsightToActionShowcaseState . allChecked = true ; tableData . forEach ( function ( rowData ) { let row = document . createElement ( 's' ) ; if ( rowIndex === 0 ) { let cell = document . createElement ( 's' ) ; cell . setAttribute ( "s" , "s" ) ; cell . setAttribute ( "s" , "s" ) ; cell . appendChild ( document . createTextNode ( 's' ) ) ; row . appendChild ( cell ) ; } else { let cell = document . createElement ( 's' ) ; let checkboxElement = document . createElement ( "s" ) ; checkboxElement . setAttribute ( "s" , "s" ) ; checkboxElement . setAttribute ( "s" , "s" ) ; checkboxElement . setAttribute ( "s" , "s" + rowIndex ) ; checkboxElement . checked = true ; cell . appendChild ( checkboxElement ) ; row . appendChild ( cell ) ; } let isNameCell = true ; rowData . forEach ( function ( cellData ) { let cell ; if ( rowIndex !== 0 ) { cell = document . createElement ( 's' ) ; if ( isNameCell ) { cell . setAttribute ( "s" , "s" ) ; isNameCell = false ; } } else { cell = document . createElement ( 's' ) ; } cell . appendChild ( document . createTextNode ( cellData ) ) ; row . appendChild ( cell ) ; } ) ; tableBody . appendChild ( row ) ; rowIndex ++ ; } ) ; table . appendChild ( tableBody ) ; return table ; } function onCheckAllClicked ( ) { let checkboxes = document . getElementsByName ( "s" ) ; for ( let i = 0 ; i < checkboxes . length ; i ++ ) { checkboxes [ i ] . checked = ! InsightToActionShowcaseState . allChecked ; } InsightToActionShowcaseState . allChecked = ! InsightToActionShowcaseState . allChecked ; } function setTooltipPosition ( ) { let startTooltip = document . getElementById ( "s" ) ; let embedContainer = document . getElementById ( 's' ) ; let textHeight = document . getElementById ( 's' ) . offsetHeight ; let containerHeight = embedContainer . offsetWidth * 0 ; const top = textHeight + 0 + ( ( embedContainer . offsetHeight - containerHeight ) / 0 ) - startTooltip . offsetHeight + ( 0 * embedContainer . offsetHeight ) ; const left = ( embedContainer . offsetWidth - 0 ) * 0 - 0 ; startTooltip . setAttribute ( "s" , "s" + top + "s" + left + "s" ) ; }	O O $complex$ O O $null$ O O O $null$ O O O $boolean$ O O O $boolean$ O O O O O O O O O O O O O O O $any$ O O O $complex$ O $boolean$ O O O O $any$ O O O $any$ O O O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $boolean$ O O O $boolean$ O O O $complex$ O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O $complex$ O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O $complex$ O O O $complex$ O O $complex$ O O $string$ O O O O $any$ O $any$ O $any$ O $any$ O O O $complex$ O O $complex$ O O $string$ O O O O $any$ O $any$ O $any$ O $any$ O O O $complex$ O O $complex$ O O $string$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $complex$ O $any$ O $any$ O O O O O O O $void$ O O O $any$ O O O O $any$ O O O O $complex$ O $any$ O $any$ O O O O O O O $complex$ O $any$ O $any$ O O O O O $any$ O O O O $any$ O $any$ O $any$ O O O O $complex$ O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $void$ O O O O O O O O O O O O O O O O O $void$ O $any$ O O O $any[]$ O $any[]$ O $any$ O $any$ O O $complex$ O $any$ O $any$ O O O O O O O O O $any[]$ O O O $HTMLTableElement$ O $HTMLTableElement$ O $complex$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O O $any$ O $HTMLTableElement$ O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $number$ O O O O O $any$ O O O O $any$ O O O O O O O O O O O $any[]$ O $any$ O O O $any[]$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O $any[]$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O $any[]$ O $number$ O $any$ O O O O O $any[]$ O $number$ O $any[]$ O O O O O O O $any[]$ O O O $any$ O $any$ O $any$ O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $number$ O O O O O O O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O $any$ O $number$ O O $any$ O $any$ O O O O O O O $any$ O O O $void$ O $any$ O O O O O $complex$ O $boolean$ O $any$ O O O O O $Text$ O $Document$ O $Text$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $Text$ O O $any$ O O O O $any$ O O O O O $any$ O O O O O $Text$ O $Document$ O $Text$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O $Text$ O O O $Text$ O $Document$ O $Text$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O $Text$ O O $complex$ O $boolean$ O O O O O O $any$ O O O $any$ O O $any$ O O O O O O $void$ O $any$ O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O $any$ O O $any$ O O O O O $void$ O $any$ O O O $Text$ O $Document$ O $Text$ O O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O $Text$ O O O O O $any$ O O O O O O O O $string$ O O O O O O O $any$ O O O O $any$ O $string$ O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O $number$ O O O O O $any$ O O O O $any$ O O O O O O O O O O O $HTMLTableElement$ O $any$ O O O $HTMLTableElement$ O $Document$ O O O O O O O $HTMLTableSectionElement$ O $Document$ O O O O O O O $number$ O O O $complex$ O $boolean$ O O O $any$ O $any$ O O O $any$ O O O $HTMLTableRowElement$ O $Document$ O O O O O O O O $number$ O O O O O $HTMLTableHeaderCellElement$ O $Document$ O O O O O O $HTMLTableHeaderCellElement$ O $void$ O O O O O O $HTMLTableHeaderCellElement$ O $void$ O O O O O O $HTMLTableHeaderCellElement$ O $T$ O $Document$ O $Text$ O O O O O $HTMLTableRowElement$ O $T$ O $HTMLTableHeaderCellElement$ O O O O O O $HTMLTableDataCellElement$ O $Document$ O O O O O O O $HTMLInputElement$ O $Document$ O O O O O O $HTMLInputElement$ O $void$ O O O O O O $HTMLInputElement$ O $void$ O O O O O O $HTMLInputElement$ O $void$ O O O O O $number$ O O $HTMLInputElement$ O $boolean$ O O O $HTMLTableDataCellElement$ O $T$ O $HTMLInputElement$ O O $HTMLTableRowElement$ O $T$ O $HTMLTableDataCellElement$ O O O O $boolean$ O O O $any$ O $any$ O O O $any$ O O O $any$ O O O $number$ O O O O $any$ O $Document$ O O O O O O O O $boolean$ O O $HTMLTableDataCellElement$ O $void$ O O O O O O $boolean$ O O O O O O O $any$ O $Document$ O O O O O O O $HTMLTableHeaderCellElement$ O $T$ O $Document$ O $Text$ O $any$ O O O $HTMLTableRowElement$ O $T$ O $HTMLTableHeaderCellElement$ O O O O O $HTMLTableSectionElement$ O $T$ O $HTMLTableRowElement$ O O $number$ O O O O O $HTMLTableElement$ O $T$ O $HTMLTableSectionElement$ O O O $HTMLTableElement$ O O O $void$ O O O O $NodeListOf<HTMLElement>$ O $Document$ O $NodeListOf<HTMLElement>$ O O O O O O O $number$ O O O $number$ O $NodeListOf<HTMLElement>$ O $number$ O $number$ O O O $NodeListOf<HTMLElement>$ O $number$ O O $any$ O O $complex$ O $boolean$ O O $complex$ O $boolean$ O O $complex$ O $boolean$ O O O $void$ O O O O $HTMLElement$ O $Document$ O $HTMLElement$ O O O O O $HTMLElement$ O $Document$ O $HTMLElement$ O O O O O $number$ O $Document$ O $HTMLElement$ O O O O $number$ O O $number$ O $HTMLElement$ O $number$ O O O O $number$ O $number$ O O O O O $HTMLElement$ O $number$ O $number$ O O O O O $HTMLElement$ O $number$ O O O O $HTMLElement$ O $number$ O O O $number$ O O $HTMLElement$ O $number$ O O O O O O O O $HTMLElement$ O $void$ O O O O O $number$ O O O $number$ O O O O O
'js' let VisualCreatorShowcaseState = { report : null , page : null , visual : null , visualType : null , dataRoles : { Legend : null , Values : null , Value : null , Axis : null , Tooltips : null , 's' : null , Category : null , Breakdown : null , } , dataFieldsCount : 0 , properties : { legend : true , xAxis : true , yAxis : true , title : true , titleText : null , titleAlign : null } , } const visualTypeToDataRoles = [ { name : 's' , displayName : 's' , dataRoles : [ 's' , 's' , 's' ] } , { name : 's' , displayName : 's' , dataRoles : [ 's' , 's' , 's' ] } , { name : 's' , displayName : 's' , dataRoles : [ 's' , 's' , 's' ] } , { name : 's' , displayName : 's' , dataRoles : [ 's' , 's' , 's' ] } , ] ; const dataRolesToFields = [ { dataRole : 's' , Fields : [ 's' , 's' , 's' ] } , { dataRole : 's' , Fields : [ 's' , 's' , 's' ] } , { dataRole : 's' , Fields : [ 's' , 's' , 's' ] } , { dataRole : 's' , Fields : [ 's' , 's' , 's' ] } , { dataRole : 's' , Fields : [ 's' , 's' , 's' ] } , { dataRole : 's' , Fields : [ 's' , 's' , 's' ] } , { dataRole : 's' , Fields : [ 's' , 's' , 's' ] } , { dataRole : 's' , Fields : [ 's' , 's' , 's' ] } , ] ; const schemas = { column : 's' , measure : 's' , property : 's' , } ; const dataFieldsTargets = { State : { column : 's' , table : 's' , schema : schemas . column } , Region : { column : 's' , table : 's' , schema : schemas . column } , District : { column : 's' , table : 's' , schema : schemas . column } , Manufacturer : { column : 's' , table : 's' , schema : schemas . column } , TotalUnits : { measure : 's' , table : 's' , schema : schemas . measure } , TotalCategoryVolume : { measure : 's' , table : 's' , schema : schemas . measure } , TotalCompeteVolume : { measure : 's' , table : 's' , schema : schemas . measure } , Date : { measure : 's' , table : 's' , schema : schemas . measure } , } ; const showcaseProperties = [ 's' , 's' , 's' ] ; const visualTypeProperties = { pieChart : [ 's' ] , columnChart : [ 's' , 's' ] , areaChart : [ 's' , 's' , 's' ] , waterfallChart : [ 's' , 's' , 's' ] , } ; const disabledClass = "s" ; function embedQuickVisualCreatorReport ( ) { return LoadQuickVisualCreatorShowcaseReportIntoSession ( ) . then ( function ( ) { $ ( "s" ) . show ( ) ; let models = window [ 's' ] . models ; let accessToken = GetSession ( SessionKeys . AccessToken ) ; let embedUrl = GetSession ( SessionKeys . EmbedUrl ) ; let embedReportId = GetSession ( SessionKeys . EmbedId ) ; let permissions = models . Permissions . View ; let config = { type : 's' , tokenType : models . TokenType . Embed , accessToken : accessToken , embedUrl : embedUrl , id : embedReportId , permissions : permissions , settings : { filterPaneEnabled : false , navContentPaneEnabled : false , layoutType : models . LayoutType . Custom , customLayout : { pageSize : { type : models . PageSizeType . Custom , width : $ ( 's' ) . width ( ) , height : $ ( 's' ) . height ( ) } , displayOption : models . DisplayOption . ActualSize , } } } ; let embedContainer = $ ( 's' ) [ 0 ] ; VisualCreatorShowcaseState . report = powerbi . embed ( embedContainer , config ) ; VisualCreatorShowcaseState . report . on ( "s" , function ( ) { VisualCreatorShowcaseState . report . getPages ( ) . then ( function ( pages ) { pages [ 0 ] . setActive ( ) ; VisualCreatorShowcaseState . page = pages [ 0 ] ; } ) ; updateAvailableVisualTypes ( ) ; $ ( "s" ) . removeClass ( disabledClass ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . addClass ( "s" ) $ ( 's' ) . text ( 's' ) ; $ ( "s" ) . show ( ) ; VisualCreatorShowcaseState . report . off ( "s" ) ; } ) ; } ) ; } function initializeDropdowns ( ) { let x , i , j , selElmnt , a , b , c ; x = document . getElementsByClassName ( "s" ) ; for ( i = 0 ; i < x . length ; i ++ ) { selElmnt = x [ i ] . getElementsByTagName ( "s" ) [ 0 ] ; a = document . createElement ( "s" ) ; a . setAttribute ( "s" , "s" ) ; a . setAttribute ( "s" , "s" + i ) ; a . innerHTML = selElmnt . options [ selElmnt . selectedIndex ] . innerHTML ; x [ i ] . appendChild ( a ) ; b = document . createElement ( "s" ) ; b . setAttribute ( "s" , "s" ) ; for ( j = 0 ; j < selElmnt . length ; j ++ ) { c = document . createElement ( "s" ) ; c . innerHTML = selElmnt . options [ j ] . innerHTML ; c . addEventListener ( "s" , function ( e ) { let y , i , k , s , h ; s = this . parentNode . parentNode . getElementsByTagName ( "s" ) [ 0 ] ; h = this . parentNode . previousSibling ; for ( i = 0 ; i < s . length ; i ++ ) { if ( s . options [ i ] . innerHTML == this . innerHTML ) { s . selectedIndex = i ; h . innerHTML = this . innerHTML ; y = this . parentNode . getElementsByClassName ( "s" ) ; for ( k = 0 ; k < y . length ; k ++ ) { y [ k ] . removeAttribute ( "s" ) ; } this . setAttribute ( "s" , "s" ) ; break ; } } h . click ( ) ; if ( s . id == 's' ) { changeVisualType ( h . innerHTML ) ; } else { updateDataRoleField ( s . parentNode . parentNode . children [ 0 ] . id , h . innerHTML ) ; } } ) ; b . appendChild ( c ) ; } x [ i ] . appendChild ( b ) ; a . addEventListener ( "s" , function ( e ) { e . stopPropagation ( ) ; closeAllSelect ( this ) ; this . nextSibling . classList . toggle ( "s" ) ; this . classList . toggle ( "s" ) ; } ) ; } } function closeAllSelect ( elmnt ) { let x , y , i , arrNo = [ ] ; x = document . getElementsByClassName ( "s" ) ; y = document . getElementsByClassName ( "s" ) ; for ( i = 0 ; i < y . length ; i ++ ) { if ( elmnt == y [ i ] ) { arrNo . push ( i ) } else { y [ i ] . classList . remove ( "s" ) ; } } for ( i = 0 ; i < x . length ; i ++ ) { if ( arrNo . indexOf ( i ) ) { x [ i ] . classList . add ( "s" ) ; } } } function changeVisualType ( visualTypeDisplayName ) { let visualTypeData = visualTypeToDataRoles . filter ( ( function ( e ) { return e . displayName === visualTypeDisplayName } ) ) [ 0 ] ; let visualTypeName = visualTypeData . name ; VisualCreatorShowcaseState . report . getVisualCapabilities ( visualTypeName ) . then ( function ( capabilities ) { if ( ! validateDataRoles ( capabilities , visualTypeData . dataRoles ) ) { resetVisualGenerator ( ) ; handleInvalidDataRoles ( ) ; return ; } $ ( 's' ) . removeClass ( disabledClass ) ; $ ( 's' ) . addClass ( disabledClass ) ; resetGeneratorProperties ( ) ; $ ( 's' ) . text ( 's' ) ; $ ( 's' ) . show ( ) ; VisualCreatorShowcaseState . dataFieldsCount = 0 ; if ( ! VisualCreatorShowcaseState . visual ) { VisualCreatorShowcaseState . page . createVisual ( visualTypeName , getVisualLayout ( ) ) . then ( function ( ) { updateShowCaseVisType ( visualTypeName , visualTypeData . dataRoles ) ; } ) ; } else if ( visualTypeName != VisualCreatorShowcaseState . visualType ) { VisualCreatorShowcaseState . page . deleteVisual ( VisualCreatorShowcaseState . visual . name ) . then ( function ( ) { VisualCreatorShowcaseState . page . createVisual ( visualTypeName , getVisualLayout ( ) ) . then ( function ( ) { updateShowCaseVisType ( visualTypeName , visualTypeData . dataRoles ) ; } ) ; } ) ; } } ) ; } function updateShowCaseVisType ( visualTypeName , dataRoles ) { updateCurrentVisualState ( visualTypeName ) ; resetGeneratorDataRoles ( ) ; updateAvailableDataRoles ( dataRoles ) ; updateDropdownsVisibility ( ) ; } function updateCurrentVisualState ( visualTypeName ) { VisualCreatorShowcaseState . page . getVisuals ( ) . then ( function ( visuals ) { VisualCreatorShowcaseState . visual = visuals [ 0 ] VisualCreatorShowcaseState . visualType = visualTypeName ; if ( visualTypeName === "s" ) { VisualCreatorShowcaseState . visual . setProperty ( propertyToSelector ( 's' ) , { schema : schemas . property , value : true } ) ; } VisualCreatorShowcaseState . visual . setProperty ( propertyToSelector ( 's' ) , { schema : schemas . property , value : 0 } ) ; VisualCreatorShowcaseState . visual . setProperty ( propertyToSelector ( 's' ) , { schema : schemas . property , value : 's' } ) ; $ ( 's' ) . removeClass ( "s" ) ; for ( let i = 0 ; i < showcaseProperties . length ; i ++ ) { if ( visualTypeProperties [ visualTypeName ] . indexOf ( showcaseProperties [ i ] ) < 0 ) { $ ( 's' + showcaseProperties [ i ] + 's' ) . addClass ( "s" ) ; } } } ) ; } function updateAvailableDataRoles ( dataRoles ) { let dataRolesNamesElements = document . querySelectorAll ( 's' ) ; for ( let i = 0 ; i < dataRoles . length ; i ++ ) { dataRolesNamesElements [ i ] . innerHTML = dataRoles [ i ] + 's' ; dataRolesNamesElements [ i ] . id = dataRoles [ i ] ; let dataFields = dataRolesToFields . filter ( function ( e ) { return e . dataRole === dataRoles [ i ] } ) [ 0 ] . Fields ; updateAvailableDataFields ( dataRolesNamesElements [ i ] . parentElement , dataFields ) ; } } function updateAvailableDataFields ( dataRoleElement , dataFields ) { let fieldDivElements = dataRoleElement . querySelector ( 's' ) . children ; let fieldOptionElements = dataRoleElement . querySelectorAll ( 's' ) ; for ( let i = 0 ; i < dataFields . length ; i ++ ) { fieldDivElements [ i ] . innerHTML = dataFields [ i ] ; fieldOptionElements [ i + 0 ] . innerHTML = dataFields [ i ] ; } } function updateAvailableVisualTypes ( ) { let typesDivElements = $ ( 's' ) [ 0 ] . children ; let typesOptionElements = $ ( 's' ) [ 0 ] . children ; for ( let i = 0 ; i < visualTypeToDataRoles . length ; i ++ ) { typesDivElements [ i ] . innerHTML = visualTypeToDataRoles [ i ] . displayName ; typesOptionElements [ i + 0 ] . innerHTML = visualTypeToDataRoles [ i ] . displayName ; } } function printVisual ( ) { if ( ! VisualCreatorShowcaseState . visual ) return ; VisualCreatorShowcaseState . report . print ( ) ; } function updateDataRoleField ( dataRole , field ) { if ( field != VisualCreatorShowcaseState . dataRoles [ dataRole ] ) { VisualCreatorShowcaseState . visual . getCapabilities ( ) . then ( function ( capabilities ) { let dataRoleName = capabilities . dataRoles . filter ( function ( dr ) { return dr . displayName === dataRole } ) [ 0 ] . name ; let dataFieldKey = field . replace ( "s" , 's' ) ; if ( VisualCreatorShowcaseState . dataRoles [ dataRole ] ) { VisualCreatorShowcaseState . visual . removeDataField ( dataRoleName , 0 ) . then ( function ( res ) { VisualCreatorShowcaseState . dataFieldsCount -- ; if ( VisualCreatorShowcaseState . dataFieldsCount === 0 ) { VisualCreatorShowcaseState . page . createVisual ( VisualCreatorShowcaseState . visualType , getVisualLayout ( ) ) . then ( function ( ) { VisualCreatorShowcaseState . page . getVisuals ( ) . then ( function ( visuals ) { VisualCreatorShowcaseState . visual = visuals [ 0 ] ; VisualCreatorShowcaseState . dataFieldsCount ++ ; VisualCreatorShowcaseState . visual . addDataField ( dataRoleName , dataFieldsTargets [ dataFieldKey ] ) . then ( function ( ) { disableSelectedDataFields ( dataRole , field ) ; } ) ; } ) ; } ) ; } else { VisualCreatorShowcaseState . dataFieldsCount ++ ; VisualCreatorShowcaseState . visual . addDataField ( dataRoleName , dataFieldsTargets [ dataFieldKey ] ) . then ( function ( ) { disableSelectedDataFields ( dataRole , field ) ; } ) ; } } ) ; } else { VisualCreatorShowcaseState . visual . addDataField ( dataRoleName , dataFieldsTargets [ dataFieldKey ] ) . then ( function ( ) { disableSelectedDataFields ( dataRole , field ) ; VisualCreatorShowcaseState . dataFieldsCount ++ ; if ( VisualCreatorShowcaseState . dataFieldsCount > 0 ) { $ ( "s" ) . hide ( ) ; $ ( 's' ) . removeClass ( disabledClass ) ; } } ) ; } } ) ; } } function disableSelectedDataFields ( dataRole , field ) { VisualCreatorShowcaseState . dataRoles [ dataRole ] = field ; updateDropdownsVisibility ( ) ; } function updateDropdownsVisibility ( ) { $ ( 's' ) . show ( ) ; let selected = $ ( 's' ) ; selected . each ( function ( ) { let selectedValue = $ ( this ) . text ( ) ; $ ( 's' + selectedValue + 's' ) . hide ( ) ; } ) ; } function getVisualLayout ( ) { let models = window [ 's' ] . models ; return { width : 0 * $ ( 's' ) . width ( ) , height : 0 * $ ( 's' ) . height ( ) , x : ( 0 * $ ( 's' ) . width ( ) ) / 0 , y : ( 0 * $ ( 's' ) . height ( ) ) / 0 , displayState : { mode : models . VisualContainerDisplayMode . Visible } } ; } function toggleProperty ( propertyName ) { if ( ! VisualCreatorShowcaseState . visual ) return ; let newValue = $ ( 's' + propertyName + 's' ) [ 0 ] . checked ; VisualCreatorShowcaseState . properties [ propertyName ] = newValue ; VisualCreatorShowcaseState . visual . setProperty ( propertyToSelector ( propertyName ) , { schema : schemas . property , value : newValue } ) ; } function onAlignClicked ( direction ) { if ( ! VisualCreatorShowcaseState . visual ) return ; $ ( "s" ) . removeClass ( "s" ) ; $ ( "s" + direction ) . addClass ( "s" ) ; VisualCreatorShowcaseState . properties [ 's' ] = direction ; VisualCreatorShowcaseState . visual . setProperty ( propertyToSelector ( 's' ) , { schema : schemas . property , value : direction } ) ; } function propertyToSelector ( propertyName ) { switch ( propertyName ) { case 's' : return { objectName : "s" , propertyName : "s" } ; case 's' : return { objectName : "s" , propertyName : "s" } ; case 's' : return { objectName : "s" , propertyName : "s" } ; case 's' : return { objectName : "s" , propertyName : "s" } ; case 's' : return { objectName : "s" , propertyName : "s" } ; case 's' : return { objectName : "s" , propertyName : "s" } ; case 's' : return { objectName : "s" , propertyName : "s" } ; case 's' : return { objectName : "s" , propertyName : "s" } ; } } function onEraseToolClicked ( ) { if ( ! VisualCreatorShowcaseState . visual ) return ; document . getElementById ( "s" ) . value = "s" ; VisualCreatorShowcaseState . visual . resetProperty ( propertyToSelector ( 's' ) ) ; } function updateTitleText ( ) { if ( ! VisualCreatorShowcaseState . visual ) return ; let text = document . getElementById ( "s" ) . value ; if ( text === "s" ) { onEraseToolClicked ( ) ; return ; } VisualCreatorShowcaseState . visual . setProperty ( propertyToSelector ( 's' ) , { schema : schemas . property , value : text } ) ; } function resetGeneratorDataRoles ( ) { if ( ! VisualCreatorShowcaseState . visual ) return ; VisualCreatorShowcaseState . dataRoles = { Legend : null , Values : null , Value : null , Axis : null , Tooltips : null , 's' : null , Category : null , Breakdown : null , } ; VisualCreatorShowcaseState . dataFieldsCount = 0 ; let nodesToReset = $ ( 's' ) . slice ( 0 ) ; for ( let i = 0 ; i < nodesToReset . length ; i ++ ) { nodesToReset [ i ] . innerHTML = 's' ; } $ ( 's' ) . children ( ) . show ( ) ; $ ( 's' ) . children ( ) . removeClass ( 's' ) ; } function resetGeneratorVisual ( ) { if ( ! VisualCreatorShowcaseState . visual ) return ; VisualCreatorShowcaseState . page . deleteVisual ( VisualCreatorShowcaseState . visual . name ) ; VisualCreatorShowcaseState . visual = null ; VisualCreatorShowcaseState . visualType = null ; $ ( 's' ) [ 0 ] . innerHTML = 's' ; $ ( 's' ) . show ( ) ; $ ( 's' ) [ 0 ] . removeAttribute ( 's' ) ; } function resetGeneratorProperties ( ) { if ( ! VisualCreatorShowcaseState . visual ) return ; VisualCreatorShowcaseState . properties = { legend : true , xAxis : true , yAxis : true , title : true , titleText : null , titleAlign : null } ; for ( let i = 0 ; i < 0 ; i ++ ) { $ ( 's' ) [ i ] . checked = true ; } $ ( "s" ) . removeClass ( "s" ) ; $ ( "s" ) . addClass ( "s" ) ; document . getElementById ( "s" ) . value = "s" ; } function resetVisualGenerator ( ) { if ( ! VisualCreatorShowcaseState . visual ) return ; $ ( 's' ) . addClass ( disabledClass ) ; $ ( 's' ) . addClass ( disabledClass ) ; $ ( 's' ) . text ( 's' ) ; $ ( "s" ) . show ( ) ; resetGeneratorDataRoles ( ) ; resetGeneratorProperties ( ) ; resetGeneratorVisual ( ) ; } function validateDataRoles ( capabilities , dataRolesDisplayNames ) { for ( let i = 0 ; i < dataRolesDisplayNames . length ; i ++ ) { if ( capabilities . dataRoles . filter ( function ( dr ) { return dr . displayName === dataRolesDisplayNames [ i ] } ) . length === 0 ) { return false ; } } return true ; } function handleInvalidDataRoles ( ) { $ ( 's' ) . text ( "s" ) ; $ ( 's' ) . show ( ) ; }	O O $complex$ O O $null$ O O O $null$ O O O $null$ O O O $null$ O O O $complex$ O O $null$ O O O $null$ O O O $null$ O O O $null$ O O O $null$ O O O O O O O $null$ O O O $null$ O O O O O $number$ O O O $complex$ O O $boolean$ O O O $boolean$ O O O $boolean$ O O O $boolean$ O O O $null$ O O O $null$ O O O O O O $complex$ O O O $string$ O O O $string$ O O O $string[]$ O O O O O O O O O O O $string$ O O O $string$ O O O $string[]$ O O O O O O O O O O O $string$ O O O $string$ O O O $string[]$ O O O O O O O O O O O $string$ O O O $string$ O O O $string[]$ O O O O O O O O O O O O O $complex$ O O O $string$ O O O $string[]$ O O O O O O O O O O O $string$ O O O $string[]$ O O O O O O O O O O O $string$ O O O $string[]$ O O O O O O O O O O O $string$ O O O $string[]$ O O O O O O O O O O O $string$ O O O $string[]$ O O O O O O O O O O O $string$ O O O $string[]$ O O O O O O O O O O O $string$ O O O $string[]$ O O O O O O O O O O O $string$ O O O $string[]$ O O O O O O O O O O O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O $string$ O $complex$ O $string$ O O $complex$ O O $string$ O O O $string$ O O O $string$ O $complex$ O $string$ O O $complex$ O O $string$ O O O $string$ O O O $string$ O $complex$ O $string$ O O $complex$ O O $string$ O O O $string$ O O O $string$ O $complex$ O $string$ O O $complex$ O O $string$ O O O $string$ O O O $string$ O $complex$ O $string$ O O $complex$ O O $string$ O O O $string$ O O O $string$ O $complex$ O $string$ O O $complex$ O O $string$ O O O $string$ O O O $string$ O $complex$ O $string$ O O $complex$ O O $string$ O O O $string$ O O O $string$ O $complex$ O $string$ O O O O O $string[]$ O O O O O O O O O O $complex$ O O $string[]$ O O O O O $string[]$ O O O O O O O $string[]$ O O O O O O O O O $string[]$ O O O O O O O O O O O O O O O O O $any$ O O O O $any$ O O O $any$ O O O O O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $any$ O $any$ O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $boolean$ O O O $boolean$ O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $complex$ O $any$ O $any$ O O O O O O O $complex$ O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O O O O $any$ O O O $complex$ O $any$ O $any$ O O O O O O O $void$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O $complex$ O $any$ O $any$ O O O O O O O O O O O O $void$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $Document$ O $HTMLCollectionOf<Element>$ O O O O O O $any$ O O O $number$ O $HTMLCollectionOf<Element>$ O $number$ O $any$ O O O $any$ O $HTMLCollectionOf<Element>$ O $number$ O O O O O O O O O O $any$ O $Document$ O O O O O O $HTMLElement$ O $void$ O O O O O O $HTMLElement$ O $void$ O O O O O $number$ O O $HTMLElement$ O $string$ O $HTMLSelectElement$ O $HTMLOptionsCollection$ O $HTMLSelectElement$ O $number$ O O $string$ O $HTMLCollectionOf<Element>$ O $number$ O O $T$ O $HTMLElement$ O O $any$ O $Document$ O O O O O O $HTMLElement$ O $void$ O O O O O O O O $any$ O O O $number$ O $HTMLSelectElement$ O $number$ O $any$ O O O $any$ O $Document$ O O O O O O $HTMLElement$ O $string$ O $HTMLSelectElement$ O $HTMLOptionsCollection$ O $number$ O O $string$ O $HTMLElement$ O O O O O O O $MouseEvent$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $complex$ O $complex$ O $any$ O O O O O O O $any$ O O O $complex$ O $Node$ O O O $any$ O O O $number$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $number$ O O $any$ O O O $string$ O O $any$ O $any$ O $number$ O $Node$ O $any$ O O O $string$ O $any$ O O O $complex$ O $any$ O O O O O O $any$ O O O $number$ O $any$ O $any$ O $any$ O O O $any$ O $number$ O O $any$ O O O O O O O $void$ O O O O O O O O O O $Node$ O $any$ O O O O O $any$ O $any$ O O O O $void$ O $Node$ O $any$ O O O O O $void$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $Node$ O $any$ O O O O O O $HTMLElement$ O $T$ O $HTMLElement$ O O O $HTMLCollectionOf<Element>$ O $number$ O O $T$ O $HTMLElement$ O O $HTMLElement$ O O O O O O O $MouseEvent$ O O $MouseEvent$ O $void$ O O O $void$ O O O O O O $ChildNode$ O $any$ O $any$ O O O O O O $DOMTokenList$ O $boolean$ O O O O O O O O O O $void$ O $any$ O O O $any$ O $any$ O $any$ O $any[]$ O O O O $any$ O $Document$ O $HTMLCollectionOf<Element>$ O O O O $any$ O $Document$ O $HTMLCollectionOf<Element>$ O O O O O O $any$ O O O $number$ O $HTMLCollectionOf<Element>$ O $number$ O $any$ O O O O O $any$ O $HTMLCollectionOf<Element>$ O $number$ O O O $any[]$ O $number$ O $number$ O O O O $HTMLCollectionOf<Element>$ O $number$ O O $DOMTokenList$ O $void$ O O O O O O O O $any$ O O O $number$ O $HTMLCollectionOf<Element>$ O $number$ O $any$ O O O O O $number[]$ O $number$ O $number$ O O O $HTMLCollectionOf<Element>$ O $number$ O O $DOMTokenList$ O $void$ O O O O O O O O $void$ O $any$ O O O $complex$ O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $string$ O $any$ O O O O O O O O $string$ O $complex$ O $string$ O $complex$ O $any$ O $any$ O $string$ O O $any$ O O O $any$ O O O O O $boolean$ O $any$ O $complex$ O $string[]$ O O O $void$ O O O $void$ O O O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $void$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O $complex$ O $number$ O O O O O O $complex$ O $any$ O O $complex$ O $any$ O $any$ O $string$ O $complex$ O O O O $any$ O O O O O $void$ O $string$ O $complex$ O $string[]$ O O O O O O O O O $string$ O $complex$ O $any$ O O $complex$ O $any$ O $any$ O $complex$ O $any$ O $any$ O O $any$ O O O O O $complex$ O $any$ O $any$ O $string$ O $complex$ O O O O $any$ O O O O O $void$ O $string$ O $complex$ O $string[]$ O O O O O O O O O O O O O O $void$ O $any$ O $any$ O O $void$ O $any$ O O $void$ O O O $void$ O $any$ O O $void$ O O O O O $void$ O $any$ O O $complex$ O $any$ O $any$ O O O $any$ O O O $any$ O O $complex$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O O O $any$ O O O O $complex$ O $any$ O $any$ O $complex$ O O O O O $string$ O $complex$ O $string$ O $boolean$ O O O O O O $complex$ O $any$ O $any$ O $complex$ O O O O O $string$ O $complex$ O $string$ O $number$ O O O O O $complex$ O $any$ O $any$ O $complex$ O O O O O $string$ O $complex$ O $string$ O $string$ O O O O O $any$ O O O O $any$ O O O O O O O $number$ O O O $number$ O $string[]$ O $number$ O $number$ O O O O O $complex$ O $any$ O O $any$ O $string[]$ O $number$ O O O O O O $any$ O O O $string[]$ O $number$ O O O O O $any$ O O O O O O O O O O O $void$ O $any$ O O O $NodeListOf<Element>$ O $Document$ O O O O O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O $NodeListOf<Element>$ O $number$ O O $string$ O $any$ O $number$ O O O O $NodeListOf<Element>$ O $number$ O O $string$ O $any$ O $number$ O O O $string[]$ O $complex$ O $un...$ O O O $complex$ O O O $complex$ O $string$ O $any$ O $number$ O O O O O O O $string[]$ O $void$ O $NodeListOf<Element>$ O $number$ O O $HTMLElement$ O $string[]$ O O O O O $void$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O $any$ O $number$ O O $any$ O $any$ O $number$ O O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $number$ O O O $number$ O $complex$ O $number$ O $number$ O O O $any$ O $number$ O O $any$ O $complex$ O $number$ O O $string$ O $any$ O $number$ O O O O $any$ O $complex$ O $number$ O O $string$ O O O O $void$ O O O O O O $complex$ O $any$ O O O $complex$ O $any$ O $any$ O O O O O $void$ O $any$ O $any$ O O O O $any$ O $complex$ O $complex$ O $any$ O O O $complex$ O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $complex$ O $complex$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O $complex$ O $number$ O O O O $complex$ O $number$ O O O O $complex$ O $any$ O $any$ O $complex$ O $any$ O $complex$ O O O O $any$ O O O O O $complex$ O $any$ O $any$ O O O $any$ O O O $any$ O O $complex$ O $any$ O $any$ O O O O $complex$ O $number$ O O $complex$ O $any$ O $any$ O $any$ O $complex$ O $any$ O O O $any$ O O O O O $void$ O $any$ O $any$ O O O O O O O O O O O O O O $complex$ O $number$ O O $complex$ O $any$ O $any$ O $any$ O $complex$ O $any$ O O O $any$ O O O O O $void$ O $any$ O $any$ O O O O O O O O O O O O $complex$ O $any$ O $any$ O $any$ O $complex$ O $any$ O O O $any$ O O O O O $void$ O $any$ O $any$ O O $complex$ O $number$ O O O O $complex$ O $number$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O O O O O O O O O O $void$ O $any$ O $any$ O O $complex$ O $complex$ O $any$ O O $any$ O $void$ O O O O O $void$ O O O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O $any$ O O O O O O O O $complex$ O O O O $any$ O $complex$ O O O O $any$ O O O $number$ O O O $any$ O O O O $any$ O O O $number$ O O O $any$ O O O O $any$ O O O $number$ O O O O $any$ O O O O $any$ O O O O O O $number$ O O O O $any$ O O O O $any$ O O O O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O O O O $void$ O $any$ O O O O O $complex$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O O O O O $any$ O $complex$ O $complex$ O $any$ O O $any$ O $complex$ O $any$ O $any$ O $complex$ O $any$ O O O $string$ O $complex$ O $string$ O $any$ O $any$ O O O O O $void$ O $any$ O O O O O $complex$ O $any$ O O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O $any$ O O O O $complex$ O $complex$ O O O O $any$ O $complex$ O $any$ O $any$ O $complex$ O O O O O $string$ O $complex$ O $string$ O $any$ O $any$ O O O O O $complex$ O $any$ O O O O $any$ O O O O O O O $string$ O O O $string$ O O O O O O O O O $string$ O O O $string$ O O O O O O O O O $string$ O O O $string$ O O O O O O O O O $string$ O O O $string$ O O O O O O O O O $string$ O O O $string$ O O O O O O O O O $string$ O O O $string$ O O O O O O O O O $string$ O O O $string$ O O O O O O O O O $string$ O O O $string$ O O O O O O O $void$ O O O O O O $complex$ O $any$ O O O $Document$ O $HTMLElement$ O O O O $any$ O O O $complex$ O $any$ O $any$ O $complex$ O O O O O O O $void$ O O O O O O $complex$ O $any$ O O O O $any$ O $Document$ O $HTMLElement$ O O O O $any$ O O O $any$ O O O O $void$ O O O O O O $complex$ O $any$ O $any$ O $complex$ O O O O O $string$ O $complex$ O $string$ O $any$ O $any$ O O O O O $void$ O O O O O O $complex$ O $any$ O O O $complex$ O $complex$ O O $null$ O O O $null$ O O O $null$ O O O $null$ O O O $null$ O O O O O O O $null$ O O O $null$ O O O O O $complex$ O $number$ O O O O $any$ O $any$ O O O O $any$ O O O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O $any$ O $number$ O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O O O $void$ O O O O O O $complex$ O $any$ O O O $complex$ O $any$ O $any$ O $complex$ O $any$ O $any$ O O $complex$ O $any$ O O O $complex$ O $any$ O O O $any$ O O O O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O O O O $any$ O O O O O O $void$ O O O O O O $complex$ O $any$ O O O $complex$ O $complex$ O O $true$ O O O $true$ O O O $true$ O O O $true$ O O O $null$ O O O $null$ O O O O O O O $number$ O O O $number$ O O O $number$ O O O $any$ O O O O $number$ O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $Document$ O $HTMLElement$ O O O O $any$ O O O O O $void$ O O O O O O $complex$ O $any$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O $void$ O O O $void$ O O O $void$ O O O O O $boolean$ O $any$ O $any$ O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $number$ O O O O $any$ O O O O O O O O O O O O O O $void$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O
'js' let ThemesShowcaseState = { themesArray : null , themesReport : null , dataColorSize : 0 , backgroundSize : 0 , } ; const jsonThemes = [ { "s" : "s" , "s" : [ "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" ] , "s" : "s" , "s" : "s" , "s" : "s" } , { "s" : "s" , "s" : [ "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" ] , "s" : "s" , "s" : "s" , "s" : "s" } , { "s" : "s" , "s" : [ "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" ] , "s" : "s" , "s" : "s" , "s" : "s" } , { "s" : "s" , "s" : [ "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" ] , "s" : "s" , "s" : "s" , "s" : "s" } , ] ; const backgrounds = [ { "s" : "s" , } , { "s" : "s" , "s" : "s" , "s" : "s" , "s" : { "s" : { "s" : { "s" : [ { "s" : "s" , "s" : { "s" : { "s" : "s" } } , "s" : { "s" : { "s" : "s" } } , "s" : { "s" : { "s" : "s" } } , } ] , "s" : [ { "s" : { "s" : { "s" : "s" } } } ] , "s" : [ { "s" : { "s" : { "s" : "s" } } } ] } } } } ] function embedThemesReport ( ) { return LoadThemesShowcaseReportIntoSession ( ) . then ( function ( ) { const models = window [ 's' ] . models ; let accessToken = GetSession ( SessionKeys . AccessToken ) ; let embedUrl = GetSession ( SessionKeys . EmbedUrl ) ; let embedReportId = GetSession ( SessionKeys . EmbedId ) ; let permissions = models . Permissions . View ; let config = { type : 's' , tokenType : models . TokenType . Embed , accessToken : accessToken , embedUrl : embedUrl , id : embedReportId , permissions : permissions , settings : { filterPaneEnabled : false , navContentPaneEnabled : false , } , theme : { themeJson : jsonThemes [ 0 ] } , } ; let embedContainer = $ ( 's' ) [ 0 ] ; ThemesShowcaseState . themesReport = powerbi . embed ( embedContainer , config ) ; ThemesShowcaseState . themesReport . on ( "s" , function ( ) { let themesList = $ ( 's' ) ; themesList . find ( "s" ) . attr ( 's' , true ) ; themesList . show ( ) ; $ ( 's' ) . show ( ) ; $ ( 's' , 's' ) . addClass ( "s" ) ; } ) ; } ) ; } function onThemeClicked ( element ) { $ ( element ) . attr ( 's' , true ) ; applyTheme ( ) ; } function setThemeBackgroundActive ( id ) { $ ( 's' ) . removeClass ( "s" ) ; $ ( 's' + id , 's' ) . addClass ( "s" ) ; applyTheme ( ) ; } function applyTheme ( ) { activeThemeId = Number ( $ ( 's' , 's' ) [ 0 ] . getAttribute ( "s" ) . slice ( - 0 ) ) ; activeBackgroundId = Number ( $ ( 's' , 's' ) [ 0 ] . getAttribute ( "s" ) . slice ( - 0 ) ) ; theme = { } $ . extend ( theme , jsonThemes [ activeThemeId ] , backgrounds [ activeBackgroundId ] ) ; let report = ThemesShowcaseState . themesReport ; report . applyTheme ( { themeJson : theme } ) ; } function createThemesList ( ) { let themesList = $ ( 's' ) ; themesList . hide ( ) ; for ( let i = 0 ; i < jsonThemes . length ; i ++ ) { themesList . append ( buildThemeElement ( i ) ) ; } } function createBackgroundsList ( ) { let backgroundsList = $ ( 's' ) ; backgroundsList . hide ( ) ; for ( let i = 0 ; i < backgrounds . length ; i ++ ) { backgroundsList . append ( buildBackgroundElement ( i ) ) ; } } function buildThemeElement ( id ) { let labelElement = document . createElement ( "s" ) ; labelElement . setAttribute ( "s" , "s" ) ; let inputElement = document . createElement ( "s" ) ; inputElement . setAttribute ( "s" , "s" ) ; inputElement . setAttribute ( "s" , "s" ) ; inputElement . setAttribute ( "s" , 's' + id ) ; inputElement . setAttribute ( "s" , "s" ) ; labelElement . appendChild ( inputElement ) ; let spanElement = document . createElement ( "s" ) ; spanElement . setAttribute ( "s" , "s" ) ; labelElement . appendChild ( spanElement ) ; let secondSpanElement = document . createElement ( "s" ) ; secondSpanElement . setAttribute ( "s" , "s" ) ; let radioTitleElement = document . createTextNode ( jsonThemes [ id ] . name ) ; secondSpanElement . appendChild ( radioTitleElement ) ; labelElement . appendChild ( secondSpanElement ) ; let colorsDivElement = document . createElement ( "s" ) ; colorsDivElement . setAttribute ( "s" , "s" ) ; const maxWidth = document . getElementById ( 's' ) . offsetWidth - 0 ; const dataColors = jsonThemes [ id ] . dataColors ; const singleDataColorWidth = ThemesShowcaseState . dataColorSize + 0 ; let currentWidth = 0 ; for ( let i = 0 ; i < dataColors . length ; i ++ ) { if ( currentWidth + singleDataColorWidth > maxWidth ) break ; let dataColorElement = document . createElement ( "s" ) ; let url = "s" + ThemesShowcaseState . dataColorSize + "s" + dataColors [ i ] . substr ( 0 ) + "s" ; dataColorElement . setAttribute ( "s" , url ) ; dataColorElement . setAttribute ( "s" , "s" ) ; colorsDivElement . appendChild ( dataColorElement ) ; currentWidth += singleDataColorWidth ; } labelElement . appendChild ( colorsDivElement ) ; return labelElement ; } function buildBackgroundElement ( id ) { let backgroundElement = document . createElement ( "s" ) ; let url = "s" + ThemesShowcaseState . backgroundSize + "s" + backgrounds [ id ] . background . substr ( 0 ) + "s" ; backgroundElement . setAttribute ( "s" , url ) ; backgroundElement . setAttribute ( "s" , "s" ) ; backgroundElement . setAttribute ( "s" , 's' + id ) ; backgroundElement . setAttribute ( "s" , "s" + id + "s" ) ; return backgroundElement ; }	O O $complex$ O O $null$ O O O $null$ O O O $number$ O O O $number$ O O O O O O $complex$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $complex$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O $any$ O O O $any$ O O O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $complex$ O $complex$ O $string$ O O O $any$ O $any$ O $any$ O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $boolean$ O O O $boolean$ O O O O O $complex$ O O $complex$ O $complex$ O O O O O O O O $any$ O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $complex$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O O O O O $void$ O $any$ O O $any$ O $any$ O O $any$ O O O O O O $void$ O O O O O $void$ O $any$ O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O $void$ O O O O O $void$ O O O $any$ O $NumberConstructor$ O $any$ O O O O O O O O O $any$ O O O O $any$ O O O O O O $any$ O $NumberConstructor$ O $any$ O O O O O O O O O $any$ O O O O $any$ O O O O O O $any$ O O O $any$ O $any$ O $any$ O $complex$ O $any$ O O $complex$ O $any$ O O O O $any$ O $complex$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $void$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O $number$ O O O $number$ O $complex$ O $number$ O $number$ O O O $any$ O $any$ O $HTMLLabelElement$ O $number$ O O O O O O $void$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O $number$ O O O $number$ O $complex$ O $number$ O $number$ O O O $any$ O $any$ O $HTMLImageElement$ O $number$ O O O O O O $HTMLLabelElement$ O $any$ O O O $HTMLLabelElement$ O $Document$ O O O O O O $HTMLLabelElement$ O $void$ O O O O O O O $HTMLInputElement$ O $Document$ O O O O O O $HTMLInputElement$ O $void$ O O O O O O $HTMLInputElement$ O $void$ O O O O O O $HTMLInputElement$ O $void$ O O O O O $any$ O O $HTMLInputElement$ O $void$ O O O O O O $HTMLLabelElement$ O $T$ O $HTMLInputElement$ O O O $HTMLSpanElement$ O $Document$ O O O O O O $HTMLSpanElement$ O $void$ O O O O O O $HTMLLabelElement$ O $T$ O $HTMLSpanElement$ O O O $HTMLSpanElement$ O $Document$ O O O O O O $HTMLSpanElement$ O $void$ O O O O O O O $Text$ O $Document$ O $Text$ O $complex$ O $any$ O O $string$ O O $HTMLSpanElement$ O $T$ O $Text$ O O $HTMLLabelElement$ O $T$ O $HTMLSpanElement$ O O O $HTMLDivElement$ O $Document$ O O O O O O $HTMLDivElement$ O $void$ O O O O O O O $number$ O $Document$ O $HTMLElement$ O O O O $number$ O O O O $string[]$ O $complex$ O $any$ O O $string[]$ O O $number$ O $complex$ O $number$ O O O O $number$ O O O O O O $number$ O O O $number$ O $string[]$ O $number$ O $number$ O O O O O $number$ O $number$ O $number$ O O O O $HTMLImageElement$ O $Document$ O O O O O O O $string$ O O O $complex$ O $number$ O O O $string[]$ O $number$ O O $string$ O O O O O O $HTMLImageElement$ O $void$ O O O $string$ O O $HTMLImageElement$ O $void$ O O O O O O $HTMLDivElement$ O $T$ O $HTMLImageElement$ O O $number$ O $number$ O O $HTMLLabelElement$ O $T$ O $HTMLDivElement$ O O O $HTMLLabelElement$ O O O $HTMLImageElement$ O $any$ O O O $HTMLImageElement$ O $Document$ O O O O O O O $string$ O O O $complex$ O $number$ O O O $complex$ O $any$ O O $string$ O $string$ O O O O O O $HTMLImageElement$ O $void$ O O O $string$ O O $HTMLImageElement$ O $void$ O O O O O O $HTMLImageElement$ O $void$ O O O O O $any$ O O $HTMLImageElement$ O $void$ O O O O O $any$ O O O O O $HTMLImageElement$ O O
'js' const appUrl = 's' ; var appInsightsInstanceDeferred = $ . Deferred ( ) ; $ . getJSON ( appUrl , function ( appConfig ) { var sdkInstance = "s" ; window [ sdkInstance ] = "s" ; var aiName = window [ sdkInstance ] , aisdk = window [ aiName ] || function ( e ) { function n ( e ) { t [ e ] = function ( ) { var n = arguments ; t . queue . push ( function ( ) { t [ e ] . apply ( t , n ) } ) } } var t = { config : e } ; t . initialize = ! 0 ; var i = document , a = window ; setTimeout ( function ( ) { var n = i . createElement ( "s" ) ; n . src = e . url || "s" , i . getElementsByTagName ( "s" ) [ 0 ] . parentNode . appendChild ( n ) } ) ; try { t . cookie = i . cookie } catch ( e ) { } t . queue = [ ] , t . version = 0 ; for ( var r = [ "s" , "s" , "s" , "s" , "s" , "s" , "s" ] ; r . length ; ) n ( "s" + r . pop ( ) ) ; n ( "s" ) , n ( "s" ) ; var s = "s" + r [ 0 ] ; if ( n ( "s" + s ) , n ( "s" + s ) , n ( "s" ) , n ( "s" ) , n ( "s" ) , n ( "s" ) , ! ( ! 0 === e . disableExceptionTracking || e . extensionConfig && e . extensionConfig . ApplicationInsightsAnalytics && ! 0 === e . extensionConfig . ApplicationInsightsAnalytics . disableExceptionTracking ) ) { n ( "s" + ( r = "s" ) ) ; var o = a [ r ] ; a [ r ] = function ( e , n , i , a , s ) { var c = o && o ( e , n , i , a , s ) ; return ! 0 !== c && t [ "s" + r ] ( { message : e , url : n , lineNumber : i , columnNumber : a , error : s } ) , c } , e . autoExceptionInstrumented = ! 0 } return t } ( { instrumentationKey : appConfig . instrumentationKey } ) ; window [ aiName ] = aisdk , aisdk . queue && 0 === aisdk . queue . length && aisdk . trackPageView ( { } ) ; appInsightsInstanceDeferred . resolve ( appInsights ) ; } ) ; function getAppInsightsInstance ( ) { return appInsightsInstanceDeferred ; }	O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $string$ O O O $complex$ O $string$ O O O O O $any$ O $complex$ O $string$ O O $complex$ O $complex$ O $any$ O O O O $complex$ O O O $void$ O $any$ O O $complex$ O $any$ O O O O O O O $IArguments$ O $IArguments$ O $complex$ O $any$ O $any$ O O O O O $complex$ O $any$ O O $any$ O $complex$ O $IArguments$ O O O O O O $complex$ O O $complex$ O $complex$ O O $complex$ O $any$ O O O O O $Document$ O $Document$ O $complex$ O $complex$ O $number$ O O O O O O $HTMLScriptElement$ O $Document$ O O O O O O $HTMLScriptElement$ O $string$ O $complex$ O $any$ O O O $Document$ O O O O O O O O O $complex$ O $T$ O $HTMLScriptElement$ O O O O O O $complex$ O $any$ O $Document$ O $string$ O O O $any$ O O O $complex$ O $any$ O O O O $complex$ O $any$ O O O O O O $string[]$ O O O O O O O O O O O O O O O O O $string[]$ O $number$ O O $void$ O O O $string[]$ O $string$ O O O O $void$ O O O O $void$ O O O O O $string$ O O O $string[]$ O O O O O O $void$ O O O $string$ O O $void$ O O O $string$ O O $void$ O O O O $void$ O O O O $void$ O O O O $void$ O O O O O O O O O $complex$ O $any$ O $complex$ O $any$ O $complex$ O $any$ O $any$ O O O O $complex$ O $any$ O $any$ O $any$ O O O $void$ O O O O $string[]$ O O O O O O $any$ O $complex$ O $string[]$ O O $complex$ O $string[]$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $complex$ O O O $string[]$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $complex$ O $any$ O O O O O $complex$ O O O $any$ O $any$ O $any$ O O O $complex$ O $any$ O O $complex$ O $complex$ O $any$ O O O $complex$ O $any$ O $any$ O $complex$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O $any$ O O
'js' function assert ( exp ) { if ( console [ "s" ] ) { console . assert ( exp ) ; } }	O O $void$ O $any$ O O O O $Console$ O O O O O $Console$ O $void$ O $any$ O O O O
'js' function _Embed_BasicEmbed ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedReportId = $ ( 's' ) . val ( ) ; var tokenType = $ ( 's' ) . val ( ) ; var models = window [ 's' ] . models ; var permissions = models . Permissions . All ; var config = { type : 's' , tokenType : tokenType == 's' ? models . TokenType . Aad : models . TokenType . Embed , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , id : txtEmbedReportId , permissions : permissions , settings : { filterPaneEnabled : true , navContentPaneEnabled : true } } ; var embedContainer = $ ( 's' ) [ 0 ] ; var report = powerbi . embed ( embedContainer , config ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; report . off ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; if ( event . detail . saveAs ) { Log . logText ( 's' ) ; } } ) ; } function _Embed_BasicEmbed_Mobile ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedReportId = $ ( 's' ) . val ( ) ; var tokenType = $ ( 's' ) . val ( ) ; var models = window [ 's' ] . models ; var permissions = models . Permissions . All ; var config = { type : 's' , tokenType : tokenType == 's' ? models . TokenType . Aad : models . TokenType . Embed , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , id : txtEmbedReportId , permissions : permissions , pageName : "s" , settings : { layoutType : models . LayoutType . MobilePortrait } } ; var embedContainer = $ ( 's' ) [ 0 ] ; var report = powerbi . embed ( embedContainer , config ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; report . off ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; if ( event . detail . saveAs ) { Log . logText ( 's' ) ; } } ) ; } function _Embed_VisualEmbed ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtReportId = $ ( 's' ) . val ( ) ; var txtPageName = $ ( 's' ) . val ( ) ; var txtVisualName = $ ( 's' ) . val ( ) ; var tokenType = $ ( 's' ) . val ( ) ; var models = window [ 's' ] . models ; var config = { type : 's' , tokenType : tokenType == 's' ? models . TokenType . Aad : models . TokenType . Embed , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , id : txtReportId , pageName : txtPageName , visualName : txtVisualName } ; var embedContainer = $ ( 's' ) [ 0 ] ; var report = powerbi . embed ( embedContainer , config ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; report . off ( "s" ) ; } ) ; } function _Embed_DashboardEmbed ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedDashboardId = $ ( 's' ) . val ( ) ; var tokenType = $ ( 's' ) . val ( ) ; var models = window [ 's' ] . models ; var config = { type : 's' , tokenType : tokenType == 's' ? models . TokenType . Aad : models . TokenType . Embed , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , id : txtEmbedDashboardId , pageView : 's' } ; var dashboardContainer = $ ( 's' ) [ 0 ] ; var dashboard = powerbi . embed ( dashboardContainer , config ) ; dashboard . off ( "s" ) ; dashboard . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; dashboard . on ( "s" , function ( event ) { Log . log ( event . detail ) ; dashboard . off ( "s" ) ; } ) ; dashboard . off ( "s" ) ; dashboard . on ( "s" , function ( event ) { Log . log ( event . detail ) ; } ) ; } function _Embed_DashboardEmbed_Mobile ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedDashboardId = $ ( 's' ) . val ( ) ; var tokenType = $ ( 's' ) . val ( ) ; var models = window [ 's' ] . models ; var config = { type : 's' , tokenType : tokenType == 's' ? models . TokenType . Aad : models . TokenType . Embed , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , id : txtEmbedDashboardId , pageView : 's' } ; var dashboardContainer = $ ( 's' ) [ 0 ] ; var dashboard = powerbi . embed ( dashboardContainer , config ) ; dashboard . off ( "s" ) ; dashboard . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; dashboard . on ( "s" , function ( event ) { Log . log ( event . detail ) ; dashboard . off ( "s" ) ; } ) ; dashboard . off ( "s" ) ; dashboard . on ( "s" , function ( event ) { Log . log ( event . detail ) ; } ) ; } function _Mock_Embed_BasicEmbed ( isEdit ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedReportId = $ ( 's' ) . val ( ) ; var tokenType = $ ( 's' ) . val ( ) ; var models = window [ 's' ] . models ; var permissions = models . Permissions . All ; var viewMode = isEdit ? models . ViewMode . Edit : models . ViewMode . View ; var config = { type : 's' , tokenType : tokenType == 's' ? models . TokenType . Aad : models . TokenType . Embed , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , id : txtEmbedReportId , permissions : permissions , viewMode : viewMode , settings : { filterPaneEnabled : true , navContentPaneEnabled : true , useCustomSaveAsDialog : true } } ; var embedContainer = $ ( 's' ) [ 0 ] ; var report = powerbi . embed ( embedContainer , config ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; if ( event . detail . saveAs ) { Log . logText ( 's' ) ; } } ) ; } function _Mock_Embed_BasicEmbed_EditMode ( ) { _Mock_Embed_BasicEmbed ( true ) ; } function _Mock_Embed_BasicEmbed_ViewMode ( ) { _Mock_Embed_BasicEmbed ( false ) ; } function _Embed_BasicEmbed_EditMode ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedReportId = $ ( 's' ) . val ( ) ; var tokenType = $ ( 's' ) . val ( ) ; var models = window [ 's' ] . models ; var config = { type : 's' , tokenType : tokenType == 's' ? models . TokenType . Aad : models . TokenType . Embed , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , id : txtEmbedReportId , permissions : models . Permissions . All , viewMode : models . ViewMode . Edit , settings : { filterPaneEnabled : true , navContentPaneEnabled : true } } ; var embedContainer = $ ( 's' ) [ 0 ] ; var report = powerbi . embed ( embedContainer , config ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; if ( event . detail . saveAs ) { Log . logText ( 's' ) ; } } ) ; } function _Embed_MobileEditNotSupported ( ) { } function _Embed_MobileCreateNotSupported ( ) { } function _Embed_EmbedWithDefaultFilter ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedReportId = $ ( 's' ) . val ( ) ; var models = window [ 's' ] . models ; const filter = { $schema : "s" , target : { table : "s" , column : "s" } , operator : "s" , values : [ "s" ] } ; var embedConfiguration = { type : 's' , tokenType : models . TokenType . Embed , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , id : txtEmbedReportId , settings : { filterPaneEnabled : false , navContentPaneEnabled : false } , filters : [ filter ] } ; var embedContainer = document . getElementById ( 's' ) ; powerbi . embed ( embedContainer , embedConfiguration ) ; } function _Embed_TileEmbed ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedDashboardId = $ ( 's' ) . val ( ) ; var txtEmbedTileId = $ ( 's' ) . val ( ) ; var tokenType = $ ( 's' ) . val ( ) ; var models = window [ 's' ] . models ; var config = { type : 's' , tokenType : tokenType == 's' ? models . TokenType . Aad : models . TokenType . Embed , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , id : txtEmbedTileId , dashboardId : txtEmbedDashboardId } ; var tileContainer = $ ( 's' ) [ 0 ] ; var tile = powerbi . embed ( tileContainer , config ) ; tile . off ( "s" ) ; tile . on ( "s" , function ( event ) { Log . logText ( "s" ) ; } ) ; tile . off ( "s" ) ; tile . on ( "s" , function ( event ) { Log . logText ( "s" ) ; Log . log ( event . detail ) ; } ) ; } function _Embed_Create ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedDatasetId = $ ( 's' ) . val ( ) ; var tokenType = $ ( 's' ) . val ( ) ; var models = window [ 's' ] . models ; var embedCreateConfiguration = { tokenType : tokenType == 's' ? models . TokenType . Aad : models . TokenType . Embed , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , datasetId : txtEmbedDatasetId , } ; var embedContainer = $ ( 's' ) [ 0 ] ; var report = powerbi . createReport ( embedContainer , embedCreateConfiguration ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; Log . logText ( 's' ) ; } ) ; } function _Mock_Embed_Create ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtEmbedDatasetId = $ ( 's' ) . val ( ) ; var tokenType = $ ( 's' ) . val ( ) ; var models = window [ 's' ] . models ; var embedCreateConfiguration = { tokenType : tokenType == 's' ? models . TokenType . Aad : models . TokenType . Embed , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , datasetId : txtEmbedDatasetId , settings : { useCustomSaveAsDialog : true } } ; var embedContainer = $ ( 's' ) [ 0 ] ; var report = powerbi . createReport ( embedContainer , embedCreateConfiguration ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; } ) ; } function _Embed_QnaEmbed ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtDatasetId = $ ( 's' ) . val ( ) ; var txtQuestion = $ ( 's' ) . val ( ) ; var qnaMode = $ ( "s" ) . val ( ) ; var models = window [ 's' ] . models ; var config = { type : 's' , tokenType : models . TokenType . Embed , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , datasetIds : [ txtDatasetId ] , viewMode : models . QnaMode [ qnaMode ] , question : txtQuestion } ; var qnaContainer = $ ( 's' ) [ 0 ] ; powerbi . embed ( qnaContainer , config ) ; } function _Embed_QnaEmbed_Aad ( ) { var txtAccessToken = $ ( 's' ) . val ( ) ; var txtEmbedUrl = $ ( 's' ) . val ( ) ; var txtDatasetId = $ ( 's' ) . val ( ) ; var txtQuestion = $ ( 's' ) . val ( ) ; var qnaMode = $ ( "s" ) . val ( ) ; var models = window [ 's' ] . models ; var config = { type : 's' , tokenType : models . TokenType . Aad , accessToken : txtAccessToken , embedUrl : txtEmbedUrl , datasetIds : [ txtDatasetId ] , viewMode : models . QnaMode [ qnaMode ] , question : txtQuestion } ; var qnaContainer = $ ( 's' ) [ 0 ] ; powerbi . embed ( qnaContainer , config ) ; } function _Report_GetId ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; var reportId = report . getId ( ) ; Log . logText ( "s" + reportId + "s" ) ; } function _Report_UpdateSettings ( ) { const newSettings = { navContentPaneEnabled : true , filterPaneEnabled : false } ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . updateSettings ( newSettings ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( error ) { Log . log ( errors ) ; } ) ; } function _Report_GetPages ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . getPages ( ) . then ( function ( pages ) { var log = "s" ; pages . forEach ( function ( page ) { log += "s" + page . name + "s" + page . displayName ; } ) ; Log . logText ( log ) ; } ) . catch ( function ( error ) { Log . log ( error ) ; } ) ; } function _Report_SetPage ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . setPage ( "s" ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_GetFilters ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . getFilters ( ) . then ( function ( filters ) { Log . log ( filters ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_SetFilters ( ) { const filter = { $schema : "s" , target : { table : "s" , column : "s" } , operator : "s" , values : [ "s" ] } ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . setFilters ( [ filter ] ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_RemoveFilters ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . removeFilters ( ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _ReportVisual_Report_SetFilters ( ) { var models = window [ 's' ] . models ; const filter = { $schema : "s" , target : { table : "s" , column : "s" } , operator : "s" , values : [ "s" , "s" , "s" ] } ; var embedContainer = $ ( 's' ) [ 0 ] ; visual = powerbi . get ( embedContainer ) ; visual . setFilters ( [ filter ] , models . FiltersLevel . Report ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _ReportVisual_Report_GetFilters ( ) { var models = window [ 's' ] . models ; var embedContainer = $ ( 's' ) [ 0 ] ; visual = powerbi . get ( embedContainer ) ; visual . getFilters ( models . FiltersLevel . Report ) . then ( function ( filters ) { Log . log ( filters ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _ReportVisual_Report_RemoveFilters ( ) { var models = window [ 's' ] . models ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . removeFilters ( models . FiltersLevel . Report ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _ReportVisual_Page_SetFilters ( ) { var models = window [ 's' ] . models ; const filter = { $schema : "s" , target : { table : "s" , column : "s" } , operator : "s" , values : [ "s" , "s" , "s" ] } ; var embedContainer = $ ( 's' ) [ 0 ] ; visual = powerbi . get ( embedContainer ) ; visual . setFilters ( [ filter ] , models . FiltersLevel . Page ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _ReportVisual_Page_GetFilters ( ) { var models = window [ 's' ] . models ; var embedContainer = $ ( 's' ) [ 0 ] ; visual = powerbi . get ( embedContainer ) ; visual . getFilters ( models . FiltersLevel . Page ) . then ( function ( filters ) { Log . log ( filters ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _ReportVisual_Page_RemoveFilters ( ) { var models = window [ 's' ] . models ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . removeFilters ( models . FiltersLevel . Page ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _ReportVisual_Visual_SetFilters ( ) { const filter = { $schema : "s" , target : { table : "s" , column : "s" } , operator : "s" , values : [ "s" , "s" , "s" ] } ; var embedContainer = $ ( 's' ) [ 0 ] ; visual = powerbi . get ( embedContainer ) ; visual . setFilters ( [ filter ] ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _ReportVisual_Visual_GetFilters ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; visual = powerbi . get ( embedContainer ) ; visual . getFilters ( ) . then ( function ( filters ) { Log . log ( filters ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _ReportVisual_Visual_RemoveFilters ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . removeFilters ( ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_PrintCurrentReport ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . print ( ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_Reload ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . reload ( ) . then ( function ( result ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_Refresh ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . refresh ( ) . then ( function ( result ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_ApplyCustomLayout ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; var models = window [ 's' ] . models ; let defaultLayout = { width : 0 , height : 0 , displayState : { mode : models . VisualContainerDisplayMode . Hidden } } ; let pageSize = { type : models . PageSizeType . Custom , width : 0 , height : 0 } ; let pageLayout = { defaultLayout : defaultLayout , visualsLayout : { "s" : { x : 0 , y : 0 , displayState : { mode : models . VisualContainerDisplayMode . Visible } } , "s" : { x : 0 , y : 0 , displayState : { mode : models . VisualContainerDisplayMode . Visible } } } } ; let settings = { filterPaneEnabled : false , navContentPaneEnabled : false , layoutType : models . LayoutType . Custom , customLayout : { pageSize : pageSize , displayOption : models . DisplayOption . FitToPage , pagesLayout : { "s" : pageLayout } } } report = powerbi . get ( embedContainer ) ; report . updateSettings ( settings ) . then ( function ( ) { Log . logText ( "s" ) } ) . catch ( function ( error ) { Log . log ( errors ) ; } ) ; } function _Report_HideAllVisualHeaders ( ) { const newSettings = { visualSettings : { visualHeaders : [ { settings : { visible : false } } ] } } ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . updateSettings ( newSettings ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( error ) { Log . log ( errors ) ; } ) ; } function _Report_ShowAllVisualHeaders ( ) { const newSettings = { visualSettings : { visualHeaders : [ { settings : { visible : true } } ] } } ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . updateSettings ( newSettings ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( error ) { Log . log ( errors ) ; } ) ; } function _Report_HideSingleVisualHeader ( ) { var newSettings = { visualSettings : { visualHeaders : [ { settings : { visible : true } } , { settings : { visible : false } , selector : { $schema : "s" , visualName : "s" } } ] } } ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . updateSettings ( newSettings ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( error ) { Log . log ( errors ) ; } ) ; } function _Report_FullScreen ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . fullscreen ( ) ; } function _Report_ExitFullScreen ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . exitFullscreen ( ) ; } function _Report_switchModeEdit ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . switchMode ( "s" ) ; } function _Report_switchModeView ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . switchMode ( "s" ) ; } function _Report_save ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . save ( ) ; } function _Mock_Report_save ( ) { Log . logText ( 's' ) ; } function _Report_saveAs ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; var saveAsParameters = { name : "s" } ; report . saveAs ( saveAsParameters ) ; } function _Report_Extensions_OptionsMenu ( ) { const 0 = "s" ; const newSettings = { extensions : [ { command : { name : "s" , title : "s" , icon : 0 , extend : { visualOptionsMenu : { title : "s" , } } } } ] } ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . updateSettings ( newSettings ) . catch ( function ( error ) { Log . log ( errors ) ; } ) ; report . on ( "s" , function ( event ) { Log . logText ( "s" ) ; var commandDetails = event . detail ; Log . log ( commandDetails ) ; } ) ; Log . logText ( "s" ) ; } function _Report_Extensions_ContextMenu ( ) { const newSettings = { extensions : [ { command : { name : "s" , title : "s" , extend : { visualContextMenu : { title : "s" , } } } } ] } ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . updateSettings ( newSettings ) . catch ( function ( error ) { Log . log ( errors ) ; } ) ; report . on ( "s" , function ( event ) { Log . logText ( "s" ) ; var commandDetails = event . detail ; Log . log ( commandDetails ) ; } ) ; Log . logText ( "s" ) ; } function _Visual_Operations_SortVisualBy ( ) { var models = window [ 's' ] . models ; const sortByRequest = { orderBy : { table : "s" , measure : "s" } , direction : models . SortDirection . Descending } ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . getPages ( ) . then ( function ( pages ) { var activePage = pages . filter ( function ( page ) { return page . isActive } ) [ 0 ] ; activePage . getVisuals ( ) . then ( function ( visuals ) { var visual = visuals . filter ( function ( visual ) { return visual . name === "s" ; } ) [ 0 ] ; visual . sortBy ( sortByRequest ) . then ( function ( ) { Log . logText ( "s" ) } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Page_SetActive ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . getPages ( ) . then ( function ( pages ) { pages [ 0 ] . setActive ( ) . then ( function ( ) { Log . logText ( "s" + pages [ 0 ] . displayName + "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Page_GetFilters ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . getPages ( ) . then ( function ( pages ) { var activePage = pages . filter ( function ( page ) { return page . isActive } ) [ 0 ] ; activePage . getFilters ( ) . then ( function ( filters ) { Log . log ( filters ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Page_GetVisuals ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . getPages ( ) . then ( function ( pages ) { var activePage = pages . filter ( function ( page ) { return page . isActive } ) [ 0 ] ; activePage . getVisuals ( ) . then ( function ( visuals ) { Log . log ( visuals . map ( function ( visual ) { return { name : visual . name , type : visual . type , title : visual . title , layout : visual . layout } ; } ) ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Page_SetFilters ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; const filter = { $schema : "s" , target : { table : "s" , column : "s" } , operator : "s" , values : [ "s" ] } ; report . getPages ( ) . then ( function ( pages ) { var activePage = pages . filter ( function ( page ) { return page . isActive } ) [ 0 ] ; activePage . setFilters ( [ filter ] ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Page_RemoveFilters ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . getPages ( ) . then ( function ( pages ) { var activePage = pages . filter ( function ( page ) { return page . isActive } ) [ 0 ] ; activePage . removeFilters ( ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Page_HasLayout ( ) { var models = window [ 's' ] . models ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . getPages ( ) . then ( function ( pages ) { pages [ 0 ] . hasLayout ( models . LayoutType . MobilePortrait ) . then ( function ( hasLayout ) { hasLayout = hasLayout ? "s" : "s" ; Log . logText ( "s" + pages [ 0 ] . name + "s" + hasLayout + "s" ) ; } ) } ) ; } function _Events_PageChanged ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . logText ( "s" ) ; var page = event . detail . newPage ; Log . logText ( "s" + page . name + "s" + page . displayName + "s" ) ; } ) ; Log . logText ( "s" ) ; } function _Events_DataSelected ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . logText ( "s" ) ; var data = event . detail ; Log . log ( data ) ; } ) ; Log . logText ( "s" ) ; } function _Events_SaveAsTriggered ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event ) ; } ) ; Log . logText ( "s" ) ; } function _Events_BookmarkApplied ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . logText ( "s" ) ; Log . log ( event . detail ) ; } ) ; Log . logText ( "s" ) ; } function _Events_ReportLoaded ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; Log . logText ( "s" ) ; } function _Events_ReportRendered ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . off ( "s" ) ; report . on ( "s" , function ( ) { Log . logText ( "s" ) ; } ) ; Log . logText ( "s" ) ; } function _Events_ReportSaved ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . log ( event . detail ) ; if ( event . detail . saveAs ) { Log . logText ( 's' ) ; } } ) ; Log . logText ( "s" ) ; } function _Events_TileLoaded ( ) { var tileContainer = $ ( 's' ) [ 0 ] ; var tile = powerbi . get ( tileContainer ) ; tile . off ( "s" ) ; tile . on ( "s" , function ( event ) { Log . logText ( "s" ) ; } ) ; } function _Events_TileClicked ( ) { var tileContainer = $ ( 's' ) [ 0 ] ; var tile = powerbi . get ( tileContainer ) ; tile . off ( "s" ) ; tile . on ( "s" , function ( event ) { Log . logText ( "s" ) ; Log . log ( event . detail ) ; } ) ; Log . logText ( "s" ) ; } function _Events_ButtonClicked ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . off ( "s" ) ; report . on ( "s" , function ( event ) { Log . logText ( "s" ) ; var data = event . detail ; Log . log ( data ) ; } ) ; Log . logText ( "s" ) ; } function _Dashboard_GetId ( ) { var dashboardContainer = $ ( 's' ) [ 0 ] ; dashboard = powerbi . get ( dashboardContainer ) ; var dashboardId = dashboard . getId ( ) ; Log . logText ( "s" + dashboardId + "s" ) ; } function _Dashboard_FullScreen ( ) { var dashboardContainer = $ ( 's' ) [ 0 ] ; dashboard = powerbi . get ( dashboardContainer ) ; dashboard . fullscreen ( ) ; } function _Dashboard_ExitFullScreen ( ) { var dashboardContainer = $ ( 's' ) [ 0 ] ; dashboard = powerbi . get ( dashboardContainer ) ; dashboard . exitFullscreen ( ) ; } function _DashboardEvents_TileClicked ( ) { var dashboardContainer = $ ( 's' ) [ 0 ] ; dashboard = powerbi . get ( dashboardContainer ) ; dashboard . off ( "s" ) ; dashboard . on ( "s" , function ( event ) { Log . log ( event . detail ) ; } ) ; } function _Qna_SetQuestion ( ) { var qnaContainer = $ ( 's' ) [ 0 ] ; qna = powerbi . get ( qnaContainer ) ; qna . setQuestion ( "s" ) . then ( function ( result ) { log . log ( result ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Qna_QuestionChanged ( ) { var qnaContainer = $ ( 's' ) [ 0 ] ; qna = powerbi . get ( qnaContainer ) ; qna . off ( "s" ) ; qna . on ( "s" , function ( event ) { Log . log ( event . detail ) ; } ) ; Log . logText ( "s" ) ; } function _Visual_DataSelected ( ) { var visualContainer = $ ( 's' ) [ 0 ] ; visual = powerbi . get ( visualContainer ) ; visual . off ( "s" ) ; visual . on ( "s" , function ( event ) { var data = event . detail ; Log . log ( data ) ; } ) ; Log . logText ( "s" ) ; } function _Bookmarks_Enable ( ) { const newSettings = { bookmarksPaneEnabled : true } ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . updateSettings ( newSettings ) . catch ( function ( error ) { Log . log ( errors ) ; } ) ; } function _Bookmarks_Disable ( ) { const newSettings = { bookmarksPaneEnabled : false } ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . updateSettings ( newSettings ) . catch ( function ( error ) { Log . log ( errors ) ; } ) ; } function _Bookmarks_Get ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . bookmarksManager . getBookmarks ( ) . then ( function ( bookmarks ) { bookmarks . forEach ( function ( bookmark ) { var log = bookmark . name + "s" + bookmark . displayName ; Log . logText ( log ) ; } ) ; } ) . catch ( function ( error ) { Log . log ( error ) ; } ) ; } function _Bookmarks_Apply ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . bookmarksManager . apply ( "s" ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Bookmarks_Capture ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . bookmarksManager . capture ( ) . then ( function ( capturedBookmark ) { var log = "s" + capturedBookmark . state ; Log . logText ( log ) ; } ) . catch ( function ( error ) { Log . log ( error ) ; } ) ; } function _Bookmarks_ApplyState ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . bookmarksManager . applyState ( "s" ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( error ) { Log . log ( error ) ; } ) ; } function _Bookmarks_EnterPresentation ( ) { var models = window [ 's' ] . models ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . bookmarksManager . play ( models . BookmarksPlayMode . Presentation ) . then ( function ( ) { Log . logText ( "s" ) ; } ) ; } function _Bookmarks_ExitPresentation ( ) { var models = window [ 's' ] . models ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . bookmarksManager . play ( models . BookmarksPlayMode . Off ) . then ( function ( ) { Log . logText ( "s" ) ; } ) ; } function _Visual_GetSlicer ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . getPages ( ) . then ( function ( pages ) { var activePage = pages . filter ( function ( page ) { return page . isActive ; } ) [ 0 ] ; activePage . getVisuals ( ) . then ( function ( visuals ) { var slicer = visuals . filter ( function ( visual ) { return visual . type == "s" && visual . name == "s" ; } ) [ 0 ] ; slicer . getSlicerState ( ) . then ( function ( state ) { Log . log ( state ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Visual_SetSlicer ( ) { const filter = { $schema : "s" , target : { table : "s" , column : "s" } , filterType : 0 , logicalOperator : "s" , conditions : [ { operator : "s" , value : "s" } , { operator : "s" , value : "s" } ] } ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . getPages ( ) . then ( function ( pages ) { var activePage = pages . filter ( function ( page ) { return page . isActive ; } ) [ 0 ] ; activePage . getVisuals ( ) . then ( function ( visuals ) { var slicer = visuals . filter ( function ( visual ) { return visual . type == "s" && visual . name == "s" ; } ) [ 0 ] ; slicer . setSlicerState ( { filters : [ filter ] } ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Visual_SetFilters ( ) { const filter = { $schema : "s" , target : { table : "s" , measure : "s" } , filterType : 0 , logicalOperator : "s" , conditions : [ { operator : "s" , value : 0 } ] } ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . getPages ( ) . then ( function ( pages ) { var activePage = pages . filter ( function ( page ) { return page . isActive } ) [ 0 ] ; activePage . getVisuals ( ) . then ( function ( visuals ) { var visual = visuals . filter ( function ( visual ) { return visual . name == "s" ; } ) [ 0 ] ; visual . setFilters ( [ filter ] ) . then ( function ( ) { Log . logText ( "s" ) } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Visual_GetFilters ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . getPages ( ) . then ( function ( pages ) { var activePage = pages . filter ( function ( page ) { return page . isActive } ) [ 0 ] ; activePage . getVisuals ( ) . then ( function ( visuals ) { var visual = visuals . filter ( function ( visual ) { return visual . name == "s" ; } ) [ 0 ] ; visual . getFilters ( ) . then ( function ( filters ) { Log . log ( filters ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Visual_RemoveFilters ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . getPages ( ) . then ( function ( pages ) { var activePage = pages . filter ( function ( page ) { return page . isActive } ) [ 0 ] ; activePage . getVisuals ( ) . then ( function ( visuals ) { var visual = visuals . filter ( function ( visual ) { return visual . name == "s" ; } ) [ 0 ] ; visual . removeFilters ( ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Visual_ExportData_Summarized ( ) { var models = window [ 's' ] . models ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . getPages ( ) . then ( function ( pages ) { var activePage = pages . filter ( function ( page ) { return page . isActive } ) [ 0 ] ; activePage . getVisuals ( ) . then ( function ( visuals ) { var visual = visuals . filter ( function ( visual ) { return visual . name == "s" ; } ) [ 0 ] ; visual . exportData ( models . ExportDataType . Summarized ) . then ( function ( result ) { Log . logCsv ( result . data ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Visual_ExportData_Underlying ( ) { var models = window [ 's' ] . models ; var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; report . getPages ( ) . then ( function ( pages ) { var activePage = pages . filter ( function ( page ) { return page . isActive } ) [ 0 ] ; activePage . getVisuals ( ) . then ( function ( visuals ) { var visual = visuals . filter ( function ( visual ) { return visual . name == "s" ; } ) [ 0 ] ; visual . exportData ( models . ExportDataType . Underlying ) . then ( function ( result ) { Log . logCsv ( result . data ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _ReportVisual_UpdateSettings ( ) { const newSettings = { filterPaneEnabled : true } ; var embedContainer = $ ( 's' ) [ 0 ] ; visual = powerbi . get ( embedContainer ) ; visual . updateSettings ( newSettings ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( error ) { Log . log ( errors ) ; } ) ; } function _ReportVisual_HideSingleVisualHeader ( ) { var newSettings = { visualSettings : { visualHeaders : [ { settings : { visible : true } } , { settings : { visible : false } , selector : { $schema : "s" , visualName : "s" } } ] } } ; var embedContainer = $ ( 's' ) [ 0 ] ; visual = powerbi . get ( embedContainer ) ; visual . updateSettings ( newSettings ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( error ) { Log . log ( errors ) ; } ) ; } function _Report_Authoring_Create ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; SetAuthoringPageActive ( report ) . then ( function ( page ) { page . createVisual ( 's' ) . then ( function ( response ) { let visual = response . visual ; const regionColumn = { column : 's' , table : 's' , schema : 's' } ; const totalUnitsMeasure = { measure : 's' , table : 's' , schema : 's' } ; const totalVanArsdelUnitsMeasure = { measure : 's' , table : 's' , schema : 's' } ; visual . addDataField ( 's' , regionColumn ) ; visual . addDataField ( 's' , totalUnitsMeasure ) ; visual . addDataField ( 's' , totalVanArsdelUnitsMeasure ) ; visual . setProperty ( { objectName : "s" , propertyName : "s" } , { schema : 's' , value : 0 } ) ; visual . setProperty ( { objectName : "s" , propertyName : "s" } , { schema : 's' , value : 's' } ) ; } ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_Authoring_ChangeType ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; SetAuthoringPageActive ( report ) . then ( function ( page ) { page . getVisuals ( ) . then ( function ( visuals ) { if ( visuals . length < 0 ) { Log . logText ( "s" ) ; return ; } let visual = visuals [ visuals . length - 0 ] ; visual . changeType ( 's' ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_Authoring_Remove ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; SetAuthoringPageActive ( report ) . then ( function ( page ) { page . getVisuals ( ) . then ( function ( visuals ) { if ( visuals . length < 0 ) { Log . logText ( "s" ) ; return ; } let visual = visuals [ visuals . length - 0 ] ; page . deleteVisual ( visual . name ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_Authoring_Capabilities ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; SetAuthoringPageActive ( report ) . then ( function ( page ) { page . getVisuals ( ) . then ( function ( visuals ) { if ( visuals . length < 0 ) { Log . logText ( "s" ) ; return ; } let visual = visuals [ visuals . length - 0 ] ; visual . getCapabilities ( ) . then ( function ( capabilities ) { Log . logText ( "s" ) ; Log . log ( capabilities ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_Authoring_AddDataField ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; SetAuthoringPageActive ( report ) . then ( function ( page ) { page . getVisuals ( ) . then ( function ( visuals ) { if ( visuals . length < 0 ) { Log . logText ( "s" ) ; return ; } let visual = visuals [ visuals . length - 0 ] ; visual . getDataFields ( 's' ) . then ( function ( dataFields ) { if ( dataFields . length > 0 ) visual . removeDataField ( 's' , 0 ) ; if ( visual . type === 's' ) { const quarterColumn = { column : 's' , table : 's' , schema : 's' } ; visual . addDataField ( 's' , quarterColumn ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } else { const categoryColumn = { column : 's' , table : 's' , schema : 's' } ; visual . addDataField ( 's' , categoryColumn ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_Authoring_RemoveDataField ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; SetAuthoringPageActive ( report ) . then ( function ( page ) { page . getVisuals ( ) . then ( function ( visuals ) { if ( visuals . length < 0 ) { Log . logText ( "s" ) ; return ; } let visual = visuals [ visuals . length - 0 ] ; let dataRole = visual . type === 's' ? 's' : 's' ; visual . getDataFields ( dataRole ) . then ( function ( dataFields ) { if ( dataFields . length > 0 ) { visual . removeDataField ( dataRole , 0 ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } else { Log . logText ( "s" ) ; } } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_Authoring_GetDataField ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; SetAuthoringPageActive ( report ) . then ( function ( page ) { page . getVisuals ( ) . then ( function ( visuals ) { if ( visuals . length < 0 ) { Log . logText ( "s" ) ; return ; } let visual = visuals [ visuals . length - 0 ] ; visual . getDataFields ( 's' ) . then ( function ( dataFields ) { Log . logText ( "s" ) ; Log . log ( dataFields ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_Authoring_GetProperty ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; SetAuthoringPageActive ( report ) . then ( function ( page ) { page . getVisuals ( ) . then ( function ( visuals ) { if ( visuals . length < 0 ) { Log . logText ( "s" ) ; return ; } let visual = visuals [ visuals . length - 0 ] ; visual . getProperty ( { objectName : "s" , propertyName : "s" } ) . then ( function ( property ) { Log . logText ( "s" ) ; Log . log ( property ) ; } ) ; } ) } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_Authoring_SetProperty ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; SetAuthoringPageActive ( report ) . then ( function ( page ) { page . getVisuals ( ) . then ( function ( visuals ) { if ( visuals . length < 0 ) { Log . logText ( "s" ) ; return ; } let visual = visuals [ visuals . length - 0 ] ; visual . setProperty ( { objectName : "s" , propertyName : "s" } , { schema : 's' , value : 's' } ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } function _Report_Authoring_ResetProperty ( ) { var embedContainer = $ ( 's' ) [ 0 ] ; report = powerbi . get ( embedContainer ) ; SetAuthoringPageActive ( report ) . then ( function ( page ) { page . getVisuals ( ) . then ( function ( visuals ) { if ( visuals . length < 0 ) { Log . logText ( "s" ) ; return ; } let visual = visuals [ visuals . length - 0 ] ; visual . resetProperty ( { objectName : "s" , propertyName : "s" } ) . then ( function ( ) { Log . logText ( "s" ) ; } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; } ) } ) . catch ( function ( errors ) { Log . log ( errors ) ; } ) ; }	O O $complex$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $boolean$ O O O $boolean$ O O O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O O $void$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O O $void$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O $void$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O O O $complex$ O $any$ O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $boolean$ O O O $boolean$ O O O $boolean$ O O O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O O $complex$ O O O $complex$ O O O O O O $complex$ O O O $complex$ O O O O O O $complex$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $boolean$ O O O $boolean$ O O O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O O $void$ O O O O O $void$ O O O O O $complex$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O $string$ O O O $string[]$ O O O O O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $boolean$ O O O $boolean$ O O O O $complex$ O O $complex$ O O O O $HTMLElement$ O $Document$ O $HTMLElement$ O O O O $any$ O $any$ O $HTMLElement$ O $complex$ O O O O $void$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $complex$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O $complex$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $complex$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $boolean$ O O O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any[]$ O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $complex$ O O O O $void$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $complex$ O O O O $any$ O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any[]$ O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $complex$ O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O O O O O $complex$ O O O O $complex$ O O $boolean$ O O O $boolean$ O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O $string$ O O O $any$ O $any$ O O O $any$ O O $string$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $string$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O $string$ O O O $string[]$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O $complex$ O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $complex$ O O O O $any$ O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O $string$ O O O $string[]$ O O O O O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $complex$ O O O O $any$ O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O $string$ O O O $string[]$ O O O O O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O $string$ O O O $string[]$ O O O O O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O $complex$ O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O O $any$ O $complex$ O O O O $any$ O O $complex$ O O $number$ O O O $number$ O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $number$ O O O $number$ O O O O O O O O $complex$ O $complex$ O O O O O O O $number$ O O O $number$ O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O O O O O $number$ O O O $number$ O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O O O O O O O O $boolean$ O O O $boolean$ O O O $any$ O $any$ O $any$ O $any$ O O O O $complex$ O $complex$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $complex$ O O $complex$ O O $complex$ O O O $complex$ O O $boolean$ O O O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $complex$ O O $complex$ O O $complex$ O O O $complex$ O O $boolean$ O O O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $complex$ O O $complex$ O O $complex$ O O O $complex$ O O $boolean$ O O O O O O $complex$ O O $boolean$ O O O O $complex$ O O $string$ O O O $string$ O O O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $complex$ O O O $any$ O $any$ O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O O $complex$ O O $string$ O O O O $any$ O $any$ O $complex$ O O O O $void$ O O O O O O O O O $complex$ O O $complex$ O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O $complex$ O O $complex$ O O $string$ O O O O O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O $void$ O O O O $complex$ O O $complex$ O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $complex$ O O $string$ O O O O O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O $void$ O O O O $any$ O $complex$ O O O O $any$ O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $complex$ O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O O O O $any$ O O O $any$ O O O O O $any$ O $any$ O O O $any$ O O O O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O $string$ O O O $string[]$ O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O $complex$ O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O O O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O $complex$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O $void$ O O O O $complex$ O O $boolean$ O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $complex$ O O $boolean$ O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O O $string$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $string$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $string$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O $any$ O $any$ O O O O O O O O O $void$ O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O $any$ O $any$ O O O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O $number$ O O O $string$ O O O $complex$ O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O $complex$ O O $complex$ O O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O $number$ O O O $string$ O O O $complex$ O O O $string$ O O O $number$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O $complex$ O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $complex$ O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $complex$ O O $boolean$ O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $complex$ O O $complex$ O O $complex$ O O O $complex$ O O $boolean$ O O O O O O $complex$ O O $boolean$ O O O O $complex$ O O $string$ O O O $string$ O O O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $Promise<any>$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O O $any$ O $any$ O O O $complex$ O O $any$ O $any$ O O O $complex$ O O $any$ O $any$ O O O $complex$ O O $any$ O $any$ O O $string$ O O O $string$ O O O O O $string$ O O O $number$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O O O O O $complex$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $Promise<any>$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O $complex$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $Promise<any>$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O $complex$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $Promise<any>$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O $complex$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $Promise<any>$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O O $any$ O $any$ O O O $complex$ O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O O $any$ O $any$ O O O $complex$ O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O $complex$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $Promise<any>$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O $string$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $string$ O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $string$ O O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O $complex$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $Promise<any>$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O $complex$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $Promise<any>$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O O O $complex$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $Promise<any>$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O $complex$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $Promise<any>$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O $complex$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O
'js' const mockDict = { _Report_GetPages : datasetNotSupported , _Report_SetPage : datasetNotSupported , _Report_SetFilters : datasetNotSupported , _Report_GetFilters : datasetNotSupported , _Report_RemoveFilters : datasetNotSupported , _Report_PrintCurrentReport : datasetNotSupported , _Report_UpdateSettings : datasetNotSupported , _Report_Reload : datasetNotSupported , _Page_SetActive : datasetNotSupported , _Page_SetFilters : datasetNotSupported , _Page_GetFilters : datasetNotSupported , _Page_RemoveFilters : datasetNotSupported , _Page_GetVisuals : datasetNotSupported , _Report_switchModeEdit : datasetNotSupported , _Report_switchModeView : datasetNotSupported , _Embed_BasicEmbed : _Mock_Embed_BasicEmbed_ViewMode , _Embed_BasicEmbed_EditMode : _Mock_Embed_BasicEmbed_EditMode , _Report_save : _Mock_Report_save , _Report_saveAs : _Mock_Report_save , _Embed_Create : _Mock_Embed_Create } ; function datasetNotSupported ( ) { Log . logText ( 's' ) } function IsSaveMock ( funcName ) { const sampleId = GetSession ( SessionKeys . SampleId ) ; const isSample = sampleId && ( _session . embedId === sampleId ) ; return ( ( funcName === 's' || funcName === 's' ) && isSample ) ; } function IsBasicMock ( funcName ) { const sampleId = GetSession ( SessionKeys . SampleId ) ; const isSample = sampleId && ( _session . embedId === sampleId ) ; return ( ( funcName === 's' || funcName === 's' ) && isSample ) ; } function IsCreateMock ( funcName ) { const sampleId = GetSession ( SessionKeys . SampleId ) ; const isSample = sampleId && ( _session . embedId === sampleId ) ; return ( funcName === 's' && isSample ) ; } function IsNotSupported ( funcName ) { if ( powerbi . embeds . length === 0 ) { return false } const notReportMatch = funcName . match ( "s" ) ; if ( notReportMatch ) { return false ; } const container = 's' ; let embed = powerbi . get ( $ ( container ) [ 0 ] ) ; if ( embed . config . type !== 's' ) { return false ; } const runFunc = mockDict [ funcName ] ; return ( runFunc && runFunc === datasetNotSupported ) ? true : false ; } function IsMock ( funcName ) { return ( IsBasicMock ( funcName ) || IsSaveMock ( funcName ) || IsCreateMock ( funcName ) || IsNotSupported ( funcName ) ) ; } function mapFunc ( func ) { const funcName = getFuncName ( func ) ; return IsMock ( funcName ) ? mockDict [ funcName ] : func ; } function getFuncName ( func ) { let funcName = func . name ; if ( ! funcName ) { funcName = func . toString ( ) . match ( "s" ) [ 0 ] ; } return funcName ; }	O O O O O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O O O $complex$ O O O $any$ O $any$ O O O O O $complex$ O $any$ O O O $any$ O $complex$ O $complex$ O $any$ O O O $boolean$ O $any$ O O ${}$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O O O $boolean$ O O O O $complex$ O $any$ O O O $any$ O $complex$ O $complex$ O $any$ O O O $boolean$ O $any$ O O ${}$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O O O $boolean$ O O O O $complex$ O $any$ O O O $any$ O $complex$ O $complex$ O $any$ O O O $boolean$ O $any$ O O ${}$ O $any$ O $any$ O O O O $any$ O O O $boolean$ O O O O $complex$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O $any$ O O O O O O O O O $any$ O O O $any$ O O O O $any$ O $any$ O $complex$ O O O O O O O O $complex$ O $any$ O O O O $complex$ O $any$ O O $complex$ O $any$ O O $complex$ O $any$ O O $complex$ O $any$ O O O O O $complex$ O $any$ O O O $any$ O $complex$ O $any$ O O O $complex$ O $any$ O O O O $any$ O O $any$ O O O $complex$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O $any$ O O
'js' function generateNewGuid ( ) { let d = new Date ( ) . getTime ( ) ; if ( typeof performance !== 's' && typeof performance . now === 's' ) { d += performance . now ( ) ; } return 's' . replace ( "s" , function ( c ) { const r = ( d + Math . random ( ) * 0 ) & 0 | 0 ; d >>= 0 ; return r . toString ( 0 ) ; } ) ; }	O O $string$ O O O O $number$ O O $DateConstructor$ O O O $number$ O O O O O O $Performance$ O O O O $Performance$ O $number$ O O O O $number$ O $Performance$ O $number$ O O O O O O O $complex$ O O O O O $string$ O O O $number$ O O $number$ O $Math$ O $number$ O O O O O O O O O O $number$ O O O O $number$ O $string$ O O O O O O O O
'js' var sampleContentLoaded = false ; var documentationContentLoaded = false ; var showcasesContentLoaded = false ; $ ( function ( ) { OpenSampleSection ( ) ; WarmStartSampleReportEmbed ( ) ; } ) ; function OpenSampleSection ( ) { OpenEmbedWorkspace ( "s" , "s" ) ; } function OpenEmbedWorkspace ( activeTabSelector , samplesStepHtml ) { if ( ! sampleContentLoaded ) { $ ( "s" ) . load ( "s" , function ( ) { $ ( "s" ) . load ( "s" ) ; sampleContentLoaded = true ; } ) ; } $ ( "s" ) . load ( samplesStepHtml ) ; SetActiveStyle ( activeTabSelector ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . show ( ) ; LayoutShowcaseState . layoutReport = null ; BookmarkShowcaseState . bookmarksReport = null ; } function OpenDocumentationSection ( ) { if ( ! documentationContentLoaded ) { $ ( "s" ) . load ( "s" ) ; documentationContentLoaded = true ; } SetActiveStyle ( "s" ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . show ( ) ; trackEvent ( TelemetryEventName . SectionOpen , { section : TelemetrySectionName . Documentation , src : TelemetryEventSource . UserClick } ) ; } function OpenShowcasesSection ( ) { if ( ! showcasesContentLoaded ) { $ ( 's' ) . removeAttr ( 's' ) ; $ ( "s" ) . load ( "s" ) ; showcasesContentLoaded = true ; } SetActiveStyle ( "s" ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . show ( ) ; trackEvent ( TelemetryEventName . SectionOpen , { section : TelemetrySectionName . Showcase , src : TelemetryEventSource . UserClick } ) ; } function SetActiveStyle ( id ) { $ ( "s" ) . removeClass ( "s" ) ; $ ( id ) . addClass ( "s" ) ; } const ShowcasesHtmls = { CustomLayout : "s" , Bookmarks : "s" , Themes : "s" , InsightToAction : "s" , QuickVisualCreator : "s" , } ; function OpenShowcase ( showcaseType ) { $ ( "s" ) . load ( ShowcasesHtmls [ showcaseType ] ) ; showcasesContentLoaded = false ; trackEvent ( TelemetrySectionName . Showcase , { showcaseType : showcaseType , src : TelemetryEventSource . UserClick } ) ; } function OpenShowcaseFromURL ( showcase ) { $ ( "s" ) . load ( ShowcasesHtmls [ showcase ] ) ; SetActiveStyle ( "s" ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . show ( ) ; trackEvent ( TelemetrySectionName . Showcase , { showcaseType : showcase , src : TelemetryEventSource . Url } ) ; }	O O $boolean$ O O O O $boolean$ O O O O $boolean$ O O O $any$ O O O O O $complex$ O O O $void$ O O O O O O O $complex$ O O O $complex$ O O O O O O O O $complex$ O $any$ O $any$ O O O O O $boolean$ O O $any$ O O O O $any$ O O O O O O O $any$ O O O O $any$ O O O O $boolean$ O O O O O O O $any$ O O O O $any$ O $any$ O O $complex$ O $any$ O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $complex$ O $any$ O O O $complex$ O $any$ O O O O O $complex$ O O O O O O $boolean$ O O $any$ O O O O $any$ O O O O $boolean$ O O O O $complex$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $void$ O $complex$ O $string$ O O $string$ O $complex$ O $string$ O $string$ O $complex$ O $string$ O O O O O $void$ O O O O O O $boolean$ O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $boolean$ O O O O $complex$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $void$ O $complex$ O $string$ O O $string$ O $complex$ O $string$ O $string$ O $complex$ O $string$ O O O O O $complex$ O $any$ O O $any$ O O O O $any$ O O O O $any$ O $any$ O O $any$ O O O O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O O O $void$ O $any$ O O $any$ O O O O $any$ O $complex$ O $any$ O O O $boolean$ O O O $void$ O $complex$ O $string$ O O $any$ O $any$ O $string$ O $complex$ O $string$ O O O O O $void$ O $any$ O O $any$ O O O O $any$ O $complex$ O $any$ O O O $complex$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $void$ O $complex$ O $string$ O O $any$ O $any$ O $string$ O $complex$ O $string$ O O O O
'js' function InitLogger ( divId ) { var Logger = { } ; Logger . spaceWidthCorrection = 0 ; Logger . log = function ( event ) { this . logText ( "s" + JSON . stringify ( event , null , "s" ) ) ; } ; Logger . logText = function ( text ) { let textbox = document . getElementById ( divId ) ; if ( ! textbox . value ) { textbox . value = "s" ; } textbox . value += "s" + text + "s" ; textbox . scrollTop = textbox . scrollHeight ; } ; Logger . logCsv = function ( text ) { let textbox = document . getElementById ( divId ) ; if ( ! textbox . value ) { textbox . value = "s" ; } let maxLength = 0 ; let lines = text . split ( "s" ) ; let valuesPerLine = [ ] ; let log = "s" ; if ( ! lines || lines . length === 0 ) { log += "s" ; } else { for ( let i = 0 ; i < lines . length ; ++ i ) { valuesPerLine [ i ] = lines [ i ] . split ( "s" ) ; valuesPerLine [ i ] . forEach ( function ( val ) { if ( val . length > maxLength ) { maxLength = val . length ; } } ) ; } maxLength += 0 ; var title = this . getLineText ( valuesPerLine [ 0 ] , maxLength ) ; log += title + "s" ; log += this . repeatChar ( "s" , title . length ) + "s" ; for ( let i = 0 ; i < lines . length ; ++ i ) { log += this . getLineText ( valuesPerLine [ i ] , maxLength ) + "s" } } textbox . value += log ; textbox . scrollTop = textbox . scrollHeight ; } ; Logger . getLineText = function ( values , spacesPerWord ) { var text = "s" ; _this = this ; values . forEach ( function ( val ) { text += _this . getCenteredText ( val , spacesPerWord ) ; } ) ; return text ; } ; Logger . getCenteredText = function ( value , spaces ) { var text = "s" ; let spacesBefore = ( spaces - value . length ) / 0 ; let spacesAfter = spaces - value . length - spacesBefore ; text += this . repeatChar ( "s" , spacesBefore * this . spaceWidthCorrection ) ; text += value ; text += this . repeatChar ( "s" , spacesAfter * this . spaceWidthCorrection ) ; return text ; } ; Logger . repeatChar = function ( char , times ) { let text = "s" ; for ( let i = 0 ; i < times ; ++ i ) { text += char ; } return text ; } ; return Logger ; }	O O $complex$ O $any$ O O O $complex$ O O O O $complex$ O $number$ O O O $complex$ O $void$ O O O $any$ O O O O $void$ O O O $JSON$ O $complex$ O $any$ O O O O O O O O O $complex$ O $void$ O O O $any$ O O O $HTMLElement$ O $Document$ O $HTMLElement$ O $any$ O O O O O $HTMLElement$ O $any$ O O $HTMLElement$ O $any$ O O O O $HTMLElement$ O $any$ O O O $any$ O O O $HTMLElement$ O $number$ O $HTMLElement$ O $number$ O O O $complex$ O $void$ O O O $any$ O O O $HTMLElement$ O $Document$ O $HTMLElement$ O $any$ O O O O O $HTMLElement$ O $any$ O O $HTMLElement$ O $any$ O O O O O $number$ O O O O $any$ O $any$ O $any$ O O O O O $any[]$ O O O O O $string$ O O O O O O $any$ O $any$ O $any$ O O O O $string$ O O O O O O O O O $number$ O O O $number$ O $any$ O $any$ O O $number$ O O $any[]$ O $number$ O O $any$ O $number$ O O $any$ O O O O $any[]$ O $number$ O O $any$ O O O $any$ O O O O $any$ O $any$ O $number$ O O $number$ O $any$ O $any$ O O O O O O $number$ O O O O $string$ O O O $string$ O $any[]$ O O O O $number$ O O $string$ O $string$ O O O $string$ O O O $string$ O O O $string$ O $number$ O O O O O O O $number$ O O O $number$ O $any$ O $any$ O O $number$ O O $string$ O O O $string$ O $any[]$ O $number$ O O $number$ O O O O O $HTMLElement$ O $any$ O $string$ O $HTMLElement$ O $number$ O $HTMLElement$ O $number$ O O O $complex$ O $string$ O O O $any$ O $any$ O O O $string$ O O O $any$ O O O $any$ O $any$ O O O $any$ O O $string$ O $any$ O $any$ O $any$ O $any$ O O O O O O $string$ O O O $complex$ O $string$ O O O $any$ O $any$ O O O $string$ O O O O $number$ O O $any$ O $any$ O $any$ O O O O O $number$ O $any$ O $any$ O $any$ O $number$ O $string$ O O O $string$ O O O $number$ O O O $number$ O O $string$ O $any$ O $string$ O O O $string$ O O O $number$ O O O $number$ O O O $string$ O O O $complex$ O $string$ O O O $any$ O $any$ O O O $string$ O O O O O O $number$ O O O $number$ O $any$ O O $number$ O O $string$ O $any$ O O O $string$ O O O O $complex$ O O
'js' const active_class = 's' ; const active_steps_li = 's' ; const active_tabs_li = 's' ; const active_mode = 's' const EmbedViewMode = "s" ; const EmbedEditMode = "s" ; const EmbedCreateMode = "s" ; const runEmbedCodeTimeout = 0 ; const interactTooltipTimeout = 0 ; const defaultTokenType = 0 ; const defaultQnaQuestion = "s" ; const defaultQnaMode = "s" ; const interactiveNoQuestionMode = "s" ; function OpenSamplesStep ( ) { $ ( 's' ) . removeClass ( active_class ) ; $ ( 's' + active_steps_li ) . removeClass ( active_steps_li ) ; $ ( "s" ) . addClass ( active_class ) ; $ ( "s" ) . addClass ( active_steps_li ) ; $ ( 's' ) . removeClass ( 's' ) ; $ ( 's' ) . removeClass ( 's' ) ; $ ( "s" ) . show ( ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . show ( ) ; trackEvent ( TelemetryEventName . InnerSectionOpen , { section : TelemetryInnerSection . Sample , src : TelemetryEventSource . UserClick } ) ; } function OpenCodeStepFromNavPane ( ) { const mode = GetSession ( SessionKeys . EmbedMode ) ; const entityType = GetSession ( SessionKeys . EntityType ) ; const tokenType = GetSession ( SessionKeys . TokenType ) ; OpenCodeStep ( mode , entityType , tokenType ) ; } function OpenCodeStep ( mode , entityType , tokenType ) { $ ( 's' ) . removeClass ( active_class ) ; $ ( 's' + active_steps_li ) . removeClass ( active_steps_li ) ; $ ( 's' ) . addClass ( active_class ) ; $ ( 's' ) . addClass ( active_steps_li ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . show ( ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . empty ( ) ; let containers = $ ( "s" ) ; containers . removeClass ( active_class ) ; const containerID = getEmbedContainerID ( entityType ) ; const classPrefix = getEmbedContainerClassPrefix ( entityType ) ; $ ( classPrefix + 's' ) . removeAttr ( 's' ) ; $ ( classPrefix + 's' ) . removeAttr ( 's' ) ; $ ( "s" + containerID ) . removeAttr ( 's' ) ; const activeContainer = classPrefix + ( $ ( "s" ) . hasClass ( active_class ) ? 's' : 's' ) ; $ ( activeContainer ) . attr ( 's' , containerID ) ; $ ( activeContainer ) . addClass ( active_class ) ; $ ( 's' + active_tabs_li ) . removeClass ( active_tabs_li ) ; $ ( 's' ) . addClass ( active_tabs_li ) ; $ ( 's' ) . removeClass ( active_tabs_li ) ; LoadEmbedSettings ( mode , entityType , tokenType ) ; trackEvent ( TelemetryEventName . InnerSectionOpen , { section : TelemetryInnerSection . Code , src : TelemetryEventSource . UserClick } ) ; } function bootstrapIframe ( entityType ) { const activeContainer = getActiveEmbedContainer ( ) ; if ( activeContainer . children . length > 0 ) { return ; } let embedUrl = GetSession ( SessionKeys . EmbedUrl ) ; config = { type : entityType . toLowerCase ( ) , embedUrl : embedUrl } ; const isMobile = $ ( "s" ) . hasClass ( active_class ) ; if ( isMobile ) { config . settings = { layoutType : models . LayoutType . MobilePortrait } ; } $ ( activeContainer ) . css ( { "s" : "s" } ) ; powerbi . bootstrap ( activeContainer , config ) ; } function LoadEmbedSettings ( mode , entityType , tokenType ) { if ( entityType == EntityType . Report ) { $ ( "s" ) . load ( "s" , function ( ) { OpenEmbedMode ( mode , entityType , tokenType ) ; } ) ; } else if ( entityType == EntityType . Visual ) { $ ( "s" ) . load ( "s" , function ( ) { OpenEmbedMode ( mode , entityType , tokenType ) ; } ) ; } else if ( entityType == EntityType . Dashboard ) { $ ( "s" ) . load ( "s" , function ( ) { OpenEmbedMode ( mode , entityType , tokenType ) ; } ) ; } else if ( entityType == EntityType . Tile ) { $ ( "s" ) . load ( "s" , function ( ) { OpenEmbedMode ( mode , entityType , tokenType ) ; } ) ; } else if ( entityType == EntityType . Qna ) { $ ( "s" ) . load ( "s" , function ( ) { OpenEmbedMode ( mode , entityType , tokenType ) ; } ) ; } } function OpenEmbedTab ( ) { if ( $ ( 's' ) . hasClass ( active_tabs_li ) ) { return ; } $ ( 's' + active_tabs_li ) . removeClass ( active_tabs_li ) ; $ ( 's' ) . addClass ( active_tabs_li ) ; const mode = GetSession ( SessionKeys . EmbedMode ) ; const entityType = GetSession ( SessionKeys . EntityType ) ; const tokenType = GetSession ( SessionKeys . TokenType ) ; LoadEmbedSettings ( mode , entityType , tokenType ) ; } function isInteractStepEnabled ( entityType ) { const classPrefix = getEmbedContainerClassPrefix ( entityType ) ; const activeContainer = classPrefix + ( $ ( "s" ) . hasClass ( active_class ) ? 's' : 's' ) ; return $ ( activeContainer + "s" ) . length > 0 ; } function OpenInteractTab ( ) { const entityType = GetSession ( SessionKeys . EntityType ) ; if ( ! isInteractStepEnabled ( entityType ) ) { $ ( 's' ) . addClass ( "s" ) ; setTimeout ( function ( ) { $ ( 's' ) . removeClass ( "s" ) ; } , interactTooltipTimeout ) ; return ; } $ ( 's' ) . removeClass ( 's' ) ; $ ( 's' ) . removeClass ( 's' ) ; $ ( 's' + active_tabs_li ) . removeClass ( active_tabs_li ) ; $ ( 's' ) . addClass ( active_tabs_li ) ; if ( entityType == EntityType . Tile ) { $ ( "s" ) . load ( "s" , function ( ) { SetToggleHandler ( "s" ) ; LoadCodeArea ( "s" , "s" ) ; } ) ; } else if ( entityType == EntityType . Dashboard ) { $ ( "s" ) . load ( "s" , function ( ) { SetToggleHandler ( "s" ) ; LoadCodeArea ( "s" , "s" ) ; hideFeaturesOnMobile ( ) ; } ) ; } else if ( entityType == EntityType . Qna ) { $ ( "s" ) . load ( "s" , function ( ) { const isResultOnlyMode = GetSession ( SessionKeys . QnaMode ) === "s" ; $ ( 's' ) . toggle ( isResultOnlyMode ) ; SetToggleHandler ( "s" ) ; LoadCodeArea ( "s" , "s" ) ; } ) ; } else if ( entityType == EntityType . Visual ) { $ ( "s" ) . load ( "s" , function ( ) { SetToggleHandler ( "s" ) ; LoadCodeArea ( "s" , "s" ) ; } ) ; } else { $ ( "s" ) . load ( "s" , function ( ) { SetToggleHandler ( "s" ) ; LoadCodeArea ( "s" , "s" ) ; $ ( 's' ) . toggle ( GetSession ( SessionKeys . EmbedMode ) !== EmbedCreateMode ) ; hideFeaturesOnMobile ( ) ; } ) ; } } function setCodeArea ( mode , entityType ) { LoadCodeArea ( "s" , getEmbedCode ( mode , entityType ) ) ; } function getEmbedCode ( mode , entityType ) { const isDesktop = $ ( "s" ) . hasClass ( active_class ) ; let code = "s" ; if ( entityType == EntityType . Report ) { if ( mode === EmbedViewMode ) { code = isDesktop ? _Embed_BasicEmbed : _Embed_BasicEmbed_Mobile ; } else if ( mode === EmbedEditMode ) { code = isDesktop ? _Embed_BasicEmbed_EditMode : _Embed_MobileEditNotSupported ; } else if ( mode === EmbedCreateMode ) { code = isDesktop ? _Embed_Create : _Embed_MobileCreateNotSupported ; } } else if ( entityType == EntityType . Visual ) { code = _Embed_VisualEmbed ; } else if ( entityType == EntityType . Dashboard ) { code = isDesktop ? _Embed_DashboardEmbed : _Embed_DashboardEmbed_Mobile ; } else if ( entityType == EntityType . Tile ) { code = _Embed_TileEmbed ; } else if ( entityType == EntityType . Qna ) { code = GetParameterByName ( SessionKeys . TokenType ) === 's' ? _Embed_QnaEmbed_Aad : _Embed_QnaEmbed ; } return code ; } function showEmbedSettings ( mode , entityType , tokenType ) { if ( entityType == EntityType . Report ) { let inputDivToShow = "s" ; let inputDivToHide = "s" ; if ( mode === EmbedCreateMode ) { inputDivToShow = "s" ; inputDivToHide = "s" ; } $ ( inputDivToShow ) . show ( ) ; $ ( inputDivToHide ) . hide ( ) ; let embedModeRadios = $ ( 's' ) ; embedModeRadios . filter ( 's' + mode + 's' ) . prop ( 's' , true ) ; let embedTypeRadios = $ ( 's' ) ; embedTypeRadios . filter ( 's' + tokenType + 's' ) . prop ( 's' , true ) ; } else if ( entityType == EntityType . Visual ) { $ ( "s" ) . show ( ) ; let embedTypeRadios = $ ( 's' ) ; embedTypeRadios . filter ( 's' + tokenType + 's' ) . prop ( 's' , true ) ; } else if ( entityType == EntityType . Dashboard ) { } } function OpenEmbedMode ( mode , entityType , tokenType ) { if ( entityType == EntityType . Report ) { if ( mode == EmbedCreateMode ) { if ( IsEmbeddingSampleReport ( ) ) { LoadSampleDatasetIntoSession ( ) . then ( function ( response ) { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" ) ; setCodeAndShowEmbedSettings ( mode , entityType , tokenType ) ; } ) ; } else { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" ) ; setCodeAndShowEmbedSettings ( mode , entityType , tokenType ) ; } } else { if ( IsEmbeddingSampleReport ( ) ) { LoadSampleReportIntoSession ( ) . then ( function ( response ) { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" ) ; setCodeAndShowEmbedSettings ( mode , entityType , tokenType ) ; } ) ; } else { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" ) ; setCodeAndShowEmbedSettings ( mode , entityType , tokenType ) ; } } } else if ( entityType == EntityType . Visual ) { LoadSettings = function ( ) { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" ) ; SetTextboxFromSessionOrUrlParam ( SessionKeys . PageName , "s" ) ; SetTextboxFromSessionOrUrlParam ( SessionKeys . VisualName , "s" ) ; setCodeAndShowEmbedSettings ( mode , entityType , tokenType ) ; } ; if ( IsEmbeddingSampleReport ( ) ) { LoadSampleVisualIntoSession ( ) . then ( function ( response ) { LoadSettings ( ) ; } ) ; } else { LoadSettings ( ) ; } } else if ( entityType == EntityType . Dashboard ) { if ( IsEmbeddingSampleDashboard ( ) ) { LoadSampleDashboardIntoSession ( ) . then ( function ( response ) { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" ) ; setCodeAndShowEmbedSettings ( mode , entityType , tokenType ) ; } ) ; } else { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" ) ; setCodeAndShowEmbedSettings ( mode , entityType , tokenType ) ; } } else if ( entityType == EntityType . Tile ) { if ( IsEmbeddingSampleTile ( ) ) { LoadSampleTileIntoSession ( ) . then ( function ( response ) { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" , "s" ) ; setCodeAndShowEmbedSettings ( mode , entityType , tokenType ) ; } ) ; } else { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" , "s" ) ; setCodeAndShowEmbedSettings ( mode , entityType , tokenType ) ; } } else if ( entityType == EntityType . Qna ) { LoadSettings = function ( ) { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" ) ; SetTextboxFromSessionOrUrlParam ( SessionKeys . QnaQuestion , "s" ) ; setCodeAndShowEmbedSettings ( mode , entityType , tokenType ) ; let qnaMode = GetParameterByName ( SessionKeys . QnaMode ) ; if ( qnaMode ) { let modesRadios = $ ( 's' ) ; modesRadios . filter ( 's' + qnaMode + 's' ) . prop ( 's' , true ) ; qnaMode = qnaMode !== interactiveNoQuestionMode ? qnaMode : defaultQnaMode ; SetSession ( SessionKeys . QnaMode , qnaMode ) ; } } ; if ( IsEmbeddingSampleQna ( ) ) { LoadSampleQnaIntoSession ( ) . then ( function ( response ) { if ( ! GetSession ( SessionKeys . QnaQuestion ) ) { SetSession ( SessionKeys . QnaQuestion , defaultQnaQuestion ) ; } LoadSettings ( ) ; } ) ; } else { LoadSettings ( ) ; } } } function setCodeAndShowEmbedSettings ( mode , entityType , tokenType ) { setCodeArea ( mode , entityType ) ; showEmbedSettings ( mode , entityType , tokenType ) ; bootstrapIframe ( entityType ) ; } function OpenViewMode ( ) { SetSession ( SessionKeys . EmbedMode , EmbedViewMode ) ; OpenEmbedMode ( EmbedViewMode , EntityType . Report ) ; } function OpenEditMode ( ) { SetSession ( SessionKeys . EmbedMode , EmbedEditMode ) ; OpenEmbedMode ( EmbedEditMode , EntityType . Report ) ; } function OpenCreateMode ( ) { SetSession ( SessionKeys . EmbedMode , EmbedCreateMode ) ; OpenEmbedMode ( EmbedCreateMode , EntityType . Report ) ; } function IsEmbeddingSampleReport ( ) { return GetSession ( SessionKeys . IsSampleReport ) == true ; } function IsEmbeddingSampleDashboard ( ) { return GetSession ( SessionKeys . IsSampleDashboard ) == true ; } function IsEmbeddingSampleTile ( ) { return GetSession ( SessionKeys . IsSampleTile ) == true ; } function IsEmbeddingSampleQna ( ) { return GetSession ( SessionKeys . IsSampleQna ) == true ; } function ToggleQuestionBox ( enabled ) { UpdateSession ( "s" , SessionKeys . QnaMode ) ; let txtQuestion = $ ( "s" ) ; if ( enabled === true ) { let question = GetSession ( SessionKeys . QnaQuestion ) ; question = question ? question : defaultQnaQuestion ; txtQuestion . val ( question ) ; txtQuestion . prop ( 's' , false ) ; } else { txtQuestion . val ( "s" ) ; txtQuestion . prop ( 's' , true ) ; } } function OnTokenTypeRadioClicked ( tokenType ) { SetSession ( SessionKeys . TokenType , tokenType ) ; const entityType = GetSession ( SessionKeys . EntityType ) ; if ( tokenType == 0 ) { $ ( 's' ) . each ( function ( ) { $ ( this ) . val ( "s" ) ; let onChangeFunc = $ ( this ) . attr ( "s" ) ; if ( onChangeFunc ) { onChangeFunc = onChangeFunc . replace ( "s" , "s" + $ ( this ) . attr ( 's' ) + "s" ) ; eval ( onChangeFunc ) ; } } ) ; } else { ReloadSample ( entityType ) ; } } function ReloadSample ( entityType ) { const mode = GetSession ( SessionKeys . EmbedMode ) ; SetIsSample ( true ) ; if ( entityType == EntityType . Report ) { if ( mode == EmbedCreateMode ) { LoadSampleDatasetIntoSession ( ) . then ( function ( response ) { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" ) ; } ) ; } else { LoadSampleReportIntoSession ( ) . then ( function ( response ) { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" ) ; } ) ; } } else if ( entityType == EntityType . Visual ) { LoadSampleVisualIntoSession ( ) . then ( function ( response ) { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" ) ; SetTextboxFromSessionOrUrlParam ( SessionKeys . PageName , "s" ) ; SetTextboxFromSessionOrUrlParam ( SessionKeys . VisualName , "s" ) ; } ) ; } else if ( entityType == EntityType . Dashboard ) { LoadSampleDashboardIntoSession ( ) . then ( function ( response ) { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" ) ; } ) ; } else if ( entityType == EntityType . Tile ) { LoadSampleTileIntoSession ( ) . then ( function ( response ) { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" , "s" ) ; } ) ; } else if ( entityType == EntityType . Qna ) { LoadSampleQnaIntoSession ( ) . then ( function ( response ) { SetTextBoxesFromSessionOrUrlParam ( "s" , "s" , "s" ) ; } ) ; } } function EmbedAreaDesktopView ( ) { if ( $ ( "s" ) . hasClass ( active_class ) ) { return ; } $ ( "s" ) . removeClass ( active_mode ) ; $ ( "s" ) . addClass ( active_mode ) ; const entityType = GetSession ( SessionKeys . EntityType ) ; const mode = GetSession ( SessionKeys . EmbedMode ) ; $ ( "s" ) . show ( ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . addClass ( active_class ) ; $ ( "s" ) . removeClass ( active_class ) ; const containerID = getEmbedContainerID ( entityType ) ; const classPrefix = getEmbedContainerClassPrefix ( entityType ) ; $ ( classPrefix + 's' ) . removeAttr ( 's' ) ; $ ( classPrefix + 's' ) . attr ( 's' , containerID ) ; $ ( classPrefix + 's' ) . removeClass ( active_class ) ; $ ( classPrefix + 's' ) . addClass ( active_class ) ; if ( $ ( 's' ) . hasClass ( active_tabs_li ) ) { setCodeArea ( mode , entityType ) ; } $ ( 's' ) . show ( ) ; if ( $ ( classPrefix + "s" ) . length && ! $ ( classPrefix + "s" ) . length ) { let runFunc = getEmbedCode ( mode , entityType ) ; if ( $ ( 's' ) . hasClass ( active_tabs_li ) ) { runFunc = updateRunFuncSessionParameters ( runFunc ) ; eval ( runFunc ) ; } else { runFunc ( ) ; } } trackEvent ( TelemetryEventName . DesktopModeOpen , { } ) ; } function EmbedAreaMobileView ( ) { if ( $ ( "s" ) . hasClass ( active_class ) ) { return ; } $ ( "s" ) . removeClass ( active_mode ) ; $ ( "s" ) . addClass ( active_mode ) ; const entityType = GetSession ( SessionKeys . EntityType ) ; const mode = GetSession ( SessionKeys . EmbedMode ) ; $ ( "s" ) . hide ( ) ; $ ( "s" ) . show ( ) ; $ ( "s" ) . removeClass ( active_class ) ; $ ( "s" ) . addClass ( active_class ) ; const containerID = getEmbedContainerID ( entityType ) ; const classPrefix = getEmbedContainerClassPrefix ( entityType ) ; $ ( classPrefix + 's' ) . removeAttr ( 's' ) ; $ ( classPrefix + 's' ) . attr ( 's' , containerID ) ; $ ( classPrefix + 's' ) . removeClass ( active_class ) ; $ ( classPrefix + 's' ) . addClass ( active_class ) ; if ( $ ( 's' ) . hasClass ( active_tabs_li ) ) { setCodeArea ( mode , entityType ) ; } $ ( 's' ) . hide ( ) ; if ( $ ( 's' ) . hasClass ( active_tabs_li ) ) { let activeHideOnMobile = $ ( 's' ) ; if ( activeHideOnMobile . length ) { activeHideOnMobile . removeClass ( active_class ) ; LoadCodeArea ( "s" , "s" ) ; } } if ( $ ( classPrefix + "s" ) . length && ! $ ( classPrefix + "s" ) . length ) { if ( GetSession ( SessionKeys . EntityIsAlreadyEmbedded ) ) { let runFunc = getEmbedCode ( mode , entityType ) ; if ( $ ( 's' ) . hasClass ( active_tabs_li ) ) { runFunc = updateRunFuncSessionParameters ( runFunc ) ; eval ( runFunc ) ; } else { runFunc ( ) ; } } } trackEvent ( TelemetryEventName . MobileModeOpen , { } ) ; } function updateRunFuncSessionParameters ( runFunc ) { const entityType = GetSession ( SessionKeys . EntityType ) ; const accessToken = 's' + GetSession ( SessionKeys . AccessToken ) + 's' ; const embedUrl = 's' + GetSession ( SessionKeys . EmbedUrl ) + 's' ; const embedId = 's' + GetSession ( SessionKeys . EmbedId ) + 's' ; const dashboardId = 's' + GetSession ( SessionKeys . DashboardId ) + 's' ; const pageName = 's' + GetSession ( SessionKeys . PageName ) + 's' ; const visualName = 's' + GetSession ( SessionKeys . VisualName ) + 's' ; let code = BodyCodeOfFunction ( runFunc ) ; let tokenType = GetSession ( SessionKeys . TokenType ) ; tokenType = ( tokenType != undefined ) ? tokenType : defaultTokenType ; code = code . replace ( "s" , accessToken ) . replace ( "s" , tokenType ) ; if ( entityType == EntityType . Report ) { code = code . replace ( "s" , embedUrl ) . replace ( "s" , embedId ) ; } else if ( entityType == EntityType . Dashboard ) { code = code . replace ( "s" , embedUrl ) . replace ( "s" , embedId ) ; } else if ( entityType == EntityType . Tile ) { code = code . replace ( "s" , embedUrl ) . replace ( "s" , dashboardId ) . replace ( "s" , embedId ) ; } else if ( entityType == EntityType . Visual ) { code = code . replace ( "s" , embedUrl ) . replace ( "s" , embedId ) . replace ( "s" , pageName ) . replace ( "s" , visualName ) ; } else if ( entityType == EntityType . Qna ) { let question = GetSession ( SessionKeys . QnaQuestion ) ; question = question ? question : defaultQnaQuestion ; let mode = GetSession ( SessionKeys . QnaMode ) ; mode = mode ? mode : defaultQnaMode ; code = code . replace ( "s" , embedUrl ) . replace ( "s" , embedId ) . replace ( "s" , 's' + question + 's' ) . replace ( 's' + "s" + 's' , 's' + mode + 's' ) ; } return code ; } function hideFeaturesOnMobile ( ) { if ( $ ( "s" ) . hasClass ( active_class ) ) $ ( 's' ) . hide ( ) ; } function onShowcaseTryMeClicked ( showcase ) { let showcaseUrl = location . href . substring ( 0 , location . href . lastIndexOf ( "s" ) ) + 's' + showcase ; trackEvent ( TelemetrySectionName . Showcase , { showcaseType : showcase , src : TelemetryEventSource . Interact } ) ; window . open ( showcaseUrl , 's' ) ; }	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $void$ O O O $any$ O O O O $any$ O O O O $any$ O O O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $void$ O $complex$ O $string$ O O $string$ O $complex$ O $string$ O $string$ O $complex$ O $string$ O O O O O $void$ O O O O $any$ O $complex$ O $complex$ O $any$ O O O $any$ O $complex$ O $complex$ O $any$ O O O $any$ O $complex$ O $complex$ O $any$ O O $void$ O $any$ O $any$ O $any$ O O O O $void$ O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O O O $any$ O O O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $complex$ O $any$ O O O O O $complex$ O $any$ O O $any$ O O O O O O $any$ O O O O $any$ O O O O O O $any$ O O O O $any$ O O O O O O $any$ O O O O O $string$ O O O O $any$ O O O O $any$ O O O O O O O O O $any$ O $string$ O O $any$ O O O O O O $any$ O $string$ O O $any$ O O O O $any$ O O O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $void$ O $any$ O $any$ O $any$ O O $void$ O $complex$ O $string$ O O $string$ O $complex$ O $string$ O $string$ O $complex$ O $string$ O O O O O $void$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $complex$ O $complex$ O $string$ O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O O O O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $void$ O $any$ O $any$ O $any$ O O O O $any$ O $complex$ O $string$ O O $any$ O O O O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $complex$ O $string$ O O $any$ O O O O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $complex$ O $string$ O O $any$ O O O O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $complex$ O $string$ O O $any$ O O O O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $complex$ O $string$ O O $any$ O O O O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O O O O O O O O $void$ O O O O O $any$ O O O O $any$ O O O O O O O O $any$ O O O O O O $any$ O O O O $any$ O O O O $any$ O O O O O $any$ O $complex$ O $complex$ O $any$ O O O $any$ O $complex$ O $complex$ O $any$ O O O $any$ O $complex$ O $complex$ O $any$ O O $void$ O $any$ O $any$ O $any$ O O O O $boolean$ O $any$ O O O O O $complex$ O $any$ O O O $string$ O O O O $any$ O O O O $any$ O O O O O O O O O O $any$ O $string$ O O O O $any$ O O O O O $void$ O O O O $any$ O $complex$ O $complex$ O $any$ O O O O O $boolean$ O $any$ O O O $any$ O O O O $any$ O O O O $number$ O O O O O $any$ O O O O $any$ O O O O O O O O O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O O O $any$ O O O O $any$ O O O O $any$ O O O O O O $any$ O $complex$ O $string$ O O $any$ O O O O $any$ O O O O O O O $complex$ O O O O $complex$ O O O O O O O O O O O O O $any$ O $complex$ O $string$ O O $any$ O O O O $any$ O O O O O O O $complex$ O O O O $complex$ O O O O O O $void$ O O O O O O O O O O $any$ O $complex$ O $string$ O O $any$ O O O O $any$ O O O O O O O O $boolean$ O $complex$ O $complex$ O $any$ O O O O $any$ O O O O $any$ O $boolean$ O O $complex$ O O O O $complex$ O O O O O O O O O O O O O $any$ O $complex$ O $string$ O O $any$ O O O O $any$ O O O O O O O $complex$ O O O O $complex$ O O O O O O O O O O O O $any$ O O O O $any$ O O O O O O O $complex$ O O O O $complex$ O O O O O O $any$ O O O O $any$ O $complex$ O $complex$ O $any$ O O O O O $void$ O O O O O O O O O $complex$ O $any$ O $any$ O O $complex$ O O O $string$ O $any$ O $any$ O O O O O $string$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O O O O O $string$ O O O O O $any$ O $complex$ O $string$ O O O O $any$ O O O O $string$ O $any$ O $complex$ O $void$ O O O O O $any$ O O O O $string$ O $any$ O $complex$ O $void$ O O O O O $any$ O O O O $string$ O $any$ O $complex$ O $void$ O O O O O O $any$ O $complex$ O $string$ O O $string$ O $void$ O O O O O $any$ O $complex$ O $string$ O O $string$ O $any$ O $void$ O $void$ O O O O O $any$ O $complex$ O $string$ O O $string$ O $void$ O O O O O $any$ O $complex$ O $string$ O O $string$ O $complex$ O $complex$ O $any$ O O O O $void$ O $void$ O O O $string$ O O O $complex$ O $any$ O $any$ O $any$ O O O O $any$ O $complex$ O $string$ O O O $string$ O O O O $string$ O O O O O $any$ O O O O $string$ O O O $string$ O O O O $any$ O $string$ O O $any$ O O O $any$ O $string$ O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O O $any$ O O O O O O O O O O $any$ O $complex$ O $string$ O O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O O $any$ O O O O O O O O O O $any$ O $complex$ O $string$ O O O O O $complex$ O $any$ O $any$ O $any$ O O O O $any$ O $complex$ O $string$ O O O O $any$ O O O O O O $complex$ O O O O $complex$ O O O $any$ O O O $any$ O O $complex$ O O O O O O O O $void$ O $any$ O $any$ O $any$ O O O O O O O O $complex$ O O O O O O O O $void$ O $any$ O $any$ O $any$ O O O O O O O O $complex$ O O O O $complex$ O O O $any$ O O O $any$ O O $complex$ O O O O O O O O $void$ O $any$ O $any$ O $any$ O O O O O O O O $complex$ O O O O O O O O $void$ O $any$ O $any$ O $any$ O O O O O O O O $any$ O $complex$ O $string$ O O $any$ O O O O O $complex$ O O O O O O O O $void$ O $complex$ O $any$ O O O O $void$ O $complex$ O $any$ O O O O $void$ O $any$ O $any$ O $any$ O O O O O O $complex$ O O O O $any$ O O O $any$ O O O $any$ O O $any$ O O O O O O O O O $any$ O O O O O O O O $any$ O $complex$ O $string$ O O O O $boolean$ O O O O $any$ O O O $any$ O O O $any$ O O $complex$ O O O O O O O O $void$ O $any$ O $any$ O $any$ O O O O O O O O $complex$ O O O O O O O O $void$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $complex$ O $string$ O O O O $boolean$ O O O O $any$ O O O $any$ O O O $any$ O O $complex$ O O O O O O O O O O $void$ O $any$ O $any$ O $any$ O O O O O O O O $complex$ O O O O O O O O O O $void$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $complex$ O $string$ O O $any$ O O O O O $complex$ O O O O O O O O $void$ O $complex$ O $string$ O O O O $void$ O $any$ O $any$ O $any$ O O O $string$ O $complex$ O $complex$ O $any$ O O O O $string$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $string$ O O O O $any$ O O O O O O $string$ O $string$ O O O $string$ O O O $complex$ O $complex$ O $any$ O $string$ O O O O O O O $boolean$ O O O O $any$ O O O $any$ O O O $any$ O O O O O $complex$ O $complex$ O $string$ O O O $complex$ O $complex$ O $string$ O O O O O $any$ O O O O O O O O O $any$ O O O O O O O $void$ O $any$ O $any$ O $any$ O O $complex$ O $any$ O $any$ O O $complex$ O $any$ O $any$ O $any$ O O $void$ O $any$ O O O O $complex$ O O O $complex$ O $complex$ O $any$ O O O O $complex$ O O O $complex$ O $string$ O O O O $complex$ O O O $complex$ O $complex$ O $any$ O O O O $complex$ O O O $complex$ O $string$ O O O O $complex$ O O O $complex$ O $complex$ O $any$ O O O O $complex$ O O O $complex$ O $string$ O O O O $complex$ O O O O $complex$ O $complex$ O $string$ O O O O O O $boolean$ O O O O $complex$ O $complex$ O $any$ O O O O O O $boolean$ O O O O $complex$ O $complex$ O $any$ O O O O O O $boolean$ O O O O $complex$ O $complex$ O $any$ O O O O O O $void$ O $any$ O O $complex$ O O O $complex$ O $any$ O O O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $complex$ O $complex$ O $string$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O O $void$ O $any$ O O $complex$ O $complex$ O $any$ O $any$ O O O $any$ O $complex$ O $complex$ O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O O $any$ O O O O $any$ O O O O O $any$ O $any$ O O O O $any$ O O O O O O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O O $any$ O O O O O O O $any$ O $any$ O O O O O O O O O $void$ O $any$ O O O O O $void$ O $any$ O O O $any$ O $complex$ O $complex$ O $any$ O O $void$ O O O O O O $any$ O $complex$ O $string$ O O O O $any$ O O O O $complex$ O O O $any$ O O O $any$ O O $complex$ O O O O O O O O O O O O O O $complex$ O O O $any$ O O O $any$ O O $complex$ O O O O O O O O O O O O O O O O $any$ O $complex$ O $string$ O O $any$ O O O $any$ O O O $any$ O O $complex$ O O O O O O O O $void$ O $complex$ O $any$ O O O O $void$ O $complex$ O $any$ O O O O O O O O O O O $any$ O $complex$ O $string$ O O $any$ O O O $any$ O O O $any$ O O $complex$ O O O O O O O O O O O O O O O $any$ O $complex$ O $string$ O O $any$ O O O $any$ O O O $any$ O O $complex$ O O O O O O O O O O O O O O O O O $any$ O $complex$ O $string$ O O $any$ O O O $any$ O O O $any$ O O $complex$ O O O O O O O O O O O O O O $void$ O O O O O $any$ O O O O $any$ O O O O O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O O $any$ O $complex$ O $complex$ O $any$ O O O $any$ O $complex$ O $complex$ O $any$ O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O O O O $complex$ O $any$ O O O O O $complex$ O $any$ O O $any$ O O O O O O $any$ O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O $any$ O O O O O $complex$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O O O $any$ O O O O O O $any$ O O $any$ O O O O O O $any$ O O O $string$ O $string$ O $any$ O $any$ O O O O $any$ O O O O $any$ O O O O O $string$ O $any$ O $string$ O O $any$ O $string$ O O O O O $string$ O O O O O $void$ O $complex$ O $string$ O O O O O O O $void$ O O O O O $any$ O O O O $any$ O O O O O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O O $any$ O $complex$ O $complex$ O $any$ O O O $any$ O $complex$ O $complex$ O $any$ O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O O O O $complex$ O $any$ O O O O O $complex$ O $any$ O O $any$ O O O O O O $any$ O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O $any$ O O O O O $complex$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O O O $any$ O O O O $any$ O O O O O O $any$ O $any$ O O O O O O $any$ O $any$ O O $any$ O $any$ O O O O $complex$ O O O O O O O O O O $any$ O O O O O O $any$ O O $any$ O O O O O O $any$ O O O O $complex$ O $complex$ O $string$ O O O O $string$ O $string$ O $any$ O $any$ O O O O $any$ O O O O $any$ O O O O O $string$ O $any$ O $string$ O O $any$ O $string$ O O O O O $string$ O O O O O O $void$ O $complex$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O $complex$ O $complex$ O $any$ O O O $string$ O O O $complex$ O $complex$ O $string$ O O O O O $string$ O O O $complex$ O $complex$ O $string$ O O O O O $string$ O O O $complex$ O $complex$ O $string$ O O O O O $string$ O O O $complex$ O $complex$ O $any$ O O O O O $string$ O O O $complex$ O $complex$ O $any$ O O O O O $string$ O O O $complex$ O $complex$ O $any$ O O O O O $any$ O $complex$ O $any$ O O O $any$ O $complex$ O $complex$ O $any$ O O $any$ O O $any$ O $undefined$ O O $any$ O O O $any$ O $any$ O $any$ O O O $string$ O O $any$ O O O $any$ O O O O $any$ O $complex$ O $string$ O O $any$ O $any$ O $any$ O O O $string$ O O $any$ O O O $string$ O O O O O O $any$ O $complex$ O $string$ O O $any$ O $any$ O $any$ O O O $string$ O O $any$ O O O $string$ O O O O O O $any$ O $complex$ O $string$ O O $any$ O $any$ O $any$ O O O $string$ O O $any$ O O O $string$ O O $any$ O O O $string$ O O O O O O $any$ O $complex$ O $string$ O O $any$ O $any$ O $any$ O O O $string$ O O $any$ O O O $string$ O O $any$ O O O $string$ O O $any$ O O O $string$ O O O O O O $any$ O $complex$ O $string$ O O O $any$ O $complex$ O $complex$ O $string$ O O $any$ O $any$ O $any$ O O O O $any$ O $complex$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $string$ O O $any$ O O O $string$ O O $any$ O O O O O $any$ O O O O $any$ O O O O O O O O O $any$ O O O O O O $any$ O O O $void$ O O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O O $void$ O $any$ O O O $string$ O $Location$ O $string$ O $string$ O O O $Location$ O $string$ O $number$ O O O O O O O $any$ O $void$ O $complex$ O $string$ O O $any$ O $any$ O $any$ O $complex$ O $any$ O O O $complex$ O $Window)$ O $string$ O O O O O
'js' const reportUrl = 's' ; const datasetUrl = 's' ; const dashboardUrl = 's' ; const tileUrl = 's' ; const qnaUrl = 's' ; const layoutShowcaseReportUrl = 's' ; const insightToActionShowcaseReportUrl = 's' ; const themesShowcaseReportUrl = 's' ; const quickVisualCreatorShowcaseReportUrl = 's' ; var LastReportSampleUrl = null ; var ReportRefreshTokenTimer = 0 ; var DashboardRefreshTokenTimer = 0 ; var TileRefreshTokenTimer = 0 ; var QnaRefreshTokenTimer = 0 ; const EntityType = { Report : "s" , Visual : "s" , Dashboard : "s" , Tile : "s" , Qna : "s" } ; const SessionKeys = { AccessToken : "s" , DashboardId : "s" , EmbedUrl : "s" , EmbedId : "s" , EmbedMode : "s" , EntityType : "s" , GroupId : "s" , IsSampleReport : "s" , IsSampleDashboard : "s" , IsSampleTile : "s" , IsSampleQna : "s" , IsTelemetryEnabled : "s" , PageName : "s" , QnaQuestion : "s" , QnaMode : "s" , SampleId : "s" , SessionId : "s" , TokenType : "s" , VisualName : "s" } ; var _session = { } ; function initSession ( ) { SetSession ( SessionKeys . SessionId , generateNewGuid ( ) ) ; if ( GetParameterByName ( SessionKeys . IsTelemetryEnabled ) === "s" ) { SetSession ( SessionKeys . IsTelemetryEnabled , false ) ; } else { SetSession ( SessionKeys . IsTelemetryEnabled , true ) ; } } function GetParameterByName ( name , url ) { if ( ! url ) { url = window . location . href ; } name = name . replace ( "s" , "s" ) ; let regex = new RegExp ( "s" + name + "s" ) , results = regex . exec ( url ) ; if ( ! results ) return null ; if ( ! results [ 0 ] ) return 's' ; return decodeURIComponent ( results [ 0 ] . replace ( "s" , "s" ) ) ; } function SetSession ( key , value ) { _session [ key ] = value ; } function GetSession ( key ) { return _session [ key ] ; } function UpdateSession ( button , sessionKey ) { const value = $ ( button ) . val ( ) ; if ( value || value === "s" ) { SetSession ( sessionKey , value ) ; SetIsSample ( false ) ; } } function SetIsSample ( value ) { const entityType = GetSession ( SessionKeys . EntityType ) ; if ( entityType == EntityType . Report ) { SetSession ( SessionKeys . IsSampleReport , value ) ; } else if ( entityType == EntityType . Visual ) { SetSession ( SessionKeys . IsSampleReport , value ) ; } else if ( entityType == EntityType . Dashboard ) { SetSession ( SessionKeys . IsSampleDashboard , value ) ; } else if ( entityType == EntityType . Tile ) { SetSession ( SessionKeys . IsSampleTile , value ) ; } else if ( entityType == EntityType . Qna ) { SetSession ( SessionKeys . IsSampleQna , value ) ; } } function SetTextboxFromSessionOrUrlParam ( sessionKey , textboxSelector ) { let value = GetParameterByName ( sessionKey ) ; if ( ! value ) { value = GetSession ( sessionKey ) ; } else { SetSession ( sessionKey , value ) ; } $ ( textboxSelector ) . val ( value ) ; } function SetTextBoxesFromSessionOrUrlParam ( accessTokenSelector , embedUrlSelector , embedIdSelector , dashboardIdSelector ) { let accessToken = GetParameterByName ( SessionKeys . AccessToken ) ; if ( ! accessToken ) { accessToken = GetSession ( SessionKeys . AccessToken ) ; } else { SetSession ( SessionKeys . AccessToken , accessToken ) ; } let embedUrl = GetParameterByName ( SessionKeys . EmbedUrl ) ; if ( ! embedUrl ) { embedUrl = GetSession ( SessionKeys . EmbedUrl ) ; } else { let groupId = GetParameterByName ( SessionKeys . GroupId ) ; if ( groupId ) { if ( embedUrl . indexOf ( "s" ) != - 0 ) { embedUrl += "s" + groupId ; } else { embedUrl += "s" + groupId ; } } SetSession ( SessionKeys . EmbedUrl , embedUrl ) ; } let embedId = GetParameterByName ( SessionKeys . EmbedId ) ; if ( ! embedId ) { embedId = GetSession ( SessionKeys . EmbedId ) ; } else { SetSession ( SessionKeys . EmbedId , embedId ) ; } let tokenType = GetParameterByName ( SessionKeys . TokenType ) ; if ( ! tokenType ) { tokenType = GetSession ( SessionKeys . TokenType ) ; } else { SetSession ( SessionKeys . TokenType , tokenType ) ; } let dashboardId = GetParameterByName ( SessionKeys . DashboardId ) ; if ( ! dashboardId ) { dashboardId = GetSession ( SessionKeys . DashboardId ) ; } else { SetSession ( SessionKeys . DashboardId , dashboardId ) ; } $ ( accessTokenSelector ) . val ( accessToken ) ; $ ( embedUrlSelector ) . val ( embedUrl ) ; $ ( embedIdSelector ) . val ( embedId ) ; $ ( dashboardIdSelector ) . val ( dashboardId ) ; let embedTypeRadios = $ ( 's' ) ; embedTypeRadios . filter ( 's' + tokenType + 's' ) . prop ( 's' , true ) ; } function FetchUrlIntoSession ( url , updateCurrentToken ) { return $ . getJSON ( url , function ( embedConfig ) { setSession ( embedConfig . embedToken . token , embedConfig . embedUrl , embedConfig . id , embedConfig . dashboardId ) ; SetSession ( SessionKeys . SampleId , embedConfig . id ) ; if ( updateCurrentToken ) { let embedContainerId = getEmbedContainerID ( capitalizeFirstLetter ( embedConfig . type ) ) ; let embedContainer = powerbi . embeds . filter ( function ( embedElement ) { return embedElement . element . id === embedContainerId ; } ) [ 0 ] ; if ( embedContainer ) { embedContainer . setAccessToken ( embedConfig . embedToken . token ) ; } } if ( embedConfig . type === "s" || embedConfig . type === "s" ) { SetSession ( SessionKeys . PageName , "s" ) ; SetSession ( SessionKeys . VisualName , "s" ) ; LastReportSampleUrl = url ; } TokenExpirationRefreshListener ( embedConfig . minutesToExpiration , capitalizeFirstLetter ( embedConfig . type ) ) ; } ) ; } function capitalizeFirstLetter ( string ) { return string . charAt ( 0 ) . toUpperCase ( ) + string . slice ( 0 ) ; } function TokenExpirationRefreshListener ( minutesToExpiration , entityType ) { const updateAfterMilliSeconds = ( minutesToExpiration - 0 ) * 0 * 0 ; if ( entityType == EntityType . Report || entityType == EntityType . Visual ) { setTokenRefreshListener ( updateAfterMilliSeconds , ReportRefreshTokenTimer , LastReportSampleUrl , entityType ) ; } else if ( entityType == EntityType . Dashboard ) { setTokenRefreshListener ( updateAfterMilliSeconds , DashboardRefreshTokenTimer , dashboardUrl , entityType ) ; } else if ( entityType == EntityType . Qna ) { setTokenRefreshListener ( updateAfterMilliSeconds , QnaRefreshTokenTimer , qnaUrl , entityType ) ; } else { setTokenRefreshListener ( updateAfterMilliSeconds , TileRefreshTokenTimer , tileUrl , entityType ) ; } } function setTokenRefreshListener ( updateAfterMilliSeconds , RefreshTokenTimer , url , entityType ) { if ( RefreshTokenTimer ) { console . log ( "s" + entityType + "s" ) ; clearTimeout ( RefreshTokenTimer ) ; } console . log ( entityType + "s" + updateAfterMilliSeconds + "s" ) ; RefreshTokenTimer = setTimeout ( function ( ) { if ( url ) { FetchUrlIntoSession ( url , true ) ; } } , updateAfterMilliSeconds ) ; } function LoadSampleReportIntoSession ( ) { SetSession ( SessionKeys . EntityType , EntityType . Report ) ; return FetchUrlIntoSession ( reportUrl , false ) ; } function LoadSampleVisualIntoSession ( ) { SetSession ( SessionKeys . EntityType , EntityType . Visual ) ; return FetchUrlIntoSession ( reportUrl , false ) ; } function LoadSampleDatasetIntoSession ( ) { SetSession ( SessionKeys . EntityType , EntityType . Report ) ; return FetchUrlIntoSession ( datasetUrl , false ) ; } function LoadSampleDashboardIntoSession ( ) { SetSession ( SessionKeys . EntityType , EntityType . Dashboard ) ; return FetchUrlIntoSession ( dashboardUrl , false ) ; } function LoadSampleTileIntoSession ( ) { SetSession ( SessionKeys . EntityType , EntityType . Tile ) ; return FetchUrlIntoSession ( tileUrl , false ) ; } function LoadSampleQnaIntoSession ( ) { SetSession ( SessionKeys . EntityType , EntityType . Qna ) ; return FetchUrlIntoSession ( qnaUrl , false ) ; } function LoadLayoutShowcaseReportIntoSession ( ) { SetSession ( SessionKeys . EntityType , EntityType . Report ) ; return FetchUrlIntoSession ( layoutShowcaseReportUrl , false ) ; } function LoadInsightToActionShowcaseReportIntoSession ( ) { SetSession ( SessionKeys . EntityType , EntityType . Report ) ; return FetchUrlIntoSession ( insightToActionShowcaseReportUrl , false ) ; } function LoadThemesShowcaseReportIntoSession ( ) { SetSession ( SessionKeys . EntityType , EntityType . Report ) ; return FetchUrlIntoSession ( themesShowcaseReportUrl , false ) ; } function LoadQuickVisualCreatorShowcaseReportIntoSession ( ) { SetSession ( SessionKeys . EntityType , EntityType . Report ) ; return FetchUrlIntoSession ( quickVisualCreatorShowcaseReportUrl , false ) ; } function WarmStartSampleReportEmbed ( ) { let embedUrl = GetParameterByName ( SessionKeys . EmbedUrl ) ; if ( embedUrl ) { preload ( embedUrl ) ; return ; } FetchUrlIntoSession ( reportUrl , false ) . then ( function ( response ) { embedUrl = GetSession ( SessionKeys . EmbedUrl ) ; preload ( embedUrl ) ; } ) ; } function preload ( embedUrl ) { const config = { type : 's' , embedUrl : embedUrl } ; powerbi . preload ( config ) ; } function setSession ( accessToken , embedUrl , embedId , dashboardId ) { SetSession ( SessionKeys . AccessToken , accessToken ) ; SetSession ( SessionKeys . EmbedUrl , embedUrl ) ; SetSession ( SessionKeys . EmbedId , embedId ) ; SetSession ( SessionKeys . DashboardId , dashboardId ) ; } initSession ( ) ;	O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O $number$ O O O O $number$ O O O O $number$ O O O O $number$ O O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O O ${}$ O O O O O $void$ O O O $complex$ O $complex$ O $any$ O $string$ O O O O O O $complex$ O $complex$ O $any$ O O O O O $complex$ O $complex$ O $any$ O O O O O O O $complex$ O $complex$ O $any$ O O O O O O O $complex$ O $any$ O $any$ O O O O O $any$ O O $any$ O $complex$ O $Location$ O $string$ O O $any$ O $any$ O $any$ O O O O O O O $RegExp$ O O $RegExpConstructor$ O O O $any$ O O O O $RegExpExecArray$ O $RegExp$ O $RegExpExecArray$ O $any$ O O O O O $RegExpExecArray$ O O O O O O O $RegExpExecArray$ O O O O O O O O $string$ O $RegExpExecArray$ O O O O $complex$ O O O O O O O O O $complex$ O $any$ O $any$ O O ${}$ O $any$ O O $any$ O O O $complex$ O $any$ O O O ${}$ O $any$ O O O O $complex$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O O $any$ O $any$ O O O O $complex$ O $any$ O $any$ O O $void$ O O O O O O O $void$ O $any$ O O O $any$ O $complex$ O $complex$ O $any$ O O O O $any$ O $complex$ O $string$ O O $complex$ O $complex$ O $string$ O $any$ O O O O O O $any$ O $complex$ O $string$ O O $complex$ O $complex$ O $string$ O $any$ O O O O O O $any$ O $complex$ O $string$ O O $complex$ O $complex$ O $any$ O $any$ O O O O O O $any$ O $complex$ O $string$ O O $complex$ O $complex$ O $any$ O $any$ O O O O O O $any$ O $complex$ O $string$ O O $complex$ O $complex$ O $any$ O $any$ O O O O O $void$ O $any$ O $any$ O O O $string$ O $complex$ O $any$ O O O O O $string$ O O $string$ O $complex$ O $any$ O O O O O $complex$ O $any$ O $string$ O O O $any$ O $any$ O O $any$ O $string$ O O O O $complex$ O $any$ O $any$ O $any$ O $any$ O O O $string$ O $complex$ O $complex$ O $string$ O O O O O $string$ O O $string$ O $complex$ O $complex$ O $string$ O O O O O $complex$ O $complex$ O $string$ O $string$ O O O O $string$ O $complex$ O $complex$ O $string$ O O O O O $string$ O O $string$ O $complex$ O $complex$ O $string$ O O O O O O $string$ O $complex$ O $complex$ O $string$ O O O O $string$ O O O O $string$ O $number$ O O O O O O O O $string$ O O O $string$ O O O O $string$ O O O $string$ O O O $complex$ O $complex$ O $string$ O $string$ O O O O $string$ O $complex$ O $complex$ O $string$ O O O O O $string$ O O $string$ O $complex$ O $complex$ O $string$ O O O O O $complex$ O $complex$ O $string$ O $string$ O O O O $string$ O $complex$ O $complex$ O $any$ O O O O O $string$ O O $string$ O $complex$ O $complex$ O $any$ O O O O O $complex$ O $complex$ O $any$ O $string$ O O O O $string$ O $complex$ O $complex$ O $any$ O O O O O $string$ O O $string$ O $complex$ O $complex$ O $any$ O O O O O $complex$ O $complex$ O $any$ O $string$ O O O $any$ O $any$ O O $any$ O $string$ O O $any$ O $any$ O O $any$ O $string$ O O $any$ O $any$ O O $any$ O $string$ O O $any$ O $any$ O O $any$ O $string$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $string$ O O O O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O $complex$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $complex$ O $complex$ O $any$ O $any$ O $any$ O O O O $any$ O O O $string$ O $complex$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $string$ O O O O O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $complex$ O $complex$ O $any$ O O O O $complex$ O $complex$ O $any$ O O O O $any$ O $any$ O O $void$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O O O $void$ O $any$ O $any$ O O O $number$ O O $any$ O O O O O O O O O O $any$ O $complex$ O $string$ O $any$ O $complex$ O $string$ O O $void$ O $number$ O $number$ O $any$ O $any$ O O O O O O $any$ O $complex$ O $string$ O O $void$ O $number$ O $number$ O O O $any$ O O O O O O $any$ O $complex$ O $string$ O O $void$ O $number$ O $number$ O O O $any$ O O O O O $void$ O $number$ O $number$ O O O $any$ O O O O O $void$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $Console$ O $void$ O O O $any$ O O O O $void$ O $any$ O O O $Console$ O $void$ O $any$ O O O $any$ O O O O $any$ O $number$ O O O O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $complex$ O O O $complex$ O $complex$ O $any$ O $complex$ O $string$ O O O $any$ O O O O O O O O $any$ O O O $complex$ O $complex$ O $any$ O $complex$ O $string$ O O O $any$ O O O O O O O O $complex$ O O O $complex$ O $complex$ O $any$ O $complex$ O $string$ O O O $any$ O O O O O O O O $any$ O O O $complex$ O $complex$ O $any$ O $complex$ O $string$ O O O $any$ O O O O O O O O $any$ O O O $complex$ O $complex$ O $any$ O $complex$ O $string$ O O O $any$ O O O O O O O O $any$ O O O $complex$ O $complex$ O $any$ O $complex$ O $string$ O O O $any$ O O O O O O O O $any$ O O O $complex$ O $complex$ O $any$ O $complex$ O $string$ O O O $any$ O O O O O O O O $any$ O O O $complex$ O $complex$ O $any$ O $complex$ O $string$ O O O $any$ O O O O O O O O $any$ O O O $complex$ O $complex$ O $any$ O $complex$ O $string$ O O O $any$ O O O O O O O O $any$ O O O $complex$ O $complex$ O $any$ O $complex$ O $string$ O O O $any$ O O O O O O O O $void$ O O O O $string$ O $complex$ O $complex$ O $string$ O O O O $string$ O O $void$ O $string$ O O O O O $any$ O O O O O O $any$ O O O $any$ O O $string$ O $complex$ O $complex$ O $string$ O O $void$ O $string$ O O O O O O O $void$ O $any$ O O O $complex$ O O $string$ O O O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O $complex$ O $any$ O $any$ O $any$ O $any$ O O $complex$ O $complex$ O $string$ O $any$ O O $complex$ O $complex$ O $string$ O $any$ O O $complex$ O $complex$ O $string$ O $any$ O O $complex$ O $complex$ O $any$ O $any$ O O O $void$ O O O
'js' function Report_GetId ( ) { SetCode ( _Report_GetId ) ; } function Report_UpdateSettings ( ) { SetCode ( _Report_UpdateSettings ) ; } function Report_GetPages ( ) { SetCode ( _Report_GetPages ) ; } function Report_SetPage ( ) { SetCode ( _Report_SetPage ) ; } function Report_GetFilters ( ) { SetCode ( _Report_GetFilters ) ; } function Report_SetFilters ( ) { SetCode ( _Report_SetFilters ) ; } function Report_RemoveFilters ( ) { SetCode ( _Report_RemoveFilters ) ; } function Report_PrintCurrentReport ( ) { SetCode ( _Report_PrintCurrentReport ) ; } function Report_Reload ( ) { SetCode ( _Report_Reload ) ; } function Report_Refresh ( ) { SetCode ( _Report_Refresh ) ; } function Report_FullScreen ( ) { SetCode ( _Report_FullScreen ) ; } function Report_ExitFullScreen ( ) { SetCode ( _Report_ExitFullScreen ) ; } function Report_Extensions_ContextMenu ( ) { SetCode ( _Report_Extensions_ContextMenu ) ; } function Report_Extensions_OptionsMenu ( ) { SetCode ( _Report_Extensions_OptionsMenu ) ; } function Visual_Operations_SortVisualBy ( ) { SetCode ( _Visual_Operations_SortVisualBy ) ; } function Report_ApplyCustomLayout ( ) { SetCode ( _Report_ApplyCustomLayout ) ; } function Report_HideAllVisualHeaders ( ) { SetCode ( _Report_HideAllVisualHeaders ) ; } function Report_ShowAllVisualHeaders ( ) { SetCode ( _Report_ShowAllVisualHeaders ) ; } function Report_HideSingleVisualHeader ( ) { SetCode ( _Report_HideSingleVisualHeader ) ; } function Page_SetActive ( ) { SetCode ( _Page_SetActive ) ; } function Page_GetFilters ( ) { SetCode ( _Page_GetFilters ) ; } function Page_GetVisuals ( ) { SetCode ( _Page_GetVisuals ) ; } function Page_SetFilters ( ) { SetCode ( _Page_SetFilters ) ; } function Page_RemoveFilters ( ) { SetCode ( _Page_RemoveFilters ) ; } function Page_HasLayout ( ) { SetCode ( _Page_HasLayout ) ; } function Events_PageChanged ( ) { SetCode ( _Events_PageChanged ) ; } function Events_DataSelected ( ) { SetCode ( _Events_DataSelected ) ; } function Events_SaveAsTriggered ( ) { SetCode ( _Events_SaveAsTriggered ) ; } function Events_BookmarkApplied ( ) { SetCode ( _Events_BookmarkApplied ) ; } function Events_ReportLoaded ( ) { SetCode ( _Events_ReportLoaded ) ; } function Events_ReportRendered ( ) { SetCode ( _Events_ReportRendered ) ; } function Events_ReportSaved ( ) { SetCode ( _Events_ReportSaved ) ; } function Events_TileLoaded ( ) { SetCode ( _Events_TileLoaded ) ; } function Events_TileClicked ( ) { SetCode ( _Events_TileClicked ) ; } function Events_ButtonClicked ( ) { SetCode ( _Events_ButtonClicked ) } function Report_switchModeEdit ( ) { SetCode ( _Report_switchModeEdit ) ; } function Report_switchModeView ( ) { SetCode ( _Report_switchModeView ) ; } function Report_save ( ) { SetCode ( _Report_save ) ; } function Report_saveAs ( ) { SetCode ( _Report_saveAs ) ; } function Bookmarks_Enable ( ) { SetCode ( _Bookmarks_Enable ) ; } function Bookmarks_Disable ( ) { SetCode ( _Bookmarks_Disable ) ; } function Bookmarks_Get ( ) { SetCode ( _Bookmarks_Get ) ; } function Bookmarks_Apply ( ) { SetCode ( _Bookmarks_Apply ) ; } function Bookmarks_Capture ( ) { SetCode ( _Bookmarks_Capture ) ; } function Bookmarks_ApplyState ( ) { SetCode ( _Bookmarks_ApplyState ) ; } function Bookmarks_EnterPresentation ( ) { SetCode ( _Bookmarks_EnterPresentation ) ; } function Bookmarks_ExitPresentation ( ) { SetCode ( _Bookmarks_ExitPresentation ) ; } function Dashboard_GetId ( ) { SetCode ( _Dashboard_GetId ) ; } function Dashboard_FullScreen ( ) { SetCode ( _Dashboard_FullScreen ) ; } function Dashboard_ExitFullScreen ( ) { SetCode ( _Dashboard_ExitFullScreen ) ; } function DashboardEvents_TileClicked ( ) { SetCode ( _DashboardEvents_TileClicked ) ; } function Qna_SetQuestion ( ) { SetCode ( _Qna_SetQuestion ) ; } function Qna_QuestionChanged ( ) { SetCode ( _Qna_QuestionChanged ) ; } function Visual_DataSelected ( ) { SetCode ( _Visual_DataSelected ) ; } function Visual_GetFilters ( ) { SetCode ( _Visual_GetFilters ) ; } function Visual_SetFilters ( ) { SetCode ( _Visual_SetFilters ) ; } function Visual_GetSlicer ( ) { SetCode ( _Visual_GetSlicer ) ; } function Visual_SetSlicer ( ) { SetCode ( _Visual_SetSlicer ) ; } function Visual_RemoveFilters ( ) { SetCode ( _Visual_RemoveFilters ) ; } function Visual_ExportData_Summarized ( ) { SetCode ( _Visual_ExportData_Summarized ) ; } function Visual_ExportData_Underlying ( ) { SetCode ( _Visual_ExportData_Underlying ) ; } function ReportVisual_UpdateSettings ( ) { SetCode ( _ReportVisual_UpdateSettings ) ; } function ReportVisual_Report_SetFilters ( ) { SetCode ( _ReportVisual_Report_SetFilters ) ; } function ReportVisual_Report_GetFilters ( ) { SetCode ( _ReportVisual_Report_GetFilters ) ; } function ReportVisual_Report_RemoveFilters ( ) { SetCode ( _ReportVisual_Report_RemoveFilters ) ; } function ReportVisual_Page_SetFilters ( ) { SetCode ( _ReportVisual_Page_SetFilters ) ; } function ReportVisual_Page_GetFilters ( ) { SetCode ( _ReportVisual_Page_GetFilters ) ; } function ReportVisual_Page_RemoveFilters ( ) { SetCode ( _ReportVisual_Page_RemoveFilters ) ; } function ReportVisual_Visual_SetFilters ( ) { SetCode ( _ReportVisual_Visual_SetFilters ) ; } function ReportVisual_Visual_GetFilters ( ) { SetCode ( _ReportVisual_Visual_GetFilters ) ; } function ReportVisual_Visual_RemoveFilters ( ) { SetCode ( _ReportVisual_Visual_RemoveFilters ) ; } function ReportVisual_HideSingleVisualHeader ( ) { SetCode ( _ReportVisual_HideSingleVisualHeader ) ; } function Report_Authoring_Create ( ) { SetCode ( _Report_Authoring_Create ) ; } function Report_Authoring_ChangeType ( ) { SetCode ( _Report_Authoring_ChangeType ) ; } function Report_Authoring_Remove ( ) { SetCode ( _Report_Authoring_Remove ) ; } function Report_Authoring_Capabilities ( ) { SetCode ( _Report_Authoring_Capabilities ) ; } function Report_Authoring_AddDataField ( ) { SetCode ( _Report_Authoring_AddDataField ) ; } function Report_Authoring_RemoveDataField ( ) { SetCode ( _Report_Authoring_RemoveDataField ) ; } function Report_Authoring_GetDataField ( ) { SetCode ( _Report_Authoring_GetDataField ) ; } function Report_Authoring_GetProperty ( ) { SetCode ( _Report_Authoring_GetProperty ) ; } function Report_Authoring_SetProperty ( ) { SetCode ( _Report_Authoring_SetProperty ) ; } function Report_Authoring_ResetProperty ( ) { SetCode ( _Report_Authoring_ResetProperty ) ; }	O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $void$ O O O $complex$ O $void$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $void$ O O O $complex$ O $void$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $complex$ O O O $complex$ O $complex$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O O $void$ O O O $complex$ O $void$ O O O
'js' function OpenBookmarksOperations ( ) { $ ( "s" ) . toggle ( ) ; $ ( "s" ) . toggleClass ( "s" ) ; } function OpenEditSaveOperations ( ) { $ ( "s" ) . toggle ( ) ; $ ( "s" ) . toggleClass ( "s" ) ; } function OpenDataOperations ( ) { $ ( "s" ) . toggle ( ) ; $ ( "s" ) . toggleClass ( "s" ) ; } function OpenAuthoringOperations ( ) { $ ( "s" ) . toggle ( ) ; $ ( "s" ) . toggleClass ( "s" ) ; } function OpenMenuOperations ( ) { $ ( "s" ) . toggle ( ) ; $ ( "s" ) . toggleClass ( "s" ) ; } function OpenReportPropertiesOperations ( ) { $ ( "s" ) . toggle ( ) ; $ ( "s" ) . toggleClass ( "s" ) ; } function OpenFiltersOperations ( ) { $ ( "s" ) . toggle ( ) ; $ ( "s" ) . toggleClass ( "s" ) ; } function OpenGeneralOperations ( ) { $ ( "s" ) . toggle ( ) ; $ ( "s" ) . toggleClass ( "s" ) ; } function OpenLayoutOperations ( ) { $ ( "s" ) . toggle ( ) ; $ ( "s" ) . toggleClass ( "s" ) ; } function OpenNavigationOperations ( ) { $ ( "s" ) . toggle ( ) ; $ ( "s" ) . toggleClass ( "s" ) ; } function OpenDashboardGeneralOperations ( ) { $ ( "s" ) . toggle ( ) ; $ ( "s" ) . toggleClass ( "s" ) ; } function OpenDashboardPropertiesOperations ( ) { $ ( "s" ) . toggle ( ) ; $ ( "s" ) . toggleClass ( "s" ) ; } function OpenDashboardEventsOperations ( ) { $ ( "s" ) . toggle ( ) ; $ ( "s" ) . toggleClass ( "s" ) ; } function OpenQnaOperations ( ) { $ ( "s" ) . toggle ( ) ; $ ( "s" ) . toggleClass ( "s" ) ; } function OpenQnaEventsOperations ( ) { $ ( "s" ) . toggle ( ) ; $ ( "s" ) . toggleClass ( "s" ) ; } function SetToggleHandler ( devId ) { const selector = "s" + devId + "s" ; $ ( selector ) . each ( function ( index , li ) { $ ( li ) . click ( function ( ) { $ ( selector ) . removeClass ( 's' ) ; $ ( li ) . addClass ( 's' ) ; } ) ; } ) ; }	O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $void$ O O O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O $complex$ O $any$ O O O $string$ O O O $any$ O O O $any$ O $string$ O O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O $any$ O O O O O $any$ O $string$ O O $any$ O O O O $any$ O $any$ O O $any$ O O O O O O O O O O O
'js' function OpenCodeStepWithSample ( entityType ) { $ ( "s" ) . animate ( { scrollTop : 0 } , "s" ) ; ClearTextArea ( 's' ) ; SetSession ( SessionKeys . EntityType , entityType ) ; SetSession ( SessionKeys . TokenType , defaultTokenType ) ; if ( entityType == EntityType . Report ) { SetSession ( SessionKeys . IsSampleReport , true ) ; OpenCodeStep ( EmbedViewMode , EntityType . Report ) ; } else if ( entityType == EntityType . Visual ) { SetSession ( SessionKeys . IsSampleReport , true ) ; OpenCodeStep ( EmbedViewMode , EntityType . Visual ) ; } else if ( entityType == EntityType . Dashboard ) { SetSession ( SessionKeys . IsSampleDashboard , true ) ; OpenCodeStep ( EmbedViewMode , EntityType . Dashboard ) ; } else if ( entityType == EntityType . Tile ) { SetSession ( SessionKeys . IsSampleTile , true ) ; OpenCodeStep ( EmbedViewMode , EntityType . Tile ) } else if ( entityType == EntityType . Qna ) { SetSession ( SessionKeys . IsSampleQna , true ) ; OpenCodeStep ( EmbedViewMode , EntityType . Qna ) } else { assert ( false ) ; trackEvent ( TelemetryEventName . CodeStepError , { } ) ; return ; } trackEvent ( TelemetrySectionName . SampleTool , { entityType : entityType , src : TelemetryEventSource . UserClick } ) ; }	O O $void$ O $any$ O O $any$ O O O O $any$ O O $number$ O O O O O O O $complex$ O O O O $complex$ O $complex$ O $any$ O $any$ O O $complex$ O $complex$ O $any$ O O O O O O $any$ O $complex$ O $string$ O O $complex$ O $complex$ O $string$ O O O O $void$ O O O $complex$ O $string$ O O O O O O $any$ O $complex$ O $string$ O O $complex$ O $complex$ O $string$ O O O O $void$ O O O $complex$ O $string$ O O O O O O $any$ O $complex$ O $string$ O O $complex$ O $complex$ O $any$ O O O O $void$ O O O $complex$ O $string$ O O O O O O $any$ O $complex$ O $string$ O O $complex$ O $complex$ O $any$ O O O O $void$ O O O $complex$ O $string$ O O O O O $any$ O $complex$ O $string$ O O $complex$ O $complex$ O $any$ O O O O $void$ O O O $complex$ O $string$ O O O O $void$ O O O O $void$ O $complex$ O $string$ O O O O O O O O $void$ O $complex$ O $string$ O O $any$ O $any$ O $string$ O $complex$ O $string$ O O O O
'js' const TelemetryEventName = { CodeStepError : "s" , CopyCode : "s" , CopyLog : "s" , DesktopModeOpen : "s" , InnerSectionOpen : "s" , Interact : "s" , MobileModeOpen : "s" , RunClick : "s" , SectionOpen : "s" , SessionStart : "s" } ; const TelemetryEventSource = { Url : "s" , UserClick : "s" } ; const TelemetryInnerSection = { Code : "s" , Sample : "s" } ; const TelemetrySectionName = { Documentation : "s" , SampleTool : "s" , Showcase : "s" } ; function trackEvent ( name , properties , flush = false ) { if ( ! _session [ SessionKeys . IsTelemetryEnabled ] ) { return ; } assert ( name && properties ) ; properties . sessionId = GetSession ( SessionKeys . SessionId ) ; getAppInsightsInstance ( ) . then ( function ( ai ) { ai . trackEvent ( { name , properties } ) ; if ( flush ) { ai . flush ( ) ; } } ) ; } trackEvent ( TelemetryEventName . SessionStart , { referrer : document . referrer } , true ) ;	O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O O $complex$ O O $string$ O O O $string$ O O O O O $complex$ O O $string$ O O O $string$ O O O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O O O $void$ O $any$ O $any$ O $boolean$ O O O O O O O ${}$ O $complex$ O $any$ O O O O O O $void$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O $complex$ O $any$ O O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O O O O O $boolean$ O O $any$ O $any$ O O O O O O O O $void$ O $complex$ O $string$ O O $string$ O $Document$ O $string$ O O O O O
'js' var currentCode = "s" ; const interactIndicationTimeout = 0 ; const elementClickedTimeout = 0 ; const textCodeTimeout = 0 ; function BodyCodeOfFunction ( func ) { let lines = func . toString ( ) . split ( 's' ) ; lines = lines . slice ( 0 , lines . length - 0 ) ; for ( let i = 0 ; i < lines . length ; ++ i ) { lines [ i ] = lines [ i ] . substring ( 0 ) ; } return lines . join ( 's' ) ; } function LoadCodeArea ( divSelector , initialFunctionCode ) { $ ( divSelector ) . load ( "s" , function ( ) { SetCode ( initialFunctionCode ) ; } ) ; } function LoadLogWindow ( divSelector ) { $ ( divSelector ) . load ( "s" ) ; } function SetCode ( func ) { currentCode = BodyCodeOfFunction ( func ) ; $ ( "s" ) . empty ( ) ; var txtCodeElement = document . createElement ( "s" ) ; txtCodeElement . setAttribute ( "s" , "s" ) ; txtCodeElement . setAttribute ( "s" , "s" ) ; var preElement = document . createElement ( "s" ) ; preElement . setAttribute ( "s" , "s" ) ; var codeElement = document . createTextNode ( currentCode ) ; preElement . appendChild ( codeElement ) ; txtCodeElement . appendChild ( preElement ) ; $ ( "s" ) . append ( txtCodeElement ) ; var scriptElement = document . createElement ( "s" ) ; scriptElement . setAttribute ( "s" , "s" ) ; scriptElement . setAttribute ( "s" , "s" ) ; $ ( "s" ) . append ( scriptElement ) ; setTimeout ( function ( ) { $ ( "s" ) . show ( ) ; } , textCodeTimeout ) ; if ( func != "s" ) { let runFunc = mapFunc ( func ) ; let funcName = getFuncName ( runFunc ) ; if ( funcName . match ( "s" ) ) { let oldFunc = runFunc ; runFunc = function ( ) { oldFunc ( ) ; SetSession ( SessionKeys . EntityIsAlreadyEmbedded , true ) ; $ ( 's' ) . addClass ( 's' ) ; setTimeout ( function ( ) { $ ( 's' ) . addClass ( 's' ) ; } , interactIndicationTimeout ) ; } } $ ( 's' ) . off ( 's' ) ; $ ( 's' ) . click ( function ( ) { showEmbedContainer ( ) ; removeIframeIfUrlIsChanged ( ) ; elementClicked ( 's' ) ; trackEvent ( TelemetryEventName . RunClick , { EmbedType : GetSession ( SessionKeys . EntityType ) , TokenType : GetSession ( SessionKeys . TokenType ) , ApiUsed : funcName } ) ; runFunc ( ) ; } ) ; } } function CopyCode ( ) { const id = "s" ; let textarea = document . getElementById ( id ) ; if ( ! textarea ) { textarea = document . createElement ( "s" ) ; textarea . id = id ; document . querySelector ( "s" ) . appendChild ( textarea ) ; } textarea . value = currentCode ; CopyTextArea ( 's' + id , "s" ) ; trackEvent ( TelemetryEventName . CopyCode , { } ) ; } function CopyResponseWindow ( ) { CopyTextArea ( "s" , "s" ) ; trackEvent ( TelemetryEventName . CopyLog , { } ) ; } function CopyTextArea ( textAreaSelector , buttonSelector ) { $ ( textAreaSelector ) . select ( ) ; document . execCommand ( 's' ) ; window . getSelection ( ) . removeAllRanges ( ) ; $ ( buttonSelector ) . focus ( ) ; } function ClearTextArea ( textAreaSelector ) { $ ( textAreaSelector ) . val ( "s" ) ; } function getEmbedContainerID ( entityType ) { switch ( entityType ) { case EntityType . Dashboard : return "s" ; case EntityType . Tile : return "s" ; case EntityType . Qna : return "s" ; default : return "s" ; } } function getEmbedContainerClassPrefix ( entityType ) { switch ( entityType ) { case EntityType . Visual : return "s" ; case EntityType . Dashboard : return "s" ; case EntityType . Tile : return "s" ; case EntityType . Qna : return "s" ; default : return "s" ; } } function getActiveEmbedContainer ( ) { const entityType = GetSession ( SessionKeys . EntityType ) ; const classPrefix = getEmbedContainerClassPrefix ( entityType ) ; const activeContainer = classPrefix + ( $ ( "s" ) . hasClass ( active_class ) ? 's' : 's' ) ; return $ ( activeContainer ) [ 0 ] ; } function getEntityTypeFromParameter ( urlParam ) { switch ( urlParam ) { case "s" : return EntityType . Visual ; case "s" : return EntityType . Dashboard ; case "s" : return EntityType . Tile ; case "s" : return EntityType . Qna ; default : return EntityType . Report ; } } function elementClicked ( element ) { $ ( element ) . addClass ( 's' ) ; setTimeout ( function ( ) { $ ( element ) . removeClass ( 's' ) ; } , elementClickedTimeout ) ; } function showEmbedContainer ( ) { const activeContainer = getActiveEmbedContainer ( ) ; $ ( activeContainer ) . css ( { "s" : "s" } ) ; } function removeIframeIfUrlIsChanged ( ) { const activeContainer = getActiveEmbedContainer ( ) ; if ( ! activeContainer || ! activeContainer . powerBiEmbed || ! activeContainer . powerBiEmbed . iframe ) { return ; } let existingIframeUrl = removeArgFromUrl ( activeContainer . powerBiEmbed . iframe . src , "s" ) ; existingIframeUrl = removeArgFromUrl ( existingIframeUrl , "s" ) ; let embedUrl = GetSession ( SessionKeys . EmbedUrl ) ; if ( embedUrl !== existingIframeUrl ) { powerbi . reset ( activeContainer ) ; } } function SetAuthoringPageActive ( report ) { return new Promise ( function ( resolve , reject ) { report . getPages ( ) . then ( function ( pages ) { var authoringPage = pages . filter ( function ( page ) { return page . name === "s" ; } ) [ 0 ] ; if ( authoringPage . isActive ) { resolve ( authoringPage ) ; } else { authoringPage . setActive ( ) . then ( function ( ) { Log . logText ( "s" ) ; resolve ( authoringPage ) ; } ) . catch ( function ( errors ) { reject ( errors ) ; } ) ; } } ) . catch ( function ( errors ) { reject ( errors ) ; } ) ; } ) ; } function removeArgFromUrl ( url , arg ) { const argRegEx = new RegExp ( arg + 's' ) const argMatch = url . match ( argRegEx ) ; if ( argMatch ) { return url . replace ( "s" + argMatch [ 0 ] , "s" ) ; } return url ; }	O O $string$ O O O O O O O O O O O O O O O O O O O $complex$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $number$ O O O $number$ O $any$ O $any$ O O $number$ O O $any$ O $number$ O O $any$ O $number$ O O $any$ O O O O O O $any$ O $any$ O O O O O O $complex$ O $any$ O $any$ O O $any$ O $any$ O O $any$ O O O O O O O $complex$ O $any$ O O O O O O O $complex$ O $any$ O O $any$ O $any$ O O $any$ O O O O O O $complex$ O $any$ O O $string$ O $complex$ O $any$ O O $any$ O O O O $any$ O O O O $HTMLDivElement$ O $Document$ O O O O O O $HTMLDivElement$ O $void$ O O O O O O $HTMLDivElement$ O $void$ O O O O O O O $HTMLPreElement$ O $Document$ O O O O O O $HTMLPreElement$ O $void$ O O O O O O O $Text$ O $Document$ O $Text$ O $string$ O O $HTMLPreElement$ O $T$ O $Text$ O O $HTMLDivElement$ O $T$ O $HTMLPreElement$ O O $any$ O O O O $any$ O $HTMLDivElement$ O O O $HTMLScriptElement$ O $Document$ O O O O O O $HTMLScriptElement$ O $void$ O O O O O O $HTMLScriptElement$ O $void$ O O O O O O $any$ O O O O $any$ O $HTMLScriptElement$ O O $number$ O O O O O $any$ O O O O $any$ O O O O O O O O O O $any$ O O O O O $any$ O $complex$ O $any$ O O O $any$ O $complex$ O $any$ O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O O O $complex$ O $complex$ O $string$ O O O O $any$ O O O O $any$ O O O O $number$ O O O O O $any$ O O O O $any$ O O O O O O O O O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O O $void$ O O O $void$ O O O $void$ O O O O $void$ O $complex$ O $string$ O O $any$ O $complex$ O $complex$ O $any$ O O $any$ O $complex$ O $complex$ O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O O O $complex$ O O O O O O O O O $HTMLElement$ O $Document$ O $HTMLElement$ O O O O O O O $HTMLElement$ O O $HTMLElement$ O $Document$ O O O O O O $HTMLElement$ O $string$ O O O $Document$ O O O O O O $T$ O $HTMLElement$ O O O $HTMLElement$ O $any$ O $string$ O $complex$ O O O O O O O O $void$ O $complex$ O $string$ O O O O O O O $complex$ O O O $complex$ O O O O O O $void$ O $complex$ O $string$ O O O O O O O $complex$ O $any$ O $any$ O O $any$ O $any$ O O $any$ O O O $Document$ O $boolean$ O O O O $complex$ O $Selection)$ O O O $void$ O O O $any$ O $any$ O O $any$ O O O O O $complex$ O $any$ O O $any$ O $any$ O O $any$ O O O O O O $complex$ O $any$ O O O O $any$ O O O $complex$ O $string$ O O O O O $complex$ O $string$ O O O O O $complex$ O $string$ O O O O O O O O O O O O $complex$ O $any$ O O O O $any$ O O O $complex$ O $string$ O O O O O $complex$ O $string$ O O O O O $complex$ O $string$ O O O O O $complex$ O $string$ O O O O O O O O O O O O $any$ O O O O $any$ O $complex$ O $complex$ O $any$ O O O O O $complex$ O $any$ O O O $string$ O O O O $any$ O O O O $any$ O O O O O O O O O O $any$ O $string$ O O O O O O O $string$ O $any$ O O O O $any$ O O O O O O $complex$ O $string$ O O O O O $complex$ O $string$ O O O O O $complex$ O $string$ O O O O O $complex$ O $string$ O O O O $complex$ O $string$ O O O O $void$ O $any$ O O $any$ O $any$ O O $any$ O O O O $number$ O O O O O $any$ O $any$ O O $any$ O O O O O O O O O O O $void$ O O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O O O O O O O O O O $void$ O O O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O $complex$ O $complex$ O $string$ O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O $Promise<any>$ O $any$ O O O O $PromiseConstructor$ O O O $void$ O $void$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O O O O $any$ O $any$ O O $void$ O $any$ O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O $void$ O $any$ O O O O O $any$ O O O $any$ O O $void$ O $any$ O O O O O O O O O $any$ O O O $any$ O O $void$ O $any$ O O O O O O O O O O $any$ O $any$ O $any$ O O O $RegExp$ O O $RegExpConstructor$ O $any$ O O O O $any$ O $any$ O $any$ O $RegExp$ O O O O $any$ O O O $any$ O $any$ O O O $any$ O O O O O O O O O $any$ O O
'js' ( function ( modules ) { var installedModules = { } ; function __webpack_require__ ( moduleId ) { if ( installedModules [ moduleId ] ) return installedModules [ moduleId ] . exports ; var module = installedModules [ moduleId ] = { exports : { } , id : moduleId , loaded : false } ; modules [ moduleId ] . call ( module . exports , module , module . exports , __webpack_require__ ) ; module . loaded = true ; return module . exports ; } __webpack_require__ . m = modules ; __webpack_require__ . c = installedModules ; __webpack_require__ . p = "s" ; return __webpack_require__ ( 0 ) ; } ) ( [ function ( module , exports , __webpack_require__ ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; var _core = __webpack_require__ ( 0 ) ; Object . keys ( _core ) . forEach ( function ( key ) { if ( key === "s" || key === "s" ) return ; Object . defineProperty ( exports , key , { enumerable : true , get : function get ( ) { return _core [ key ] ; } } ) ; } ) ; var _domready = __webpack_require__ ( 0 ) ; var 0 = _interopRequireDefault ( _domready ) ; var 0 = _interopRequireDefault ( _core ) ; var _dasherize = __webpack_require__ ( 0 ) ; var dasherize = _interopRequireWildcard ( _dasherize ) ; function _interopRequireWildcard ( obj ) { if ( obj && obj . __esModule ) { return obj ; } else { var newObj = { } ; if ( obj != null ) { for ( var key in obj ) { if ( Object . prototype . hasOwnProperty . call ( obj , key ) ) newObj [ key ] = obj [ key ] ; } } newObj . default = obj ; return newObj ; } } function _interopRequireDefault ( obj ) { return obj && obj . __esModule ? obj : { default : obj } ; } if ( false ) { require ( 's' ) ; } ( 0 , 0 . default ) ( function ( ) { return 0 . default . highlight ( dasherize . object ( window . syntaxhighlighterConfig || { } ) ) ; } ) ; } , function ( module , exports , __webpack_require__ ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; var optsParser = __webpack_require__ ( 0 ) , match = __webpack_require__ ( 0 ) , Renderer = __webpack_require__ ( 0 ) . default , utils = __webpack_require__ ( 0 ) , transformers = __webpack_require__ ( 0 ) , dom = __webpack_require__ ( 0 ) , config = __webpack_require__ ( 0 ) , defaults = __webpack_require__ ( 0 ) , HtmlScript = __webpack_require__ ( 0 ) ; var sh = { Match : match . Match , Highlighter : __webpack_require__ ( 0 ) , config : __webpack_require__ ( 0 ) , regexLib : __webpack_require__ ( 0 ) . commonRegExp , vars : { discoveredBrushes : null , highlighters : { } } , brushes : { } , findElements : function findElements ( globalParams , element ) { var elements = element ? [ element ] : utils . toArray ( document . getElementsByTagName ( sh . config . tagName ) ) , conf = sh . config , result = [ ] ; elements = elements . concat ( dom . getSyntaxHighlighterScriptTags ( ) ) ; if ( elements . length === 0 ) return result ; for ( var i = 0 , l = elements . length ; i < l ; i ++ ) { var item = { target : elements [ i ] , params : optsParser . defaults ( optsParser . parse ( elements [ i ] . className ) , globalParams ) } ; if ( item . params [ 's' ] == null ) continue ; result . push ( item ) ; } return result ; } , highlight : function highlight ( globalParams , element ) { var elements = sh . findElements ( globalParams , element ) , propertyName = 's' , brush = null , renderer , conf = sh . config ; if ( elements . length === 0 ) return ; for ( var i = 0 , l = elements . length ; i < l ; i ++ ) { var element = elements [ i ] , target = element . target , params = element . params , brushName = params . brush , brush , matches , code ; if ( brushName == null ) continue ; brush = findBrush ( brushName ) ; if ( ! brush ) continue ; params = optsParser . defaults ( params || { } , defaults ) ; params = optsParser . defaults ( params , config ) ; if ( params [ 's' ] == true || defaults [ 's' ] == true ) { brush = new HtmlScript ( findBrush ( 's' ) , brush ) ; brushName = 's' ; } else { brush = new brush ( ) ; } code = target [ propertyName ] ; if ( conf . useScriptTags ) code = stripCData ( code ) ; if ( ( target . title || 's' ) != 's' ) params . title = target . title ; params [ 's' ] = brushName ; code = transformers ( code , params ) ; matches = match . applyRegexList ( code , brush . regexList , params ) ; renderer = new Renderer ( code , matches , params ) ; element = dom . create ( 's' ) ; element . innerHTML = renderer . getHtml ( ) ; if ( params . quickCode ) dom . attachEvent ( dom . findElement ( element , 's' ) , 's' , dom . quickCodeHandler ) ; if ( ( target . id || 's' ) != 's' ) element . id = target . id ; target . parentNode . replaceChild ( element , target ) ; } } } ; function alert ( str ) { window . alert ( 's' + str ) ; } ; function findBrush ( alias , showAlert ) { var brushes = sh . vars . discoveredBrushes , result = null ; if ( brushes == null ) { brushes = { } ; for ( var brushName in sh . brushes ) { var brush = sh . brushes [ brushName ] , aliases = brush . aliases ; if ( aliases == null ) { continue ; } brush . className = brush . className || brush . aliases [ 0 ] ; brush . brushName = brush . className || brushName . toLowerCase ( ) ; for ( var i = 0 , l = aliases . length ; i < l ; i ++ ) { brushes [ aliases [ i ] ] = brushName ; } } sh . vars . discoveredBrushes = brushes ; } result = sh . brushes [ brushes [ alias ] ] ; if ( result == null && showAlert ) alert ( sh . config . strings . noBrush + alias ) ; return result ; } ; function stripCData ( original ) { var left = 's' , right = 's' , copy = utils . trim ( original ) , changed = false , leftLength = left . length , rightLength = right . length ; if ( copy . indexOf ( left ) == 0 ) { copy = copy . substring ( leftLength ) ; changed = true ; } var copyLength = copy . length ; if ( copy . indexOf ( right ) == copyLength - rightLength ) { copy = copy . substring ( 0 , copyLength - rightLength ) ; changed = true ; } return changed ? copy : original ; } ; var brushCounter = 0 ; exports . default = sh ; var registerBrush = exports . registerBrush = function registerBrush ( brush ) { return sh . brushes [ 's' + brushCounter ++ ] = brush . default || brush ; } ; var clearRegisteredBrushes = exports . clearRegisteredBrushes = function clearRegisteredBrushes ( ) { sh . brushes = { } ; brushCounter = 0 ; } ; registerBrush ( __webpack_require__ ( 0 ) ) ; } , function ( module , exports , __webpack_require__ ) { 's' ; var XRegExp = __webpack_require__ ( 0 ) . XRegExp ; var BOOLEANS = { 's' : true , 's' : false } ; function camelize ( key ) { return key . replace ( "s" , function ( match , word ) { return word . charAt ( 0 ) . toUpperCase ( ) + word . substr ( 0 ) ; } ) ; } function process ( value ) { var result = BOOLEANS [ value ] ; return result == null ? value : result ; } module . exports = { defaults : function defaults ( target , source ) { for ( var key in source || { } ) { if ( ! target . hasOwnProperty ( key ) ) target [ key ] = target [ camelize ( key ) ] = source [ key ] ; } return target ; } , parse : function parse ( str ) { var match , key , result = { } , arrayRegex = XRegExp ( "s" ) , pos = 0 , regex = XRegExp ( "s" + "s" + "s" + "s" + "s" + 's' + "s" + "s" , "s" ) ; while ( ( match = XRegExp . exec ( str , regex , pos ) ) != null ) { var value = match . value . replace ( "s" , 's' ) ; if ( value != null && arrayRegex . test ( value ) ) { var m = XRegExp . exec ( value , arrayRegex ) ; value = m . values . length > 0 ? m . values . split ( "s" ) : [ ] ; } value = process ( value ) ; result [ match . name ] = result [ camelize ( match . name ) ] = value ; pos = match . index + match [ 0 ] . length ; } return result ; } } ; } , function ( module , exports , __webpack_require__ ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; exports . commonRegExp = exports . XRegExp = undefined ; var _xregexp = __webpack_require__ ( 0 ) ; var 0 = _interopRequireDefault ( _xregexp ) ; function _interopRequireDefault ( obj ) { return obj && obj . __esModule ? obj : { default : obj } ; } exports . XRegExp = 0 . default ; var commonRegExp = exports . commonRegExp = { multiLineCComments : ( 0 , 0 . default ) ( 's' , 's' ) , singleLineCComments : "s" , singleLinePerlComments : "s" , doubleQuotedString : "s" , singleQuotedString : "s" , multiLineDoubleQuotedString : ( 0 , 0 . default ) ( 's' , 's' ) , multiLineSingleQuotedString : ( 0 , 0 . default ) ( "s" , 's' ) , xmlComments : ( 0 , 0 . default ) ( 's' , 's' ) , url : "s" , phpScriptTags : { left : "s" , right : "s" , 's' : true } , aspScriptTags : { left : "s" , right : "s" } , scriptScriptTags : { left : "s" , right : "s" } } ; } , function ( module , exports ) { 's' ; var REGEX_DATA = 's' ; var features = { astral : false , natives : false } ; var nativ = { exec : RegExp . prototype . exec , test : RegExp . prototype . test , match : String . prototype . match , replace : String . prototype . replace , split : String . prototype . split } ; var fixed = { } ; var regexCache = { } ; var patternCache = { } ; var tokens = [ ] ; var defaultScope = 's' ; var classScope = 's' ; var nativeTokens = { 's' : "s" , 's' : "s" } ; var replacementToken = "s" ; var correctExecNpcg = nativ . exec . call ( "s" , 's' ) [ 0 ] === undefined ; var hasNativeU = function ( ) { var isSupported = true ; try { new RegExp ( 's' , 's' ) ; } catch ( exception ) { isSupported = false ; } return isSupported ; } ( ) ; var hasNativeY = function ( ) { var isSupported = true ; try { new RegExp ( 's' , 's' ) ; } catch ( exception ) { isSupported = false ; } return isSupported ; } ( ) ; var hasFlagsProp = "s" . flags !== undefined ; var registeredFlags = { g : true , i : true , m : true , u : hasNativeU , y : hasNativeY } ; var toString = { } . toString ; function augment ( regex , captureNames , xSource , xFlags , isInternalOnly ) { var p ; regex [ REGEX_DATA ] = { captureNames : captureNames } ; if ( isInternalOnly ) { return regex ; } if ( regex . __proto__ ) { regex . __proto__ = XRegExp . prototype ; } else { for ( p in XRegExp . prototype ) { regex [ p ] = XRegExp . prototype [ p ] ; } } regex [ REGEX_DATA ] . source = xSource ; regex [ REGEX_DATA ] . flags = xFlags ? xFlags . split ( 's' ) . sort ( ) . join ( 's' ) : xFlags ; return regex ; } function clipDuplicates ( str ) { return nativ . replace . call ( str , "s" , 's' ) ; } function copyRegex ( regex , options ) { if ( ! XRegExp . isRegExp ( regex ) ) { throw new TypeError ( 's' ) ; } var xData = regex [ REGEX_DATA ] || { } , flags = getNativeFlags ( regex ) , flagsToAdd = 's' , flagsToRemove = 's' , xregexpSource = null , xregexpFlags = null ; options = options || { } ; if ( options . removeG ) { flagsToRemove += 's' ; } if ( options . removeY ) { flagsToRemove += 's' ; } if ( flagsToRemove ) { flags = nativ . replace . call ( flags , new RegExp ( 's' + flagsToRemove + 's' , 's' ) , 's' ) ; } if ( options . addG ) { flagsToAdd += 's' ; } if ( options . addY ) { flagsToAdd += 's' ; } if ( flagsToAdd ) { flags = clipDuplicates ( flags + flagsToAdd ) ; } if ( ! options . isInternalOnly ) { if ( xData . source !== undefined ) { xregexpSource = xData . source ; } if ( xData . flags != null ) { xregexpFlags = flagsToAdd ? clipDuplicates ( xData . flags + flagsToAdd ) : xData . flags ; } } regex = augment ( new RegExp ( regex . source , flags ) , hasNamedCapture ( regex ) ? xData . captureNames . slice ( 0 ) : null , xregexpSource , xregexpFlags , options . isInternalOnly ) ; return regex ; } function dec ( hex ) { return parseInt ( hex , 0 ) ; } function getNativeFlags ( regex ) { return hasFlagsProp ? regex . flags : nativ . exec . call ( "s" , RegExp . prototype . toString . call ( regex ) ) [ 0 ] ; } function hasNamedCapture ( regex ) { return ! ! ( regex [ REGEX_DATA ] && regex [ REGEX_DATA ] . captureNames ) ; } function hex ( dec ) { return parseInt ( dec , 0 ) . toString ( 0 ) ; } function indexOf ( array , value ) { var len = array . length , i ; for ( i = 0 ; i < len ; ++ i ) { if ( array [ i ] === value ) { return i ; } } return - 0 ; } function isType ( value , type ) { return toString . call ( value ) === 's' + type + 's' ; } function isQuantifierNext ( pattern , pos , flags ) { return nativ . test . call ( flags . indexOf ( 's' ) > - 0 ? "s" : "s" , pattern . slice ( pos ) ) ; } function 0 ( str ) { while ( str . length < 0 ) { str = 's' + str ; } return str ; } function prepareFlags ( pattern , flags ) { var i ; if ( clipDuplicates ( flags ) !== flags ) { throw new SyntaxError ( 's' + flags ) ; } pattern = nativ . replace . call ( pattern , "s" , function ( 0 , 0 ) { if ( nativ . test . call ( "s" , 0 ) ) { throw new SyntaxError ( 's' + 0 ) ; } flags = clipDuplicates ( flags + 0 ) ; return 's' ; } ) ; for ( i = 0 ; i < flags . length ; ++ i ) { if ( ! registeredFlags [ flags . charAt ( i ) ] ) { throw new SyntaxError ( 's' + flags . charAt ( i ) ) ; } } return { pattern : pattern , flags : flags } ; } function prepareOptions ( value ) { var options = { } ; if ( isType ( value , 's' ) ) { XRegExp . forEach ( value , "s" , function ( match ) { options [ match ] = true ; } ) ; return options ; } return value ; } function registerFlag ( flag ) { if ( ! "s" . test ( flag ) ) { throw new Error ( 's' ) ; } registeredFlags [ flag ] = true ; } function runTokens ( pattern , flags , pos , scope , context ) { var i = tokens . length , leadChar = pattern . charAt ( pos ) , result = null , match , t ; while ( i -- ) { t = tokens [ i ] ; if ( t . leadChar && t . leadChar !== leadChar || t . scope !== scope && t . scope !== 's' || t . flag && flags . indexOf ( t . flag ) === - 0 ) { continue ; } match = XRegExp . exec ( pattern , t . regex , pos , 's' ) ; if ( match ) { result = { matchLength : match [ 0 ] . length , output : t . handler . call ( context , match , scope , flags ) , reparse : t . reparse } ; break ; } } return result ; } function setAstral ( on ) { features . astral = on ; } function setNatives ( on ) { RegExp . prototype . exec = ( on ? fixed : nativ ) . exec ; RegExp . prototype . test = ( on ? fixed : nativ ) . test ; String . prototype . match = ( on ? fixed : nativ ) . match ; String . prototype . replace = ( on ? fixed : nativ ) . replace ; String . prototype . split = ( on ? fixed : nativ ) . split ; features . natives = on ; } function toObject ( value ) { if ( value == null ) { throw new TypeError ( 's' ) ; } return value ; } function XRegExp ( pattern , flags ) { var context = { hasNamedCapture : false , captureNames : [ ] } , scope = defaultScope , output = 's' , pos = 0 , result , token , generated , appliedPattern , appliedFlags ; if ( XRegExp . isRegExp ( pattern ) ) { if ( flags !== undefined ) { throw new TypeError ( 's' ) ; } return copyRegex ( pattern ) ; } pattern = pattern === undefined ? 's' : String ( pattern ) ; flags = flags === undefined ? 's' : String ( flags ) ; if ( XRegExp . isInstalled ( 's' ) && flags . indexOf ( 's' ) === - 0 ) { flags += 's' ; } if ( ! patternCache [ pattern ] ) { patternCache [ pattern ] = { } ; } if ( ! patternCache [ pattern ] [ flags ] ) { result = prepareFlags ( pattern , flags ) ; appliedPattern = result . pattern ; appliedFlags = result . flags ; while ( pos < appliedPattern . length ) { do { result = runTokens ( appliedPattern , appliedFlags , pos , scope , context ) ; if ( result && result . reparse ) { appliedPattern = appliedPattern . slice ( 0 , pos ) + result . output + appliedPattern . slice ( pos + result . matchLength ) ; } } while ( result && result . reparse ) ; if ( result ) { output += result . output ; pos += result . matchLength || 0 ; } else { token = XRegExp . exec ( appliedPattern , nativeTokens [ scope ] , pos , 's' ) [ 0 ] ; output += token ; pos += token . length ; if ( token === 's' && scope === defaultScope ) { scope = classScope ; } else if ( token === 's' && scope === classScope ) { scope = defaultScope ; } } } patternCache [ pattern ] [ flags ] = { pattern : nativ . replace . call ( output , "s" , 's' ) , flags : nativ . replace . call ( appliedFlags , "s" , 's' ) , captures : context . hasNamedCapture ? context . captureNames : null } ; } generated = patternCache [ pattern ] [ flags ] ; return augment ( new RegExp ( generated . pattern , generated . flags ) , generated . captures , pattern , flags ) ; } ; XRegExp . prototype = new RegExp ( ) ; XRegExp . version = 's' ; XRegExp . addToken = function ( regex , handler , options ) { options = options || { } ; var optionalFlags = options . optionalFlags , i ; if ( options . flag ) { registerFlag ( options . flag ) ; } if ( optionalFlags ) { optionalFlags = nativ . split . call ( optionalFlags , 's' ) ; for ( i = 0 ; i < optionalFlags . length ; ++ i ) { registerFlag ( optionalFlags [ i ] ) ; } } tokens . push ( { regex : copyRegex ( regex , { addG : true , addY : hasNativeY , isInternalOnly : true } ) , handler : handler , scope : options . scope || defaultScope , flag : options . flag , reparse : options . reparse , leadChar : options . leadChar } ) ; XRegExp . cache . flush ( 's' ) ; } ; XRegExp . cache = function ( pattern , flags ) { if ( ! regexCache [ pattern ] ) { regexCache [ pattern ] = { } ; } return regexCache [ pattern ] [ flags ] || ( regexCache [ pattern ] [ flags ] = XRegExp ( pattern , flags ) ) ; } ; XRegExp . cache . flush = function ( cacheName ) { if ( cacheName === 's' ) { patternCache = { } ; } else { regexCache = { } ; } } ; XRegExp . escape = function ( str ) { return nativ . replace . call ( toObject ( str ) , "s" , 's' ) ; } ; XRegExp . exec = function ( str , regex , pos , sticky ) { var cacheKey = 's' , addY = false , match , 0 ; addY = hasNativeY && ! ! ( sticky || regex . sticky && sticky !== false ) ; if ( addY ) { cacheKey += 's' ; } regex [ REGEX_DATA ] = regex [ REGEX_DATA ] || { } ; 0 = regex [ REGEX_DATA ] [ cacheKey ] || ( regex [ REGEX_DATA ] [ cacheKey ] = copyRegex ( regex , { addG : true , addY : addY , removeY : sticky === false , isInternalOnly : true } ) ) ; 0 . lastIndex = pos = pos || 0 ; match = fixed . exec . call ( 0 , str ) ; if ( sticky && match && match . index !== pos ) { match = null ; } if ( regex . global ) { regex . lastIndex = match ? 0 . lastIndex : 0 ; } return match ; } ; XRegExp . forEach = function ( str , regex , callback ) { var pos = 0 , i = - 0 , match ; while ( match = XRegExp . exec ( str , regex , pos ) ) { callback ( match , ++ i , str , regex ) ; pos = match . index + ( match [ 0 ] . length || 0 ) ; } } ; XRegExp . globalize = function ( regex ) { return copyRegex ( regex , { addG : true } ) ; } ; XRegExp . install = function ( options ) { options = prepareOptions ( options ) ; if ( ! features . astral && options . astral ) { setAstral ( true ) ; } if ( ! features . natives && options . natives ) { setNatives ( true ) ; } } ; XRegExp . isInstalled = function ( feature ) { return ! ! features [ feature ] ; } ; XRegExp . isRegExp = function ( value ) { return toString . call ( value ) === 's' ; } ; XRegExp . match = function ( str , regex , scope ) { var global = regex . global && scope !== 's' || scope === 's' , cacheKey = ( global ? 's' : 's' ) + ( regex . sticky ? 's' : 's' ) || 's' , result , 0 ; regex [ REGEX_DATA ] = regex [ REGEX_DATA ] || { } ; 0 = regex [ REGEX_DATA ] [ cacheKey ] || ( regex [ REGEX_DATA ] [ cacheKey ] = copyRegex ( regex , { addG : ! ! global , addY : ! ! regex . sticky , removeG : scope === 's' , isInternalOnly : true } ) ) ; result = nativ . match . call ( toObject ( str ) , 0 ) ; if ( regex . global ) { regex . lastIndex = scope === 's' && result ? result . index + result [ 0 ] . length : 0 ; } return global ? result || [ ] : result && result [ 0 ] ; } ; XRegExp . matchChain = function ( str , chain ) { return function recurseChain ( values , level ) { var item = chain [ level ] . regex ? chain [ level ] : { regex : chain [ level ] } , matches = [ ] , addMatch = function addMatch ( match ) { if ( item . backref ) { if ( ! ( match . hasOwnProperty ( item . backref ) || + item . backref < match . length ) ) { throw new ReferenceError ( 's' + item . backref ) ; } matches . push ( match [ item . backref ] || 's' ) ; } else { matches . push ( match [ 0 ] ) ; } } , i ; for ( i = 0 ; i < values . length ; ++ i ) { XRegExp . forEach ( values [ i ] , item . regex , addMatch ) ; } return level === chain . length - 0 || ! matches . length ? matches : recurseChain ( matches , level + 0 ) ; } ( [ str ] , 0 ) ; } ; XRegExp . replace = function ( str , search , replacement , scope ) { var isRegex = XRegExp . isRegExp ( search ) , global = search . global && scope !== 's' || scope === 's' , cacheKey = ( global ? 's' : 's' ) + ( search . sticky ? 's' : 's' ) || 's' , 0 = search , result ; if ( isRegex ) { search [ REGEX_DATA ] = search [ REGEX_DATA ] || { } ; 0 = search [ REGEX_DATA ] [ cacheKey ] || ( search [ REGEX_DATA ] [ cacheKey ] = copyRegex ( search , { addG : ! ! global , addY : ! ! search . sticky , removeG : scope === 's' , isInternalOnly : true } ) ) ; } else if ( global ) { 0 = new RegExp ( XRegExp . escape ( String ( search ) ) , 's' ) ; } result = fixed . replace . call ( toObject ( str ) , 0 , replacement ) ; if ( isRegex && search . global ) { search . lastIndex = 0 ; } return result ; } ; XRegExp . replaceEach = function ( str , replacements ) { var i , r ; for ( i = 0 ; i < replacements . length ; ++ i ) { r = replacements [ i ] ; str = XRegExp . replace ( str , r [ 0 ] , r [ 0 ] , r [ 0 ] ) ; } return str ; } ; XRegExp . split = function ( str , separator , limit ) { return fixed . split . call ( toObject ( str ) , separator , limit ) ; } ; XRegExp . test = function ( str , regex , pos , sticky ) { return ! ! XRegExp . exec ( str , regex , pos , sticky ) ; } ; XRegExp . uninstall = function ( options ) { options = prepareOptions ( options ) ; if ( features . astral && options . astral ) { setAstral ( false ) ; } if ( features . natives && options . natives ) { setNatives ( false ) ; } } ; XRegExp . union = function ( patterns , flags ) { var parts = "s" , output = [ ] , numCaptures = 0 , numPriorCaptures , captureNames , pattern , rewrite = function rewrite ( match , paren , backref ) { var name = captureNames [ numCaptures - numPriorCaptures ] ; if ( paren ) { ++ numCaptures ; if ( name ) { return 's' + name + 's' ; } } else if ( backref ) { return 's' + ( + backref + numPriorCaptures ) ; } return match ; } , i ; if ( ! ( isType ( patterns , 's' ) && patterns . length ) ) { throw new TypeError ( 's' ) ; } for ( i = 0 ; i < patterns . length ; ++ i ) { pattern = patterns [ i ] ; if ( XRegExp . isRegExp ( pattern ) ) { numPriorCaptures = numCaptures ; captureNames = pattern [ REGEX_DATA ] && pattern [ REGEX_DATA ] . captureNames || [ ] ; output . push ( nativ . replace . call ( XRegExp ( pattern . source ) . source , parts , rewrite ) ) ; } else { output . push ( XRegExp . escape ( pattern ) ) ; } } return XRegExp ( output . join ( 's' ) , flags ) ; } ; fixed . exec = function ( str ) { var origLastIndex = this . lastIndex , match = nativ . exec . apply ( this , arguments ) , name , 0 , i ; if ( match ) { if ( ! correctExecNpcg && match . length > 0 && indexOf ( match , 's' ) > - 0 ) { 0 = copyRegex ( this , { removeG : true , isInternalOnly : true } ) ; nativ . replace . call ( String ( str ) . slice ( match . index ) , 0 , function ( ) { var len = arguments . length , i ; for ( i = 0 ; i < len - 0 ; ++ i ) { if ( arguments [ i ] === undefined ) { match [ i ] = undefined ; } } } ) ; } if ( this [ REGEX_DATA ] && this [ REGEX_DATA ] . captureNames ) { for ( i = 0 ; i < match . length ; ++ i ) { name = this [ REGEX_DATA ] . captureNames [ i - 0 ] ; if ( name ) { match [ name ] = match [ i ] ; } } } if ( this . global && ! match [ 0 ] . length && this . lastIndex > match . index ) { this . lastIndex = match . index ; } } if ( ! this . global ) { this . lastIndex = origLastIndex ; } return match ; } ; fixed . test = function ( str ) { return ! ! fixed . exec . call ( this , str ) ; } ; fixed . match = function ( regex ) { var result ; if ( ! XRegExp . isRegExp ( regex ) ) { regex = new RegExp ( regex ) ; } else if ( regex . global ) { result = nativ . match . apply ( this , arguments ) ; regex . lastIndex = 0 ; return result ; } return fixed . exec . call ( regex , toObject ( this ) ) ; } ; fixed . replace = function ( search , replacement ) { var isRegex = XRegExp . isRegExp ( search ) , origLastIndex , captureNames , result ; if ( isRegex ) { if ( search [ REGEX_DATA ] ) { captureNames = search [ REGEX_DATA ] . captureNames ; } origLastIndex = search . lastIndex ; } else { search += 's' ; } if ( isType ( replacement , 's' ) ) { result = nativ . replace . call ( String ( this ) , search , function ( ) { var args = arguments , i ; if ( captureNames ) { args [ 0 ] = new String ( args [ 0 ] ) ; for ( i = 0 ; i < captureNames . length ; ++ i ) { if ( captureNames [ i ] ) { args [ 0 ] [ captureNames [ i ] ] = args [ i + 0 ] ; } } } if ( isRegex && search . global ) { search . lastIndex = args [ args . length - 0 ] + args [ 0 ] . length ; } return replacement . apply ( undefined , args ) ; } ) ; } else { result = nativ . replace . call ( this == null ? this : String ( this ) , search , function ( ) { var args = arguments ; return nativ . replace . call ( String ( replacement ) , replacementToken , function ( 0 , 0 , 0 ) { var n ; if ( 0 ) { n = + 0 ; if ( n <= args . length - 0 ) { return args [ n ] || 's' ; } n = captureNames ? indexOf ( captureNames , 0 ) : - 0 ; if ( n < 0 ) { throw new SyntaxError ( 's' + 0 ) ; } return args [ n + 0 ] || 's' ; } if ( 0 === 's' ) { return 's' ; } if ( 0 === 's' || + 0 === 0 ) { return args [ 0 ] ; } if ( 0 === 's' ) { return args [ args . length - 0 ] . slice ( 0 , args [ args . length - 0 ] ) ; } if ( 0 === "s" ) { return args [ args . length - 0 ] . slice ( args [ args . length - 0 ] + args [ 0 ] . length ) ; } 0 = + 0 ; if ( ! isNaN ( 0 ) ) { if ( 0 > args . length - 0 ) { throw new SyntaxError ( 's' + 0 ) ; } return args [ 0 ] || 's' ; } throw new SyntaxError ( 's' + 0 ) ; } ) ; } ) ; } if ( isRegex ) { if ( search . global ) { search . lastIndex = 0 ; } else { search . lastIndex = origLastIndex ; } } return result ; } ; fixed . split = function ( separator , limit ) { if ( ! XRegExp . isRegExp ( separator ) ) { return nativ . split . apply ( this , arguments ) ; } var str = String ( this ) , output = [ ] , origLastIndex = separator . lastIndex , lastLastIndex = 0 , lastLength ; limit = ( limit === undefined ? - 0 : limit ) >>> 0 ; XRegExp . forEach ( str , separator , function ( match ) { if ( match . index + match [ 0 ] . length > lastLastIndex ) { output . push ( str . slice ( lastLastIndex , match . index ) ) ; if ( match . length > 0 && match . index < str . length ) { Array . prototype . push . apply ( output , match . slice ( 0 ) ) ; } lastLength = match [ 0 ] . length ; lastLastIndex = match . index + lastLength ; } } ) ; if ( lastLastIndex === str . length ) { if ( ! nativ . test . call ( separator , 's' ) || lastLength ) { output . push ( 's' ) ; } } else { output . push ( str . slice ( lastLastIndex ) ) ; } separator . lastIndex = origLastIndex ; return output . length > limit ? output . slice ( 0 , limit ) : output ; } ; XRegExp . addToken ( "s" , function ( match , scope ) { if ( match [ 0 ] === 's' && scope === defaultScope ) { return match [ 0 ] ; } throw new SyntaxError ( 's' + match [ 0 ] ) ; } , { scope : 's' , leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match , scope , flags ) { var code = dec ( match [ 0 ] ) ; if ( code > 0 ) { throw new SyntaxError ( 's' + match [ 0 ] ) ; } if ( code <= 0 ) { return 's' + 0 ( hex ( code ) ) ; } if ( hasNativeU && flags . indexOf ( 's' ) > - 0 ) { return match [ 0 ] ; } throw new SyntaxError ( 's' ) ; } , { scope : 's' , leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match ) { return match [ 0 ] ? 's' : 's' ; } , { leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match , scope , flags ) { return isQuantifierNext ( match . input , match . index + match [ 0 ] . length , flags ) ? 's' : 's' ; } , { leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match , scope , flags ) { return isQuantifierNext ( match . input , match . index + match [ 0 ] . length , flags ) ? 's' : 's' ; } , { flag : 's' } ) ; XRegExp . addToken ( "s" , function ( ) { return 's' ; } , { flag : 's' , leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match ) { var index = isNaN ( match [ 0 ] ) ? indexOf ( this . captureNames , match [ 0 ] ) + 0 : + match [ 0 ] , endIndex = match . index + match [ 0 ] . length ; if ( ! index || index > this . captureNames . length ) { throw new SyntaxError ( 's' + match [ 0 ] ) ; } return 's' + index + ( endIndex === match . input . length || isNaN ( match . input . charAt ( endIndex ) ) ? 's' : 's' ) ; } , { leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match , scope ) { if ( ! ( scope === defaultScope && "s" . test ( match [ 0 ] ) && + match [ 0 ] <= this . captureNames . length ) && match [ 0 ] !== 's' ) { throw new SyntaxError ( 's' + match [ 0 ] ) ; } return match [ 0 ] ; } , { scope : 's' , leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match ) { if ( ! isNaN ( match [ 0 ] ) ) { throw new SyntaxError ( 's' + match [ 0 ] ) ; } if ( match [ 0 ] === 's' || match [ 0 ] === 's' ) { throw new SyntaxError ( 's' + match [ 0 ] ) ; } if ( indexOf ( this . captureNames , match [ 0 ] ) > - 0 ) { throw new SyntaxError ( 's' + match [ 0 ] ) ; } this . captureNames . push ( match [ 0 ] ) ; this . hasNamedCapture = true ; return 's' ; } , { leadChar : 's' } ) ; XRegExp . addToken ( "s" , function ( match , scope , flags ) { if ( flags . indexOf ( 's' ) > - 0 ) { return 's' ; } this . captureNames . push ( null ) ; return 's' ; } , { optionalFlags : 's' , leadChar : 's' } ) ; module . exports = XRegExp ; } , function ( module , exports , __webpack_require__ ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; var _match = __webpack_require__ ( 0 ) ; Object . keys ( _match ) . forEach ( function ( key ) { if ( key === "s" || key === "s" ) return ; Object . defineProperty ( exports , key , { enumerable : true , get : function get ( ) { return _match [ key ] ; } } ) ; } ) ; var _applyRegexList = __webpack_require__ ( 0 ) ; Object . keys ( _applyRegexList ) . forEach ( function ( key ) { if ( key === "s" || key === "s" ) return ; Object . defineProperty ( exports , key , { enumerable : true , get : function get ( ) { return _applyRegexList [ key ] ; } } ) ; } ) ; } , function ( module , exports ) { "s" ; Object . defineProperty ( exports , "s" , { value : true } ) ; var _createClass = function ( ) { function defineProperties ( target , props ) { for ( var i = 0 ; i < props . length ; i ++ ) { var descriptor = props [ i ] ; descriptor . enumerable = descriptor . enumerable || false ; descriptor . configurable = true ; if ( "s" in descriptor ) descriptor . writable = true ; Object . defineProperty ( target , descriptor . key , descriptor ) ; } } return function ( Constructor , protoProps , staticProps ) { if ( protoProps ) defineProperties ( Constructor . prototype , protoProps ) ; if ( staticProps ) defineProperties ( Constructor , staticProps ) ; return Constructor ; } ; } ( ) ; function _classCallCheck ( instance , Constructor ) { if ( ! ( instance instanceof Constructor ) ) { throw new TypeError ( "s" ) ; } } var Match = exports . Match = function ( ) { function Match ( value , index , css ) { _classCallCheck ( this , Match ) ; this . value = value ; this . index = index ; this . length = value . length ; this . css = css ; this . brushName = null ; } _createClass ( Match , [ { key : "s" , value : function toString ( ) { return this . value ; } } ] ) ; return Match ; } ( ) ; } , function ( module , exports , __webpack_require__ ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; var _typeof = typeof Symbol === "s" && typeof Symbol . iterator === "s" ? function ( obj ) { return typeof obj ; } : function ( obj ) { return obj && typeof Symbol === "s" && obj . constructor === Symbol && obj !== Symbol . prototype ? "s" : typeof obj ; } ; exports . applyRegexList = applyRegexList ; var _matches = __webpack_require__ ( 0 ) ; function applyRegexList ( code , regexList ) { var result = [ ] ; regexList = regexList || [ ] ; for ( var i = 0 , l = regexList . length ; i < l ; i ++ ) { if ( _typeof ( regexList [ i ] ) === 's' ) result = result . concat ( ( 0 , _matches . find ) ( code , regexList [ i ] ) ) ; } result = ( 0 , _matches . sort ) ( result ) ; result = ( 0 , _matches . removeNested ) ( result ) ; result = ( 0 , _matches . compact ) ( result ) ; return result ; } } , function ( module , exports , __webpack_require__ ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; exports . find = find ; exports . sort = sort ; exports . compact = compact ; exports . removeNested = removeNested ; var _match = __webpack_require__ ( 0 ) ; var _syntaxhighlighterRegex = __webpack_require__ ( 0 ) ; function find ( code , regexInfo ) { function defaultAdd ( match , regexInfo ) { return match [ 0 ] ; } ; var index = 0 , match = null , matches = [ ] , process = regexInfo . func ? regexInfo . func : defaultAdd , pos = 0 ; while ( match = _syntaxhighlighterRegex . XRegExp . exec ( code , regexInfo . regex , pos ) ) { var resultMatch = process ( match , regexInfo ) ; if ( typeof resultMatch === 's' ) resultMatch = [ new _match . Match ( resultMatch , match . index , regexInfo . css ) ] ; matches = matches . concat ( resultMatch ) ; pos = match . index + match [ 0 ] . length ; } return matches ; } ; function sort ( matches ) { function sortMatchesCallback ( 0 , 0 ) { if ( 0 . index < 0 . index ) return - 0 ; else if ( 0 . index > 0 . index ) return 0 ; else { if ( 0 . length < 0 . length ) return - 0 ; else if ( 0 . length > 0 . length ) return 0 ; } return 0 ; } return matches . sort ( sortMatchesCallback ) ; } function compact ( matches ) { var result = [ ] , i , l ; for ( i = 0 , l = matches . length ; i < l ; i ++ ) { if ( matches [ i ] ) result . push ( matches [ i ] ) ; } return result ; } function removeNested ( matches ) { for ( var i = 0 , l = matches . length ; i < l ; i ++ ) { if ( matches [ i ] === null ) continue ; var itemI = matches [ i ] , itemIEndPos = itemI . index + itemI . length ; for ( var j = i + 0 , l = matches . length ; j < l && matches [ i ] !== null ; j ++ ) { var itemJ = matches [ j ] ; if ( itemJ === null ) continue ; else if ( itemJ . index > itemIEndPos ) break ; else if ( itemJ . index == itemI . index && itemJ . length > itemI . length ) matches [ i ] = null ; else if ( itemJ . index >= itemI . index && itemJ . index < itemIEndPos ) matches [ j ] = null ; } } return matches ; } } , function ( module , exports ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; exports . default = Renderer ; function padNumber ( number , length ) { var result = number . toString ( ) ; while ( result . length < length ) { result = 's' + result ; } return result ; } ; function getLines ( str ) { return str . split ( "s" ) ; } function getLinesToHighlight ( opts ) { var results = { } , linesToHighlight , l , i ; linesToHighlight = opts . highlight || [ ] ; if ( typeof linesToHighlight . push !== 's' ) linesToHighlight = [ linesToHighlight ] ; for ( i = 0 , l = linesToHighlight . length ; i < l ; i ++ ) { results [ linesToHighlight [ i ] ] = true ; } return results ; } function Renderer ( code , matches , opts ) { var _this = this ; _this . opts = opts ; _this . code = code ; _this . matches = matches ; _this . lines = getLines ( code ) ; _this . linesToHighlight = getLinesToHighlight ( opts ) ; } Renderer . prototype = { wrapLinesWithCode : function wrapLinesWithCode ( str , css ) { if ( str == null || str . length == 0 || str == 's' || css == null ) return str ; var _this = this , results = [ ] , lines , line , spaces , i , l ; str = str . replace ( "s" , 's' ) ; str = str . replace ( "s" , function ( m ) { spaces = 's' ; for ( i = 0 , l = m . length ; i < l - 0 ; i ++ ) { spaces += _this . opts . space ; } return spaces + 's' ; } ) ; lines = getLines ( str ) ; for ( i = 0 , l = lines . length ; i < l ; i ++ ) { line = lines [ i ] ; spaces = 's' ; if ( line . length > 0 ) { line = line . replace ( "s" , function ( s ) { spaces = s ; return 's' ; } ) ; line = line . length === 0 ? spaces : spaces + 's' + css + 's' + line + 's' ; } results . push ( line ) ; } return results . join ( 's' ) ; } , processUrls : function processUrls ( code ) { var gt = "s" , url = "s" ; return code . replace ( url , function ( m ) { var suffix = 's' , match = null ; if ( match = gt . exec ( m ) ) { m = match [ 0 ] ; suffix = match [ 0 ] ; } return 's' + m + 's' + m + 's' + suffix ; } ) ; } , figureOutLineNumbers : function figureOutLineNumbers ( code ) { var lineNumbers = [ ] , lines = this . lines , firstLine = parseInt ( this . opts . firstLine || 0 ) , i , l ; for ( i = 0 , l = lines . length ; i < l ; i ++ ) { lineNumbers . push ( i + firstLine ) ; } return lineNumbers ; } , wrapLine : function wrapLine ( lineIndex , lineNumber , lineHtml ) { var classes = [ 's' , 's' + lineNumber , 's' + lineIndex , 's' + ( lineNumber % 0 == 0 ? 0 : 0 ) . toString ( ) ] ; if ( this . linesToHighlight [ lineNumber ] ) classes . push ( 's' ) ; if ( lineNumber == 0 ) classes . push ( 's' ) ; return 's' + classes . join ( 's' ) + 's' + lineHtml + 's' ; } , renderLineNumbers : function renderLineNumbers ( code , lineNumbers ) { var _this = this , opts = _this . opts , html = 's' , count = _this . lines . length , firstLine = parseInt ( opts . firstLine || 0 ) , pad = opts . padLineNumbers , lineNumber , i ; if ( pad == true ) pad = ( firstLine + count - 0 ) . toString ( ) . length ; else if ( isNaN ( pad ) == true ) pad = 0 ; for ( i = 0 ; i < count ; i ++ ) { lineNumber = lineNumbers ? lineNumbers [ i ] : firstLine + i ; code = lineNumber == 0 ? opts . space : padNumber ( lineNumber , pad ) ; html += _this . wrapLine ( i , lineNumber , code ) ; } return html ; } , getCodeLinesHtml : function getCodeLinesHtml ( html , lineNumbers ) { var _this = this , opts = _this . opts , lines = getLines ( html ) , padLength = opts . padLineNumbers , firstLine = parseInt ( opts . firstLine || 0 ) , brushName = opts . brush , html = 's' ; for ( var i = 0 , l = lines . length ; i < l ; i ++ ) { var line = lines [ i ] , indent = "s" . exec ( line ) , spaces = null , lineNumber = lineNumbers ? lineNumbers [ i ] : firstLine + i ; ; if ( indent != null ) { spaces = indent [ 0 ] . toString ( ) ; line = line . substr ( spaces . length ) ; spaces = spaces . replace ( 's' , opts . space ) ; } if ( line . length == 0 ) line = opts . space ; html += _this . wrapLine ( i , lineNumber , ( spaces != null ? 's' + brushName + 's' + spaces + 's' : 's' ) + line ) ; } return html ; } , getTitleHtml : function getTitleHtml ( title ) { return title ? 's' + title + 's' : 's' ; } , getMatchesHtml : function getMatchesHtml ( code , matches ) { function getBrushNameCss ( match ) { var result = match ? match . brushName || brushName : brushName ; return result ? result + 's' : 's' ; } ; var _this = this , pos = 0 , result = 's' , brushName = _this . opts . brush || 's' , match , matchBrushName , i , l ; for ( i = 0 , l = matches . length ; i < l ; i ++ ) { match = matches [ i ] ; if ( match === null || match . length === 0 ) continue ; matchBrushName = getBrushNameCss ( match ) ; result += _this . wrapLinesWithCode ( code . substr ( pos , match . index - pos ) , matchBrushName + 's' ) + _this . wrapLinesWithCode ( match . value , matchBrushName + match . css ) ; pos = match . index + match . length + ( match . offset || 0 ) ; } result += _this . wrapLinesWithCode ( code . substr ( pos ) , getBrushNameCss ( ) + 's' ) ; return result ; } , getHtml : function getHtml ( ) { var _this = this , opts = _this . opts , code = _this . code , matches = _this . matches , classes = [ 's' ] , lineNumbers , gutter , html ; if ( opts . collapse === true ) classes . push ( 's' ) ; gutter = opts . gutter !== false ; if ( ! gutter ) classes . push ( 's' ) ; classes . push ( opts . className ) ; classes . push ( opts . brush ) ; if ( gutter ) lineNumbers = _this . figureOutLineNumbers ( code ) ; html = _this . getMatchesHtml ( code , matches ) ; html = _this . getCodeLinesHtml ( html , lineNumbers ) ; if ( opts . autoLinks ) html = _this . processUrls ( html ) ; html = 's' + classes . join ( 's' ) + 's' + _this . getTitleHtml ( opts . title ) + 's' + ( gutter ? 's' + _this . renderLineNumbers ( code ) + 's' : 's' ) + 's' + html + 's' ; return html ; } } ; } , function ( module , exports ) { 's' ; function splitLines ( block ) { return block . split ( "s" ) ; } function eachLine ( str , callback ) { var lines = splitLines ( str ) ; for ( var i = 0 , l = lines . length ; i < l ; i ++ ) { lines [ i ] = callback ( lines [ i ] , i ) ; } return lines . join ( 's' ) ; } function guid ( prefix ) { return ( prefix || 's' ) + Math . round ( Math . random ( ) * 0 ) . toString ( ) ; } function merge ( 0 , 0 ) { var result = { } , name ; for ( name in 0 ) { result [ name ] = 0 [ name ] ; } for ( name in 0 ) { result [ name ] = 0 [ name ] ; } return result ; } function trim ( str ) { return str . replace ( "s" , 's' ) ; } function toArray ( source ) { return Array . prototype . slice . apply ( source ) ; } function toBoolean ( value ) { var result = { "s" : true , "s" : false } [ value ] ; return result == null ? value : result ; } module . exports = { splitLines : splitLines , eachLine : eachLine , guid : guid , merge : merge , trim : trim , toArray : toArray , toBoolean : toBoolean } ; } , function ( module , exports , __webpack_require__ ) { 's' ; var trim = __webpack_require__ ( 0 ) , bloggerMode = __webpack_require__ ( 0 ) , stripBrs = __webpack_require__ ( 0 ) , unindenter = __webpack_require__ ( 0 ) , retabber = __webpack_require__ ( 0 ) ; module . exports = function ( code , opts ) { code = trim ( code , opts ) ; code = bloggerMode ( code , opts ) ; code = stripBrs ( code , opts ) ; code = unindenter . unindent ( code , opts ) ; var tabSize = opts [ 's' ] ; code = opts [ 's' ] === true ? retabber . smart ( code , tabSize ) : retabber . regular ( code , tabSize ) ; return code ; } ; } , function ( module , exports ) { 's' ; module . exports = function ( code , opts ) { return code . replace ( "s" , 's' ) . replace ( "s" , 's' ) ; } ; } , function ( module , exports ) { 's' ; module . exports = function ( code , opts ) { var br = "s" ; if ( opts [ 's' ] === true ) code = code . replace ( br , 's' ) ; return code ; } ; } , function ( module , exports ) { 's' ; module . exports = function ( code , opts ) { var br = "s" ; if ( opts [ 's' ] === true ) code = code . replace ( br , 's' ) ; return code ; } ; } , function ( module , exports ) { 's' ; function isEmpty ( str ) { return ( "s" . test ( str ) ) ; } module . exports = { unindent : function unindent ( code ) { var lines = code . split ( "s" ) , regex = "s" , min = 0 , line , matches , i , l ; for ( i = 0 , l = lines . length ; i < l && min > 0 ; i ++ ) { line = lines [ i ] ; if ( isEmpty ( line ) ) continue ; matches = regex . exec ( line ) ; if ( matches == null ) return code ; min = Math . min ( matches [ 0 ] . length , min ) ; } if ( min > 0 ) for ( i = 0 , l = lines . length ; i < l ; i ++ ) { if ( ! isEmpty ( lines [ i ] ) ) lines [ i ] = lines [ i ] . substr ( min ) ; } return lines . join ( 's' ) ; } } ; } , function ( module , exports ) { 's' ; var spaces = 's' ; for ( var i = 0 ; i < 0 ; i ++ ) { spaces += 's' ; } function insertSpaces ( line , pos , count ) { return line . substr ( 0 , pos ) + spaces . substr ( 0 , count ) + line . substr ( pos + 0 , line . length ) ; } module . exports = { smart : function smart ( code , tabSize ) { var lines = code . split ( "s" ) , tab = 's' , line , pos , i , l ; for ( i = 0 , l = lines . length ; i < l ; i ++ ) { line = lines [ i ] ; if ( line . indexOf ( tab ) === - 0 ) continue ; pos = 0 ; while ( ( pos = line . indexOf ( tab ) ) !== - 0 ) { line = insertSpaces ( line , pos , tabSize - pos % tabSize ) ; } lines [ i ] = line ; } return lines . join ( 's' ) ; } , regular : function regular ( code , tabSize ) { return code . replace ( "s" , spaces . substr ( 0 , tabSize ) ) ; } } ; } , function ( module , exports ) { 's' ; function getSyntaxHighlighterScriptTags ( ) { var tags = document . getElementsByTagName ( 's' ) , result = [ ] ; for ( var i = 0 ; i < tags . length ; i ++ ) { if ( tags [ i ] . type == 's' || tags [ i ] . type == 's' ) result . push ( tags [ i ] ) ; } return result ; } ; function hasClass ( target , className ) { return target . className . indexOf ( className ) != - 0 ; } function addClass ( target , className ) { if ( ! hasClass ( target , className ) ) target . className += 's' + className ; } function removeClass ( target , className ) { target . className = target . className . replace ( className , 's' ) ; } function attachEvent ( obj , type , func , scope ) { function handler ( e ) { e = e || window . event ; if ( ! e . target ) { e . target = e . srcElement ; e . preventDefault = function ( ) { this . returnValue = false ; } ; } func . call ( scope || window , e ) ; } ; if ( obj . attachEvent ) { obj . attachEvent ( 's' + type , handler ) ; } else { obj . addEventListener ( type , handler , false ) ; } } function findElement ( target , search , reverse ) { if ( target == null ) return null ; var nodes = reverse != true ? target . childNodes : [ target . parentNode ] , propertyToFind = { 's' : 's' , 's' : 's' } [ search . substr ( 0 , 0 ) ] || 's' , expectedValue , found ; expectedValue = propertyToFind != 's' ? search . substr ( 0 ) : search . toUpperCase ( ) ; if ( ( target [ propertyToFind ] || 's' ) . indexOf ( expectedValue ) != - 0 ) return target ; for ( var i = 0 , l = nodes . length ; nodes && i < l && found == null ; i ++ ) { found = findElement ( nodes [ i ] , search , reverse ) ; } return found ; } function findParentElement ( target , className ) { return findElement ( target , className , true ) ; } function popup ( url , name , width , height , options ) { var x = ( screen . width - width ) / 0 , y = ( screen . height - height ) / 0 ; options += 's' + x + 's' + y + 's' + width + 's' + height ; options = options . replace ( "s" , 's' ) ; var win = window . open ( url , name , options ) ; win . focus ( ) ; return win ; } function getElementsByTagName ( name ) { return document . getElementsByTagName ( name ) ; } function findElementsToHighlight ( opts ) { var elements = getElementsByTagName ( opts [ 's' ] ) , scripts , i ; if ( opts [ 's' ] ) { scripts = getElementsByTagName ( 's' ) ; for ( i = 0 ; i < scripts . length ; i ++ ) { if ( scripts [ i ] . type . match ( "s" ) ) elements . push ( scripts [ i ] ) ; } } return elements ; } function create ( name ) { return document . createElement ( name ) ; } function quickCodeHandler ( e ) { var target = e . target , highlighterDiv = findParentElement ( target , 's' ) , container = findParentElement ( target , 's' ) , textarea = document . createElement ( 's' ) , highlighter ; if ( ! container || ! highlighterDiv || findElement ( container , 's' ) ) return ; addClass ( highlighterDiv , 's' ) ; var lines = container . childNodes , code = [ ] ; for ( var i = 0 , l = lines . length ; i < l ; i ++ ) { code . push ( lines [ i ] . innerText || lines [ i ] . textContent ) ; } code = code . join ( 's' ) ; code = code . replace ( "s" , "s" ) ; textarea . readOnly = true ; textarea . appendChild ( document . createTextNode ( code ) ) ; container . appendChild ( textarea ) ; textarea . focus ( ) ; textarea . select ( ) ; attachEvent ( textarea , 's' , function ( e ) { textarea . parentNode . removeChild ( textarea ) ; removeClass ( highlighterDiv , 's' ) ; } ) ; } ; module . exports = { quickCodeHandler : quickCodeHandler , create : create , popup : popup , hasClass : hasClass , addClass : addClass , removeClass : removeClass , attachEvent : attachEvent , findElement : findElement , findParentElement : findParentElement , getSyntaxHighlighterScriptTags : getSyntaxHighlighterScriptTags , findElementsToHighlight : findElementsToHighlight } ; } , function ( module , exports ) { 's' ; module . exports = { space : 's' , useScriptTags : true , bloggerMode : false , stripBrs : false , tagName : 's' } ; } , function ( module , exports ) { 's' ; module . exports = { 's' : 's' , 's' : 0 , 's' : false , 's' : null , 's' : null , 's' : true , 's' : 0 , 's' : true , 's' : true , 's' : false , 's' : true , 's' : true , 's' : false } ; } , function ( module , exports , __webpack_require__ ) { ( function ( process ) { 's' ; var applyRegexList = __webpack_require__ ( 0 ) . applyRegexList ; function HtmlScript ( BrushXML , brushClass ) { var scriptBrush , xmlBrush = new BrushXML ( ) ; if ( brushClass == null ) return ; scriptBrush = new brushClass ( ) ; if ( scriptBrush . htmlScript == null ) throw new Error ( 's' + brushClass . brushName ) ; xmlBrush . regexList . push ( { regex : scriptBrush . htmlScript . code , func : process } ) ; this . regexList = xmlBrush . regexList ; function offsetMatches ( matches , offset ) { for ( var j = 0 , l = matches . length ; j < l ; j ++ ) { matches [ j ] . index += offset ; } } function process ( match , info ) { var code = match . code , results = [ ] , regexList = scriptBrush . regexList , offset = match . index + match . left . length , htmlScript = scriptBrush . htmlScript , matches ; function add ( matches ) { results = results . concat ( matches ) ; } matches = applyRegexList ( code , regexList ) ; offsetMatches ( matches , offset ) ; add ( matches ) ; if ( htmlScript . left != null && match . left != null ) { matches = applyRegexList ( match . left , [ htmlScript . left ] ) ; offsetMatches ( matches , match . index ) ; add ( matches ) ; } if ( htmlScript . right != null && match . right != null ) { matches = applyRegexList ( match . right , [ htmlScript . right ] ) ; offsetMatches ( matches , match . index + match [ 0 ] . lastIndexOf ( match . right ) ) ; add ( matches ) ; } for ( var j = 0 , l = results . length ; j < l ; j ++ ) { results [ j ] . brushName = brushClass . brushName ; } return results ; } } ; module . exports = HtmlScript ; } . call ( exports , __webpack_require__ ( 0 ) ) ) } , function ( module , exports ) { 's' ; var process = module . exports = { } ; var cachedSetTimeout ; var cachedClearTimeout ; function defaultSetTimout ( ) { throw new Error ( 's' ) ; } function defaultClearTimeout ( ) { throw new Error ( 's' ) ; } ( function ( ) { try { if ( typeof setTimeout === 's' ) { cachedSetTimeout = setTimeout ; } else { cachedSetTimeout = defaultSetTimout ; } } catch ( e ) { cachedSetTimeout = defaultSetTimout ; } try { if ( typeof clearTimeout === 's' ) { cachedClearTimeout = clearTimeout ; } else { cachedClearTimeout = defaultClearTimeout ; } } catch ( e ) { cachedClearTimeout = defaultClearTimeout ; } } ) ( ) ; function runTimeout ( fun ) { if ( cachedSetTimeout === setTimeout ) { return setTimeout ( fun , 0 ) ; } if ( ( cachedSetTimeout === defaultSetTimout || ! cachedSetTimeout ) && setTimeout ) { cachedSetTimeout = setTimeout ; return setTimeout ( fun , 0 ) ; } try { return cachedSetTimeout ( fun , 0 ) ; } catch ( e ) { try { return cachedSetTimeout . call ( null , fun , 0 ) ; } catch ( e ) { return cachedSetTimeout . call ( this , fun , 0 ) ; } } } function runClearTimeout ( marker ) { if ( cachedClearTimeout === clearTimeout ) { return clearTimeout ( marker ) ; } if ( ( cachedClearTimeout === defaultClearTimeout || ! cachedClearTimeout ) && clearTimeout ) { cachedClearTimeout = clearTimeout ; return clearTimeout ( marker ) ; } try { return cachedClearTimeout ( marker ) ; } catch ( e ) { try { return cachedClearTimeout . call ( null , marker ) ; } catch ( e ) { return cachedClearTimeout . call ( this , marker ) ; } } } var queue = [ ] ; var draining = false ; var currentQueue ; var queueIndex = - 0 ; function cleanUpNextTick ( ) { if ( ! draining || ! currentQueue ) { return ; } draining = false ; if ( currentQueue . length ) { queue = currentQueue . concat ( queue ) ; } else { queueIndex = - 0 ; } if ( queue . length ) { drainQueue ( ) ; } } function drainQueue ( ) { if ( draining ) { return ; } var timeout = runTimeout ( cleanUpNextTick ) ; draining = true ; var len = queue . length ; while ( len ) { currentQueue = queue ; queue = [ ] ; while ( ++ queueIndex < len ) { if ( currentQueue ) { currentQueue [ queueIndex ] . run ( ) ; } } queueIndex = - 0 ; len = queue . length ; } currentQueue = null ; draining = false ; runClearTimeout ( timeout ) ; } process . nextTick = function ( fun ) { var args = new Array ( arguments . length - 0 ) ; if ( arguments . length > 0 ) { for ( var i = 0 ; i < arguments . length ; i ++ ) { args [ i - 0 ] = arguments [ i ] ; } } queue . push ( new Item ( fun , args ) ) ; if ( queue . length === 0 && ! draining ) { runTimeout ( drainQueue ) ; } } ; function Item ( fun , array ) { this . fun = fun ; this . array = array ; } Item . prototype . run = function ( ) { this . fun . apply ( null , this . array ) ; } ; process . title = 's' ; process . browser = true ; process . env = { } ; process . argv = [ ] ; process . version = 's' ; process . versions = { } ; function noop ( ) { } process . on = noop ; process . addListener = noop ; process . once = noop ; process . off = noop ; process . removeListener = noop ; process . removeAllListeners = noop ; process . emit = noop ; process . binding = function ( name ) { throw new Error ( 's' ) ; } ; process . cwd = function ( ) { return 's' ; } ; process . chdir = function ( dir ) { throw new Error ( 's' ) ; } ; process . umask = function ( ) { return 0 ; } ; } , function ( module , exports , __webpack_require__ ) { 's' ; var _createClass = function ( ) { function defineProperties ( target , props ) { for ( var i = 0 ; i < props . length ; i ++ ) { var descriptor = props [ i ] ; descriptor . enumerable = descriptor . enumerable || false ; descriptor . configurable = true ; if ( "s" in descriptor ) descriptor . writable = true ; Object . defineProperty ( target , descriptor . key , descriptor ) ; } } return function ( Constructor , protoProps , staticProps ) { if ( protoProps ) defineProperties ( Constructor . prototype , protoProps ) ; if ( staticProps ) defineProperties ( Constructor , staticProps ) ; return Constructor ; } ; } ( ) ; var _syntaxhighlighterHtmlRenderer = __webpack_require__ ( 0 ) ; var 0 = _interopRequireDefault ( _syntaxhighlighterHtmlRenderer ) ; var _syntaxhighlighterRegex = __webpack_require__ ( 0 ) ; var _syntaxhighlighterMatch = __webpack_require__ ( 0 ) ; function _interopRequireDefault ( obj ) { return obj && obj . __esModule ? obj : { default : obj } ; } function _classCallCheck ( instance , Constructor ) { if ( ! ( instance instanceof Constructor ) ) { throw new TypeError ( "s" ) ; } } module . exports = function ( ) { function BrushBase ( ) { _classCallCheck ( this , BrushBase ) ; } _createClass ( BrushBase , [ { key : 's' , value : function getKeywords ( str ) { var results = str . replace ( "s" , 's' ) . replace ( "s" , 's' ) ; return 's' + results + 's' ; } } , { key : 's' , value : function forHtmlScript ( regexGroup ) { var regex = { 's' : regexGroup . right . source } ; if ( regexGroup . eof ) { regex . end = 's' + regex . end + 's' ; } this . htmlScript = { left : { regex : regexGroup . left , css : 's' } , right : { regex : regexGroup . right , css : 's' } , code : ( 0 , _syntaxhighlighterRegex . XRegExp ) ( "s" + regexGroup . left . source + "s" + "s" + "s" + regex . end + "s" , "s" ) } ; } } , { key : 's' , value : function getHtml ( code ) { var params = arguments . length > 0 && arguments [ 0 ] !== undefined ? arguments [ 0 ] : { } ; var matches = ( 0 , _syntaxhighlighterMatch . applyRegexList ) ( code , this . regexList ) ; var renderer = new 0 . default ( code , matches , params ) ; return renderer . getHtml ( ) ; } } ] ) ; return BrushBase ; } ( ) ; } , function ( module , exports , __webpack_require__ ) { 's' ; var BrushBase = __webpack_require__ ( 0 ) ; var regexLib = __webpack_require__ ( 0 ) . commonRegExp ; function Brush ( ) { var keywords = 's' + 's' + 's' + 's' + 's' + 's' ; this . regexList = [ { regex : regexLib . multiLineDoubleQuotedString , css : 's' } , { regex : regexLib . multiLineSingleQuotedString , css : 's' } , { regex : regexLib . singleLineCComments , css : 's' } , { regex : regexLib . multiLineCComments , css : 's' } , { regex : "s" , css : 's' } , { regex : new RegExp ( this . getKeywords ( keywords ) , 's' ) , css : 's' } ] ; this . forHtmlScript ( regexLib . scriptScriptTags ) ; } Brush . prototype = new BrushBase ( ) ; Brush . aliases = [ 's' , 's' , 's' , 's' ] ; module . exports = Brush ; } , function ( module , exports , __webpack_require__ ) { 's' ; var _typeof = typeof Symbol === "s" && typeof Symbol . iterator === "s" ? function ( obj ) { return typeof obj ; } : function ( obj ) { return obj && typeof Symbol === "s" && obj . constructor === Symbol && obj !== Symbol . prototype ? "s" : typeof obj ; } ; ! function ( name , definition ) { if ( true ) module . exports = definition ( ) ; else if ( typeof define == 's' && _typeof ( define . amd ) == 's' ) define ( definition ) ; else this [ name ] = definition ( ) ; } ( 's' , function ( ) { var fns = [ ] , _listener , doc = document , hack = doc . documentElement . doScroll , domContentLoaded = 's' , loaded = ( hack ? "s" : "s" ) . test ( doc . readyState ) ; if ( ! loaded ) doc . addEventListener ( domContentLoaded , _listener = function listener ( ) { doc . removeEventListener ( domContentLoaded , _listener ) ; loaded = 0 ; while ( _listener = fns . shift ( ) ) { _listener ( ) ; } } ) ; return function ( fn ) { loaded ? setTimeout ( fn , 0 ) : fns . push ( fn ) ; } ; } ) ; } , function ( module , exports ) { 's' ; Object . defineProperty ( exports , "s" , { value : true } ) ; var string = exports . string = function string ( value ) { return value . replace ( "s" , function ( _ , character ) { return character . toLowerCase ( ) ; } ) . replace ( "s" , function ( _ , character ) { return 's' + character . toLowerCase ( ) ; } ) ; } ; var object = exports . object = function object ( value ) { var result = { } ; Object . keys ( value ) . forEach ( function ( key ) { return result [ string ( key ) ] = value [ key ] ; } ) ; return result ; } ; } ] ) ;	O O O O $void)[]$ O O O ${}$ O O O O O $complex$ O $any$ O O O O ${}$ O $any$ O O O ${}$ O $any$ O O $any$ O O $complex$ O ${}$ O $any$ O O O ${}$ O O O O $any$ O $any$ O $boolean$ O O O O $void)[]$ O $any$ O O $any$ O $complex$ O ${}$ O $complex$ O $complex$ O ${}$ O $complex$ O O $complex$ O $boolean$ O O O O $complex$ O ${}$ O O $complex$ O $void)[]$ O $void)[]$ O $complex$ O ${}$ O ${}$ O $complex$ O $string$ O O O O $complex$ O O O O O O O O O O $any$ O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O $ObjectConstructor$ O $complex$ O $any$ O O $void$ O O O $string$ O O O O $string$ O O O $string$ O O O O O $ObjectConstructor$ O $any$ O $any$ O $string$ O O $true$ O O O $any$ O O $any$ O O O O $any$ O $string$ O O O O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $complex$ O O O O O O $any$ O O O O O O O $string$ O $any$ O O O O $ObjectConstructor$ O $Object$ O $boolean$ O $any$ O $any$ O $string$ O O $complex$ O $string$ O O $any$ O $string$ O O O O $complex$ O $any$ O $any$ O O $complex$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O $any$ O O O O O O O O O O O O O $any$ O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $complex$ O O $null$ O O O ${}$ O O O O O ${}$ O O O O $any[]$ O O $any[]$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O O $any$ O $any$ O $Document$ O O O $complex$ O $any$ O $any$ O O O $any$ O $complex$ O $any$ O $any[]$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O O $any[]$ O O O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O O $complex$ O O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $number$ O O $any$ O O $any$ O O O O O $complex$ O $any$ O O O O O O O O $any[]$ O $number$ O $complex$ O O O O $complex$ O O O $void$ O O $void$ O $any$ O $any$ O O O $any[]$ O $complex$ O $any[]$ O $any$ O $any$ O O $string$ O O O $any$ O O O $any$ O $any$ O $complex$ O $any$ O O O $any[]$ O $number$ O O O O O O O O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O $number$ O $number$ O O O O $any$ O $any[]$ O $number$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O O $any$ O O O O O O O $any$ O O $any$ O $any$ O O O O $any$ O O $any$ O O O O O O $any$ O O $any$ O O O O $any$ O $any$ O $string$ O O O O $any$ O $any$ O $any$ O $string$ O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $void$ O $string$ O O $complex$ O $void)$ O O O $string$ O O O O O $any$ O $string$ O $boolean$ O O O $any$ O $complex$ O $complex$ O $any$ O $any$ O O O O O $any$ O O O O $any$ O O O O O O O $string$ O $complex$ O ${}$ O O O $any$ O $complex$ O ${}$ O $string$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $string$ O $string$ O O O O O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O $any$ O $any$ O $number$ O O O $string$ O O O $complex$ O $complex$ O $any$ O $any$ O O $any$ O $complex$ O ${}$ O $any$ O $string$ O O O O O $any$ O O O $boolean$ O $void$ O $complex$ O $any$ O $any$ O $any$ O $string$ O O O $any$ O O O O $string$ O $string$ O O O $string$ O O O $string$ O O O $any$ O $any$ O $any$ O $string$ O O $boolean$ O O O $number$ O $string$ O $number$ O $number$ O $string$ O $number$ O O O $any$ O $any$ O $string$ O O O O O $any$ O $any$ O $any$ O $number$ O O $boolean$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $string$ O O $any$ O $number$ O O $any$ O $any$ O $any$ O O O $any$ O $number$ O O $boolean$ O O O O O $boolean$ O $any$ O $string$ O O O O $number$ O O O $complex$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $complex$ O ${}$ O O O $number$ O O O $any$ O $any$ O $any$ O O O O $void$ O $void$ O $void$ O O $void$ O O O $complex$ O ${}$ O O O O $number$ O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O O $complex$ O O O O O O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O $any$ O $complex$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O $any$ O O $any$ O $any$ O $any$ O O O O O $string$ O $any$ O O O O O O O O $any$ O $any$ O $string$ O O $any$ O $string$ O O $any$ O $any$ O $string$ O O O $any$ O $string$ O O O O $any$ O O O ${}$ O O ${}$ O $any$ O O O $any$ O $any$ O ${}$ O O O O $any$ O $any$ O O O O $number$ O O O $any$ O $any$ O O O O O O O O O O O O O O O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $number$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O $any$ O $any$ O O ${}$ O $any$ O $any$ O $any$ O O O $any$ O $number$ O $any$ O $any$ O $any$ O O O O $any$ O O O ${}$ O O O O O O O O $any$ O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O O O $any$ O $any$ O $undefined$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O O $any$ O O O O $any$ O $any$ O O O O O O O $RegExp$ O O O $RegExp$ O O O $RegExp$ O O O $RegExp$ O O O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O $any$ O O O O O O O $RegExp$ O O O $complex$ O O $RegExp$ O O O $RegExp$ O O O O O O O O $complex$ O O $RegExp$ O O O $RegExp$ O O O O $complex$ O O $RegExp$ O O O $RegExp$ O O O O O O O O O $any$ O $any$ O O O O O $string$ O O O O $complex$ O O $boolean$ O O O $boolean$ O O O O O $complex$ O O $RegExpExecArray$ O $RegExpConstructor$ O $RegExp$ O $RegExpExecArray$ O $boolean$ O $RegExpConstructor$ O $RegExp$ O $boolean$ O $complex$ O $StringConstructor$ O $String$ O $complex$ O $complex$ O $StringConstructor$ O $String$ O $complex$ O $complex$ O $StringConstructor$ O $String$ O $complex$ O O O $complex$ O O O O O ${}$ O O O O O ${}$ O O O O O $any[]$ O O O O O $string$ O O O O $string$ O O O O $complex$ O O O O O O O O O O O O $RegExp$ O O O O $boolean$ O $complex$ O $RegExpExecArray$ O $any$ O O O O O O O O O $undefined$ O O $boolean$ O O O O O O $boolean$ O O O O O O $RegExpConstructor$ O O O O O O O O O $any$ O O $boolean$ O O O O O $boolean$ O O O O O O $boolean$ O O O O O O $boolean$ O O O O O O $RegExpConstructor$ O O O O O O O O O $any$ O O $boolean$ O O O O O $boolean$ O O O O O O $boolean$ O O O $string$ O $undefined$ O O $complex$ O O $boolean$ O O O $boolean$ O O O $boolean$ O O O $boolean$ O $boolean$ O $boolean$ O $boolean$ O O O $string$ O O O O $string$ O O $RegExp$ O $RegExp$ O $any[]$ O $string$ O $string$ O $boolean$ O O O $any$ O $RegExp$ O $string$ O O O $any[]$ O $any[]$ O O O O $boolean$ O O O $RegExp$ O O O O $RegExp$ O $any$ O O $RegExp$ O $any$ O $any$ O $RegExp$ O O O O O O $any$ O $any$ O $RegExp$ O O $RegExp$ O $string$ O O $any$ O $RegExp$ O $string$ O O O O $RegExp$ O $string$ O O $any$ O $string$ O $RegExp$ O $string$ O O $any$ O $string$ O $string$ O $complex$ O O O O $string[]$ O O O $string$ O O O O $string$ O O $RegExp$ O O O $string$ O $string$ O O O $complex$ O $complex$ O $any$ O $string$ O O O O O O O O $RegExp$ O $RegExp$ O $any$ O O O O O $any$ O $boolean$ O $RegExp$ O O O O O $TypeErrorConstructor$ O O O O O O $any$ O $RegExp$ O $string$ O O O O O $string$ O $string$ O $RegExp$ O O $string$ O O O $string$ O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O $string$ O O O O O O $any$ O $any$ O O $string$ O O O O O O $string$ O O $string$ O $complex$ O $complex$ O $any$ O $string$ O O $RegExpConstructor$ O O O $string$ O O O O O O O O O O O O $any$ O $any$ O O $string$ O O O O O O $any$ O $any$ O O $string$ O O O O O O $string$ O O $string$ O $string$ O $string$ O $string$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O $undefined$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $string$ O $string$ O $any$ O $any$ O $string$ O O $any$ O $any$ O O O $RegExp$ O $RegExp$ O O $RegExpConstructor$ O $RegExp$ O $string$ O $string$ O O $boolean$ O $RegExp$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O $RegExp$ O O O $number$ O $string$ O O O $number$ O $string$ O O O O O O $string$ O $RegExp$ O O O $boolean$ O $RegExp$ O $string$ O $complex$ O $RegExpExecArray$ O $any$ O O O $RegExpConstructor$ O $RegExp$ O $string$ O $any$ O $RegExp$ O O O O O O O O $boolean$ O $RegExp$ O O O O O O $RegExp$ O $string$ O O $RegExp$ O $string$ O O $any$ O O O O $string$ O $complex$ O O O $number$ O $complex$ O O O O $string$ O O O O O O $number$ O $any[]$ O $any$ O O O $number$ O $any[]$ O $number$ O $any$ O O O $any$ O O O $number$ O $number$ O O $any$ O O O O $any[]$ O $number$ O O $any$ O O O $number$ O O O O O O O O O $boolean$ O $any$ O $string$ O O O $string$ O $any$ O $any$ O O O O $string$ O O O O O $boolean$ O $string$ O $number$ O $string$ O O O $complex$ O $boolean$ O $any$ O $string$ O $number$ O O O O O O O O O O O $string$ O $string$ O $number$ O O O O O $string$ O $string$ O O O O $string$ O $number$ O O O O $string$ O O O $string$ O O O $string$ O O O $any$ O $string$ O $string$ O O O $any$ O O O $string$ O $string$ O O $string$ O O O O $SyntaxErrorConstructor$ O O O $string$ O O O $string$ O $complex$ O $complex$ O $any$ O $string$ O O O O O $any$ O $any$ O O O O $complex$ O $boolean$ O $any$ O O O $any$ O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O $string$ O $string$ O $string$ O $any$ O O O O O O O O O O $any$ O O O $number$ O $string$ O $number$ O O $any$ O O O O O $complex$ O $string$ O $string$ O $number$ O O O O O O $SyntaxErrorConstructor$ O O O $string$ O $string$ O $number$ O O O O O O O $string$ O $string$ O $string$ O $string$ O O O O $any$ O $any$ O O O ${}$ O O O O O O $boolean$ O $any$ O O O O O $any$ O $void$ O $any$ O O O O O $any$ O O ${}$ O $any$ O O O O O O O O ${}$ O O O $any$ O O O $void$ O $string$ O O O O O O O $boolean$ O $string$ O O O O O $ErrorConstructor$ O O O O O $complex$ O $string$ O O O O O O $any$ O $string$ O $string$ O $number$ O $number$ O $any$ O O O $number$ O $any[]$ O $number$ O $string$ O $string$ O $string$ O $number$ O O $any$ O O O $any$ O $any$ O O O $number$ O O O $any$ O $any[]$ O $number$ O O O O $any$ O $any$ O $any$ O $any$ O $string$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O $any$ O $any$ O $string$ O $number$ O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any[]$ O $string$ O $any$ O $any$ O $number$ O O O O O O $any[]$ O O $any$ O O $any$ O $any[]$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any[]$ O $number$ O $string$ O O $any$ O $any$ O $any$ O O O O O O O $complex$ O O O $void$ O $boolean$ O O $complex$ O $boolean$ O $boolean$ O O O $void$ O $boolean$ O O $RegExpConstructor$ O $RegExp$ O $RegExpExecArray$ O O $boolean$ O $complex$ O $complex$ O O $complex$ O $RegExpConstructor$ O $RegExp$ O $boolean$ O O $boolean$ O $complex$ O $complex$ O O $boolean)$ O $StringConstructor$ O $String$ O $complex$ O O $boolean$ O $complex$ O $complex$ O O $any[])$ O $StringConstructor$ O $String$ O $complex$ O O $boolean$ O $complex$ O $complex$ O O $complex$ O $StringConstructor$ O $String$ O $complex$ O O $boolean$ O $complex$ O $complex$ O O $any[])$ O $complex$ O $boolean$ O $boolean$ O O O $any$ O $any$ O O O O $any$ O O O O O O $TypeErrorConstructor$ O O O O O O $any$ O O O $any$ O $complex$ O $string$ O O O $complex$ O O $boolean$ O O O $undefined[]$ O O O O O $string$ O $string$ O $string$ O O O $number$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $boolean$ O $complex$ O O O O O $string$ O $undefined$ O O O O $TypeErrorConstructor$ O O O O O O $RegExp$ O $complex$ O O O $complex$ O $complex$ O $undefined$ O O O $StringConstructor$ O $complex$ O O $string$ O $string$ O $undefined$ O O O $StringConstructor$ O $string$ O O O O $any$ O $boolean$ O O O O $string$ O $number$ O O O O O O O O $string$ O O O O O O O ${}$ O $string$ O O O ${}$ O $string$ O O O O O O O O O ${}$ O $string$ O O $string$ O O O $any$ O $any$ O $string$ O $string$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $number$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $number$ O $string$ O $complex$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $number$ O O $any$ O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O O $string$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any[]$ O $any$ O $complex$ O $string$ O O $number$ O O O O O O O $string$ O $any$ O $number$ O $any$ O $any$ O O O $any$ O O O $string$ O $string$ O O $string$ O $string$ O O O O O $any$ O O O $string$ O $string$ O O $string$ O $string$ O O O O ${}$ O $string$ O O $string$ O O O $any$ O $complex$ O $complex$ O $any$ O $string$ O O O O O O $any$ O $complex$ O $complex$ O $any$ O $any$ O O O O O O $any[]$ O $complex$ O $boolean$ O $complex$ O $any[]$ O O O O O $any$ O ${}$ O $string$ O O $string$ O O O $RegExp$ O O $RegExpConstructor$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $string$ O $string$ O O O O $any$ O $RegExp$ O O $RegExpConstructor$ O O O $any$ O $string$ O O O $any$ O $void$ O O O $RegExp$ O $Function$ O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $void$ O $any$ O $any$ O O O O O $any$ O O $any$ O $complex$ O $complex$ O $any$ O $any$ O O O O O O $any$ O O O $number$ O $any$ O $any$ O O $any$ O O $void$ O $any$ O $number$ O O O O O $any[]$ O $number$ O O $RegExp$ O $RegExp$ O $RegExp$ O O $boolean$ O O O $boolean$ O $boolean$ O $boolean$ O O O O O $Function$ O $Function$ O $any$ O $any$ O $any$ O $string$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $complex$ O $void$ O O O O O O $any$ O $complex$ O O O $string$ O $string$ O O O O O ${}$ O $string$ O O O ${}$ O $string$ O O O O O O O ${}$ O $string$ O O $string$ O O O ${}$ O $string$ O O $string$ O O $any$ O $string$ O $string$ O O O O O $any$ O $complex$ O $void$ O O O $any$ O O O O $any$ O O O O ${}$ O O O O O O O ${}$ O O O O O O O $any$ O $string$ O O O $string$ O O O $complex$ O $complex$ O $any$ O $any$ O $string$ O O O O O O O O O $any$ O $any[]$ O O O $string$ O $RegExp$ O $number$ O $complex$ O O O $string$ O O O $boolean$ O O O $any$ O $any$ O $boolean$ O $boolean$ O O O O $complex$ O $RegExp$ O $boolean$ O $complex$ O O O O O O $boolean$ O O $string$ O O O O $RegExp$ O $string$ O O $RegExp$ O $string$ O O O O O $any$ O $RegExp$ O $string$ O O $string$ O O O $RegExp$ O $string$ O O $string$ O O $RegExp$ O $RegExp$ O O $boolean$ O O O $boolean$ O $boolean$ O $boolean$ O $complex$ O O O $boolean$ O O O O O O $any$ O $any$ O $number$ O $number$ O O O $any$ O $complex$ O $any$ O $any$ O $any$ O $string$ O O O O $complex$ O $any$ O $any$ O $any$ O $number$ O O $any$ O O O O O O $RegExp$ O $boolean$ O O $RegExp$ O $number$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $void$ O O O $string$ O $RegExp$ O $Function$ O O O $number$ O O O $number$ O O O O $any$ O O O $any$ O $any$ O $any[]$ O $string$ O $RegExp$ O $number$ O O O $Function$ O $any[]$ O O $number$ O $string$ O $RegExp$ O O $number$ O $any[]$ O $any$ O O $any[]$ O O O O $any$ O O O O O O O $any$ O $RegExp$ O O O $RegExp$ O O O $RegExp$ O $RegExp$ O O $boolean$ O O O O O O O $any$ O $void$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O $complex$ O $boolean$ O $any$ O $any$ O O $void$ O O O O O O O O $complex$ O $boolean$ O $any$ O $any$ O O $void$ O O O O O O O $any$ O $boolean$ O O O $string$ O O O O O $complex$ O $string$ O O O O $any$ O $boolean$ O O O $any$ O O O $string$ O $any$ O $any$ O O O O O O $any$ O $complex$ O O O $string$ O $RegExp$ O $string$ O O O $boolean$ O $RegExp$ O $boolean$ O $string$ O O O $string$ O O O $string$ O O $boolean$ O O O O O O O $RegExp$ O $boolean$ O O O O O O O O $any$ O $any$ O $RegExp$ O $string$ O O $RegExp$ O $string$ O O O O O $any$ O $RegExp$ O $string$ O O $string$ O O O $RegExp$ O $string$ O O $string$ O O $RegExp$ O $RegExp$ O O $boolean$ O O O $boolean$ O $boolean$ O O O $RegExp$ O $boolean$ O $boolean$ O $string$ O O O $boolean$ O O O O O O $any$ O $complex$ O $complex$ O $any$ O $any$ O $string$ O O $any$ O O O O $RegExp$ O $boolean$ O O $RegExp$ O $number$ O $string$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O $boolean$ O $any$ O O O O $any$ O $any$ O O O O O O $any$ O $any[]$ O O O $string$ O $any[]$ O O O O $any$ O $string[]$ O $number$ O O O $any$ O $any[]$ O $number$ O O $any$ O $any[]$ O $number$ O O O $any$ O $any[]$ O $number$ O O O $any[]$ O O O O $void$ O O $void$ O $any$ O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O $ReferenceErrorConstructor$ O O O $any$ O $any$ O O O $any[]$ O $number$ O $any$ O $any$ O $any$ O O O O O O O O $any[]$ O $number$ O $any$ O O O O O O O O $any$ O O O $any$ O O O $number$ O $string[]$ O $number$ O O $any$ O O $any$ O $void$ O $string[]$ O $number$ O O $any$ O $any$ O $void$ O O O O $number$ O $any[]$ O $number$ O O O O $any[]$ O $number$ O $any[]$ O $any$ O $any[]$ O $number$ O O O O O O O $string$ O O O O O O O $any$ O $string$ O O O $string$ O $complex$ O $TimerHandler$ O $string$ O O O $boolean$ O $any$ O $boolean$ O $complex$ O O $boolean$ O $complex$ O $any$ O $string$ O O O $string$ O O O $string$ O O $boolean$ O O O O O O O $complex$ O $any$ O O O O O O O O $complex$ O $complex$ O $any$ O O O $boolean$ O O $complex$ O $string$ O O $complex$ O $string$ O O O O O $complex$ O $complex$ O $string$ O O $string$ O O O $complex$ O $string$ O O $string$ O O $RegExp$ O $complex$ O O $boolean$ O O O $boolean$ O $boolean$ O O O $complex$ O $any$ O $boolean$ O $string$ O O O $boolean$ O O O O O O O O O O $boolean$ O O $complex$ O O $RegExpConstructor$ O $any$ O $string$ O $StringConstructor$ O $complex$ O O O O O O O $any$ O $complex$ O $string$ O $any$ O $any$ O $string$ O O $complex$ O $TimerHandler$ O O O O $boolean$ O $complex$ O $any$ O O $complex$ O $any$ O O O O O $any$ O O O $any$ O $string$ O O O $string$ O $any[]$ O O O $any$ O $any$ O O O $any$ O O O $number$ O $any[]$ O $number$ O O $any$ O O $any$ O $any[]$ O $number$ O O $string$ O $any$ O $string$ O $string$ O $any$ O O O O $any$ O O O O $any$ O O O O O O O $string$ O O O $any$ O $any[]$ O O O $string$ O $complex$ O $number$ O O O $complex$ O $any[]$ O $any$ O $any$ O $string$ O O $complex$ O $number$ O O O O $any$ O $boolean$ O O O $string$ O $RegExp$ O $number$ O $complex$ O O O O O $any$ O $any[]$ O $string$ O $RegExp$ O $number$ O $complex$ O O O O $any$ O $void$ O O O $any$ O O $any$ O $any$ O $any$ O O O O $complex$ O $boolean$ O $any$ O $any$ O O $void$ O O O O O O O $complex$ O $boolean$ O $any$ O $any$ O O $void$ O O O O O O O $any$ O $RegExp$ O O O $any[]$ O $string$ O O O $RegExp$ O O O $any[]$ O O O O $number$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $number$ O $any$ O O O O $any$ O O O $number$ O O O $any$ O O O O O $any$ O O O O O O O O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O O O $boolean$ O $any[]$ O O O O $any[]$ O $number$ O O O O O $TypeErrorConstructor$ O O O O O O O $any$ O O O $number$ O $any[]$ O $number$ O O $any$ O O $any$ O $any[]$ O $number$ O O O O $any$ O $boolean$ O $any$ O O O $any$ O $number$ O $any$ O $any$ O $string$ O O $any$ O $string$ O O $any$ O O O O $any[]$ O $number$ O $complex$ O $complex$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $RegExp$ O $any$ O O O O O O $any[]$ O $number$ O $any$ O $string$ O $any$ O O O O O O $any$ O $any[]$ O $string$ O O O O $string$ O O O O $complex$ O $any$ O O O $string$ O O O $any$ O O O $any$ O $any$ O $complex$ O $RegExpExecArray$ O $any$ O O O $IArguments$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $boolean$ O $any$ O $any$ O O O $number$ O $any$ O O O O O O O O $any$ O $RegExp$ O O O O $boolean$ O O O $boolean$ O O O O O $complex$ O $complex$ O $any$ O $StringConstructor$ O $string$ O O $string$ O $any$ O $any$ O O $RegExp$ O O O O O O $number$ O $IArguments$ O $number$ O $any$ O O O $any$ O O O $number$ O $number$ O O O O $any$ O O O O $IArguments$ O $number$ O O $undefined$ O O $any$ O $number$ O O $undefined$ O O O O O O O O O O O $string$ O O O O $string$ O O $any$ O O O O $any$ O O O $number$ O $any$ O $any$ O O $any$ O O $any$ O O O $string$ O O $any$ O $number$ O O O O O O $any$ O O $any$ O $any$ O O $any$ O $number$ O O O O O O O O O $any$ O O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O O $any$ O $any$ O O O $any$ O O O $complex$ O $boolean$ O O O $string$ O O O O O $complex$ O $any$ O $any$ O O O $string$ O O O O $complex$ O $any[]$ O O O $any$ O O O $any$ O O O O $any$ O $boolean$ O $any$ O O O $any$ O O $RegExpConstructor$ O $any$ O O O O O O $any$ O $any$ O O $any$ O $complex$ O $complex$ O $any$ O O O $IArguments$ O O $any$ O $any$ O O O O $any$ O O O $complex$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $complex$ O $string$ O O O $complex$ O $TimerHandler$ O O O $boolean$ O $any$ O $boolean$ O $complex$ O O $any$ O $any$ O $any$ O O O $boolean$ O O O O $complex$ O $string$ O O O $any$ O $complex$ O $string$ O O $any$ O O $any$ O $complex$ O $any$ O O O O $complex$ O O O O O O $boolean$ O $TimerHandler$ O O O O O $any$ O $complex$ O $complex$ O $any$ O $StringConstructor$ O O O O $complex$ O O O O O O $IArguments$ O $IArguments$ O $any$ O O O $any$ O O $IArguments$ O O O O O $StringConstructor$ O $IArguments$ O O O O O O O $any$ O O O $number$ O $any$ O $any$ O O $any$ O O O O $any$ O $number$ O O O $IArguments$ O O O O $any$ O $number$ O O O $IArguments$ O $number$ O O O O O O O O O $boolean$ O $complex$ O $any$ O O $complex$ O $any$ O $IArguments$ O $IArguments$ O $number$ O O O O $IArguments$ O O O O $any$ O O O $TimerHandler$ O $any$ O $undefined$ O $IArguments$ O O O O O O O O $any$ O $complex$ O $complex$ O $any$ O O O O O O O $StringConstructor$ O O O O $complex$ O O O O O O $IArguments$ O $IArguments$ O O $complex$ O $complex$ O $any$ O $StringConstructor$ O $TimerHandler$ O O $RegExp$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O O $any$ O O O $number$ O $IArguments$ O $number$ O O O O O $IArguments$ O $number$ O O O O O $any$ O $any$ O $number$ O $any$ O $any$ O O O O O O O $number$ O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O $IArguments$ O $number$ O O O O O O O O O $any$ O O O O O O O O O O $any$ O O O O $any$ O O O O O $IArguments$ O O O O O O O $any$ O O O O O $IArguments$ O $IArguments$ O $number$ O O O O $any$ O O O $IArguments$ O $IArguments$ O $number$ O O O O O O O O $any$ O O O O O $IArguments$ O $IArguments$ O $number$ O O O O $any$ O $IArguments$ O $IArguments$ O $number$ O O O O $IArguments$ O O O O $any$ O O O $any$ O O $any$ O O O O $boolean$ O $any$ O O O O O $any$ O $IArguments$ O $number$ O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O $IArguments$ O $any$ O O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O O O O O $boolean$ O O O O $complex$ O $any$ O O $complex$ O $any$ O O O O O O $complex$ O $any$ O $any$ O O O O $any$ O O O $complex$ O $any[]$ O O O $complex$ O $number$ O O O O O $any$ O $boolean$ O $complex$ O O O O $complex$ O $complex$ O $any$ O O O $IArguments$ O O O O $string$ O $StringConstructor$ O O O O $any[]$ O O O O $any$ O $complex$ O $any$ O $number$ O O O $any$ O $number$ O O $number$ O $undefined$ O O O O $number$ O O O O $any$ O $void$ O $string$ O $complex$ O O O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $number$ O O $any[]$ O $number$ O $string$ O $string$ O $number$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $string$ O $number$ O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O $any[]$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $number$ O $any$ O $any$ O $any$ O O O O O O O $number$ O $string$ O $number$ O O O O O $complex$ O $boolean$ O $any$ O $complex$ O O O O $undefined$ O O $any[]$ O $number$ O O O O O O O O $any[]$ O $number$ O $string$ O $string$ O $number$ O O O O $complex$ O $any$ O $any$ O O $any[]$ O $number$ O $number$ O $string[]$ O $string[]$ O O O $number$ O O $string[]$ O O O $any$ O $void$ O O O O O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $string$ O O O $any$ O O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O O $string$ O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O $any$ O $any$ O O O $number$ O $number$ O $any$ O O O O O O O $number$ O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O O $number$ O O O O O O O $string$ O $string$ O $number$ O O O O O O $boolean$ O $any$ O $any$ O O O O O O O O O $any$ O O O O O O O $SyntaxErrorConstructor$ O O O O O O O $string$ O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O O O $any$ O O O O O O O O O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O $any$ O $any$ O O O $boolean$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O $any$ O $any$ O O O $boolean$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O O $string$ O O O O O $any$ O $void$ O O O O O O O O O O O O O $string$ O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O O O $number$ O $boolean$ O $any$ O O O O O $number$ O O O $any$ O $any$ O O O O O O O O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O $number$ O $number$ O O O $any$ O $any$ O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O O O $number$ O O $any$ O $any$ O $any$ O $any$ O $boolean$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O $any$ O O O O O O $any$ O $string$ O O O $boolean$ O $any$ O O O O O O $any$ O O O O O O $any$ O $any$ O O $any$ O O O O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O $any$ O O O O O O O $string$ O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O O O O O $boolean$ O $any$ O O O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O O $any$ O O O O O O $any$ O O O O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O O $number$ O O O $any$ O $any$ O O O O O O O O O O O $SyntaxErrorConstructor$ O O O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O O O O O $boolean$ O O O O O O O O O $string$ O O O O O $any$ O $void$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O O O O O O O $any$ O $any$ O O O O O O O O O O $string$ O O O $string$ O O O O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O $ObjectConstructor$ O $complex$ O $any$ O O $void$ O O O $string$ O O O O $string$ O O O $string$ O O O O O $ObjectConstructor$ O $any$ O $any$ O $string$ O O $true$ O O O $any$ O O $any$ O O O O $any$ O $string$ O O O O O O O O O O $any$ O $any$ O O O O $ObjectConstructor$ O $complex$ O $any$ O O $void$ O O O $string$ O O O O $string$ O O O $string$ O O O O O $ObjectConstructor$ O $any$ O $any$ O $string$ O O $true$ O O O $any$ O O $any$ O O O O $any$ O $string$ O O O O O O O O O O O O O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O O O O O O $void$ O $any$ O $any$ O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $void$ O $any$ O $any$ O $any$ O O O O $any$ O $void$ O $any$ O $any$ O O O $any$ O O O O O O O O $void$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O O O $TypeErrorConstructor$ O O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O $void$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O $string$ O O O $any$ O O $any$ O O O O O O $any$ O O O O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $complex$ O O $SymbolConstructor$ O O O O $SymbolConstructor$ O $symbol$ O O O O O $any$ O O O O $any$ O O O O O $any$ O O O $any$ O O $SymbolConstructor$ O O O $any$ O $any$ O $SymbolConstructor$ O $any$ O $SymbolConstructor$ O $Symbol$ O O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any[]$ O O O O $any$ O $any$ O O O O O O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O O O $complex$ O $any$ O $number$ O O O O O $any[]$ O $any[]$ O $complex$ O O O O $any$ O $any$ O O $any$ O $any$ O $number$ O O O O O $any[]$ O O O O $any$ O $any$ O O $any[]$ O O $any[]$ O O O O $any$ O $any$ O O $any$ O O $any[]$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O $any[]$ O $any[]$ O $any[]$ O $any$ O $any$ O $any$ O $any[]$ O $any[]$ O $any[]$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any[]$ O $string$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O $number$ O O O $any$ O O O $any[]$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $number$ O O O O O $any$ O $any$ O $any$ O $any$ O $string$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $string$ O $any$ O $any$ O $any$ O $any$ O O O $any[]$ O $any[]$ O $complex$ O $any$ O O $number$ O $any$ O $any$ O $any$ O O O O $any$ O O O $any[]$ O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O O O O $any[]$ O $any$ O O O $any[]$ O O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O O O $any$ O $number$ O O $any[]$ O $number$ O $any$ O $number$ O O O O O $any[]$ O O O $any$ O $any$ O O O O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O O O $any$ O $number$ O O O O O O O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $number$ O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O $number$ O O O O $number$ O O O O $any$ O $any$ O $number$ O O O O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $number$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $number$ O O O O O O O $any$ O O O O O O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O $complex$ O $complex$ O $any$ O O $string$ O $number$ O $number$ O O O $string$ O $number$ O $string$ O O O O O $string$ O $number$ O $number$ O O $string$ O O O $string$ O O O $string$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O O ${}$ O $any$ O O O ${}$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O O $any$ O O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O ${}$ O $any$ O $number$ O O O O O O O ${}$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O ${}$ O $any$ O O O $any$ O O O O $string$ O O $string$ O $string$ O $string$ O O O O $string$ O O O $string$ O $number$ O O O $string$ O O O $string$ O O O O $string$ O O O O O O $any[]$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O $string$ O $complex$ O O O O O O $string$ O $string$ O $complex$ O O O O O $string$ O O $any$ O O O O O $any$ O O O $any$ O $string$ O $number$ O $number$ O $number$ O O O $any$ O O O $any$ O O O $any$ O $any$ O O O $string$ O O O O O O $any$ O $any$ O $string$ O O O O $any$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O $any$ O $any$ O $number$ O O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $string$ O $string$ O O O $string$ O O O $any$ O O O O $any[]$ O $number$ O $any$ O O O O $any[]$ O $string$ O O O O O O $string$ O O $string$ O $string$ O O O $RegExp$ O O O $RegExp$ O O O O $string$ O $complex$ O $RegExp$ O O O $string$ O O O $string$ O O O $any$ O O O O O $any$ O $RegExp$ O $RegExpExecArray$ O $string$ O O O $string$ O $RegExpExecArray$ O O O O $string$ O $RegExpExecArray$ O O O O O O O O $string$ O O O $string$ O O O $string$ O O O O O O $any[]$ O O $any[]$ O $any$ O O O $any[]$ O O O O $any$ O O O $any$ O $number$ O $number$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O $any[]$ O $number$ O $number$ O $number$ O O O O $number[]$ O O O $string$ O O $string$ O $any$ O $any$ O $any$ O O O $string[]$ O O O O O O $any$ O O O $any$ O O O O $any$ O O O O O O O O O O $string$ O O O O O O O O $any$ O $any$ O O $string[]$ O $number$ O O O O O O $any$ O O O $string[]$ O $number$ O O O O O O O $string[]$ O $string$ O O O O O O $any$ O O O O O $string$ O O $string$ O $string$ O $any[]$ O O O O O O O $any$ O O O $any$ O $string$ O O O $any$ O O O $any$ O $any$ O $number$ O $number$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O O $number$ O $any$ O O O O $string$ O O O $number$ O O O O $boolean$ O $any$ O O O O $any$ O O O O O $any$ O O O $number$ O $any$ O $any$ O O O $any$ O $any[]$ O $any[]$ O $number$ O O $number$ O $number$ O $string$ O $any$ O O O $any$ O $any$ O $string$ O $any$ O $any$ O O $string$ O O O $string$ O $number$ O $any$ O $string$ O O O O $string$ O O O $string$ O O $string$ O $any$ O $any[]$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $number$ O $number$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $RegExpExecArray$ O O O $RegExpExecArray$ O $any$ O O $any$ O O O $any$ O $any[]$ O $any[]$ O $number$ O O $number$ O $number$ O O O O $RegExpExecArray$ O O O O $any$ O $RegExpExecArray$ O O O O $string$ O O O $any$ O $any$ O $any$ O $string$ O $number$ O O $any$ O $string$ O $complex$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $string$ O $number$ O $any$ O O $string$ O O O O O $any$ O O O $string$ O O O O O O $any$ O O O O $any$ O O O $string$ O O $string$ O $any$ O O O $any$ O O O $any$ O O O O O O O $string$ O O $string$ O $string$ O $any[]$ O O O $string$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O O O O $number$ O O O $string$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any[]$ O $number$ O $number$ O $number$ O $any$ O O O $any$ O $any[]$ O $number$ O O O O $any$ O O O $any$ O $any$ O O O O O $any$ O $string$ O $any$ O O $string$ O O O $string$ O $string$ O $string$ O $number$ O $any$ O $any$ O $number$ O O $string$ O O O O O O $string$ O $any$ O $any$ O $string$ O $any$ O $any$ O O $number$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $string$ O O O $string$ O $string$ O $string$ O $number$ O O $string$ O O O O O O O $string$ O O O $string$ O O $string$ O O O O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $string[]$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $string[]$ O $number$ O O O O $any$ O $any$ O $any$ O O O O O O $boolean$ O $string[]$ O $number$ O O O O $string[]$ O $number$ O $any$ O $any$ O O $string[]$ O $number$ O $any$ O $any$ O O O O $boolean$ O $any$ O O O $any[]$ O $any$ O O $any$ O O O $string$ O $any$ O $any$ O O $any$ O O O $string$ O $string$ O $any[]$ O O O O $any$ O $any$ O $any$ O O O $string$ O $string$ O O $any$ O O O $string[]$ O $string$ O O O O O O O O $string$ O $any$ O $any$ O O O O O $boolean$ O O O O O $string$ O $any$ O O O O O O O O O $string$ O O O O $string$ O O O O O O O O $any$ O $any$ O O O O O $any[]$ O $string$ O O O $string$ O $complex$ O O O O O O $string$ O $any$ O $any$ O O O $any[]$ O $any[]$ O $any$ O O O O O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O $number$ O $number$ O O O $any[]$ O $number$ O O $any$ O $any[]$ O $number$ O O $number$ O O O O $any[]$ O $string$ O O O O O O $string$ O $any$ O O O O $any$ O O O O $Math$ O $number$ O $Math$ O $number$ O O O O O O $string$ O O O O O O O $any$ O $any$ O O O ${}$ O O O O $any$ O O O $any$ O $any$ O O ${}$ O $string$ O O $any$ O $string$ O O O O O $any$ O $any$ O O ${}$ O $string$ O O $any$ O $string$ O O O O ${}$ O O O $string$ O $string$ O O O $string$ O $complex$ O O O O O O O O $any[]$ O $any$ O O O $ArrayConstructor$ O $any[]$ O $any[]$ O $any$ O $any$ O O O O $boolean$ O $string$ O O O $any$ O O O O O O O O O O O $string$ O O O $any$ O O O $string$ O $any$ O O O O O O O $any[]$ O $any[]$ O $string$ O $string$ O $string$ O $string$ O O O O O $string$ O $string$ O $any[]$ O $any[]$ O $boolean$ O $boolean$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O O $any$ O O O O O O O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O $RegExp$ O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $RegExp$ O O O O O $any$ O O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O $RegExp$ O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $RegExp$ O O O O O $any$ O O O O O O O $any$ O $any$ O O O O O $boolean$ O $any$ O O O O O O $boolean$ O $any$ O O O O O O O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $RegExp$ O O O $number$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O $any$ O O O $any$ O $any$ O $number$ O O O O $boolean$ O $any$ O O O O $any$ O $RegExp$ O $RegExpExecArray$ O $any$ O O O O $RegExpExecArray$ O O O O $any$ O $number$ O $Math$ O $number$ O $RegExpExecArray$ O O O O $number$ O $number$ O O O O O $number$ O O O O O $any$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O O O O $boolean$ O $any$ O $number$ O O O $any$ O $number$ O O $any$ O $number$ O O $any$ O $number$ O O O O $any$ O $any$ O O O O O O O O O O O $any$ O $any$ O O O O O $string$ O O O O O O $number$ O O O $number$ O O O $number$ O O O $string$ O O O O O $string$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O $string$ O $string$ O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $string$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O O O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $string$ O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $string$ O O O O O O O $any$ O $string$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $number$ O O $any$ O O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $string$ O $string$ O O O $any$ O O O O O O O O O O $any$ O $any$ O O O O O $any[]$ O O O O $HTMLCollectionOf<HTMLScriptElement>$ O $Document$ O O O O O O $any[]$ O O O O O O O $number$ O O O $number$ O $HTMLCollectionOf<HTMLScriptElement>$ O $number$ O $number$ O O O O O $HTMLCollectionOf<HTMLScriptElement>$ O $number$ O O $string$ O O O $HTMLCollectionOf<HTMLScriptElement>$ O $number$ O O $string$ O O O $any[]$ O $number$ O $HTMLCollectionOf<HTMLScriptElement>$ O $number$ O O O O O $HTMLScriptElement[]$ O O O O $boolean$ O $any$ O $string$ O O O $any$ O $any$ O $any$ O $string$ O O O O O O O $void$ O $any$ O $string$ O O O O O $boolean$ O $any$ O $string$ O O $any$ O $any$ O O O $string$ O O O $void$ O $any$ O $string$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O O O O O O $void$ O $any$ O $string$ O $Function$ O $any$ O O O $void$ O $any$ O O $any$ O $any$ O $complex$ O $Event$ O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $boolean$ O O O O O O $Function$ O $any$ O $any$ O $complex$ O $any$ O O O O O O $any$ O $any$ O O $any$ O $any$ O O O $string$ O $void$ O O O O O $any$ O $any$ O $string$ O $void$ O O O O O O O $Element$ O $Element$ O $string$ O $boolean$ O O O O $Element$ O O O O O O O $complex$ O $boolean$ O O O $Element$ O $NodeListOf<ChildNode>$ O O $Element$ O $complex$ O O $any$ O O O O O O O O O O O $string$ O $string$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O $string$ O $string$ O O O O $string$ O $string$ O O O O O O $Element$ O $any$ O O O O O $any$ O $string$ O O O O O O $Element$ O O O O $number$ O O O $number$ O $complex$ O $number$ O $complex$ O $number$ O $number$ O $Element$ O O O $number$ O O O $any$ O $Element$ O $complex$ O $number$ O O $string$ O $boolean$ O O O O $Element$ O O O $Element$ O $Element$ O $string$ O O O $Element$ O $Element$ O $string$ O O O O O O $Window$ O $string$ O $string$ O $any$ O $any$ O $string$ O O O $number$ O O $Screen$ O $number$ O $any$ O O O O $number$ O O $Screen$ O $number$ O $any$ O O O O $string$ O O O $number$ O O O $number$ O O O $any$ O O O $any$ O $string$ O $string$ O $complex$ O O O O O O O $Window$ O $complex$ O $Window)$ O $string$ O $string$ O $string$ O O $Window$ O $void$ O O O O $Window$ O O O $HTMLCollectionOf<any>$ O $any$ O O O $Document$ O O O $any$ O O O O $HTMLCollectionOf<any>$ O $any$ O O O $HTMLCollectionOf<any>$ O $HTMLCollectionOf<any>$ O $any$ O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $HTMLCollectionOf<any>$ O O O O O O $any$ O O O $number$ O $HTMLCollectionOf<any>$ O $number$ O $any$ O O O O O $HTMLCollectionOf<any>$ O $number$ O O $any$ O $any$ O O O O $HTMLCollectionOf<any>$ O $any$ O $HTMLCollectionOf<any>$ O $number$ O O O O O O $HTMLCollectionOf<any>$ O O O $any$ O $any$ O O O $Document$ O O O $any$ O O O O $void$ O $any$ O O O $any$ O $any$ O $any$ O $Element$ O $Element$ O $any$ O O O O $Element$ O $Element$ O $any$ O O O O $HTMLTextAreaElement$ O $Document$ O O O O O O $any$ O O O O $Element$ O O $Element$ O $Element$ O $Element$ O O O O O O $void$ O $Element$ O O O O O $NodeListOf<ChildNode>$ O $Element$ O $NodeListOf<ChildNode>$ O $any[]$ O O O O O O O $number$ O O O $number$ O $NodeListOf<ChildNode>$ O $number$ O $number$ O $number$ O $number$ O O O $any[]$ O $number$ O $NodeListOf<ChildNode>$ O $number$ O O $any$ O $NodeListOf<ChildNode>$ O $number$ O O $string$ O O O $any[]$ O $any[]$ O $string$ O O O O $any[]$ O $any[]$ O $any$ O O O O O O $HTMLTextAreaElement$ O $boolean$ O O O $HTMLTextAreaElement$ O $T$ O $Document$ O $Text$ O $any$ O O O $Element$ O $T$ O $HTMLTextAreaElement$ O O $HTMLTextAreaElement$ O $void$ O O O $HTMLTextAreaElement$ O $void$ O O O $void$ O $HTMLTextAreaElement$ O O O O O $any$ O O $HTMLTextAreaElement$ O $complex$ O $T$ O $HTMLTextAreaElement$ O O $void$ O $Element$ O O O O O O O O O O O O O O $void$ O $void$ O $any$ O $any$ O $Window$ O $Window$ O $boolean$ O $boolean$ O $void$ O $void$ O $void$ O $void$ O $void$ O $void$ O $Element$ O $Element$ O $Element$ O $Element$ O $any[]$ O $any[]$ O $HTMLCollectionOf<any>$ O $HTMLCollectionOf<any>$ O O O O O O $any$ O $any$ O O O O O O O O O $string$ O O O $boolean$ O O O $boolean$ O O O $boolean$ O O O $string$ O O O O O O O O $any$ O $any$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O O O O O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O O O O O $any$ O O O O O $any$ O O $any$ O O O O O $any$ O $any$ O O O O O $ErrorConstructor$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any[]$ O $any[]$ O O O O O $any$ O $any$ O $any$ O O $void$ O $any$ O $any$ O O O O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O $any$ O $number$ O O $any$ O $any$ O O O O $any[]$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any[]$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $void$ O $any$ O O $any[]$ O $any[]$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $void$ O $any$ O $any$ O O $void$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $void$ O $any$ O $any$ O $any$ O O $void$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $void$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $void$ O $any$ O O O O O O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O $number$ O $number$ O O O $any[]$ O $number$ O O $any$ O $any$ O $any$ O O O $any[]$ O O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O O $void$ O O O O O $ErrorConstructor$ O O O O O O $void$ O O O O O $ErrorConstructor$ O O O O O O O O O O O O O O O $number$ O O O O $any$ O $number$ O O O O $any$ O $void$ O O O O O $any$ O O $any$ O $void$ O O O O O O O $void$ O O O O $any$ O $void$ O O O O $any$ O $void$ O O O O O $any$ O O $any$ O $void$ O O O O O O O O $any$ O $any$ O O O O $any$ O $number$ O O O $number$ O $any$ O O O O O O O O $any$ O $void$ O O $any$ O O $number$ O O $any$ O $number$ O O $number$ O $any$ O O O O O O O O $any$ O $any$ O O O O O O O $any$ O O O O O $any$ O $any$ O O O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $void$ O O O $void$ O $any$ O O O O O O $any$ O $void$ O O $any$ O O $void$ O O $any$ O $void$ O O $void$ O $any$ O O O O O O $any$ O $any$ O O O O O $any$ O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O O O O O O $any[]$ O O O O O $boolean$ O O O O $any$ O O $number$ O O O O O $void$ O O O O O O $boolean$ O O $any$ O O O O O $boolean$ O O O O O $any$ O $any$ O O $any[]$ O $any$ O $any$ O $any[]$ O O O O O $number$ O O O O O O O $any[]$ O $number$ O O $void$ O O O O O O $void$ O O O O O $boolean$ O O O O O O $any$ O $any$ O $void$ O O $boolean$ O O O O $number$ O $any[]$ O $number$ O O O $number$ O O $any$ O $any[]$ O $any[]$ O O O O O O O $number$ O $number$ O O O O $any[]$ O O $any[]$ O $number$ O O $any$ O O O O O $number$ O O O O $number$ O $any[]$ O $number$ O O $any$ O O O $boolean$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O O $any[]$ O O $ArrayConstructor$ O $IArguments$ O $number$ O O O O O O $IArguments$ O $number$ O O O O O O O $number$ O O O $number$ O $IArguments$ O $number$ O $number$ O O O $any[]$ O $number$ O O O O $IArguments$ O $number$ O O O O $any[]$ O $number$ O O $any$ O $any$ O $any[]$ O O O O O $any[]$ O $number$ O O O O $boolean$ O O $any$ O $void$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $void$ O O O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O $void$ O O O O $any$ O $any$ O $void$ O $any$ O $any$ O $void$ O $any$ O $any$ O $void$ O $any$ O $any$ O $void$ O $any$ O $any$ O $void$ O $any$ O $any$ O $void$ O $any$ O $any$ O $void$ O $any$ O $any$ O O O $any$ O O O O $ErrorConstructor$ O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O $any$ O O O O $ErrorConstructor$ O O O O O O $any$ O $any$ O O O O O O O O O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O O O O O O $void$ O $any$ O $any$ O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $void$ O $any$ O $any$ O $any$ O O O O $any$ O $void$ O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $void$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O O O $TypeErrorConstructor$ O O O O O O O O O O O O O O O $void$ O O O $void$ O O O $void$ O O O $any$ O $void$ O O O $string$ O O O $string$ O O $string$ O $string$ O O O $string$ O $string$ O $complex$ O O O O O O $complex$ O O O O O O O O O $string$ O O O O O O O $string$ O O O $any$ O O $any$ O $any$ O O O $complex$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O $complex$ O $any$ O O O $complex$ O $any$ O O O O O O $complex$ O O $complex$ O O $any$ O $any$ O $any$ O $string$ O O O O $complex$ O O $any$ O $any$ O $any$ O $string$ O O O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O $complex$ O $any$ O O O O O O O O O O O $string$ O O O $any$ O O $any$ O $any$ O O O $any$ O $IArguments$ O $number$ O O O $IArguments$ O O O O $undefined$ O $IArguments$ O O O O O O O O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O O O $void$ O O O O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O O $any$ O O O O $string$ O O O O O O O O O O O O O O O $complex$ O O O $any$ O $any$ O $any$ O $string$ O O O O O $any$ O $any$ O $any$ O $string$ O O O O O $any$ O $any$ O $any$ O $string$ O O O O O $any$ O $any$ O $any$ O $string$ O O O O O $RegExp$ O O O $string$ O O O O O $RegExp$ O O $RegExpConstructor$ O O O $any$ O $string$ O O O O O $string$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O O O $any$ O $string[]$ O O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $complex$ O O $SymbolConstructor$ O O O O $SymbolConstructor$ O $symbol$ O O O O O $any$ O O O O $any$ O O O O O $any$ O O O $any$ O O $SymbolConstructor$ O O O $any$ O $any$ O $SymbolConstructor$ O $any$ O $SymbolConstructor$ O $Symbol$ O O O O $any$ O O O O O O $string$ O $void$ O O O O O O O O O O $void$ O O O O O O O $any$ O O O $complex$ O $any$ O $any$ O O O O $any$ O $void$ O O O O O $string$ O O $void$ O O O O O O O O O O O O $any[]$ O O O O $any$ O $Document$ O $Document$ O $any$ O $Document$ O $HTMLElement$ O $any$ O $string$ O O O $boolean$ O O $any$ O O O O O O $boolean$ O $Document$ O $DocumentReadyState$ O O O O O $boolean$ O $Document$ O O O $string$ O $any$ O O $void$ O O O $Document$ O O O $string$ O $any$ O O $boolean$ O O O O O $any$ O $any[]$ O $any$ O O O O $any$ O O O O O O O O O O $any$ O O $boolean$ O $number$ O $any$ O O O O $any[]$ O $number$ O $any$ O O O O O O O O O O O $any$ O $any$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O O O O ${}$ O ${}$ O ${}$ O O ${}$ O $any$ O O O ${}$ O O O O $ObjectConstructor$ O $complex$ O $any$ O O $void$ O O O $string$ O O O ${}$ O $any$ O $string$ O O O $any$ O $string$ O O O O O O ${}$ O O O O O O O
'js' ( function webpackUniversalModuleDefinition ( root , factory ) { if ( typeof exports === 's' && typeof module === 's' ) module . exports = factory ( ) ; else if ( typeof define === 's' && define . amd ) define ( [ ] , factory ) ; else if ( typeof exports === 's' ) exports [ "s" ] = factory ( ) ; else root [ "s" ] = factory ( ) ; } ) ( this , function ( ) { return ( function ( modules ) { var installedModules = { } ; function __webpack_require__ ( moduleId ) { if ( installedModules [ moduleId ] ) return installedModules [ moduleId ] . exports ; var module = installedModules [ moduleId ] = { exports : { } , id : moduleId , loaded : false } ; modules [ moduleId ] . call ( module . exports , module , module . exports , __webpack_require__ ) ; module . loaded = true ; return module . exports ; } __webpack_require__ . m = modules ; __webpack_require__ . c = installedModules ; __webpack_require__ . p = "s" ; return __webpack_require__ ( 0 ) ; } ) ( [ ( function ( module , exports , __webpack_require__ ) { var service = __webpack_require__ ( 0 ) ; exports . service = service ; var factories = __webpack_require__ ( 0 ) ; exports . factories = factories ; var models = __webpack_require__ ( 0 ) ; exports . models = models ; var 0 = __webpack_require__ ( 0 ) ; exports . Report = 0 . Report ; var 0 = __webpack_require__ ( 0 ) ; exports . Dashboard = 0 . Dashboard ; var 0 = __webpack_require__ ( 0 ) ; exports . Tile = 0 . Tile ; var 0 = __webpack_require__ ( 0 ) ; exports . Embed = 0 . Embed ; var 0 = __webpack_require__ ( 0 ) ; exports . Page = 0 . Page ; var 0 = __webpack_require__ ( 0 ) ; exports . Qna = 0 . Qna ; var 0 = __webpack_require__ ( 0 ) ; exports . Visual = 0 . Visual ; var 0 = __webpack_require__ ( 0 ) ; exports . VisualDescriptor = 0 . VisualDescriptor ; var powerbi = new service . Service ( factories . hpmFactory , factories . wpmpFactory , factories . routerFactory ) ; window . powerbi = powerbi ; } ) , ( function ( module , exports , __webpack_require__ ) { var embed = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var utils = __webpack_require__ ( 0 ) ; var Service = ( function ( ) { function Service ( hpmFactory , wpmpFactory , routerFactory , config ) { var _this = this ; if ( config === void 0 ) { config = { } ; } this . wpmp = wpmpFactory ( config . wpmpName , config . logMessages ) ; this . hpm = hpmFactory ( this . wpmp , null , config . version , config . type ) ; this . router = routerFactory ( this . wpmp ) ; this . uniqueSessionId = utils . generateUUID ( ) ; this . router . post ( "s" , function ( req , res ) { var event = { type : 's' , id : req . params . uniqueId , name : req . params . eventName , value : req . body } ; _this . handleEvent ( event ) ; } ) ; this . router . post ( "s" , function ( req , res ) { var event = { type : 's' , id : req . params . uniqueId , name : req . params . eventName , value : req . body } ; _this . handleEvent ( event ) ; } ) ; this . router . post ( "s" , function ( req , res ) { var event = { type : 's' , id : req . params . uniqueId , name : req . params . eventName , value : req . body } ; _this . handleEvent ( event ) ; } ) ; this . router . post ( "s" , function ( req , res ) { var event = { type : 's' , id : req . params . uniqueId , name : req . params . eventName , value : req . body } ; _this . handleEvent ( event ) ; } ) ; this . router . post ( "s" , function ( req , res ) { var event = { type : 's' , id : req . params . uniqueId , name : req . params . eventName , value : req . body } ; _this . handleEvent ( event ) ; } ) ; this . router . post ( "s" , function ( req , res ) { var event = { type : 's' , id : req . params . uniqueId , name : req . params . eventName , value : req . body } ; _this . handleEvent ( event ) ; } ) ; this . router . post ( "s" , function ( req , res ) { var event = { type : 's' , id : req . params . uniqueId , name : 's' , value : req . body } ; _this . handleEvent ( event ) ; } ) ; this . embeds = [ ] ; this . config = utils . assign ( { } , Service . defaultConfig , config ) ; if ( this . config . autoEmbedOnContentLoaded ) { this . enableAutoEmbed ( ) ; } } Service . prototype . createReport = function ( element , config ) { config . type = 's' ; var powerBiElement = element ; var component = new 0 . Create ( this , powerBiElement , config ) ; powerBiElement . powerBiEmbed = component ; this . addOrOverwriteEmbed ( component , element ) ; return component ; } ; Service . prototype . init = function ( container , config ) { var _this = this ; if ( config === void 0 ) { config = undefined ; } container = ( container && container instanceof HTMLElement ) ? container : document . body ; var elements = Array . prototype . slice . call ( container . querySelectorAll ( "s" + embed . Embed . embedUrlAttribute + "s" ) ) ; return elements . map ( function ( element ) { return _this . embed ( element , config ) ; } ) ; } ; Service . prototype . embed = function ( element , config ) { if ( config === void 0 ) { config = { } ; } return this . embedInternal ( element , config ) ; } ; Service . prototype . load = function ( element , config ) { if ( config === void 0 ) { config = { } ; } return this . embedInternal ( element , config , true , false ) ; } ; Service . prototype . bootstrap = function ( element , config ) { return this . embedInternal ( element , config , false , true ) ; } ; Service . prototype . embedInternal = function ( element , config , phasedRender , isBootstrap ) { if ( config === void 0 ) { config = { } ; } var component ; var powerBiElement = element ; if ( powerBiElement . powerBiEmbed ) { if ( isBootstrap ) { throw new Error ( "s" + element . outerHTML + "s" ) ; } component = this . embedExisting ( powerBiElement , config , phasedRender ) ; } else { component = this . embedNew ( powerBiElement , config , phasedRender , isBootstrap ) ; } return component ; } ; Service . prototype . getNumberOfComponents = function ( ) { if ( ! this . embeds ) { return 0 ; } return this . embeds . length ; } ; Service . prototype . getSdkSessionId = function ( ) { return this . uniqueSessionId ; } ; Service . prototype . embedNew = function ( element , config , phasedRender , isBootstrap ) { var componentType = config . type || element . getAttribute ( embed . Embed . typeAttribute ) ; if ( ! componentType ) { throw new Error ( "s" + JSON . stringify ( config ) + "s" + element . outerHTML + "s" + embed . Embed . typeAttribute + "s" + 0 . Report . type . toLowerCase ( ) + "s" ) ; } config . type = componentType ; var Component = utils . find ( function ( component ) { return componentType === component . type . toLowerCase ( ) ; } , Service . components ) ; if ( ! Component ) { throw new Error ( "s" + componentType + "s" ) ; } var component = new Component ( this , element , config , phasedRender , isBootstrap ) ; element . powerBiEmbed = component ; this . addOrOverwriteEmbed ( component , element ) ; return component ; } ; Service . prototype . embedExisting = function ( element , config , phasedRender ) { var component = utils . find ( function ( x ) { return x . element === element ; } , this . embeds ) ; if ( ! component ) { throw new Error ( "s" + JSON . stringify ( config ) + "s" + element . outerHTML + "s" ) ; } if ( config . type && config . type . toLowerCase ( ) === "s" ) { return this . embedNew ( element , config ) ; } if ( typeof config . type === "s" && config . type !== component . config . type ) { if ( config . type === "s" && component . config . type === "s" ) { var report = new 0 . Report ( this , element , config , false , false , element . powerBiEmbed . iframe ) ; report . load ( config ) ; element . powerBiEmbed = report ; this . addOrOverwriteEmbed ( component , element ) ; return report ; } throw new Error ( "s" + JSON . stringify ( config ) + "s" + element . outerHTML + "s" + this . config . type + "s" + config . type ) ; } component . populateConfig ( config , false ) ; component . load ( component . config , phasedRender ) ; return component ; } ; Service . prototype . enableAutoEmbed = function ( ) { var _this = this ; window . addEventListener ( 's' , function ( event ) { return _this . init ( document . body ) ; } , false ) ; } ; Service . prototype . get = function ( element ) { var powerBiElement = element ; if ( ! powerBiElement . powerBiEmbed ) { throw new Error ( "s" + element . outerHTML + "s" ) ; } return powerBiElement . powerBiEmbed ; } ; Service . prototype . find = function ( uniqueId ) { return utils . find ( function ( x ) { return x . config . uniqueId === uniqueId ; } , this . embeds ) ; } ; Service . prototype . addOrOverwriteEmbed = function ( component , element ) { this . embeds = this . embeds . filter ( function ( embed ) { return embed . element . id !== element . id ; } ) ; this . embeds . push ( component ) ; } ; Service . prototype . reset = function ( element ) { var powerBiElement = element ; if ( ! powerBiElement . powerBiEmbed ) { return ; } var embedElement = powerBiElement . powerBiEmbed ; if ( embedElement . frontLoadHandler ) { embedElement . element . removeEventListener ( 's' , embedElement . frontLoadHandler , false ) ; } utils . remove ( function ( x ) { return x === powerBiElement . powerBiEmbed ; } , this . embeds ) ; delete powerBiElement . powerBiEmbed ; var iframe = element . querySelector ( 's' ) ; if ( iframe ) { if ( iframe . remove !== undefined ) { iframe . remove ( ) ; } else { iframe . parentElement . removeChild ( iframe ) ; } } } ; Service . prototype . handleTileEvents = function ( event ) { if ( event . type === 's' ) { this . handleEvent ( event ) ; } } ; Service . prototype . handleEvent = function ( event ) { var embed = utils . find ( function ( embed ) { return ( embed . config . uniqueId === event . id ) ; } , this . embeds ) ; if ( embed ) { var value = event . value ; if ( event . name === 's' ) { var pageKey = 's' ; var page = value [ pageKey ] ; if ( ! page ) { throw new Error ( "s" + pageKey + "s" ) ; } value [ pageKey ] = new 0 . Page ( embed , page . name , page . displayName , true ) ; } utils . raiseCustomEvent ( embed . element , event . name , value ) ; } } ; Service . prototype . preload = function ( config , element ) { var iframeContent = document . createElement ( "s" ) ; iframeContent . setAttribute ( "s" , "s" ) ; iframeContent . setAttribute ( "s" , config . embedUrl ) ; iframeContent . setAttribute ( "s" , "s" ) ; iframeContent . setAttribute ( "s" , "s" ) ; var node = element ; if ( ! node ) { node = document . getElementsByTagName ( "s" ) [ 0 ] ; } node . appendChild ( iframeContent ) ; iframeContent . onload = function ( ) { utils . raiseCustomEvent ( iframeContent , "s" , { } ) ; } ; return iframeContent ; } ; Service . components = [ 0 . Tile , 0 . Report , 0 . Dashboard , 0 . Qna , 0 . Visual ] ; Service . defaultConfig = { autoEmbedOnContentLoaded : false , onError : function ( ) { var args = [ ] ; for ( var _i = 0 ; _i < arguments . length ; _i ++ ) { args [ _i - 0 ] = arguments [ _i ] ; } return console . log ( args [ 0 ] , args . slice ( 0 ) ) ; } } ; return Service ; } ( ) ) ; exports . Service = Service ; } ) , ( function ( module , exports , __webpack_require__ ) { var utils = __webpack_require__ ( 0 ) ; var sdkConfig = __webpack_require__ ( 0 ) ; var models = __webpack_require__ ( 0 ) ; var Embed = ( function ( ) { function Embed ( service , element , config , iframe , phasedRender , isBootstrap ) { this . allowedEvents = [ ] ; Array . prototype . push . apply ( this . allowedEvents , Embed . allowedEvents ) ; this . eventHandlers = [ ] ; this . service = service ; this . element = element ; this . iframe = iframe ; this . embeType = config . type . toLowerCase ( ) ; this . populateConfig ( config , isBootstrap ) ; if ( this . embeType === 's' ) { this . setIframe ( false , phasedRender , isBootstrap ) ; } else { this . setIframe ( true , phasedRender , isBootstrap ) ; } } Embed . prototype . createReport = function ( config ) { var errors = models . validateCreateReport ( config ) ; if ( errors ) { throw errors ; } return this . service . hpm . post ( "s" , config , { uid : this . config . uniqueId , sdkSessionId : this . service . getSdkSessionId ( ) } , this . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } , function ( response ) { throw response . body ; } ) ; } ; Embed . prototype . save = function ( ) { return this . service . hpm . post ( 's' , null , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } ) . catch ( function ( response ) { throw response . body ; } ) ; } ; Embed . prototype . saveAs = function ( saveAsParameters ) { return this . service . hpm . post ( 's' , saveAsParameters , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } ) . catch ( function ( response ) { throw response . body ; } ) ; } ; Embed . prototype . load = function ( config , phasedRender ) { var _this = this ; if ( ! config . accessToken ) { return ; } var path = phasedRender && config . type === 's' ? this . phasedLoadPath : this . loadPath ; var headers = { uid : this . config . uniqueId , sdkSessionId : this . service . getSdkSessionId ( ) , bootstrapped : this . config . bootstrapped , sdkVersion : sdkConfig . default . version } ; return this . service . hpm . post ( path , config , headers , this . iframe . contentWindow ) . then ( function ( response ) { utils . assign ( _this . config , config ) ; return response . body ; } , function ( response ) { throw response . body ; } ) ; } ; Embed . prototype . off = function ( eventName , handler ) { var _this = this ; var fakeEvent = { name : eventName , type : null , id : null , value : null } ; if ( handler ) { utils . remove ( function ( eventHandler ) { return eventHandler . test ( fakeEvent ) && ( eventHandler . handle === handler ) ; } , this . eventHandlers ) ; this . element . removeEventListener ( eventName , handler ) ; } else { var eventHandlersToRemove = this . eventHandlers . filter ( function ( eventHandler ) { return eventHandler . test ( fakeEvent ) ; } ) ; eventHandlersToRemove . forEach ( function ( eventHandlerToRemove ) { utils . remove ( function ( eventHandler ) { return eventHandler === eventHandlerToRemove ; } , _this . eventHandlers ) ; _this . element . removeEventListener ( eventName , eventHandlerToRemove . handle ) ; } ) ; } } ; Embed . prototype . on = function ( eventName , handler ) { if ( this . allowedEvents . indexOf ( eventName ) === - 0 ) { throw new Error ( "s" + this . allowedEvents + "s" + eventName ) ; } this . eventHandlers . push ( { test : function ( event ) { return event . name === eventName ; } , handle : handler } ) ; this . element . addEventListener ( eventName , handler ) ; } ; Embed . prototype . reload = function ( ) { return this . load ( this . config ) ; } ; Embed . prototype . setAccessToken = function ( accessToken ) { var _this = this ; var embedType = this . config . type ; embedType = ( embedType === 's' || embedType === 's' || embedType === 's' ) ? 's' : embedType ; return this . service . hpm . post ( 's' + embedType + 's' , accessToken , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( response ) { _this . config . accessToken = accessToken ; _this . element . setAttribute ( Embed . accessTokenAttribute , accessToken ) ; _this . service . accessToken = accessToken ; return response . body ; } ) . catch ( function ( response ) { throw response . body ; } ) ; } ; Embed . prototype . getAccessToken = function ( globalAccessToken ) { var accessToken = this . config . accessToken || this . element . getAttribute ( Embed . accessTokenAttribute ) || globalAccessToken ; if ( ! accessToken ) { throw new Error ( "s" + Embed . accessTokenAttribute + "s" ) ; } return accessToken ; } ; Embed . prototype . populateConfig = function ( config , isBootstrap ) { if ( this . bootstrapConfig ) { this . config = utils . assign ( { } , this . bootstrapConfig , config ) ; this . bootstrapConfig = null ; } else { this . config = utils . assign ( { } , config ) ; } this . config . embedUrl = this . getEmbedUrl ( isBootstrap ) ; this . config . groupId = this . getGroupId ( ) ; this . addLocaleToEmbedUrl ( config ) ; this . config . uniqueId = this . getUniqueId ( ) ; if ( isBootstrap ) { this . bootstrapConfig = this . config ; this . bootstrapConfig . bootstrapped = true ; } else { this . config . accessToken = this . getAccessToken ( this . service . accessToken ) ; } this . configChanged ( isBootstrap ) ; } ; Embed . prototype . addLocaleToEmbedUrl = function ( config ) { if ( ! config . settings ) { return ; } var localeSettings = config . settings . localeSettings ; if ( localeSettings && localeSettings . language ) { this . config . embedUrl = utils . addParamToUrl ( this . config . embedUrl , 's' , localeSettings . language ) ; } if ( localeSettings && localeSettings . formatLocale ) { this . config . embedUrl = utils . addParamToUrl ( this . config . embedUrl , 's' , localeSettings . formatLocale ) ; } } ; Embed . prototype . getEmbedUrl = function ( isBootstrap ) { var embedUrl = this . config . embedUrl || this . element . getAttribute ( Embed . embedUrlAttribute ) ; if ( isBootstrap && ! embedUrl ) { embedUrl = this . getDefaultEmbedUrl ( this . config . hostname ) ; } if ( typeof embedUrl !== 's' || embedUrl . length === 0 ) { throw new Error ( "s" + Embed . embedUrlAttribute + "s" ) ; } return embedUrl ; } ; Embed . prototype . getDefaultEmbedUrl = function ( hostname ) { if ( ! hostname ) { hostname = Embed . defaultEmbedHostName ; } var endpoint = this . getDefaultEmbedUrlEndpoint ( ) ; hostname = hostname . toLowerCase ( ) . trim ( ) ; if ( hostname . indexOf ( "s" ) === 0 ) { throw new Error ( "s" ) ; } if ( hostname . indexOf ( "s" ) === 0 ) { return hostname + "s" + endpoint ; } return "s" + hostname + "s" + endpoint ; } ; Embed . prototype . getUniqueId = function ( ) { return this . config . uniqueId || this . element . getAttribute ( Embed . nameAttribute ) || utils . createRandomString ( ) ; } ; Embed . prototype . getGroupId = function ( ) { return this . config . groupId || Embed . findGroupIdFromEmbedUrl ( this . config . embedUrl ) ; } ; Embed . prototype . fullscreen = function ( ) { var requestFullScreen = this . iframe . requestFullscreen || this . iframe . msRequestFullscreen || this . iframe . mozRequestFullScreen || this . iframe . webkitRequestFullscreen ; requestFullScreen . call ( this . iframe ) ; } ; Embed . prototype . exitFullscreen = function ( ) { if ( ! this . isFullscreen ( this . iframe ) ) { return ; } var exitFullscreen = document . exitFullscreen || document . mozCancelFullScreen || document . webkitExitFullscreen || document . msExitFullscreen ; exitFullscreen . call ( document ) ; } ; Embed . prototype . isFullscreen = function ( iframe ) { var options = [ 's' , 's' , 's' , 's' ] ; return options . some ( function ( option ) { return document [ option ] === iframe ; } ) ; } ; Embed . prototype . setIframe = function ( isLoad , phasedRender , isBootstrap ) { var _this = this ; if ( ! this . iframe ) { var iframeContent = document . createElement ( "s" ) ; var embedUrl = this . config . uniqueId ? utils . addParamToUrl ( this . config . embedUrl , 's' , this . config . uniqueId ) : this . config . embedUrl ; iframeContent . style . width = 's' ; iframeContent . style . height = 's' ; iframeContent . setAttribute ( "s" , embedUrl ) ; iframeContent . setAttribute ( "s" , "s" ) ; iframeContent . setAttribute ( "s" , "s" ) ; var node = this . element ; while ( node . firstChild ) { node . removeChild ( node . firstChild ) ; } node . appendChild ( iframeContent ) ; this . iframe = node . firstChild ; } if ( isLoad ) { if ( ! isBootstrap ) { var errors = this . validate ( this . config ) ; if ( errors ) { throw errors ; } } this . iframe . addEventListener ( 's' , function ( ) { return _this . load ( _this . config , phasedRender ) ; } , false ) ; if ( this . service . getNumberOfComponents ( ) <= Embed . maxFrontLoadTimes ) { this . frontLoadHandler = function ( ) { return _this . frontLoadSendConfig ( _this . config ) ; } ; this . element . addEventListener ( 's' , this . frontLoadHandler , false ) ; } } else { this . iframe . addEventListener ( 's' , function ( ) { return _this . createReport ( _this . createConfig ) ; } , false ) ; } } ; Embed . prototype . setComponentTitle = function ( title ) { if ( ! this . iframe ) { return ; } if ( title == null ) { this . iframe . removeAttribute ( "s" ) ; } else { this . iframe . setAttribute ( "s" , title ) ; } } ; Embed . prototype . setComponentTabIndex = function ( tabIndex ) { if ( ! this . element ) { return ; } this . element . setAttribute ( "s" , ( tabIndex == null ) ? "s" : tabIndex . toString ( ) ) ; } ; Embed . prototype . removeComponentTabIndex = function ( tabIndex ) { if ( ! this . element ) { return ; } this . element . removeAttribute ( "s" ) ; } ; Embed . findGroupIdFromEmbedUrl = function ( url ) { var groupIdRegEx = "s" ; var groupIdMatch = url . match ( groupIdRegEx ) ; var groupId ; if ( groupIdMatch ) { groupId = groupIdMatch [ 0 ] ; } return groupId ; } ; Embed . prototype . frontLoadSendConfig = function ( config ) { if ( ! config . accessToken ) { return ; } var errors = this . validate ( config ) ; if ( errors ) { throw errors ; } if ( this . iframe . contentWindow == null ) return ; return this . service . hpm . post ( "s" , config , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } , function ( response ) { throw response . body ; } ) ; } ; Embed . allowedEvents = [ "s" , "s" , "s" , "s" , "s" , "s" , "s" ] ; Embed . accessTokenAttribute = 's' ; Embed . embedUrlAttribute = 's' ; Embed . nameAttribute = 's' ; Embed . typeAttribute = 's' ; Embed . defaultEmbedHostName = "s" ; Embed . maxFrontLoadTimes = 0 ; return Embed ; } ( ) ) ; exports . Embed = Embed ; } ) , ( function ( module , exports ) { function raiseCustomEvent ( element , eventName , eventData ) { var customEvent ; if ( typeof CustomEvent === 's' ) { customEvent = new CustomEvent ( eventName , { detail : eventData , bubbles : true , cancelable : true } ) ; } else { customEvent = document . createEvent ( 's' ) ; customEvent . initCustomEvent ( eventName , true , true , eventData ) ; } element . dispatchEvent ( customEvent ) ; } exports . raiseCustomEvent = raiseCustomEvent ; function findIndex ( predicate , xs ) { if ( ! Array . isArray ( xs ) ) { throw new Error ( "s" + xs ) ; } var index ; xs . some ( function ( x , i ) { if ( predicate ( x ) ) { index = i ; return true ; } } ) ; return index ; } exports . findIndex = findIndex ; function find ( predicate , xs ) { var index = findIndex ( predicate , xs ) ; return xs [ index ] ; } exports . find = find ; function remove ( predicate , xs ) { var index = findIndex ( predicate , xs ) ; xs . splice ( index , 0 ) ; } exports . remove = remove ; function assign ( ) { var args = [ ] ; for ( var _i = 0 ; _i < arguments . length ; _i ++ ) { args [ _i - 0 ] = arguments [ _i ] ; } var target = args [ 0 ] ; 's' ; if ( target === undefined || target === null ) { throw new TypeError ( 's' ) ; } var output = Object ( target ) ; for ( var index = 0 ; index < arguments . length ; index ++ ) { var source = arguments [ index ] ; if ( source !== undefined && source !== null ) { for ( var nextKey in source ) { if ( source . hasOwnProperty ( nextKey ) ) { output [ nextKey ] = source [ nextKey ] ; } } } } return output ; } exports . assign = assign ; function createRandomString ( ) { return ( Math . random ( ) + 0 ) . toString ( 0 ) . substring ( 0 ) ; } exports . createRandomString = createRandomString ; function generateUUID ( ) { var d = new Date ( ) . getTime ( ) ; if ( typeof performance !== 's' && typeof performance . now === 's' ) { d += performance . now ( ) ; } return 's' . replace ( "s" , function ( c ) { var r = ( d + Math . random ( ) * 0 ) & 0 | 0 ; d >>= 0 ; return r . toString ( 0 ) ; } ) ; } exports . generateUUID = generateUUID ; function addParamToUrl ( url , paramName , value ) { var parameterPrefix = url . indexOf ( 's' ) > 0 ? 's' : 's' ; url += parameterPrefix + paramName + 's' + value ; return url ; } exports . addParamToUrl = addParamToUrl ; function isSavedInternal ( hpm , uid , contentWindow ) { return hpm . get ( 's' , { uid : uid } , contentWindow ) . then ( function ( response ) { return ! response . body ; } , function ( response ) { throw response . body ; } ) ; } exports . isSavedInternal = isSavedInternal ; function isRDLEmbed ( embedUrl ) { return embedUrl . toLowerCase ( ) . indexOf ( "s" ) >= 0 ; } exports . isRDLEmbed = isRDLEmbed ; } ) , ( function ( module , exports ) { var config = { version : 's' , type : 's' } ; Object . defineProperty ( exports , "s" , { value : true } ) ; exports . default = config ; } ) , ( function ( module , exports , __webpack_require__ ) { ( function webpackUniversalModuleDefinition ( root , factory ) { if ( true ) module . exports = factory ( ) ; else if ( typeof define === 's' && define . amd ) define ( [ ] , factory ) ; else if ( typeof exports === 's' ) exports [ "s" ] = factory ( ) ; else root [ "s" ] = factory ( ) ; } ) ( this , function ( ) { return ( function ( modules ) { var installedModules = { } ; function __webpack_require__ ( moduleId ) { if ( installedModules [ moduleId ] ) return installedModules [ moduleId ] . exports ; var module = installedModules [ moduleId ] = { exports : { } , id : moduleId , loaded : false } ; modules [ moduleId ] . call ( module . exports , module , module . exports , __webpack_require__ ) ; module . loaded = true ; return module . exports ; } __webpack_require__ . m = modules ; __webpack_require__ . c = installedModules ; __webpack_require__ . p = "s" ; return __webpack_require__ ( 0 ) ; } ) ( [ ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; exports . Validators = __webpack_require__ ( 0 ) . Validators ; var TraceType ; ( function ( TraceType ) { TraceType [ TraceType [ "s" ] = 0 ] = "s" ; TraceType [ TraceType [ "s" ] = 0 ] = "s" ; TraceType [ TraceType [ "s" ] = 0 ] = "s" ; TraceType [ TraceType [ "s" ] = 0 ] = "s" ; TraceType [ TraceType [ "s" ] = 0 ] = "s" ; TraceType [ TraceType [ "s" ] = 0 ] = "s" ; TraceType [ TraceType [ "s" ] = 0 ] = "s" ; } ) ( TraceType = exports . TraceType || ( exports . TraceType = { } ) ) ; var PageSizeType ; ( function ( PageSizeType ) { PageSizeType [ PageSizeType [ "s" ] = 0 ] = "s" ; PageSizeType [ PageSizeType [ "s" ] = 0 ] = "s" ; PageSizeType [ PageSizeType [ "s" ] = 0 ] = "s" ; PageSizeType [ PageSizeType [ "s" ] = 0 ] = "s" ; PageSizeType [ PageSizeType [ "s" ] = 0 ] = "s" ; } ) ( PageSizeType = exports . PageSizeType || ( exports . PageSizeType = { } ) ) ; var DisplayOption ; ( function ( DisplayOption ) { DisplayOption [ DisplayOption [ "s" ] = 0 ] = "s" ; DisplayOption [ DisplayOption [ "s" ] = 0 ] = "s" ; DisplayOption [ DisplayOption [ "s" ] = 0 ] = "s" ; } ) ( DisplayOption = exports . DisplayOption || ( exports . DisplayOption = { } ) ) ; var BackgroundType ; ( function ( BackgroundType ) { BackgroundType [ BackgroundType [ "s" ] = 0 ] = "s" ; BackgroundType [ BackgroundType [ "s" ] = 0 ] = "s" ; } ) ( BackgroundType = exports . BackgroundType || ( exports . BackgroundType = { } ) ) ; var VisualContainerDisplayMode ; ( function ( VisualContainerDisplayMode ) { VisualContainerDisplayMode [ VisualContainerDisplayMode [ "s" ] = 0 ] = "s" ; VisualContainerDisplayMode [ VisualContainerDisplayMode [ "s" ] = 0 ] = "s" ; } ) ( VisualContainerDisplayMode = exports . VisualContainerDisplayMode || ( exports . VisualContainerDisplayMode = { } ) ) ; var LayoutType ; ( function ( LayoutType ) { LayoutType [ LayoutType [ "s" ] = 0 ] = "s" ; LayoutType [ LayoutType [ "s" ] = 0 ] = "s" ; LayoutType [ LayoutType [ "s" ] = 0 ] = "s" ; LayoutType [ LayoutType [ "s" ] = 0 ] = "s" ; } ) ( LayoutType = exports . LayoutType || ( exports . LayoutType = { } ) ) ; var SectionVisibility ; ( function ( SectionVisibility ) { SectionVisibility [ SectionVisibility [ "s" ] = 0 ] = "s" ; SectionVisibility [ SectionVisibility [ "s" ] = 0 ] = "s" ; } ) ( SectionVisibility = exports . SectionVisibility || ( exports . SectionVisibility = { } ) ) ; var Permissions ; ( function ( Permissions ) { Permissions [ Permissions [ "s" ] = 0 ] = "s" ; Permissions [ Permissions [ "s" ] = 0 ] = "s" ; Permissions [ Permissions [ "s" ] = 0 ] = "s" ; Permissions [ Permissions [ "s" ] = 0 ] = "s" ; Permissions [ Permissions [ "s" ] = 0 ] = "s" ; } ) ( Permissions = exports . Permissions || ( exports . Permissions = { } ) ) ; var ViewMode ; ( function ( ViewMode ) { ViewMode [ ViewMode [ "s" ] = 0 ] = "s" ; ViewMode [ ViewMode [ "s" ] = 0 ] = "s" ; } ) ( ViewMode = exports . ViewMode || ( exports . ViewMode = { } ) ) ; var TokenType ; ( function ( TokenType ) { TokenType [ TokenType [ "s" ] = 0 ] = "s" ; TokenType [ TokenType [ "s" ] = 0 ] = "s" ; } ) ( TokenType = exports . TokenType || ( exports . TokenType = { } ) ) ; var MenuLocation ; ( function ( MenuLocation ) { MenuLocation [ MenuLocation [ "s" ] = 0 ] = "s" ; MenuLocation [ MenuLocation [ "s" ] = 0 ] = "s" ; } ) ( MenuLocation = exports . MenuLocation || ( exports . MenuLocation = { } ) ) ; var FiltersLevel ; ( function ( FiltersLevel ) { FiltersLevel [ FiltersLevel [ "s" ] = 0 ] = "s" ; FiltersLevel [ FiltersLevel [ "s" ] = 0 ] = "s" ; FiltersLevel [ FiltersLevel [ "s" ] = 0 ] = "s" ; } ) ( FiltersLevel = exports . FiltersLevel || ( exports . FiltersLevel = { } ) ) ; var FilterType ; ( function ( FilterType ) { FilterType [ FilterType [ "s" ] = 0 ] = "s" ; FilterType [ FilterType [ "s" ] = 0 ] = "s" ; FilterType [ FilterType [ "s" ] = 0 ] = "s" ; FilterType [ FilterType [ "s" ] = 0 ] = "s" ; FilterType [ FilterType [ "s" ] = 0 ] = "s" ; FilterType [ FilterType [ "s" ] = 0 ] = "s" ; FilterType [ FilterType [ "s" ] = 0 ] = "s" ; } ) ( FilterType = exports . FilterType || ( exports . FilterType = { } ) ) ; var RelativeDateFilterTimeUnit ; ( function ( RelativeDateFilterTimeUnit ) { RelativeDateFilterTimeUnit [ RelativeDateFilterTimeUnit [ "s" ] = 0 ] = "s" ; RelativeDateFilterTimeUnit [ RelativeDateFilterTimeUnit [ "s" ] = 0 ] = "s" ; RelativeDateFilterTimeUnit [ RelativeDateFilterTimeUnit [ "s" ] = 0 ] = "s" ; RelativeDateFilterTimeUnit [ RelativeDateFilterTimeUnit [ "s" ] = 0 ] = "s" ; RelativeDateFilterTimeUnit [ RelativeDateFilterTimeUnit [ "s" ] = 0 ] = "s" ; RelativeDateFilterTimeUnit [ RelativeDateFilterTimeUnit [ "s" ] = 0 ] = "s" ; RelativeDateFilterTimeUnit [ RelativeDateFilterTimeUnit [ "s" ] = 0 ] = "s" ; } ) ( RelativeDateFilterTimeUnit = exports . RelativeDateFilterTimeUnit || ( exports . RelativeDateFilterTimeUnit = { } ) ) ; var RelativeDateOperators ; ( function ( RelativeDateOperators ) { RelativeDateOperators [ RelativeDateOperators [ "s" ] = 0 ] = "s" ; RelativeDateOperators [ RelativeDateOperators [ "s" ] = 0 ] = "s" ; RelativeDateOperators [ RelativeDateOperators [ "s" ] = 0 ] = "s" ; } ) ( RelativeDateOperators = exports . RelativeDateOperators || ( exports . RelativeDateOperators = { } ) ) ; var Filter = ( function ( ) { function Filter ( target , filterType ) { this . target = target ; this . filterType = filterType ; } Filter . prototype . toJSON = function ( ) { var filter = { $schema : this . schemaUrl , target : this . target , filterType : this . filterType } ; if ( this . displaySettings !== undefined ) { filter . displaySettings = this . displaySettings ; } return filter ; } ; ; return Filter ; } ( ) ) ; exports . Filter = Filter ; var NotSupportedFilter = ( function ( _super ) { __extends ( NotSupportedFilter , _super ) ; function NotSupportedFilter ( target , message , notSupportedTypeName ) { var _this = _super . call ( this , target , FilterType . Unknown ) || this ; _this . message = message ; _this . notSupportedTypeName = notSupportedTypeName ; _this . schemaUrl = NotSupportedFilter . schemaUrl ; return _this ; } NotSupportedFilter . prototype . toJSON = function ( ) { var filter = _super . prototype . toJSON . call ( this ) ; filter . message = this . message ; filter . notSupportedTypeName = this . notSupportedTypeName ; return filter ; } ; NotSupportedFilter . schemaUrl = "s" ; return NotSupportedFilter ; } ( Filter ) ) ; exports . NotSupportedFilter = NotSupportedFilter ; var IncludeExcludeFilter = ( function ( _super ) { __extends ( IncludeExcludeFilter , _super ) ; function IncludeExcludeFilter ( target , isExclude , values ) { var _this = _super . call ( this , target , FilterType . IncludeExclude ) || this ; _this . values = values ; _this . isExclude = isExclude ; _this . schemaUrl = IncludeExcludeFilter . schemaUrl ; return _this ; } IncludeExcludeFilter . prototype . toJSON = function ( ) { var filter = _super . prototype . toJSON . call ( this ) ; filter . isExclude = this . isExclude ; filter . values = this . values ; return filter ; } ; IncludeExcludeFilter . schemaUrl = "s" ; return IncludeExcludeFilter ; } ( Filter ) ) ; exports . IncludeExcludeFilter = IncludeExcludeFilter ; var TopNFilter = ( function ( _super ) { __extends ( TopNFilter , _super ) ; function TopNFilter ( target , operator , itemCount , orderBy ) { var _this = _super . call ( this , target , FilterType . TopN ) || this ; _this . operator = operator ; _this . itemCount = itemCount ; _this . schemaUrl = TopNFilter . schemaUrl ; _this . orderBy = orderBy ; return _this ; } TopNFilter . prototype . toJSON = function ( ) { var filter = _super . prototype . toJSON . call ( this ) ; filter . operator = this . operator ; filter . itemCount = this . itemCount ; filter . orderBy = this . orderBy ; return filter ; } ; TopNFilter . schemaUrl = "s" ; return TopNFilter ; } ( Filter ) ) ; exports . TopNFilter = TopNFilter ; var RelativeDateFilter = ( function ( _super ) { __extends ( RelativeDateFilter , _super ) ; function RelativeDateFilter ( target , operator , timeUnitsCount , timeUnitType , includeToday ) { var _this = _super . call ( this , target , FilterType . RelativeDate ) || this ; _this . operator = operator ; _this . timeUnitsCount = timeUnitsCount ; _this . timeUnitType = timeUnitType ; _this . includeToday = includeToday ; _this . schemaUrl = RelativeDateFilter . schemaUrl ; return _this ; } RelativeDateFilter . prototype . toJSON = function ( ) { var filter = _super . prototype . toJSON . call ( this ) ; filter . operator = this . operator ; filter . timeUnitsCount = this . timeUnitsCount ; filter . timeUnitType = this . timeUnitType ; filter . includeToday = this . includeToday ; return filter ; } ; RelativeDateFilter . schemaUrl = "s" ; return RelativeDateFilter ; } ( Filter ) ) ; exports . RelativeDateFilter = RelativeDateFilter ; var BasicFilter = ( function ( _super ) { __extends ( BasicFilter , _super ) ; function BasicFilter ( target , operator ) { var values = [ ] ; for ( var _i = 0 ; _i < arguments . length ; _i ++ ) { values [ _i - 0 ] = arguments [ _i ] ; } var _this = _super . call ( this , target , FilterType . Basic ) || this ; _this . operator = operator ; _this . schemaUrl = BasicFilter . schemaUrl ; if ( values . length === 0 && operator !== "s" ) { throw new Error ( "s" ) ; } if ( Array . isArray ( values [ 0 ] ) ) { _this . values = values [ 0 ] ; } else { _this . values = values ; } return _this ; } BasicFilter . prototype . toJSON = function ( ) { var filter = _super . prototype . toJSON . call ( this ) ; filter . operator = this . operator ; filter . values = this . values ; return filter ; } ; BasicFilter . schemaUrl = "s" ; return BasicFilter ; } ( Filter ) ) ; exports . BasicFilter = BasicFilter ; var BasicFilterWithKeys = ( function ( _super ) { __extends ( BasicFilterWithKeys , _super ) ; function BasicFilterWithKeys ( target , operator , values , keyValues ) { var _this = _super . call ( this , target , operator , values ) || this ; _this . keyValues = keyValues ; _this . target = target ; var numberOfKeys = target . keys ? target . keys . length : 0 ; if ( numberOfKeys > 0 && ! keyValues ) { throw new Error ( "s" + numberOfKeys + "s" ) ; } if ( numberOfKeys === 0 && keyValues && keyValues . length > 0 ) { throw new Error ( "s" ) ; } for ( var i = 0 ; i < _this . keyValues . length ; i ++ ) { if ( _this . keyValues [ i ] ) { var lengthOfArray = _this . keyValues [ i ] . length ; if ( lengthOfArray !== numberOfKeys ) { throw new Error ( "s" + lengthOfArray + "s" + numberOfKeys + "s" ) ; } } } return _this ; } BasicFilterWithKeys . prototype . toJSON = function ( ) { var filter = _super . prototype . toJSON . call ( this ) ; filter . keyValues = this . keyValues ; return filter ; } ; return BasicFilterWithKeys ; } ( BasicFilter ) ) ; exports . BasicFilterWithKeys = BasicFilterWithKeys ; var TupleFilter = ( function ( _super ) { __extends ( TupleFilter , _super ) ; function TupleFilter ( target , operator , values ) { var _this = _super . call ( this , target , FilterType . Tuple ) || this ; _this . operator = operator ; _this . schemaUrl = TupleFilter . schemaUrl ; _this . values = values ; return _this ; } TupleFilter . prototype . toJSON = function ( ) { var filter = _super . prototype . toJSON . call ( this ) ; filter . operator = this . operator ; filter . values = this . values ; filter . target = this . target ; return filter ; } ; TupleFilter . schemaUrl = "s" ; return TupleFilter ; } ( Filter ) ) ; exports . TupleFilter = TupleFilter ; var AdvancedFilter = ( function ( _super ) { __extends ( AdvancedFilter , _super ) ; function AdvancedFilter ( target , logicalOperator ) { var conditions = [ ] ; for ( var _i = 0 ; _i < arguments . length ; _i ++ ) { conditions [ _i - 0 ] = arguments [ _i ] ; } var _this = _super . call ( this , target , FilterType . Advanced ) || this ; _this . schemaUrl = AdvancedFilter . schemaUrl ; if ( typeof logicalOperator !== "s" || logicalOperator . length === 0 ) { throw new Error ( "s" + logicalOperator ) ; } _this . logicalOperator = logicalOperator ; var extractedConditions ; if ( Array . isArray ( conditions [ 0 ] ) ) { extractedConditions = conditions [ 0 ] ; } else { extractedConditions = conditions ; } if ( extractedConditions . length === 0 ) { throw new Error ( "s" + conditions ) ; } if ( extractedConditions . length > 0 ) { throw new Error ( "s" + conditions . length ) ; } if ( extractedConditions . length === 0 && logicalOperator !== "s" ) { throw new Error ( "s" ) ; } _this . conditions = extractedConditions ; return _this ; } AdvancedFilter . prototype . toJSON = function ( ) { var filter = _super . prototype . toJSON . call ( this ) ; filter . logicalOperator = this . logicalOperator ; filter . conditions = this . conditions ; return filter ; } ; AdvancedFilter . schemaUrl = "s" ; return AdvancedFilter ; } ( Filter ) ) ; exports . AdvancedFilter = AdvancedFilter ; function isFilterKeyColumnsTarget ( target ) { return isColumn ( target ) && ! ! target . keys ; } exports . isFilterKeyColumnsTarget = isFilterKeyColumnsTarget ; function isBasicFilterWithKeys ( filter ) { return getFilterType ( filter ) === FilterType . Basic && ! ! filter . keyValues ; } exports . isBasicFilterWithKeys = isBasicFilterWithKeys ; function getFilterType ( filter ) { if ( filter . filterType ) { return filter . filterType ; } var basicFilter = filter ; var advancedFilter = filter ; if ( ( typeof basicFilter . operator === "s" ) && ( Array . isArray ( basicFilter . values ) ) ) { return FilterType . Basic ; } else if ( ( typeof advancedFilter . logicalOperator === "s" ) && ( Array . isArray ( advancedFilter . conditions ) ) ) { return FilterType . Advanced ; } else { return FilterType . Unknown ; } } exports . getFilterType = getFilterType ; function isMeasure ( arg ) { return arg . table !== undefined && arg . measure !== undefined ; } exports . isMeasure = isMeasure ; function isColumn ( arg ) { return ! ! ( arg . table && arg . column && ! arg . aggregationFunction ) ; } exports . isColumn = isColumn ; function isHierarchyLevel ( arg ) { return ! ! ( arg . table && arg . hierarchy && arg . hierarchyLevel && ! arg . aggregationFunction ) ; } exports . isHierarchyLevel = isHierarchyLevel ; function isHierarchyLevelAggr ( arg ) { return ! ! ( arg . table && arg . hierarchy && arg . hierarchyLevel && arg . aggregationFunction ) ; } exports . isHierarchyLevelAggr = isHierarchyLevelAggr ; function isColumnAggr ( arg ) { return ! ! ( arg . table && arg . column && arg . aggregationFunction ) ; } exports . isColumnAggr = isColumnAggr ; var QnaMode ; ( function ( QnaMode ) { QnaMode [ QnaMode [ "s" ] = 0 ] = "s" ; QnaMode [ QnaMode [ "s" ] = 0 ] = "s" ; } ) ( QnaMode = exports . QnaMode || ( exports . QnaMode = { } ) ) ; var ExportDataType ; ( function ( ExportDataType ) { ExportDataType [ ExportDataType [ "s" ] = 0 ] = "s" ; ExportDataType [ ExportDataType [ "s" ] = 0 ] = "s" ; } ) ( ExportDataType = exports . ExportDataType || ( exports . ExportDataType = { } ) ) ; var BookmarksPlayMode ; ( function ( BookmarksPlayMode ) { BookmarksPlayMode [ BookmarksPlayMode [ "s" ] = 0 ] = "s" ; BookmarksPlayMode [ BookmarksPlayMode [ "s" ] = 0 ] = "s" ; } ) ( BookmarksPlayMode = exports . BookmarksPlayMode || ( exports . BookmarksPlayMode = { } ) ) ; exports . CommonErrorCodes = { TokenExpired : 's' , NotFound : 's' , InvalidParameters : 's' , LoadReportFailed : 's' , NotAuthorized : 's' , FailedToLoadModel : 's' , } ; exports . TextAlignment = { Left : 's' , Center : 's' , Right : 's' , } ; exports . LegendPosition = { Top : 's' , Bottom : 's' , Right : 's' , Left : 's' , TopCenter : 's' , BottomCenter : 's' , RightCenter : 's' , LeftCenter : 's' , } ; var SortDirection ; ( function ( SortDirection ) { SortDirection [ SortDirection [ "s" ] = 0 ] = "s" ; SortDirection [ SortDirection [ "s" ] = 0 ] = "s" ; } ) ( SortDirection = exports . SortDirection || ( exports . SortDirection = { } ) ) ; var Selector = ( function ( ) { function Selector ( schema ) { this . $schema = schema ; } Selector . prototype . toJSON = function ( ) { return { $schema : this . $schema } ; } ; ; return Selector ; } ( ) ) ; exports . Selector = Selector ; var PageSelector = ( function ( _super ) { __extends ( PageSelector , _super ) ; function PageSelector ( pageName ) { var _this = _super . call ( this , PageSelector . schemaUrl ) || this ; _this . pageName = pageName ; return _this ; } PageSelector . prototype . toJSON = function ( ) { var selector = _super . prototype . toJSON . call ( this ) ; selector . pageName = this . pageName ; return selector ; } ; PageSelector . schemaUrl = "s" ; return PageSelector ; } ( Selector ) ) ; exports . PageSelector = PageSelector ; var VisualSelector = ( function ( _super ) { __extends ( VisualSelector , _super ) ; function VisualSelector ( visualName ) { var _this = _super . call ( this , VisualSelector . schemaUrl ) || this ; _this . visualName = visualName ; return _this ; } VisualSelector . prototype . toJSON = function ( ) { var selector = _super . prototype . toJSON . call ( this ) ; selector . visualName = this . visualName ; return selector ; } ; VisualSelector . schemaUrl = "s" ; return VisualSelector ; } ( Selector ) ) ; exports . VisualSelector = VisualSelector ; var VisualTypeSelector = ( function ( _super ) { __extends ( VisualTypeSelector , _super ) ; function VisualTypeSelector ( visualType ) { var _this = _super . call ( this , VisualSelector . schemaUrl ) || this ; _this . visualType = visualType ; return _this ; } VisualTypeSelector . prototype . toJSON = function ( ) { var selector = _super . prototype . toJSON . call ( this ) ; selector . visualType = this . visualType ; return selector ; } ; VisualTypeSelector . schemaUrl = "s" ; return VisualTypeSelector ; } ( Selector ) ) ; exports . VisualTypeSelector = VisualTypeSelector ; var SlicerTargetSelector = ( function ( _super ) { __extends ( SlicerTargetSelector , _super ) ; function SlicerTargetSelector ( target ) { var _this = _super . call ( this , VisualSelector . schemaUrl ) || this ; _this . target = target ; return _this ; } SlicerTargetSelector . prototype . toJSON = function ( ) { var selector = _super . prototype . toJSON . call ( this ) ; selector . target = this . target ; return selector ; } ; SlicerTargetSelector . schemaUrl = "s" ; return SlicerTargetSelector ; } ( Selector ) ) ; exports . SlicerTargetSelector = SlicerTargetSelector ; var CommandDisplayOption ; ( function ( CommandDisplayOption ) { CommandDisplayOption [ CommandDisplayOption [ "s" ] = 0 ] = "s" ; CommandDisplayOption [ CommandDisplayOption [ "s" ] = 0 ] = "s" ; CommandDisplayOption [ CommandDisplayOption [ "s" ] = 0 ] = "s" ; } ) ( CommandDisplayOption = exports . CommandDisplayOption || ( exports . CommandDisplayOption = { } ) ) ; var VisualDataRoleKind ; ( function ( VisualDataRoleKind ) { VisualDataRoleKind [ VisualDataRoleKind [ "s" ] = 0 ] = "s" ; VisualDataRoleKind [ VisualDataRoleKind [ "s" ] = 0 ] = "s" ; VisualDataRoleKind [ VisualDataRoleKind [ "s" ] = 0 ] = "s" ; } ) ( VisualDataRoleKind = exports . VisualDataRoleKind || ( exports . VisualDataRoleKind = { } ) ) ; var VisualDataRoleKindPreference ; ( function ( VisualDataRoleKindPreference ) { VisualDataRoleKindPreference [ VisualDataRoleKindPreference [ "s" ] = 0 ] = "s" ; VisualDataRoleKindPreference [ VisualDataRoleKindPreference [ "s" ] = 0 ] = "s" ; } ) ( VisualDataRoleKindPreference = exports . VisualDataRoleKindPreference || ( exports . VisualDataRoleKindPreference = { } ) ) ; function normalizeError ( error ) { var message = error . message ; if ( ! message ) { message = error . path + "s" + error . keyword + "s" ; } return { message : message } ; } function validateVisualSelector ( input ) { var errors = exports . Validators . visualSelectorValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateVisualSelector = validateVisualSelector ; function validateSlicer ( input ) { var errors = exports . Validators . slicerValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateSlicer = validateSlicer ; function validateSlicerState ( input ) { var errors = exports . Validators . slicerStateValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateSlicerState = validateSlicerState ; function validatePlayBookmarkRequest ( input ) { var errors = exports . Validators . playBookmarkRequestValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validatePlayBookmarkRequest = validatePlayBookmarkRequest ; function validateAddBookmarkRequest ( input ) { var errors = exports . Validators . addBookmarkRequestValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateAddBookmarkRequest = validateAddBookmarkRequest ; function validateApplyBookmarkByNameRequest ( input ) { var errors = exports . Validators . applyBookmarkByNameRequestValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateApplyBookmarkByNameRequest = validateApplyBookmarkByNameRequest ; function validateApplyBookmarkStateRequest ( input ) { var errors = exports . Validators . applyBookmarkStateRequestValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateApplyBookmarkStateRequest = validateApplyBookmarkStateRequest ; function validateSettings ( input ) { var errors = exports . Validators . settingsValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateSettings = validateSettings ; function validateCustomPageSize ( input ) { var errors = exports . Validators . customPageSizeValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateCustomPageSize = validateCustomPageSize ; function validateExtension ( input ) { var errors = exports . Validators . extensionValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateExtension = validateExtension ; function validateReportLoad ( input ) { var errors = exports . Validators . reportLoadValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateReportLoad = validateReportLoad ; function validateCreateReport ( input ) { var errors = exports . Validators . reportCreateValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateCreateReport = validateCreateReport ; function validateDashboardLoad ( input ) { var errors = exports . Validators . dashboardLoadValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateDashboardLoad = validateDashboardLoad ; function validateTileLoad ( input ) { var errors = exports . Validators . tileLoadValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateTileLoad = validateTileLoad ; function validatePage ( input ) { var errors = exports . Validators . pageValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validatePage = validatePage ; function validateFilter ( input ) { var errors = exports . Validators . filtersValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateFilter = validateFilter ; function validateSaveAsParameters ( input ) { var errors = exports . Validators . saveAsParametersValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateSaveAsParameters = validateSaveAsParameters ; function validateLoadQnaConfiguration ( input ) { var errors = exports . Validators . loadQnaValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateLoadQnaConfiguration = validateLoadQnaConfiguration ; function validateQnaInterpretInputData ( input ) { var errors = exports . Validators . qnaInterpretInputDataValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateQnaInterpretInputData = validateQnaInterpretInputData ; function validateExportDataRequest ( input ) { var errors = exports . Validators . exportDataRequestValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateExportDataRequest = validateExportDataRequest ; function validateVisualHeader ( input ) { var errors = exports . Validators . visualHeaderValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateVisualHeader = validateVisualHeader ; function validateVisualSettings ( input ) { var errors = exports . Validators . visualSettingsValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateVisualSettings = validateVisualSettings ; function validateCommandsSettings ( input ) { var errors = exports . Validators . commandsSettingsValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateCommandsSettings = validateCommandsSettings ; function validateCustomTheme ( input ) { var errors = exports . Validators . customThemeValidator . validate ( input ) ; return errors ? errors . map ( normalizeError ) : undefined ; } exports . validateCustomTheme = validateCustomTheme ; } ) , ( function ( module , exports , __webpack_require__ ) { Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; exports . Validators = { addBookmarkRequestValidator : new 0 . AddBookmarkRequestValidator ( ) , advancedFilterTypeValidator : new 0 . EnumValidator ( [ 0 ] ) , advancedFilterValidator : new 0 . AdvancedFilterValidator ( ) , anyArrayValidator : new 0 . ArrayValidator ( [ new 0 . AnyOfValidator ( [ new 0 . StringValidator ( ) , new 0 . NumberValidator ( ) , new 0 . BooleanValidator ( ) ] ) ] ) , anyFilterValidator : new 0 . AnyOfValidator ( [ new 0 . BasicFilterValidator ( ) , new 0 . AdvancedFilterValidator ( ) , new 0 . IncludeExcludeFilterValidator ( ) , new 0 . NotSupportedFilterValidator ( ) , new 0 . RelativeDateFilterValidator ( ) , new 0 . TopNFilterValidator ( ) ] ) , anyValueValidator : new 0 . AnyOfValidator ( [ new 0 . StringValidator ( ) , new 0 . NumberValidator ( ) , new 0 . BooleanValidator ( ) ] ) , applyBookmarkByNameRequestValidator : new 0 . ApplyBookmarkByNameRequestValidator ( ) , applyBookmarkStateRequestValidator : new 0 . ApplyBookmarkStateRequestValidator ( ) , applyBookmarkValidator : new 0 . AnyOfValidator ( [ new 0 . ApplyBookmarkByNameRequestValidator ( ) , new 0 . ApplyBookmarkStateRequestValidator ( ) ] ) , backgroundValidator : new 0 . EnumValidator ( [ 0 , 0 ] ) , basicFilterTypeValidator : new 0 . EnumValidator ( [ 0 ] ) , basicFilterValidator : new 0 . BasicFilterValidator ( ) , booleanArrayValidator : new 0 . BooleanArrayValidator ( ) , booleanValidator : new 0 . BooleanValidator ( ) , commandDisplayOptionValidator : new 0 . EnumValidator ( [ 0 , 0 , 0 ] ) , commandExtensionSelectorValidator : new 0 . AnyOfValidator ( [ new 0 . VisualSelectorValidator ( ) , new 0 . VisualTypeSelectorValidator ( ) ] ) , commandExtensionValidator : new 0 . CommandExtensionValidator ( ) , commandsSettingsArrayValidator : new 0 . ArrayValidator ( [ new 0 . CommandsSettingsValidator ( ) ] ) , commandsSettingsValidator : new 0 . CommandsSettingsValidator ( ) , conditionItemValidator : new 0 . ConditionItemValidator ( ) , customLayoutDisplayOptionValidator : new 0 . EnumValidator ( [ 0 , 0 , 0 ] ) , customLayoutValidator : new 0 . CustomLayoutValidator ( ) , customPageSizeValidator : new 0 . CustomPageSizeValidator ( ) , customThemeValidator : new 0 . CustomThemeValidator ( ) , dashboardLoadValidator : new 0 . DashboardLoadValidator ( ) , displayStateModeValidator : new 0 . EnumValidator ( [ 0 , 0 ] ) , displayStateValidator : new 0 . DisplayStateValidator ( ) , exportDataRequestValidator : new 0 . ExportDataRequestValidator ( ) , extensionArrayValidator : new 0 . ArrayValidator ( [ new 0 . ExtensionValidator ( ) ] ) , extensionPointsValidator : new 0 . ExtensionPointsValidator ( ) , extensionValidator : new 0 . ExtensionValidator ( ) , fieldRequiredValidator : new 0 . FieldRequiredValidator ( ) , filterColumnTargetValidator : new 0 . FilterColumnTargetValidator ( ) , filterConditionsValidator : new 0 . ArrayValidator ( [ new 0 . ConditionItemValidator ( ) ] ) , filterHierarchyTargetValidator : new 0 . FilterHierarchyTargetValidator ( ) , filterMeasureTargetValidator : new 0 . FilterMeasureTargetValidator ( ) , filterTargetValidator : new 0 . AnyOfValidator ( [ new 0 . FilterColumnTargetValidator ( ) , new 0 . FilterHierarchyTargetValidator ( ) , new 0 . FilterMeasureTargetValidator ( ) ] ) , filtersArrayValidator : new 0 . ArrayValidator ( [ new 0 . AnyOfValidator ( [ new 0 . BasicFilterValidator ( ) , new 0 . AdvancedFilterValidator ( ) , new 0 . RelativeDateFilterValidator ( ) ] ) ] ) , filtersValidator : new 0 . FilterValidator ( ) , includeExcludeFilterValidator : new 0 . IncludeExcludeFilterValidator ( ) , includeExludeFilterTypeValidator : new 0 . EnumValidator ( [ 0 ] ) , layoutTypeValidator : new 0 . EnumValidator ( [ 0 , 0 , 0 , 0 ] ) , loadQnaValidator : new 0 . LoadQnaValidator ( ) , menuExtensionValidator : new 0 . MenuExtensionValidator ( ) , menuLocationValidator : new 0 . EnumValidator ( [ 0 , 0 ] ) , notSupportedFilterTypeValidator : new 0 . EnumValidator ( [ 0 ] ) , notSupportedFilterValidator : new 0 . NotSupportedFilterValidator ( ) , numberArrayValidator : new 0 . NumberArrayValidator ( ) , numberValidator : new 0 . NumberValidator ( ) , pageLayoutValidator : new 0 . MapValidator ( [ new 0 . StringValidator ( ) ] , [ new 0 . VisualLayoutValidator ( ) ] ) , pageSizeTypeValidator : new 0 . EnumValidator ( [ 0 , 0 , 0 , 0 , 0 , 0 ] ) , pageSizeValidator : new 0 . PageSizeValidator ( ) , pageValidator : new 0 . PageValidator ( ) , pageViewFieldValidator : new 0 . PageViewFieldValidator ( ) , pagesLayoutValidator : new 0 . MapValidator ( [ new 0 . StringValidator ( ) ] , [ new 0 . PageLayoutValidator ( ) ] ) , permissionsValidator : new 0 . EnumValidator ( [ 0 , 0 , 0 , 0 , 0 ] ) , playBookmarkRequestValidator : new 0 . PlayBookmarkRequestValidator ( ) , qnaInterpretInputDataValidator : new 0 . QnaInterpretInputDataValidator ( ) , qnaSettingValidator : new 0 . QnaSettingsValidator ( ) , relativeDateFilterOperatorValidator : new 0 . EnumValidator ( [ 0 , 0 , 0 ] ) , relativeDateFilterTimeUnitTypeValidator : new 0 . EnumValidator ( [ 0 , 0 , 0 , 0 , 0 , 0 , 0 ] ) , relativeDateFilterTypeValidator : new 0 . EnumValidator ( [ 0 ] ) , relativeDateFilterValidator : new 0 . RelativeDateFilterValidator ( ) , reportCreateValidator : new 0 . ReportCreateValidator ( ) , reportLoadValidator : new 0 . ReportLoadValidator ( ) , saveAsParametersValidator : new 0 . SaveAsParametersValidator ( ) , settingsValidator : new 0 . SettingsValidator ( ) , singleCommandSettingsValidator : new 0 . SingleCommandSettingsValidator ( ) , slicerSelectorValidator : new 0 . AnyOfValidator ( [ new 0 . VisualSelectorValidator ( ) , new 0 . SlicerTargetSelectorValidator ( ) ] ) , slicerStateValidator : new 0 . SlicerStateValidator ( ) , slicerTargetValidator : new 0 . AnyOfValidator ( [ new 0 . FilterColumnTargetValidator ( ) , new 0 . FilterHierarchyTargetValidator ( ) , new 0 . FilterMeasureTargetValidator ( ) , new 0 . FilterKeyColumnsTargetValidator ( ) , new 0 . FilterKeyHierarchyTargetValidator ( ) ] ) , slicerValidator : new 0 . SlicerValidator ( ) , stringArrayValidator : new 0 . StringArrayValidator ( ) , stringValidator : new 0 . StringValidator ( ) , tileLoadValidator : new 0 . TileLoadValidator ( ) , tokenTypeValidator : new 0 . EnumValidator ( [ 0 , 0 ] ) , topNFilterTypeValidator : new 0 . EnumValidator ( [ 0 ] ) , topNFilterValidator : new 0 . TopNFilterValidator ( ) , viewModeValidator : new 0 . EnumValidator ( [ 0 , 0 ] ) , visualCommandSelectorValidator : new 0 . AnyOfValidator ( [ new 0 . VisualSelectorValidator ( ) , new 0 . VisualTypeSelectorValidator ( ) ] ) , visualHeaderSelectorValidator : new 0 . AnyOfValidator ( [ new 0 . VisualSelectorValidator ( ) , new 0 . VisualTypeSelectorValidator ( ) ] ) , visualHeaderSettingsValidator : new 0 . VisualHeaderSettingsValidator ( ) , visualHeaderValidator : new 0 . VisualHeaderValidator ( ) , visualHeadersValidator : new 0 . ArrayValidator ( [ new 0 . VisualHeaderValidator ( ) ] ) , visualLayoutValidator : new 0 . VisualLayoutValidator ( ) , visualSelectorValidator : new 0 . VisualSelectorValidator ( ) , visualSettingsValidator : new 0 . VisualSettingsValidator ( ) , visualTypeSelectorValidator : new 0 . VisualTypeSelectorValidator ( ) , } ; } ) , ( function ( module , exports ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var ObjectValidator = ( function ( ) { function ObjectValidator ( ) { } ObjectValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } if ( typeof input !== "s" || Array . isArray ( input ) ) { return [ { message : field !== undefined ? field + "s" : "s" , path : path , keyword : "s" } ] ; } return null ; } ; return ObjectValidator ; } ( ) ) ; exports . ObjectValidator = ObjectValidator ; var ArrayValidator = ( function ( ) { function ArrayValidator ( itemValidators ) { this . itemValidators = itemValidators ; } ArrayValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } if ( ! ( Array . isArray ( input ) ) ) { return [ { message : field + "s" , path : ( path ? path + "s" : "s" ) + field , keyword : "s" } ] ; } for ( var i = 0 ; i < input . length ; i ++ ) { var fieldsPath = ( path ? path + "s" : "s" ) + field + "s" + i ; for ( var _i = 0 , _a = this . itemValidators ; _i < _a . length ; _i ++ ) { var validator = _a [ _i ] ; var errors = validator . validate ( input [ i ] , fieldsPath , field ) ; if ( errors ) { return [ { message : field + "s" , path : ( path ? path + "s" : "s" ) + field , keyword : "s" } ] ; } } } return null ; } ; return ArrayValidator ; } ( ) ) ; exports . ArrayValidator = ArrayValidator ; var TypeValidator = ( function ( ) { function TypeValidator ( expectedType ) { this . expectedType = expectedType ; } TypeValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } if ( ! ( typeof input === this . expectedType ) ) { return [ { message : field + "s" + this . expectedType , path : ( path ? path + "s" : "s" ) + field , keyword : "s" } ] ; } return null ; } ; return TypeValidator ; } ( ) ) ; exports . TypeValidator = TypeValidator ; var StringValidator = ( function ( _super ) { __extends ( StringValidator , _super ) ; function StringValidator ( ) { return _super . call ( this , "s" ) || this ; } return StringValidator ; } ( TypeValidator ) ) ; exports . StringValidator = StringValidator ; var BooleanValidator = ( function ( _super ) { __extends ( BooleanValidator , _super ) ; function BooleanValidator ( ) { return _super . call ( this , "s" ) || this ; } return BooleanValidator ; } ( TypeValidator ) ) ; exports . BooleanValidator = BooleanValidator ; var NumberValidator = ( function ( _super ) { __extends ( NumberValidator , _super ) ; function NumberValidator ( ) { return _super . call ( this , "s" ) || this ; } return NumberValidator ; } ( TypeValidator ) ) ; exports . NumberValidator = NumberValidator ; var ValueValidator = ( function ( ) { function ValueValidator ( possibleValues ) { this . possibleValues = possibleValues ; } ValueValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } if ( this . possibleValues . indexOf ( input ) < 0 ) { return [ { message : field + "s" , path : ( path ? path + "s" : "s" ) + field , keyword : "s" } ] ; } return null ; } ; return ValueValidator ; } ( ) ) ; exports . ValueValidator = ValueValidator ; var SchemaValidator = ( function ( _super ) { __extends ( SchemaValidator , _super ) ; function SchemaValidator ( schemaValue ) { var _this = _super . call ( this , [ schemaValue ] ) || this ; _this . schemaValue = schemaValue ; return _this ; } SchemaValidator . prototype . validate = function ( input , path , field ) { return _super . prototype . validate . call ( this , input , path , field ) ; } ; return SchemaValidator ; } ( ValueValidator ) ) ; exports . SchemaValidator = SchemaValidator ; var EnumValidator = ( function ( _super ) { __extends ( EnumValidator , _super ) ; function EnumValidator ( possibleValues ) { var _this = _super . call ( this ) || this ; _this . possibleValues = possibleValues ; return _this ; } EnumValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var valueValidator = new ValueValidator ( this . possibleValues ) ; return valueValidator . validate ( input , path , field ) ; } ; return EnumValidator ; } ( NumberValidator ) ) ; exports . EnumValidator = EnumValidator ; var StringArrayValidator = ( function ( _super ) { __extends ( StringArrayValidator , _super ) ; function StringArrayValidator ( ) { return _super . call ( this , [ new StringValidator ( ) ] ) || this ; } StringArrayValidator . prototype . validate = function ( input , path , field ) { var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return [ { message : field + "s" , path : ( path ? path + "s" : "s" ) + field , keyword : "s" } ] ; } return null ; } ; return StringArrayValidator ; } ( ArrayValidator ) ) ; exports . StringArrayValidator = StringArrayValidator ; var BooleanArrayValidator = ( function ( _super ) { __extends ( BooleanArrayValidator , _super ) ; function BooleanArrayValidator ( ) { return _super . call ( this , [ new BooleanValidator ( ) ] ) || this ; } BooleanArrayValidator . prototype . validate = function ( input , path , field ) { var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return [ { message : field + "s" , path : ( path ? path + "s" : "s" ) + field , keyword : "s" } ] ; } return null ; } ; return BooleanArrayValidator ; } ( ArrayValidator ) ) ; exports . BooleanArrayValidator = BooleanArrayValidator ; var NumberArrayValidator = ( function ( _super ) { __extends ( NumberArrayValidator , _super ) ; function NumberArrayValidator ( ) { return _super . call ( this , [ new NumberValidator ( ) ] ) || this ; } NumberArrayValidator . prototype . validate = function ( input , path , field ) { var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return [ { message : field + "s" , path : ( path ? path + "s" : "s" ) + field , keyword : "s" } ] ; } return null ; } ; return NumberArrayValidator ; } ( ArrayValidator ) ) ; exports . NumberArrayValidator = NumberArrayValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var MenuExtensionValidator = ( function ( _super ) { __extends ( MenuExtensionValidator , _super ) ; function MenuExtensionValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } MenuExtensionValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . menuLocationValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return MenuExtensionValidator ; } ( 0 . ObjectValidator ) ) ; exports . MenuExtensionValidator = MenuExtensionValidator ; var ExtensionPointsValidator = ( function ( _super ) { __extends ( ExtensionPointsValidator , _super ) ; function ExtensionPointsValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } ExtensionPointsValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . menuExtensionValidator ] } , { field : "s" , validators : [ 0 . Validators . menuExtensionValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return ExtensionPointsValidator ; } ( 0 . ObjectValidator ) ) ; exports . ExtensionPointsValidator = ExtensionPointsValidator ; var ExtensionItemValidator = ( function ( _super ) { __extends ( ExtensionItemValidator , _super ) ; function ExtensionItemValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } ExtensionItemValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . extensionPointsValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return ExtensionItemValidator ; } ( 0 . ObjectValidator ) ) ; exports . ExtensionItemValidator = ExtensionItemValidator ; var CommandExtensionValidator = ( function ( _super ) { __extends ( CommandExtensionValidator , _super ) ; function CommandExtensionValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } CommandExtensionValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . commandExtensionSelectorValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return CommandExtensionValidator ; } ( ExtensionItemValidator ) ) ; exports . CommandExtensionValidator = CommandExtensionValidator ; var ExtensionValidator = ( function ( _super ) { __extends ( ExtensionValidator , _super ) ; function ExtensionValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } ExtensionValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . commandExtensionValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return ExtensionValidator ; } ( 0 . ObjectValidator ) ) ; exports . ExtensionValidator = ExtensionValidator ; } ) , ( function ( module , exports ) { Object . defineProperty ( exports , "s" , { value : true } ) ; var MultipleFieldsValidator = ( function ( ) { function MultipleFieldsValidator ( fieldValidatorsPairs ) { this . fieldValidatorsPairs = fieldValidatorsPairs ; } MultipleFieldsValidator . prototype . validate = function ( input , path , field ) { if ( ! this . fieldValidatorsPairs ) { return null ; } var fieldsPath = path ? path + "s" + field : field ; for ( var _i = 0 , _a = this . fieldValidatorsPairs ; _i < _a . length ; _i ++ ) { var fieldValidators = _a [ _i ] ; for ( var _b = 0 , _c = fieldValidators . validators ; _b < _c . length ; _b ++ ) { var validator = _c [ _b ] ; var errors = validator . validate ( input [ fieldValidators . field ] , fieldsPath , fieldValidators . field ) ; if ( errors ) { return errors ; } } } return null ; } ; return MultipleFieldsValidator ; } ( ) ) ; exports . MultipleFieldsValidator = MultipleFieldsValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var SettingsValidator = ( function ( _super ) { __extends ( SettingsValidator , _super ) ; function SettingsValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } SettingsValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . booleanValidator ] } , { field : "s" , validators : [ 0 . Validators . booleanValidator ] } , { field : "s" , validators : [ 0 . Validators . booleanValidator ] } , { field : "s" , validators : [ 0 . Validators . booleanValidator ] } , { field : "s" , validators : [ 0 . Validators . extensionArrayValidator ] } , { field : "s" , validators : [ 0 . Validators . layoutTypeValidator ] } , { field : "s" , validators : [ 0 . Validators . customLayoutValidator ] } , { field : "s" , validators : [ 0 . Validators . backgroundValidator ] } , { field : "s" , validators : [ 0 . Validators . visualSettingsValidator ] } , { field : "s" , validators : [ 0 . Validators . booleanValidator ] } , { field : "s" , validators : [ 0 . Validators . commandsSettingsArrayValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return SettingsValidator ; } ( 0 . ObjectValidator ) ) ; exports . SettingsValidator = SettingsValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var PlayBookmarkRequestValidator = ( function ( _super ) { __extends ( PlayBookmarkRequestValidator , _super ) ; function PlayBookmarkRequestValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } PlayBookmarkRequestValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , new 0 . EnumValidator ( [ 0 , 0 ] ) ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return PlayBookmarkRequestValidator ; } ( 0 . ObjectValidator ) ) ; exports . PlayBookmarkRequestValidator = PlayBookmarkRequestValidator ; var AddBookmarkRequestValidator = ( function ( _super ) { __extends ( AddBookmarkRequestValidator , _super ) ; function AddBookmarkRequestValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } AddBookmarkRequestValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . booleanValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return AddBookmarkRequestValidator ; } ( 0 . ObjectValidator ) ) ; exports . AddBookmarkRequestValidator = AddBookmarkRequestValidator ; var ApplyBookmarkByNameRequestValidator = ( function ( _super ) { __extends ( ApplyBookmarkByNameRequestValidator , _super ) ; function ApplyBookmarkByNameRequestValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } ApplyBookmarkByNameRequestValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return ApplyBookmarkByNameRequestValidator ; } ( 0 . ObjectValidator ) ) ; exports . ApplyBookmarkByNameRequestValidator = ApplyBookmarkByNameRequestValidator ; var ApplyBookmarkStateRequestValidator = ( function ( _super ) { __extends ( ApplyBookmarkStateRequestValidator , _super ) ; function ApplyBookmarkStateRequestValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } ApplyBookmarkStateRequestValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return ApplyBookmarkStateRequestValidator ; } ( 0 . ObjectValidator ) ) ; exports . ApplyBookmarkStateRequestValidator = ApplyBookmarkStateRequestValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var FilterColumnTargetValidator = ( function ( _super ) { __extends ( FilterColumnTargetValidator , _super ) ; function FilterColumnTargetValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } FilterColumnTargetValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return FilterColumnTargetValidator ; } ( 0 . ObjectValidator ) ) ; exports . FilterColumnTargetValidator = FilterColumnTargetValidator ; var FilterKeyColumnsTargetValidator = ( function ( _super ) { __extends ( FilterKeyColumnsTargetValidator , _super ) ; function FilterKeyColumnsTargetValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } FilterKeyColumnsTargetValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringArrayValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return FilterKeyColumnsTargetValidator ; } ( FilterColumnTargetValidator ) ) ; exports . FilterKeyColumnsTargetValidator = FilterKeyColumnsTargetValidator ; var FilterHierarchyTargetValidator = ( function ( _super ) { __extends ( FilterHierarchyTargetValidator , _super ) ; function FilterHierarchyTargetValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } FilterHierarchyTargetValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return FilterHierarchyTargetValidator ; } ( 0 . ObjectValidator ) ) ; exports . FilterHierarchyTargetValidator = FilterHierarchyTargetValidator ; var FilterKeyHierarchyTargetValidator = ( function ( _super ) { __extends ( FilterKeyHierarchyTargetValidator , _super ) ; function FilterKeyHierarchyTargetValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } FilterKeyHierarchyTargetValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringArrayValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return FilterKeyHierarchyTargetValidator ; } ( FilterHierarchyTargetValidator ) ) ; exports . FilterKeyHierarchyTargetValidator = FilterKeyHierarchyTargetValidator ; var FilterMeasureTargetValidator = ( function ( _super ) { __extends ( FilterMeasureTargetValidator , _super ) ; function FilterMeasureTargetValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } FilterMeasureTargetValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return FilterMeasureTargetValidator ; } ( 0 . ObjectValidator ) ) ; exports . FilterMeasureTargetValidator = FilterMeasureTargetValidator ; var BasicFilterValidator = ( function ( _super ) { __extends ( BasicFilterValidator , _super ) ; function BasicFilterValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } BasicFilterValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . filterTargetValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . anyArrayValidator ] } , { field : "s" , validators : [ 0 . Validators . basicFilterTypeValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return BasicFilterValidator ; } ( 0 . ObjectValidator ) ) ; exports . BasicFilterValidator = BasicFilterValidator ; var AdvancedFilterValidator = ( function ( _super ) { __extends ( AdvancedFilterValidator , _super ) ; function AdvancedFilterValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } AdvancedFilterValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . filterTargetValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . filterConditionsValidator ] } , { field : "s" , validators : [ 0 . Validators . advancedFilterTypeValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return AdvancedFilterValidator ; } ( 0 . ObjectValidator ) ) ; exports . AdvancedFilterValidator = AdvancedFilterValidator ; var RelativeDateFilterValidator = ( function ( _super ) { __extends ( RelativeDateFilterValidator , _super ) ; function RelativeDateFilterValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } RelativeDateFilterValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . filterTargetValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . relativeDateFilterOperatorValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . numberValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . relativeDateFilterTimeUnitTypeValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . booleanValidator ] } , { field : "s" , validators : [ 0 . Validators . relativeDateFilterTypeValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return RelativeDateFilterValidator ; } ( 0 . ObjectValidator ) ) ; exports . RelativeDateFilterValidator = RelativeDateFilterValidator ; var TopNFilterValidator = ( function ( _super ) { __extends ( TopNFilterValidator , _super ) ; function TopNFilterValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } TopNFilterValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . filterTargetValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . numberValidator ] } , { field : "s" , validators : [ 0 . Validators . topNFilterTypeValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . filterTargetValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return TopNFilterValidator ; } ( 0 . ObjectValidator ) ) ; exports . TopNFilterValidator = TopNFilterValidator ; var NotSupportedFilterValidator = ( function ( _super ) { __extends ( NotSupportedFilterValidator , _super ) ; function NotSupportedFilterValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } NotSupportedFilterValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . filterTargetValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . notSupportedFilterTypeValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return NotSupportedFilterValidator ; } ( 0 . ObjectValidator ) ) ; exports . NotSupportedFilterValidator = NotSupportedFilterValidator ; var IncludeExcludeFilterValidator = ( function ( _super ) { __extends ( IncludeExcludeFilterValidator , _super ) ; function IncludeExcludeFilterValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } IncludeExcludeFilterValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . filterTargetValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . booleanValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . anyArrayValidator ] } , { field : "s" , validators : [ 0 . Validators . includeExludeFilterTypeValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return IncludeExcludeFilterValidator ; } ( 0 . ObjectValidator ) ) ; exports . IncludeExcludeFilterValidator = IncludeExcludeFilterValidator ; var FilterValidator = ( function ( _super ) { __extends ( FilterValidator , _super ) ; function FilterValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } FilterValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } return 0 . Validators . anyFilterValidator . validate ( input , path , field ) ; } ; return FilterValidator ; } ( 0 . ObjectValidator ) ) ; exports . FilterValidator = FilterValidator ; var ConditionItemValidator = ( function ( _super ) { __extends ( ConditionItemValidator , _super ) ; function ConditionItemValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } ConditionItemValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . anyValueValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return ConditionItemValidator ; } ( 0 . ObjectValidator ) ) ; exports . ConditionItemValidator = ConditionItemValidator ; } ) , ( function ( module , exports ) { Object . defineProperty ( exports , "s" , { value : true } ) ; var FieldRequiredValidator = ( function ( ) { function FieldRequiredValidator ( ) { } FieldRequiredValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return [ { message : field + "s" , path : ( path ? path + "s" : "s" ) + field , keyword : "s" } ] ; } return null ; } ; return FieldRequiredValidator ; } ( ) ) ; exports . FieldRequiredValidator = FieldRequiredValidator ; } ) , ( function ( module , exports ) { Object . defineProperty ( exports , "s" , { value : true } ) ; var AnyOfValidator = ( function ( ) { function AnyOfValidator ( validators ) { this . validators = validators ; } AnyOfValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var valid = false ; for ( var _i = 0 , _a = this . validators ; _i < _a . length ; _i ++ ) { var validator = _a [ _i ] ; var errors = validator . validate ( input , path , field ) ; if ( ! errors ) { valid = true ; break ; } } if ( ! valid ) { return [ { message : field + "s" , path : ( path ? path + "s" : "s" ) + field , keyword : "s" } ] ; } return null ; } ; return AnyOfValidator ; } ( ) ) ; exports . AnyOfValidator = AnyOfValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var ReportLoadValidator = ( function ( _super ) { __extends ( ReportLoadValidator , _super ) ; function ReportLoadValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } ReportLoadValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . settingsValidator ] } , { field : "s" , validators : [ 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . filtersArrayValidator ] } , { field : "s" , validators : [ 0 . Validators . permissionsValidator ] } , { field : "s" , validators : [ 0 . Validators . viewModeValidator ] } , { field : "s" , validators : [ 0 . Validators . tokenTypeValidator ] } , { field : "s" , validators : [ 0 . Validators . applyBookmarkValidator ] } , { field : "s" , validators : [ 0 . Validators . customThemeValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return ReportLoadValidator ; } ( 0 . ObjectValidator ) ) ; exports . ReportLoadValidator = ReportLoadValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var ReportCreateValidator = ( function ( _super ) { __extends ( ReportCreateValidator , _super ) ; function ReportCreateValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } ReportCreateValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . tokenTypeValidator ] } , { field : "s" , validators : [ 0 . Validators . customThemeValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return ReportCreateValidator ; } ( 0 . ObjectValidator ) ) ; exports . ReportCreateValidator = ReportCreateValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var DashboardLoadValidator = ( function ( _super ) { __extends ( DashboardLoadValidator , _super ) ; function DashboardLoadValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } DashboardLoadValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . pageViewFieldValidator ] } , { field : "s" , validators : [ 0 . Validators . tokenTypeValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return DashboardLoadValidator ; } ( 0 . ObjectValidator ) ) ; exports . DashboardLoadValidator = DashboardLoadValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var TileLoadValidator = ( function ( _super ) { __extends ( TileLoadValidator , _super ) ; function TileLoadValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } TileLoadValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . tokenTypeValidator ] } , { field : "s" , validators : [ 0 . Validators . numberValidator ] } , { field : "s" , validators : [ 0 . Validators . numberValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return TileLoadValidator ; } ( 0 . ObjectValidator ) ) ; exports . TileLoadValidator = TileLoadValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var PageSizeValidator = ( function ( _super ) { __extends ( PageSizeValidator , _super ) ; function PageSizeValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } PageSizeValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . pageSizeTypeValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return PageSizeValidator ; } ( 0 . ObjectValidator ) ) ; exports . PageSizeValidator = PageSizeValidator ; var CustomPageSizeValidator = ( function ( _super ) { __extends ( CustomPageSizeValidator , _super ) ; function CustomPageSizeValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } CustomPageSizeValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . numberValidator ] } , { field : "s" , validators : [ 0 . Validators . numberValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return CustomPageSizeValidator ; } ( PageSizeValidator ) ) ; exports . CustomPageSizeValidator = CustomPageSizeValidator ; var PageValidator = ( function ( _super ) { __extends ( PageValidator , _super ) ; function PageValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } PageValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return PageValidator ; } ( 0 . ObjectValidator ) ) ; exports . PageValidator = PageValidator ; var PageViewFieldValidator = ( function ( _super ) { __extends ( PageViewFieldValidator , _super ) ; function PageViewFieldValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } PageViewFieldValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var possibleValues = [ "s" , "s" , "s" ] ; if ( possibleValues . indexOf ( input ) < 0 ) { return [ { message : "s" } ] ; } return null ; } ; return PageViewFieldValidator ; } ( 0 . StringValidator ) ) ; exports . PageViewFieldValidator = PageViewFieldValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var LoadQnaValidator = ( function ( _super ) { __extends ( LoadQnaValidator , _super ) ; function LoadQnaValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } LoadQnaValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringArrayValidator ] } , { field : "s" , validators : [ 0 . Validators . stringValidator ] } , { field : "s" , validators : [ 0 . Validators . viewModeValidator ] } , { field : "s" , validators : [ 0 . Validators . qnaSettingValidator ] } , { field : "s" , validators : [ 0 . Validators . tokenTypeValidator ] } , { field : "s" , validators : [ 0 . Validators . stringValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return LoadQnaValidator ; } ( 0 . ObjectValidator ) ) ; exports . LoadQnaValidator = LoadQnaValidator ; var QnaSettingsValidator = ( function ( _super ) { __extends ( QnaSettingsValidator , _super ) ; function QnaSettingsValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } QnaSettingsValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . booleanValidator ] } , { field : "s" , validators : [ 0 . Validators . booleanValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return QnaSettingsValidator ; } ( 0 . ObjectValidator ) ) ; exports . QnaSettingsValidator = QnaSettingsValidator ; var QnaInterpretInputDataValidator = ( function ( _super ) { __extends ( QnaInterpretInputDataValidator , _super ) ; function QnaInterpretInputDataValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } QnaInterpretInputDataValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . stringArrayValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return QnaInterpretInputDataValidator ; } ( 0 . ObjectValidator ) ) ; exports . QnaInterpretInputDataValidator = QnaInterpretInputDataValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var SaveAsParametersValidator = ( function ( _super ) { __extends ( SaveAsParametersValidator , _super ) ; function SaveAsParametersValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } SaveAsParametersValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return SaveAsParametersValidator ; } ( 0 . ObjectValidator ) ) ; exports . SaveAsParametersValidator = SaveAsParametersValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var MapValidator = ( function ( _super ) { __extends ( MapValidator , _super ) ; function MapValidator ( keyValidators , valueValidators ) { var _this = _super . call ( this ) || this ; _this . keyValidators = keyValidators ; _this . valueValidators = valueValidators ; return _this ; } MapValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } for ( var key in input ) { if ( input . hasOwnProperty ( key ) ) { var fieldsPath = ( path ? path + "s" : "s" ) + field + "s" + key ; for ( var _i = 0 , _a = this . keyValidators ; _i < _a . length ; _i ++ ) { var keyValidator = _a [ _i ] ; errors = keyValidator . validate ( key , fieldsPath , field ) ; if ( errors ) { return errors ; } } for ( var _b = 0 , _c = this . valueValidators ; _b < _c . length ; _b ++ ) { var valueValidator = _c [ _b ] ; errors = valueValidator . validate ( input [ key ] , fieldsPath , field ) ; if ( errors ) { return errors ; } } } } return null ; } ; return MapValidator ; } ( 0 . ObjectValidator ) ) ; exports . MapValidator = MapValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var CustomLayoutValidator = ( function ( _super ) { __extends ( CustomLayoutValidator , _super ) ; function CustomLayoutValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } CustomLayoutValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . pageSizeValidator ] } , { field : "s" , validators : [ 0 . Validators . customLayoutDisplayOptionValidator ] } , { field : "s" , validators : [ 0 . Validators . pagesLayoutValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return CustomLayoutValidator ; } ( 0 . ObjectValidator ) ) ; exports . CustomLayoutValidator = CustomLayoutValidator ; var VisualLayoutValidator = ( function ( _super ) { __extends ( VisualLayoutValidator , _super ) ; function VisualLayoutValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } VisualLayoutValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . numberValidator ] } , { field : "s" , validators : [ 0 . Validators . numberValidator ] } , { field : "s" , validators : [ 0 . Validators . numberValidator ] } , { field : "s" , validators : [ 0 . Validators . numberValidator ] } , { field : "s" , validators : [ 0 . Validators . numberValidator ] } , { field : "s" , validators : [ 0 . Validators . displayStateValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return VisualLayoutValidator ; } ( 0 . ObjectValidator ) ) ; exports . VisualLayoutValidator = VisualLayoutValidator ; var DisplayStateValidator = ( function ( _super ) { __extends ( DisplayStateValidator , _super ) ; function DisplayStateValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } DisplayStateValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . displayStateModeValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return DisplayStateValidator ; } ( 0 . ObjectValidator ) ) ; exports . DisplayStateValidator = DisplayStateValidator ; var PageLayoutValidator = ( function ( _super ) { __extends ( PageLayoutValidator , _super ) ; function PageLayoutValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } PageLayoutValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . pageLayoutValidator ] } , { field : "s" , validators : [ 0 . Validators . visualLayoutValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return PageLayoutValidator ; } ( 0 . ObjectValidator ) ) ; exports . PageLayoutValidator = PageLayoutValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var ExportDataRequestValidator = ( function ( _super ) { __extends ( ExportDataRequestValidator , _super ) ; function ExportDataRequestValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } ExportDataRequestValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ new 0 . NumberValidator ( ) ] } , { field : "s" , validators : [ new 0 . EnumValidator ( [ 0 , 0 ] ) ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return ExportDataRequestValidator ; } ( 0 . ObjectValidator ) ) ; exports . ExportDataRequestValidator = ExportDataRequestValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var VisualSelectorValidator = ( function ( _super ) { __extends ( VisualSelectorValidator , _super ) ; function VisualSelectorValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } VisualSelectorValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . stringValidator , new 0 . SchemaValidator ( "s" ) ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return VisualSelectorValidator ; } ( 0 . ObjectValidator ) ) ; exports . VisualSelectorValidator = VisualSelectorValidator ; var VisualTypeSelectorValidator = ( function ( _super ) { __extends ( VisualTypeSelectorValidator , _super ) ; function VisualTypeSelectorValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } VisualTypeSelectorValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator , new 0 . SchemaValidator ( "s" ) ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return VisualTypeSelectorValidator ; } ( 0 . ObjectValidator ) ) ; exports . VisualTypeSelectorValidator = VisualTypeSelectorValidator ; var SlicerTargetSelectorValidator = ( function ( _super ) { __extends ( SlicerTargetSelectorValidator , _super ) ; function SlicerTargetSelectorValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } SlicerTargetSelectorValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . stringValidator , new 0 . SchemaValidator ( "s" ) ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . slicerTargetValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return SlicerTargetSelectorValidator ; } ( 0 . ObjectValidator ) ) ; exports . SlicerTargetSelectorValidator = SlicerTargetSelectorValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var SlicerValidator = ( function ( _super ) { __extends ( SlicerValidator , _super ) ; function SlicerValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } SlicerValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . slicerSelectorValidator ] } , { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . slicerStateValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return SlicerValidator ; } ( 0 . ObjectValidator ) ) ; exports . SlicerValidator = SlicerValidator ; var SlicerStateValidator = ( function ( _super ) { __extends ( SlicerStateValidator , _super ) ; function SlicerStateValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } SlicerStateValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . filtersArrayValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return SlicerStateValidator ; } ( 0 . ObjectValidator ) ) ; exports . SlicerStateValidator = SlicerStateValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var VisualSettingsValidator = ( function ( _super ) { __extends ( VisualSettingsValidator , _super ) ; function VisualSettingsValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } VisualSettingsValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . visualHeadersValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return VisualSettingsValidator ; } ( 0 . ObjectValidator ) ) ; exports . VisualSettingsValidator = VisualSettingsValidator ; var VisualHeaderSettingsValidator = ( function ( _super ) { __extends ( VisualHeaderSettingsValidator , _super ) ; function VisualHeaderSettingsValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } VisualHeaderSettingsValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . booleanValidator ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return VisualHeaderSettingsValidator ; } ( 0 . ObjectValidator ) ) ; exports . VisualHeaderSettingsValidator = VisualHeaderSettingsValidator ; var VisualHeaderValidator = ( function ( _super ) { __extends ( VisualHeaderValidator , _super ) ; function VisualHeaderValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } VisualHeaderValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . visualHeaderSettingsValidator ] } , { field : "s" , validators : [ 0 . Validators . visualHeaderSelectorValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return VisualHeaderValidator ; } ( 0 . ObjectValidator ) ) ; exports . VisualHeaderValidator = VisualHeaderValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var CommandsSettingsValidator = ( function ( _super ) { __extends ( CommandsSettingsValidator , _super ) ; function CommandsSettingsValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } CommandsSettingsValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ 0 . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ 0 . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ 0 . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ 0 . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ 0 . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ 0 . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ 0 . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ 0 . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ 0 . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ 0 . Validators . singleCommandSettingsValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return CommandsSettingsValidator ; } ( 0 . ObjectValidator ) ) ; exports . CommandsSettingsValidator = CommandsSettingsValidator ; var SingleCommandSettingsValidator = ( function ( _super ) { __extends ( SingleCommandSettingsValidator , _super ) ; function SingleCommandSettingsValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } SingleCommandSettingsValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ 0 . Validators . fieldRequiredValidator , 0 . Validators . commandDisplayOptionValidator ] } , { field : "s" , validators : [ 0 . Validators . visualCommandSelectorValidator ] } , ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return SingleCommandSettingsValidator ; } ( 0 . ObjectValidator ) ) ; exports . SingleCommandSettingsValidator = SingleCommandSettingsValidator ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || ( function ( ) { var extendStatics = Object . setPrototypeOf || ( { __proto__ : [ ] } instanceof Array && function ( d , b ) { d . __proto__ = b ; } ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; } ; return function ( d , b ) { extendStatics ( d , b ) ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; } ) ( ) ; Object . defineProperty ( exports , "s" , { value : true } ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var CustomThemeValidator = ( function ( _super ) { __extends ( CustomThemeValidator , _super ) ; function CustomThemeValidator ( ) { return _super !== null && _super . apply ( this , arguments ) || this ; } CustomThemeValidator . prototype . validate = function ( input , path , field ) { if ( input == null ) { return null ; } var errors = _super . prototype . validate . call ( this , input , path , field ) ; if ( errors ) { return errors ; } var fields = [ { field : "s" , validators : [ new 0 . ObjectValidator ( ) ] } ] ; var multipleFieldsValidator = new 0 . MultipleFieldsValidator ( fields ) ; return multipleFieldsValidator . validate ( input , path , field ) ; } ; return CustomThemeValidator ; } ( 0 . ObjectValidator ) ) ; exports . CustomThemeValidator = CustomThemeValidator ; } ) ] ) } ) ; ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; var embed = __webpack_require__ ( 0 ) ; var models = __webpack_require__ ( 0 ) ; var utils = __webpack_require__ ( 0 ) ; var errors = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var Report = ( function ( _super ) { __extends ( Report , _super ) ; function Report ( service , element , baseConfig , phasedRender , isBootstrap , iframe ) { var config = baseConfig ; _super . call ( this , service , element , config , iframe , phasedRender , isBootstrap ) ; this . loadPath = "s" ; this . phasedLoadPath = "s" ; Array . prototype . push . apply ( this . allowedEvents , Report . allowedEvents ) ; this . bookmarksManager = new 0 . BookmarksManager ( service , config , this . iframe ) ; } Report . findIdFromEmbedUrl = function ( url ) { var reportIdRegEx = "s" ; var reportIdMatch = url . match ( reportIdRegEx ) ; var reportId ; if ( reportIdMatch ) { reportId = reportIdMatch [ 0 ] ; } return reportId ; } ; Report . prototype . render = function ( config ) { return this . service . hpm . post ( "s" , config , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } ) . catch ( function ( response ) { throw response . body ; } ) ; } ; Report . prototype . getFilters = function ( ) { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . service . hpm . get ( "s" , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } , function ( response ) { throw response . body ; } ) ; } ; Report . prototype . getId = function ( ) { var config = this . config ; var reportId = config . id || this . element . getAttribute ( Report . reportIdAttribute ) || Report . findIdFromEmbedUrl ( config . embedUrl ) ; if ( typeof reportId !== 's' || reportId . length === 0 ) { throw new Error ( "s" + Report . reportIdAttribute + "s" ) ; } return reportId ; } ; Report . prototype . getPages = function ( ) { var _this = this ; if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . service . hpm . get ( 's' , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( response ) { return response . body . map ( function ( page ) { return new 0 . Page ( _this , page . name , page . displayName , page . isActive , page . visibility , page . defaultSize , page . defaultDisplayOption ) ; } ) ; } , function ( response ) { throw response . body ; } ) ; } ; Report . prototype . page = function ( name , displayName , isActive , visibility ) { return new 0 . Page ( this , name , displayName , isActive , visibility ) ; } ; Report . prototype . print = function ( ) { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . service . hpm . post ( 's' , null , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } ) . catch ( function ( response ) { throw response . body ; } ) ; } ; Report . prototype . removeFilters = function ( ) { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . setFilters ( [ ] ) ; } ; Report . prototype . setPage = function ( pageName ) { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } var page = { name : pageName , displayName : null , isActive : true } ; return this . service . hpm . put ( 's' , page , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( function ( response ) { throw response . body ; } ) ; } ; Report . prototype . setFilters = function ( filters ) { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . service . hpm . put ( "s" , filters , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( function ( response ) { throw response . body ; } ) ; } ; Report . prototype . updateSettings = function ( settings ) { if ( utils . isRDLEmbed ( this . config . embedUrl ) && settings . customLayout != null ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . service . hpm . patch ( 's' , settings , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( function ( response ) { throw response . body ; } ) ; } ; Report . prototype . validate = function ( config ) { return models . validateReportLoad ( config ) ; } ; Report . prototype . configChanged = function ( isBootstrap ) { var config = this . config ; if ( this . isMobileSettings ( config . settings ) ) config . embedUrl = utils . addParamToUrl ( config . embedUrl , "s" , "s" ) ; var filterPaneEnabledAttribute = this . element . getAttribute ( Report . filterPaneEnabledAttribute ) ; var navContentPaneEnabledAttribute = this . element . getAttribute ( Report . navContentPaneEnabledAttribute ) ; var elementAttrSettings = { filterPaneEnabled : ( filterPaneEnabledAttribute == null ) ? 0 . Defaults . defaultSettings . filterPaneEnabled : ( filterPaneEnabledAttribute !== "s" ) , navContentPaneEnabled : ( navContentPaneEnabledAttribute == null ) ? 0 . Defaults . defaultSettings . navContentPaneEnabled : ( navContentPaneEnabledAttribute !== "s" ) } ; this . config . settings = utils . assign ( { } , elementAttrSettings , config . settings ) ; if ( isBootstrap ) { return ; } config . id = this . getId ( ) ; } ; Report . prototype . getDefaultEmbedUrlEndpoint = function ( ) { return "s" ; } ; Report . prototype . switchMode = function ( viewMode ) { var newMode ; if ( typeof viewMode === "s" ) { newMode = viewMode ; } else { newMode = this . viewModeToString ( viewMode ) ; } var url = 's' + newMode ; return this . service . hpm . post ( url , null , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } ) . catch ( function ( response ) { throw response . body ; } ) ; } ; Report . prototype . refresh = function ( ) { return this . service . hpm . post ( 's' , null , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } ) . catch ( function ( response ) { throw response . body ; } ) ; } ; Report . prototype . isSaved = function ( ) { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return utils . isSavedInternal ( this . service . hpm , this . config . uniqueId , this . iframe . contentWindow ) ; } ; Report . prototype . applyTheme = function ( theme ) { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . applyThemeInternal ( theme ) ; } ; Report . prototype . resetTheme = function ( ) { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . applyThemeInternal ( { } ) ; } ; Report . prototype . applyThemeInternal = function ( theme ) { return this . service . hpm . put ( 's' , theme , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } ) . catch ( function ( response ) { throw response . body ; } ) ; } ; Report . prototype . viewModeToString = function ( viewMode ) { var mode ; switch ( viewMode ) { case models . ViewMode . Edit : mode = "s" ; break ; case models . ViewMode . View : mode = "s" ; break ; } return mode ; } ; Report . prototype . isMobileSettings = function ( settings ) { return settings && ( settings . layoutType === models . LayoutType . MobileLandscape || settings . layoutType === models . LayoutType . MobilePortrait ) ; } ; Report . allowedEvents = [ "s" , "s" , "s" , "s" , "s" , "s" , "s" ] ; Report . reportIdAttribute = 's' ; Report . filterPaneEnabledAttribute = 's' ; Report . navContentPaneEnabledAttribute = 's' ; Report . typeAttribute = 's' ; Report . type = "s" ; return Report ; } ( embed . Embed ) ) ; exports . Report = Report ; } ) , ( function ( module , exports ) { exports . APINotSupportedForRDLError = "s" ; } ) , ( function ( module , exports , __webpack_require__ ) { var 0 = __webpack_require__ ( 0 ) ; var models = __webpack_require__ ( 0 ) ; var utils = __webpack_require__ ( 0 ) ; var errors = __webpack_require__ ( 0 ) ; var Page = ( function ( ) { function Page ( report , name , displayName , isActivePage , visibility , defaultSize , defaultDisplayOption ) { this . report = report ; this . name = name ; this . displayName = displayName ; this . isActive = isActivePage ; this . visibility = visibility ; this . defaultSize = defaultSize ; this . defaultDisplayOption = defaultDisplayOption ; } Page . prototype . getFilters = function ( ) { return this . report . service . hpm . get ( "s" + this . name + "s" , { uid : this . report . config . uniqueId } , this . report . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } , function ( response ) { throw response . body ; } ) ; } ; Page . prototype . removeFilters = function ( ) { return this . setFilters ( [ ] ) ; } ; Page . prototype . setActive = function ( ) { var page = { name : this . name , displayName : null , isActive : true } ; return this . report . service . hpm . put ( 's' , page , { uid : this . report . config . uniqueId } , this . report . iframe . contentWindow ) . catch ( function ( response ) { throw response . body ; } ) ; } ; Page . prototype . setFilters = function ( filters ) { return this . report . service . hpm . put ( "s" + this . name + "s" , filters , { uid : this . report . config . uniqueId } , this . report . iframe . contentWindow ) . catch ( function ( response ) { throw response . body ; } ) ; } ; Page . prototype . getVisuals = function ( ) { var _this = this ; if ( utils . isRDLEmbed ( this . report . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . report . service . hpm . get ( "s" + this . name + "s" , { uid : this . report . config . uniqueId } , this . report . iframe . contentWindow ) . then ( function ( response ) { return response . body . map ( function ( visual ) { return new 0 . VisualDescriptor ( _this , visual . name , visual . title , visual . type , visual . layout ) ; } ) ; } , function ( response ) { throw response . body ; } ) ; } ; Page . prototype . hasLayout = function ( layoutType ) { if ( utils . isRDLEmbed ( this . report . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } var layoutTypeEnum = models . LayoutType [ layoutType ] ; return this . report . service . hpm . get ( "s" + this . name + "s" + layoutTypeEnum , { uid : this . report . config . uniqueId } , this . report . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } , function ( response ) { throw response . body ; } ) ; } ; return Page ; } ( ) ) ; exports . Page = Page ; } ) , ( function ( module , exports ) { var VisualDescriptor = ( function ( ) { function VisualDescriptor ( page , name , title , type , layout ) { this . name = name ; this . title = title ; this . type = type ; this . layout = layout ; this . page = page ; } VisualDescriptor . prototype . getFilters = function ( ) { return this . page . report . service . hpm . get ( "s" + this . page . name + "s" + this . name + "s" , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } , function ( response ) { throw response . body ; } ) ; } ; VisualDescriptor . prototype . removeFilters = function ( ) { return this . setFilters ( [ ] ) ; } ; VisualDescriptor . prototype . setFilters = function ( filters ) { return this . page . report . service . hpm . put ( "s" + this . page . name + "s" + this . name + "s" , filters , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . catch ( function ( response ) { throw response . body ; } ) ; } ; VisualDescriptor . prototype . exportData = function ( exportDataType , rows ) { var exportDataRequestBody = { rows : rows , exportDataType : exportDataType } ; return this . page . report . service . hpm . post ( "s" + this . page . name + "s" + this . name + "s" , exportDataRequestBody , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } , function ( response ) { throw response . body ; } ) ; } ; VisualDescriptor . prototype . setSlicerState = function ( state ) { return this . page . report . service . hpm . put ( "s" + this . page . name + "s" + this . name + "s" , state , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . catch ( function ( response ) { throw response . body ; } ) ; } ; VisualDescriptor . prototype . getSlicerState = function ( ) { return this . page . report . service . hpm . get ( "s" + this . page . name + "s" + this . name + "s" , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } , function ( response ) { throw response . body ; } ) ; } ; VisualDescriptor . prototype . clone = function ( request ) { if ( request === void 0 ) { request = { } ; } return this . page . report . service . hpm . post ( "s" + this . page . name + "s" + this . name + "s" , request , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } , function ( response ) { throw response . body ; } ) ; } ; VisualDescriptor . prototype . sortBy = function ( request ) { return this . page . report . service . hpm . put ( "s" + this . page . name + "s" + this . name + "s" , request , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . catch ( function ( response ) { throw response . body ; } ) ; } ; return VisualDescriptor ; } ( ) ) ; exports . VisualDescriptor = VisualDescriptor ; } ) , ( function ( module , exports ) { var Defaults = ( function ( ) { function Defaults ( ) { } Defaults . defaultSettings = { filterPaneEnabled : true } ; Defaults . defaultQnaSettings = { filterPaneEnabled : false } ; return Defaults ; } ( ) ) ; exports . Defaults = Defaults ; } ) , ( function ( module , exports , __webpack_require__ ) { var utils = __webpack_require__ ( 0 ) ; var errors = __webpack_require__ ( 0 ) ; var BookmarksManager = ( function ( ) { function BookmarksManager ( service , config , iframe ) { this . service = service ; this . config = config ; this . iframe = iframe ; } BookmarksManager . prototype . getBookmarks = function ( ) { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . service . hpm . get ( "s" , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } , function ( response ) { throw response . body ; } ) ; } ; BookmarksManager . prototype . apply = function ( bookmarkName ) { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } var request = { name : bookmarkName } ; return this . service . hpm . post ( "s" , request , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( function ( response ) { throw response . body ; } ) ; } ; BookmarksManager . prototype . play = function ( playMode ) { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } var playBookmarkRequest = { playMode : playMode } ; return this . service . hpm . post ( "s" , playBookmarkRequest , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( function ( response ) { throw response . body ; } ) ; } ; BookmarksManager . prototype . capture = function ( ) { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . service . hpm . post ( "s" , null , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } , function ( response ) { throw response . body ; } ) ; } ; BookmarksManager . prototype . applyState = function ( state ) { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } var request = { state : state } ; return this . service . hpm . post ( "s" , request , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( function ( response ) { throw response . body ; } ) ; } ; return BookmarksManager ; } ( ) ) ; exports . BookmarksManager = BookmarksManager ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; var models = __webpack_require__ ( 0 ) ; var embed = __webpack_require__ ( 0 ) ; var utils = __webpack_require__ ( 0 ) ; var Create = ( function ( _super ) { __extends ( Create , _super ) ; function Create ( service , element , config , phasedRender , isBootstrap ) { _super . call ( this , service , element , config , undefined , phasedRender , isBootstrap ) ; } Create . prototype . getId = function ( ) { var datasetId = ( this . createConfig && this . createConfig . datasetId ) ? this . createConfig . datasetId : Create . findIdFromEmbedUrl ( this . config . embedUrl ) ; if ( typeof datasetId !== 's' || datasetId . length === 0 ) { throw new Error ( 's' ) ; } return datasetId ; } ; Create . prototype . validate = function ( config ) { return models . validateCreateReport ( config ) ; } ; Create . prototype . configChanged = function ( isBootstrap ) { if ( isBootstrap ) { return ; } var config = this . config ; this . createConfig = { accessToken : config . accessToken , datasetId : config . datasetId || this . getId ( ) , groupId : config . groupId , settings : config . settings , tokenType : config . tokenType , theme : config . theme } ; } ; Create . prototype . getDefaultEmbedUrlEndpoint = function ( ) { return "s" ; } ; Create . prototype . isSaved = function ( ) { return utils . isSavedInternal ( this . service . hpm , this . config . uniqueId , this . iframe . contentWindow ) ; } ; Create . findIdFromEmbedUrl = function ( url ) { var datasetIdRegEx = "s" ; var datasetIdMatch = url . match ( datasetIdRegEx ) ; var datasetId ; if ( datasetIdMatch ) { datasetId = datasetIdMatch [ 0 ] ; } return datasetId ; } ; return Create ; } ( embed . Embed ) ) ; exports . Create = Create ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; var embed = __webpack_require__ ( 0 ) ; var models = __webpack_require__ ( 0 ) ; var Dashboard = ( function ( _super ) { __extends ( Dashboard , _super ) ; function Dashboard ( service , element , config , phasedRender , isBootstrap ) { _super . call ( this , service , element , config , undefined , phasedRender , isBootstrap ) ; this . loadPath = "s" ; this . phasedLoadPath = "s" ; Array . prototype . push . apply ( this . allowedEvents , Dashboard . allowedEvents ) ; } Dashboard . findIdFromEmbedUrl = function ( url ) { var dashboardIdRegEx = "s" ; var dashboardIdMatch = url . match ( dashboardIdRegEx ) ; var dashboardId ; if ( dashboardIdMatch ) { dashboardId = dashboardIdMatch [ 0 ] ; } return dashboardId ; } ; Dashboard . prototype . getId = function ( ) { var config = this . config ; var dashboardId = config . id || this . element . getAttribute ( Dashboard . dashboardIdAttribute ) || Dashboard . findIdFromEmbedUrl ( config . embedUrl ) ; if ( typeof dashboardId !== 's' || dashboardId . length === 0 ) { throw new Error ( "s" + Dashboard . dashboardIdAttribute + "s" ) ; } return dashboardId ; } ; Dashboard . prototype . validate = function ( baseConfig ) { var config = baseConfig ; var error = models . validateDashboardLoad ( config ) ; return error ? error : this . ValidatePageView ( config . pageView ) ; } ; Dashboard . prototype . configChanged = function ( isBootstrap ) { if ( isBootstrap ) { return ; } this . config . id = this . getId ( ) ; } ; Dashboard . prototype . getDefaultEmbedUrlEndpoint = function ( ) { return "s" ; } ; Dashboard . prototype . ValidatePageView = function ( pageView ) { if ( pageView && pageView !== "s" && pageView !== "s" && pageView !== "s" ) { return [ { message : "s" } ] ; } } ; Dashboard . allowedEvents = [ "s" , "s" ] ; Dashboard . dashboardIdAttribute = 's' ; Dashboard . typeAttribute = 's' ; Dashboard . type = "s" ; return Dashboard ; } ( embed . Embed ) ) ; exports . Dashboard = Dashboard ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; var models = __webpack_require__ ( 0 ) ; var embed = __webpack_require__ ( 0 ) ; var Tile = ( function ( _super ) { __extends ( Tile , _super ) ; function Tile ( service , element , baseConfig , phasedRender , isBootstrap ) { var config = baseConfig ; _super . call ( this , service , element , config , undefined , phasedRender , isBootstrap ) ; this . loadPath = "s" ; Array . prototype . push . apply ( this . allowedEvents , Tile . allowedEvents ) ; } Tile . prototype . getId = function ( ) { var config = this . config ; var tileId = config . id || Tile . findIdFromEmbedUrl ( this . config . embedUrl ) ; if ( typeof tileId !== 's' || tileId . length === 0 ) { throw new Error ( "s" ) ; } return tileId ; } ; Tile . prototype . validate = function ( config ) { var embedConfig = config ; return models . validateTileLoad ( embedConfig ) ; } ; Tile . prototype . configChanged = function ( isBootstrap ) { if ( isBootstrap ) { return ; } this . config . id = this . getId ( ) ; } ; Tile . prototype . getDefaultEmbedUrlEndpoint = function ( ) { return "s" ; } ; Tile . findIdFromEmbedUrl = function ( url ) { var tileIdRegEx = "s" ; var tileIdMatch = url . match ( tileIdRegEx ) ; var tileId ; if ( tileIdMatch ) { tileId = tileIdMatch [ 0 ] ; } return tileId ; } ; Tile . type = "s" ; Tile . allowedEvents = [ "s" , "s" ] ; return Tile ; } ( embed . Embed ) ) ; exports . Tile = Tile ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; var models = __webpack_require__ ( 0 ) ; var embed = __webpack_require__ ( 0 ) ; var Qna = ( function ( _super ) { __extends ( Qna , _super ) ; function Qna ( service , element , config , phasedRender , isBootstrap ) { _super . call ( this , service , element , config , undefined , phasedRender , isBootstrap ) ; this . loadPath = "s" ; this . phasedLoadPath = "s" ; Array . prototype . push . apply ( this . allowedEvents , Qna . allowedEvents ) ; } Qna . prototype . getId = function ( ) { return null ; } ; Qna . prototype . setQuestion = function ( question ) { var qnaData = { question : question } ; return this . service . hpm . post ( 's' , qnaData , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( function ( response ) { throw response . body ; } ) ; } ; Qna . prototype . configChanged = function ( isBootstrap ) { } ; Qna . prototype . getDefaultEmbedUrlEndpoint = function ( ) { return "s" ; } ; Qna . prototype . validate = function ( config ) { return models . validateLoadQnaConfiguration ( config ) ; } ; Qna . type = "s" ; Qna . allowedEvents = [ "s" , "s" ] ; return Qna ; } ( embed . Embed ) ) ; exports . Qna = Qna ; } ) , ( function ( module , exports , __webpack_require__ ) { var __extends = ( this && this . __extends ) || function ( d , b ) { for ( var p in b ) if ( b . hasOwnProperty ( p ) ) d [ p ] = b [ p ] ; function __ ( ) { this . constructor = d ; } d . prototype = b === null ? Object . create ( b ) : ( __ . prototype = b . prototype , new __ ( ) ) ; } ; var models = __webpack_require__ ( 0 ) ; var 0 = __webpack_require__ ( 0 ) ; var Visual = ( function ( _super ) { __extends ( Visual , _super ) ; function Visual ( service , element , baseConfig , phasedRender , isBootstrap , iframe ) { _super . call ( this , service , element , baseConfig , phasedRender , isBootstrap , iframe ) ; } Visual . prototype . load = function ( baseConfig , phasedRender ) { var config = baseConfig ; if ( ! config . accessToken ) { return ; } if ( typeof config . pageName !== 's' || config . pageName . length === 0 ) { throw new Error ( "s" ) ; } if ( typeof config . visualName !== 's' || config . visualName . length === 0 ) { throw new Error ( "s" ) ; } var width = config . width ? config . width : this . iframe . offsetWidth ; var height = config . height ? config . height : this . iframe . offsetHeight ; var pageSize = { type : models . PageSizeType . Custom , width : width , height : height , } ; var pagesLayout = { } ; pagesLayout [ config . pageName ] = { defaultLayout : { displayState : { mode : models . VisualContainerDisplayMode . Hidden } } , visualsLayout : { } } ; pagesLayout [ config . pageName ] . visualsLayout [ config . visualName ] = { displayState : { mode : models . VisualContainerDisplayMode . Visible } , x : 0 , y : 0 , z : 0 , width : pageSize . width , height : pageSize . height } ; config . settings = config . settings || { } ; config . settings . filterPaneEnabled = false ; config . settings . navContentPaneEnabled = false ; config . settings . layoutType = models . LayoutType . Custom ; config . settings . customLayout = { displayOption : models . DisplayOption . FitToPage , pageSize : pageSize , pagesLayout : pagesLayout } ; return _super . prototype . load . call ( this , config , phasedRender ) ; } ; Visual . prototype . getPages = function ( ) { throw Visual . GetPagesNotSupportedError ; } ; Visual . prototype . setPage = function ( pageName ) { throw Visual . SetPageNotSupportedError ; } ; Visual . prototype . getFilters = function ( filtersLevel ) { var url = this . getFiltersLevelUrl ( filtersLevel ) ; return this . service . hpm . get ( url , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( response ) { return response . body ; } , function ( response ) { throw response . body ; } ) ; } ; Visual . prototype . setFilters = function ( filters , filtersLevel ) { var url = this . getFiltersLevelUrl ( filtersLevel ) ; return this . service . hpm . put ( url , filters , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( function ( response ) { throw response . body ; } ) ; } ; Visual . prototype . removeFilters = function ( filtersLevel ) { return this . setFilters ( [ ] , filtersLevel ) ; } ; Visual . prototype . getFiltersLevelUrl = function ( filtersLevel ) { var config = this . config ; switch ( filtersLevel ) { case models . FiltersLevel . Report : return "s" ; case models . FiltersLevel . Page : return "s" + config . pageName + "s" ; default : return "s" + config . pageName + "s" + config . visualName + "s" ; } } ; Visual . type = "s" ; Visual . GetPagesNotSupportedError = "s" ; Visual . SetPageNotSupportedError = "s" ; return Visual ; } ( 0 . Report ) ) ; exports . Visual = Visual ; } ) , ( function ( module , exports , __webpack_require__ ) { var 0 = __webpack_require__ ( 0 ) ; var wpmp = __webpack_require__ ( 0 ) ; var hpm = __webpack_require__ ( 0 ) ; var router = __webpack_require__ ( 0 ) ; exports . hpmFactory = function ( wpmp , defaultTargetWindow , sdkVersion , sdkType ) { if ( sdkVersion === void 0 ) { sdkVersion = 0 . default . version ; } if ( sdkType === void 0 ) { sdkType = 0 . default . type ; } return new hpm . HttpPostMessage ( wpmp , { 's' : sdkType , 's' : sdkVersion } , defaultTargetWindow ) ; } ; exports . wpmpFactory = function ( name , logMessages , eventSourceOverrideWindow ) { return new wpmp . WindowPostMessageProxy ( { processTrackingProperties : { addTrackingProperties : hpm . HttpPostMessage . addTrackingProperties , getTrackingProperties : hpm . HttpPostMessage . getTrackingProperties , } , isErrorMessage : hpm . HttpPostMessage . isErrorMessage , suppressWarnings : true , name : name , logMessages : logMessages , eventSourceOverrideWindow : eventSourceOverrideWindow } ) ; } ; exports . routerFactory = function ( wpmp ) { return new router . Router ( wpmp ) ; } ; } ) , ( function ( module , exports , __webpack_require__ ) { ( function webpackUniversalModuleDefinition ( root , factory ) { if ( true ) module . exports = factory ( ) ; else if ( typeof define === 's' && define . amd ) define ( [ ] , factory ) ; else if ( typeof exports === 's' ) exports [ "s" ] = factory ( ) ; else root [ "s" ] = factory ( ) ; } ) ( this , function ( ) { return ( function ( modules ) { var installedModules = { } ; function __webpack_require__ ( moduleId ) { if ( installedModules [ moduleId ] ) return installedModules [ moduleId ] . exports ; var module = installedModules [ moduleId ] = { exports : { } , id : moduleId , loaded : false } ; modules [ moduleId ] . call ( module . exports , module , module . exports , __webpack_require__ ) ; module . loaded = true ; return module . exports ; } __webpack_require__ . m = modules ; __webpack_require__ . c = installedModules ; __webpack_require__ . p = "s" ; return __webpack_require__ ( 0 ) ; } ) ( [ ( function ( module , exports ) { "s" ; var WindowPostMessageProxy = ( function ( ) { function WindowPostMessageProxy ( options ) { var _this = this ; if ( options === void 0 ) { options = { processTrackingProperties : { addTrackingProperties : WindowPostMessageProxy . defaultAddTrackingProperties , getTrackingProperties : WindowPostMessageProxy . defaultGetTrackingProperties } , isErrorMessage : WindowPostMessageProxy . defaultIsErrorMessage , receiveWindow : window , name : WindowPostMessageProxy . createRandomString ( ) } ; } this . pendingRequestPromises = { } ; this . addTrackingProperties = ( options . processTrackingProperties && options . processTrackingProperties . addTrackingProperties ) || WindowPostMessageProxy . defaultAddTrackingProperties ; this . getTrackingProperties = ( options . processTrackingProperties && options . processTrackingProperties . getTrackingProperties ) || WindowPostMessageProxy . defaultGetTrackingProperties ; this . isErrorMessage = options . isErrorMessage || WindowPostMessageProxy . defaultIsErrorMessage ; this . receiveWindow = options . receiveWindow || window ; this . name = options . name || WindowPostMessageProxy . createRandomString ( ) ; this . logMessages = options . logMessages || false ; this . eventSourceOverrideWindow = options . eventSourceOverrideWindow ; this . suppressWarnings = options . suppressWarnings || false ; if ( this . logMessages ) { console . log ( "s" + this . name + "s" + this . receiveWindow . document . title ) ; } this . handlers = [ ] ; this . windowMessageHandler = function ( event ) { return _this . onMessageReceived ( event ) ; } ; this . start ( ) ; } WindowPostMessageProxy . defaultAddTrackingProperties = function ( message , trackingProperties ) { message [ WindowPostMessageProxy . messagePropertyName ] = trackingProperties ; return message ; } ; WindowPostMessageProxy . defaultGetTrackingProperties = function ( message ) { return message [ WindowPostMessageProxy . messagePropertyName ] ; } ; WindowPostMessageProxy . defaultIsErrorMessage = function ( message ) { return ! ! message . error ; } ; WindowPostMessageProxy . createDeferred = function ( ) { var deferred = { resolve : null , reject : null , promise : null } ; var promise = new Promise ( function ( resolve , reject ) { deferred . resolve = resolve ; deferred . reject = reject ; } ) ; deferred . promise = promise ; return deferred ; } ; WindowPostMessageProxy . createRandomString = function ( ) { return ( Math . random ( ) + 0 ) . toString ( 0 ) . substring ( 0 ) ; } ; WindowPostMessageProxy . prototype . addHandler = function ( handler ) { this . handlers . push ( handler ) ; } ; WindowPostMessageProxy . prototype . removeHandler = function ( handler ) { var handlerIndex = this . handlers . indexOf ( handler ) ; if ( handlerIndex === - 0 ) { throw new Error ( "s" ) ; } this . handlers . splice ( handlerIndex , 0 ) ; } ; WindowPostMessageProxy . prototype . start = function ( ) { this . receiveWindow . addEventListener ( 's' , this . windowMessageHandler ) ; } ; WindowPostMessageProxy . prototype . stop = function ( ) { this . receiveWindow . removeEventListener ( 's' , this . windowMessageHandler ) ; } ; WindowPostMessageProxy . prototype . postMessage = function ( targetWindow , message ) { var trackingProperties = { id : WindowPostMessageProxy . createRandomString ( ) } ; this . addTrackingProperties ( message , trackingProperties ) ; if ( this . logMessages ) { console . log ( this . name + "s" ) ; console . log ( JSON . stringify ( message , null , 's' ) ) ; } targetWindow . postMessage ( message , "s" ) ; var deferred = WindowPostMessageProxy . createDeferred ( ) ; this . pendingRequestPromises [ trackingProperties . id ] = deferred ; return deferred . promise ; } ; WindowPostMessageProxy . prototype . sendResponse = function ( targetWindow , message , trackingProperties ) { this . addTrackingProperties ( message , trackingProperties ) ; if ( this . logMessages ) { console . log ( this . name + "s" ) ; console . log ( JSON . stringify ( message , null , 's' ) ) ; } targetWindow . postMessage ( message , "s" ) ; } ; WindowPostMessageProxy . prototype . onMessageReceived = function ( event ) { var _this = this ; if ( this . logMessages ) { console . log ( this . name + "s" ) ; console . log ( "s" + event . type ) ; console . log ( JSON . stringify ( event . data , null , 's' ) ) ; } var sendingWindow = this . eventSourceOverrideWindow || event . source ; var message = event . data ; if ( typeof message !== "s" ) { if ( ! this . suppressWarnings ) { console . warn ( "s" + this . name + "s" ) ; } return ; } var trackingProperties ; try { trackingProperties = this . getTrackingProperties ( message ) ; } catch ( e ) { if ( ! this . suppressWarnings ) { console . warn ( "s" + this . name + "s" , JSON . stringify ( message , null , 's' ) , "s" , e ) ; } } var deferred ; if ( trackingProperties ) { deferred = this . pendingRequestPromises [ trackingProperties . id ] ; } if ( ! deferred ) { var handled = this . handlers . some ( function ( handler ) { var canMessageBeHandled = false ; try { canMessageBeHandled = handler . test ( message ) ; } catch ( e ) { if ( ! _this . suppressWarnings ) { console . warn ( "s" + _this . name + "s" , JSON . stringify ( message , null , 's' ) , "s" , e ) ; } } if ( canMessageBeHandled ) { var responseMessagePromise = void 0 ; try { responseMessagePromise = Promise . resolve ( handler . handle ( message ) ) ; } catch ( e ) { if ( ! _this . suppressWarnings ) { console . warn ( "s" + _this . name + "s" , JSON . stringify ( message , null , 's' ) , "s" , e ) ; } responseMessagePromise = Promise . resolve ( ) ; } responseMessagePromise . then ( function ( responseMessage ) { if ( ! responseMessage ) { var warningMessage = "s" + JSON . stringify ( message , null , 's' ) + "s" ; if ( ! _this . suppressWarnings ) { console . warn ( "s" + _this . name + "s" + warningMessage ) ; } responseMessage = { warning : warningMessage } ; } _this . sendResponse ( sendingWindow , responseMessage , trackingProperties ) ; } ) ; return true ; } } ) ; if ( ! handled && ! this . suppressWarnings ) { console . warn ( "s" + this . name + "s" + this . handlers . length + "s" + JSON . stringify ( message , null , 's' ) + "s" ) ; } } else { var isErrorMessage = true ; try { isErrorMessage = this . isErrorMessage ( message ) ; } catch ( e ) { console . warn ( "s" + this . name + "s" , JSON . stringify ( message , null , 's' ) , 's' , e ) ; } if ( isErrorMessage ) { deferred . reject ( message ) ; } else { deferred . resolve ( message ) ; } delete this . pendingRequestPromises [ trackingProperties . id ] ; } } ; WindowPostMessageProxy . messagePropertyName = "s" ; return WindowPostMessageProxy ; } ( ) ) ; exports . WindowPostMessageProxy = WindowPostMessageProxy ; } ) ] ) } ) ; ; } ) , ( function ( module , exports , __webpack_require__ ) { ( function webpackUniversalModuleDefinition ( root , factory ) { if ( true ) module . exports = factory ( ) ; else if ( typeof define === 's' && define . amd ) define ( [ ] , factory ) ; else if ( typeof exports === 's' ) exports [ "s" ] = factory ( ) ; else root [ "s" ] = factory ( ) ; } ) ( this , function ( ) { return ( function ( modules ) { var installedModules = { } ; function __webpack_require__ ( moduleId ) { if ( installedModules [ moduleId ] ) return installedModules [ moduleId ] . exports ; var module = installedModules [ moduleId ] = { exports : { } , id : moduleId , loaded : false } ; modules [ moduleId ] . call ( module . exports , module , module . exports , __webpack_require__ ) ; module . loaded = true ; return module . exports ; } __webpack_require__ . m = modules ; __webpack_require__ . c = installedModules ; __webpack_require__ . p = "s" ; return __webpack_require__ ( 0 ) ; } ) ( [ function ( module , exports ) { "s" ; var HttpPostMessage = ( function ( ) { function HttpPostMessage ( windowPostMessageProxy , defaultHeaders , defaultTargetWindow ) { if ( defaultHeaders === void 0 ) { defaultHeaders = { } ; } this . defaultHeaders = defaultHeaders ; this . defaultTargetWindow = defaultTargetWindow ; this . windowPostMessageProxy = windowPostMessageProxy ; } HttpPostMessage . addTrackingProperties = function ( message , trackingProperties ) { message . headers = message . headers || { } ; if ( trackingProperties && trackingProperties . id ) { message . headers . id = trackingProperties . id ; } return message ; } ; HttpPostMessage . getTrackingProperties = function ( message ) { return { id : message . headers && message . headers . id } ; } ; HttpPostMessage . isErrorMessage = function ( message ) { if ( typeof ( message && message . statusCode ) !== 's' ) { return false ; } return ! ( 0 <= message . statusCode && message . statusCode < 0 ) ; } ; HttpPostMessage . prototype . get = function ( url , headers , targetWindow ) { if ( headers === void 0 ) { headers = { } ; } if ( targetWindow === void 0 ) { targetWindow = this . defaultTargetWindow ; } return this . send ( { method : "s" , url : url , headers : headers } , targetWindow ) ; } ; HttpPostMessage . prototype . post = function ( url , body , headers , targetWindow ) { if ( headers === void 0 ) { headers = { } ; } if ( targetWindow === void 0 ) { targetWindow = this . defaultTargetWindow ; } return this . send ( { method : "s" , url : url , headers : headers , body : body } , targetWindow ) ; } ; HttpPostMessage . prototype . put = function ( url , body , headers , targetWindow ) { if ( headers === void 0 ) { headers = { } ; } if ( targetWindow === void 0 ) { targetWindow = this . defaultTargetWindow ; } return this . send ( { method : "s" , url : url , headers : headers , body : body } , targetWindow ) ; } ; HttpPostMessage . prototype . patch = function ( url , body , headers , targetWindow ) { if ( headers === void 0 ) { headers = { } ; } if ( targetWindow === void 0 ) { targetWindow = this . defaultTargetWindow ; } return this . send ( { method : "s" , url : url , headers : headers , body : body } , targetWindow ) ; } ; HttpPostMessage . prototype . delete = function ( url , body , headers , targetWindow ) { if ( body === void 0 ) { body = null ; } if ( headers === void 0 ) { headers = { } ; } if ( targetWindow === void 0 ) { targetWindow = this . defaultTargetWindow ; } return this . send ( { method : "s" , url : url , headers : headers , body : body } , targetWindow ) ; } ; HttpPostMessage . prototype . send = function ( request , targetWindow ) { if ( targetWindow === void 0 ) { targetWindow = this . defaultTargetWindow ; } request . headers = this . assign ( { } , this . defaultHeaders , request . headers ) ; if ( ! targetWindow ) { throw new Error ( "s" ) ; } return this . windowPostMessageProxy . postMessage ( targetWindow , request ) ; } ; HttpPostMessage . prototype . assign = function ( target ) { var sources = [ ] ; for ( var _i = 0 ; _i < arguments . length ; _i ++ ) { sources [ _i - 0 ] = arguments [ _i ] ; } if ( target === undefined || target === null ) { throw new TypeError ( 's' ) ; } var output = Object ( target ) ; sources . forEach ( function ( source ) { if ( source !== undefined && source !== null ) { for ( var nextKey in source ) { if ( Object . prototype . hasOwnProperty . call ( source , nextKey ) ) { output [ nextKey ] = source [ nextKey ] ; } } } } ) ; return output ; } ; return HttpPostMessage ; } ( ) ) ; exports . HttpPostMessage = HttpPostMessage ; } ] ) } ) ; ; } ) , ( function ( module , exports , __webpack_require__ ) { ( function webpackUniversalModuleDefinition ( root , factory ) { if ( true ) module . exports = factory ( ) ; else if ( typeof define === 's' && define . amd ) define ( [ ] , factory ) ; else if ( typeof exports === 's' ) exports [ "s" ] = factory ( ) ; else root [ "s" ] = factory ( ) ; } ) ( this , function ( ) { return ( function ( modules ) { var installedModules = { } ; function __webpack_require__ ( moduleId ) { if ( installedModules [ moduleId ] ) return installedModules [ moduleId ] . exports ; var module = installedModules [ moduleId ] = { exports : { } , id : moduleId , loaded : false } ; modules [ moduleId ] . call ( module . exports , module , module . exports , __webpack_require__ ) ; module . loaded = true ; return module . exports ; } __webpack_require__ . m = modules ; __webpack_require__ . c = installedModules ; __webpack_require__ . p = "s" ; return __webpack_require__ ( 0 ) ; } ) ( [ function ( module , exports , __webpack_require__ ) { "s" ; var RouteRecognizer = __webpack_require__ ( 0 ) ; var Router = ( function ( ) { function Router ( handlers ) { this . handlers = handlers ; this . getRouteRecognizer = new RouteRecognizer ( ) ; this . patchRouteRecognizer = new RouteRecognizer ( ) ; this . postRouteRecognizer = new RouteRecognizer ( ) ; this . putRouteRecognizer = new RouteRecognizer ( ) ; this . deleteRouteRecognizer = new RouteRecognizer ( ) ; } Router . prototype . get = function ( url , handler ) { this . registerHandler ( this . getRouteRecognizer , "s" , url , handler ) ; return this ; } ; Router . prototype . patch = function ( url , handler ) { this . registerHandler ( this . patchRouteRecognizer , "s" , url , handler ) ; return this ; } ; Router . prototype . post = function ( url , handler ) { this . registerHandler ( this . postRouteRecognizer , "s" , url , handler ) ; return this ; } ; Router . prototype . put = function ( url , handler ) { this . registerHandler ( this . putRouteRecognizer , "s" , url , handler ) ; return this ; } ; Router . prototype . delete = function ( url , handler ) { this . registerHandler ( this . deleteRouteRecognizer , "s" , url , handler ) ; return this ; } ; Router . prototype . registerHandler = function ( routeRecognizer , method , url , handler ) { var routeRecognizerHandler = function ( request ) { var response = new Response ( ) ; return Promise . resolve ( handler ( request , response ) ) . then ( function ( x ) { return response ; } ) ; } ; routeRecognizer . add ( [ { path : url , handler : routeRecognizerHandler } ] ) ; var internalHandler = { test : function ( request ) { if ( request . method !== method ) { return false ; } var matchingRoutes = routeRecognizer . recognize ( request . url ) ; if ( matchingRoutes === undefined ) { return false ; } var route = matchingRoutes [ 0 ] ; request . params = route . params ; request . queryParams = matchingRoutes . queryParams ; request . handler = route . handler ; return true ; } , handle : function ( request ) { return request . handler ( request ) ; } } ; this . handlers . addHandler ( internalHandler ) ; } ; return Router ; } ( ) ) ; exports . Router = Router ; var Response = ( function ( ) { function Response ( ) { this . statusCode = 0 ; this . headers = { } ; this . body = null ; } Response . prototype . send = function ( statusCode , body ) { this . statusCode = statusCode ; this . body = body ; } ; return Response ; } ( ) ) ; exports . Response = Response ; } , function ( module , exports , __webpack_require__ ) { var __WEBPACK_AMD_DEFINE_RESULT__ ; ( function ( module ) { ( function ( ) { "s" ; function $$route$recognizer$dsl$$Target ( path , matcher , delegate ) { this . path = path ; this . matcher = matcher ; this . delegate = delegate ; } $$route$recognizer$dsl$$Target . prototype = { to : function ( target , callback ) { var delegate = this . delegate ; if ( delegate && delegate . willAddRoute ) { target = delegate . willAddRoute ( this . matcher . target , target ) ; } this . matcher . add ( this . path , target ) ; if ( callback ) { if ( callback . length === 0 ) { throw new Error ( "s" ) ; } this . matcher . addChild ( this . path , target , callback , this . delegate ) ; } return this ; } } ; function $$route$recognizer$dsl$$Matcher ( target ) { this . routes = { } ; this . children = { } ; this . target = target ; } $$route$recognizer$dsl$$Matcher . prototype = { add : function ( path , handler ) { this . routes [ path ] = handler ; } , addChild : function ( path , target , callback , delegate ) { var matcher = new $$route$recognizer$dsl$$Matcher ( target ) ; this . children [ path ] = matcher ; var match = $$route$recognizer$dsl$$generateMatch ( path , matcher , delegate ) ; if ( delegate && delegate . contextEntered ) { delegate . contextEntered ( target , match ) ; } callback ( match ) ; } } ; function $$route$recognizer$dsl$$generateMatch ( startingPath , matcher , delegate ) { return function ( path , nestedCallback ) { var fullPath = startingPath + path ; if ( nestedCallback ) { nestedCallback ( $$route$recognizer$dsl$$generateMatch ( fullPath , matcher , delegate ) ) ; } else { return new $$route$recognizer$dsl$$Target ( startingPath + path , matcher , delegate ) ; } } ; } function $$route$recognizer$dsl$$addRoute ( routeArray , path , handler ) { var len = 0 ; for ( var i = 0 ; i < routeArray . length ; i ++ ) { len += routeArray [ i ] . path . length ; } path = path . substr ( len ) ; var route = { path : path , handler : handler } ; routeArray . push ( route ) ; } function $$route$recognizer$dsl$$eachRoute ( baseRoute , matcher , callback , binding ) { var routes = matcher . routes ; for ( var path in routes ) { if ( routes . hasOwnProperty ( path ) ) { var routeArray = baseRoute . slice ( ) ; $$route$recognizer$dsl$$addRoute ( routeArray , path , routes [ path ] ) ; if ( matcher . children [ path ] ) { $$route$recognizer$dsl$$eachRoute ( routeArray , matcher . children [ path ] , callback , binding ) ; } else { callback . call ( binding , routeArray ) ; } } } } var $$route$recognizer$dsl$$default = function ( callback , addRouteCallback ) { var matcher = new $$route$recognizer$dsl$$Matcher ( ) ; callback ( $$route$recognizer$dsl$$generateMatch ( "s" , matcher , this . delegate ) ) ; $$route$recognizer$dsl$$eachRoute ( [ ] , matcher , function ( route ) { if ( addRouteCallback ) { addRouteCallback ( this , route ) ; } else { this . add ( route ) ; } } , this ) ; } ; var $$route$recognizer$$specials = [ 's' , 's' , 's' , 's' , 's' , 's' , 's' , 's' , 's' , 's' , 's' , 's' , 's' ] ; var $$route$recognizer$$escapeRegex = new RegExp ( 's' + $$route$recognizer$$specials . join ( 's' ) + 's' , 's' ) ; function $$route$recognizer$$isArray ( test ) { return Object . prototype . toString . call ( test ) === "s" ; } function $$route$recognizer$$StaticSegment ( string ) { this . string = string ; } $$route$recognizer$$StaticSegment . prototype = { eachChar : function ( currentState ) { var string = this . string , ch ; for ( var i = 0 ; i < string . length ; i ++ ) { ch = string . charAt ( i ) ; currentState = currentState . put ( { invalidChars : undefined , repeat : false , validChars : ch } ) ; } return currentState ; } , regex : function ( ) { return this . string . replace ( $$route$recognizer$$escapeRegex , 's' ) ; } , generate : function ( ) { return this . string ; } } ; function $$route$recognizer$$DynamicSegment ( name ) { this . name = name ; } $$route$recognizer$$DynamicSegment . prototype = { eachChar : function ( currentState ) { return currentState . put ( { invalidChars : "s" , repeat : true , validChars : undefined } ) ; } , regex : function ( ) { return "s" ; } , generate : function ( params ) { return params [ this . name ] ; } } ; function $$route$recognizer$$StarSegment ( name ) { this . name = name ; } $$route$recognizer$$StarSegment . prototype = { eachChar : function ( currentState ) { return currentState . put ( { invalidChars : "s" , repeat : true , validChars : undefined } ) ; } , regex : function ( ) { return "s" ; } , generate : function ( params ) { return params [ this . name ] ; } } ; function $$route$recognizer$$EpsilonSegment ( ) { } $$route$recognizer$$EpsilonSegment . prototype = { eachChar : function ( currentState ) { return currentState ; } , regex : function ( ) { return "s" ; } , generate : function ( ) { return "s" ; } } ; function $$route$recognizer$$parse ( route , names , specificity ) { if ( route . charAt ( 0 ) === "s" ) { route = route . substr ( 0 ) ; } var segments = route . split ( "s" ) ; var results = new Array ( segments . length ) ; specificity . val = 's' ; for ( var i = 0 ; i < segments . length ; i ++ ) { var segment = segments [ i ] , match ; if ( match = segment . match ( "s" ) ) { results [ i ] = new $$route$recognizer$$DynamicSegment ( match [ 0 ] ) ; names . push ( match [ 0 ] ) ; specificity . val += 's' ; } else if ( match = segment . match ( "s" ) ) { results [ i ] = new $$route$recognizer$$StarSegment ( match [ 0 ] ) ; specificity . val += 's' ; names . push ( match [ 0 ] ) ; } else if ( segment === "s" ) { results [ i ] = new $$route$recognizer$$EpsilonSegment ( ) ; specificity . val += 's' ; } else { results [ i ] = new $$route$recognizer$$StaticSegment ( segment ) ; specificity . val += 's' ; } } specificity . val = + specificity . val ; return results ; } function $$route$recognizer$$State ( charSpec ) { this . charSpec = charSpec ; this . nextStates = [ ] ; this . charSpecs = { } ; this . regex = undefined ; this . handlers = undefined ; this . specificity = undefined ; } $$route$recognizer$$State . prototype = { get : function ( charSpec ) { if ( this . charSpecs [ charSpec . validChars ] ) { return this . charSpecs [ charSpec . validChars ] ; } var nextStates = this . nextStates ; for ( var i = 0 ; i < nextStates . length ; i ++ ) { var child = nextStates [ i ] ; var isEqual = child . charSpec . validChars === charSpec . validChars ; isEqual = isEqual && child . charSpec . invalidChars === charSpec . invalidChars ; if ( isEqual ) { this . charSpecs [ charSpec . validChars ] = child ; return child ; } } } , put : function ( charSpec ) { var state ; if ( state = this . get ( charSpec ) ) { return state ; } state = new $$route$recognizer$$State ( charSpec ) ; this . nextStates . push ( state ) ; if ( charSpec . repeat ) { state . nextStates . push ( state ) ; } return state ; } , match : function ( ch ) { var nextStates = this . nextStates , child , charSpec , chars ; var returned = [ ] ; for ( var i = 0 ; i < nextStates . length ; i ++ ) { child = nextStates [ i ] ; charSpec = child . charSpec ; if ( typeof ( chars = charSpec . validChars ) !== 's' ) { if ( chars . indexOf ( ch ) !== - 0 ) { returned . push ( child ) ; } } else if ( typeof ( chars = charSpec . invalidChars ) !== 's' ) { if ( chars . indexOf ( ch ) === - 0 ) { returned . push ( child ) ; } } } return returned ; } } ; function $$route$recognizer$$sortSolutions ( states ) { return states . sort ( function ( a , b ) { return b . specificity . val - a . specificity . val ; } ) ; } function $$route$recognizer$$recognizeChar ( states , ch ) { var nextStates = [ ] ; for ( var i = 0 , l = states . length ; i < l ; i ++ ) { var state = states [ i ] ; nextStates = nextStates . concat ( state . match ( ch ) ) ; } return nextStates ; } var $$route$recognizer$$oCreate = Object . create || function ( proto ) { function F ( ) { } F . prototype = proto ; return new F ( ) ; } ; function $$route$recognizer$$RecognizeResults ( queryParams ) { this . queryParams = queryParams || { } ; } $$route$recognizer$$RecognizeResults . prototype = $$route$recognizer$$oCreate ( { splice : Array . prototype . splice , slice : Array . prototype . slice , push : Array . prototype . push , length : 0 , queryParams : null } ) ; function $$route$recognizer$$findHandler ( state , path , queryParams ) { var handlers = state . handlers , regex = state . regex ; var captures = path . match ( regex ) , currentCapture = 0 ; var result = new $$route$recognizer$$RecognizeResults ( queryParams ) ; result . length = handlers . length ; for ( var i = 0 ; i < handlers . length ; i ++ ) { var handler = handlers [ i ] , names = handler . names , params = { } ; for ( var j = 0 ; j < names . length ; j ++ ) { params [ names [ j ] ] = captures [ currentCapture ++ ] ; } result [ i ] = { handler : handler . handler , params : params , isDynamic : ! ! names . length } ; } return result ; } function $$route$recognizer$$decodeQueryParamPart ( part ) { part = part . replace ( "s" , 's' ) ; var result ; try { result = decodeURIComponent ( part ) ; } catch ( error ) { result = 's' ; } return result ; } var $$route$recognizer$$RouteRecognizer = function ( ) { this . rootState = new $$route$recognizer$$State ( ) ; this . names = { } ; } ; $$route$recognizer$$RouteRecognizer . prototype = { add : function ( routes , options ) { var currentState = this . rootState , regex = "s" , specificity = { } , handlers = new Array ( routes . length ) , allSegments = [ ] , name ; var isEmpty = true ; for ( var i = 0 ; i < routes . length ; i ++ ) { var route = routes [ i ] , names = [ ] ; var segments = $$route$recognizer$$parse ( route . path , names , specificity ) ; allSegments = allSegments . concat ( segments ) ; for ( var j = 0 ; j < segments . length ; j ++ ) { var segment = segments [ j ] ; if ( segment instanceof $$route$recognizer$$EpsilonSegment ) { continue ; } isEmpty = false ; currentState = currentState . put ( { invalidChars : undefined , repeat : false , validChars : "s" } ) ; regex += "s" ; currentState = segment . eachChar ( currentState ) ; regex += segment . regex ( ) ; } var handler = { handler : route . handler , names : names } ; handlers [ i ] = handler ; } if ( isEmpty ) { currentState = currentState . put ( { invalidChars : undefined , repeat : false , validChars : "s" } ) ; regex += "s" ; } currentState . handlers = handlers ; currentState . regex = new RegExp ( regex + "s" ) ; currentState . specificity = specificity ; if ( name = options && options . as ) { this . names [ name ] = { segments : allSegments , handlers : handlers } ; } } , handlersFor : function ( name ) { var route = this . names [ name ] ; if ( ! route ) { throw new Error ( "s" + name ) ; } var result = new Array ( route . handlers . length ) ; for ( var i = 0 ; i < route . handlers . length ; i ++ ) { result [ i ] = route . handlers [ i ] ; } return result ; } , hasRoute : function ( name ) { return ! ! this . names [ name ] ; } , generate : function ( name , params ) { var route = this . names [ name ] , output = "s" ; if ( ! route ) { throw new Error ( "s" + name ) ; } var segments = route . segments ; for ( var i = 0 ; i < segments . length ; i ++ ) { var segment = segments [ i ] ; if ( segment instanceof $$route$recognizer$$EpsilonSegment ) { continue ; } output += "s" ; output += segment . generate ( params ) ; } if ( output . charAt ( 0 ) !== 's' ) { output = 's' + output ; } if ( params && params . queryParams ) { output += this . generateQueryString ( params . queryParams , route . handlers ) ; } return output ; } , generateQueryString : function ( params , handlers ) { var pairs = [ ] ; var keys = [ ] ; for ( var key in params ) { if ( params . hasOwnProperty ( key ) ) { keys . push ( key ) ; } } keys . sort ( ) ; for ( var i = 0 ; i < keys . length ; i ++ ) { key = keys [ i ] ; var value = params [ key ] ; if ( value == null ) { continue ; } var pair = encodeURIComponent ( key ) ; if ( $$route$recognizer$$isArray ( value ) ) { for ( var j = 0 ; j < value . length ; j ++ ) { var arrayPair = key + 's' + 's' + encodeURIComponent ( value [ j ] ) ; pairs . push ( arrayPair ) ; } } else { pair += "s" + encodeURIComponent ( value ) ; pairs . push ( pair ) ; } } if ( pairs . length === 0 ) { return 's' ; } return "s" + pairs . join ( "s" ) ; } , parseQueryString : function ( queryString ) { var pairs = queryString . split ( "s" ) , queryParams = { } ; for ( var i = 0 ; i < pairs . length ; i ++ ) { var pair = pairs [ i ] . split ( 's' ) , key = $$route$recognizer$$decodeQueryParamPart ( pair [ 0 ] ) , keyLength = key . length , isArray = false , value ; if ( pair . length === 0 ) { value = 's' ; } else { if ( keyLength > 0 && key . slice ( keyLength - 0 ) === 's' ) { isArray = true ; key = key . slice ( 0 , keyLength - 0 ) ; if ( ! queryParams [ key ] ) { queryParams [ key ] = [ ] ; } } value = pair [ 0 ] ? $$route$recognizer$$decodeQueryParamPart ( pair [ 0 ] ) : 's' ; } if ( isArray ) { queryParams [ key ] . push ( value ) ; } else { queryParams [ key ] = value ; } } return queryParams ; } , recognize : function ( path ) { var states = [ this . rootState ] , pathLen , i , l , queryStart , queryParams = { } , isSlashDropped = false ; queryStart = path . indexOf ( 's' ) ; if ( queryStart !== - 0 ) { var queryString = path . substr ( queryStart + 0 , path . length ) ; path = path . substr ( 0 , queryStart ) ; queryParams = this . parseQueryString ( queryString ) ; } path = decodeURI ( path ) ; if ( path . charAt ( 0 ) !== "s" ) { path = "s" + path ; } pathLen = path . length ; if ( pathLen > 0 && path . charAt ( pathLen - 0 ) === "s" ) { path = path . substr ( 0 , pathLen - 0 ) ; isSlashDropped = true ; } for ( i = 0 ; i < path . length ; i ++ ) { states = $$route$recognizer$$recognizeChar ( states , path . charAt ( i ) ) ; if ( ! states . length ) { break ; } } var solutions = [ ] ; for ( i = 0 ; i < states . length ; i ++ ) { if ( states [ i ] . handlers ) { solutions . push ( states [ i ] ) ; } } states = $$route$recognizer$$sortSolutions ( solutions ) ; var state = solutions [ 0 ] ; if ( state && state . handlers ) { if ( isSlashDropped && state . regex . source . slice ( - 0 ) === "s" ) { path = path + "s" ; } return $$route$recognizer$$findHandler ( state , path , queryParams ) ; } } } ; $$route$recognizer$$RouteRecognizer . prototype . map = $$route$recognizer$dsl$$default ; $$route$recognizer$$RouteRecognizer . VERSION = 's' ; var $$route$recognizer$$default = $$route$recognizer$$RouteRecognizer ; if ( "s" === 's' && __webpack_require__ ( 0 ) [ 's' ] ) { ! ( __WEBPACK_AMD_DEFINE_RESULT__ = function ( ) { return $$route$recognizer$$default ; } . call ( exports , __webpack_require__ , exports , module ) , __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && ( module . exports = __WEBPACK_AMD_DEFINE_RESULT__ ) ) ; } else if ( typeof module !== 's' && module [ 's' ] ) { module [ 's' ] = $$route$recognizer$$default ; } else if ( typeof this !== 's' ) { this [ 's' ] = $$route$recognizer$$default ; } } ) . call ( this ) ; } . call ( exports , __webpack_require__ ( 0 ) ( module ) ) ) } , function ( module , exports ) { module . exports = function ( module ) { if ( ! module . webpackPolyfill ) { module . deprecate = function ( ) { } ; module . paths = [ ] ; module . children = [ ] ; module . webpackPolyfill = 0 ; } return module ; } } , function ( module , exports ) { module . exports = function ( ) { throw new Error ( "s" ) ; } ; } ] ) } ) ; ; } ) ] ) } ) ; ;	O O O $void$ O $any$ O $any$ O O O O O $any$ O O O O $complex$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O $any$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O O O O O O O O O O O O O $void)[]$ O O O ${}$ O O O O O $complex$ O $any$ O O O O ${}$ O $any$ O O O ${}$ O $any$ O O $any$ O O $complex$ O ${}$ O $any$ O O O ${}$ O O O O $any$ O $any$ O $boolean$ O O O O $void)[]$ O $any$ O O $any$ O $complex$ O ${}$ O $complex$ O $complex$ O ${}$ O $complex$ O O $complex$ O $boolean$ O O O O $complex$ O ${}$ O O $complex$ O $void)[]$ O $void)[]$ O $complex$ O ${}$ O ${}$ O $complex$ O $string$ O O O O $complex$ O O O O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $complex$ O $Service$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $string$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $complex$ O $any$ O O O O O O $any$ O $any$ O O O O $any$ O O O O O $any$ O $any$ O $any$ O O O $HTMLElement$ O $any$ O O $any$ O $any$ O O O O $HTMLElement$ O $HTMLElement$ O O $any$ O O $any$ O $any$ O O O $HTMLElement$ O $any$ O O $HTMLElement$ O $any$ O $any$ O O O $void$ O $any$ O $HTMLElement$ O O O $any$ O O O $any$ O $any$ O $any[]$ O O O $HTMLElement$ O $any$ O O O $Service$ O O O O O $any$ O O O O O $any$ O $undefined$ O O $HTMLElement$ O O $HTMLElement$ O $HTMLElement$ O $complex$ O O $HTMLElement$ O $Document$ O $HTMLElement$ O O $any$ O $ArrayConstructor$ O $any[]$ O $any[]$ O $any$ O $HTMLElement$ O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O O O $Service$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $HTMLElement$ O $any$ O O O O $any$ O O O O O $any$ O O O O O O O O $any$ O $HTMLElement$ O $any$ O O O O $any$ O $any$ O $any$ O O O $HTMLElement$ O $any$ O O O O $any$ O O O O O $any$ O O O O O O O O $any$ O $HTMLElement$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O $HTMLElement$ O $any$ O O O O O $any$ O $HTMLElement$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O O O O $ErrorConstructor$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O O O O O O O O O O $any$ O O O O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O O $ErrorConstructor$ O O O $JSON$ O $complex$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any[]$ O O O O O $any$ O O O O $ErrorConstructor$ O O O $any$ O O O O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $void$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O O O O O $any$ O O O O $ErrorConstructor$ O O O $JSON$ O $complex$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $void$ O $any$ O $any$ O O O $any$ O O O O $ErrorConstructor$ O O O $JSON$ O $complex$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $void$ O O O O O O $Service$ O O O $complex$ O O O O O O O $Event$ O O O $Service$ O $any[]$ O $Document$ O $HTMLElement$ O O O O O O O O O $any$ O $any$ O $any$ O O O $HTMLElement$ O O O $HTMLElement$ O $HTMLElement$ O O O O $HTMLElement$ O $any$ O O O O $ErrorConstructor$ O O O $HTMLElement$ O $string$ O O O O O O $HTMLElement$ O $any$ O O O $any$ O $any$ O $any$ O O O $string$ O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $string$ O O O O O $any$ O O O O $any$ O $any$ O $void$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $void$ O O O $HTMLElement$ O O O $HTMLElement$ O $HTMLElement$ O O O O $HTMLElement$ O $any$ O O O O O O $any$ O $HTMLElement$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O O O $any$ O $HTMLElement$ O $any$ O O O O O $any$ O O O $HTMLElement$ O $any$ O O $HTMLIFrameElement$ O $HTMLElement$ O O O O O O O O $HTMLIFrameElement$ O O O O $HTMLIFrameElement$ O $void$ O $undefined$ O O $HTMLIFrameElement$ O $void$ O O O O O O $HTMLIFrameElement$ O $HTMLElement$ O $T$ O $HTMLIFrameElement$ O O O O O O $any$ O $any$ O $void$ O O O $any$ O O O O $any$ O $any$ O O O O O O $void$ O $any$ O O O O O $any$ O $any$ O $void$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $string$ O O O O $any$ O $any$ O $string$ O O O O O $any$ O O O O $ErrorConstructor$ O O O $string$ O O O O O $any$ O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $HTMLIFrameElement$ O O O $any$ O $HTMLElement$ O O O $HTMLIFrameElement$ O $Document$ O O O O O O $HTMLIFrameElement$ O $void$ O O O O O O $HTMLIFrameElement$ O $void$ O O O $any$ O $any$ O O $HTMLIFrameElement$ O $void$ O O O O O O $HTMLIFrameElement$ O $void$ O O O O O O O $HTMLElement$ O $HTMLElement$ O O O O $HTMLElement$ O O $HTMLElement$ O $Document$ O O O O O O O O O O $HTMLElement$ O $T$ O $HTMLIFrameElement$ O O $HTMLIFrameElement$ O $any$ O O O O O $any$ O $any$ O $HTMLIFrameElement$ O O O O O O O O O O $HTMLIFrameElement$ O O O $any$ O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $complex$ O O $boolean$ O O O $void$ O O O O O O $any[]$ O O O O O O O $number$ O O O $number$ O $IArguments$ O $number$ O $number$ O O O $any[]$ O $number$ O O O O $IArguments$ O $number$ O O O O $Console$ O $void$ O $any[]$ O O O O $any[]$ O $any[]$ O O O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O O O O $any$ O $any$ O $HTMLElement$ O $any$ O $any$ O $any$ O $any$ O O O O $any[]$ O O O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O O O $any$ O $any$ O $string[]$ O O O O $any[]$ O O O O O O $any$ O $any$ O O O $HTMLElement$ O $HTMLElement$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O O $any$ O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $Promise<void>$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<void>$ O O O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<void>$ O O O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<void>$ O O O $any$ O $boolean$ O O O $Embed$ O O O O O O $any$ O $any$ O O O O O O $any$ O $boolean$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $complex$ O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $any$ O $Embed$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $void$ O O O $string$ O $any$ O O O $Embed$ O O O O $complex$ O O $string$ O $string$ O $null$ O O O $null$ O O O $null$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O O O O $any[]$ O O O O $HTMLElement$ O O O $string$ O $any$ O O O O O O $any[]$ O O O $any[]$ O $complex$ O O O $any$ O O O $any$ O $any$ O $complex$ O O O O O $any[]$ O $void$ O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O $Embed$ O $any[]$ O O $Embed$ O $HTMLElement$ O O O $string$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $void$ O O O $string$ O $any$ O O O O O O $any[]$ O $number$ O $string$ O O O O O O O O $ErrorConstructor$ O O O O O $any[]$ O O O $string$ O O O O O $any[]$ O $number$ O O $boolean$ O O O $any$ O O O $any$ O $any$ O $string$ O O O $any$ O $any$ O O O O O $HTMLElement$ O O O $string$ O $any$ O O O O $any$ O $any$ O $Promise<void>$ O O O O O O O O $Promise<void>$ O O O $any$ O O O O $any$ O $any$ O $Promise<void>$ O O O $any$ O O O $Embed$ O O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O $Embed$ O $any$ O $any$ O $any$ O $Embed$ O $HTMLElement$ O $void$ O $any$ O $string$ O $any$ O O $Embed$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $string$ O O O $string$ O O O $any$ O O O $any$ O $any$ O O O $HTMLElement$ O $string$ O $any$ O $string$ O O $string$ O O O O $any$ O O O O $ErrorConstructor$ O O O $any$ O $string$ O O O O O O $any$ O O O $any$ O $any$ O $void$ O O O $any$ O $any$ O O O O O O $any$ O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O $any$ O O O $string$ O $any$ O O O O $any$ O $any$ O O O $string$ O O O O O $void$ O $any$ O O O O $any$ O $any$ O O O $string$ O O O O O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O $string$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O $void$ O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $string$ O O O $any$ O O O $any$ O O O $any$ O $any$ O O O $HTMLElement$ O $string$ O $any$ O $string$ O O O O $any$ O O $any$ O O $any$ O O O $string$ O O O $any$ O $any$ O O O O O O $any$ O O O $string$ O $number$ O O O O O O $ErrorConstructor$ O O O $any$ O $string$ O O O O O O $string$ O O O $any$ O $any$ O $string$ O O O $any$ O O O O O $any$ O O $any$ O $any$ O $string$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O O O O $ErrorConstructor$ O O O O O O O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $string$ O O O O O O O O $any$ O $any$ O O O $HTMLElement$ O $string$ O $any$ O $string$ O O $any$ O $any$ O O O O O $any$ O $any$ O $string$ O O O O O O O O $any$ O $any$ O $any$ O $string$ O O O $any$ O $any$ O O O O $any$ O $any$ O $void$ O O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $void$ O O O O O O O O O O $boolean$ O O O $any$ O O O O O O O $any$ O $Document$ O $Promise<void>$ O $Document$ O $Function$ O $Document$ O $any$ O $Document$ O $Function$ O $any$ O $any$ O $Document$ O O O O $any$ O $any$ O $boolean$ O O O $HTMLIFrameElement$ O O O $string[]$ O O O O O O O O O O O O $string[]$ O $boolean$ O O O $string$ O O O $Document$ O $string$ O O $HTMLIFrameElement$ O O O O O O $any$ O $any$ O $void$ O O O $any$ O $any$ O $any$ O O O $Embed$ O O O O O O O O $any$ O O O $HTMLIFrameElement$ O $Document$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O $HTMLIFrameElement$ O $CSSStyleDeclaration$ O $string$ O O O $HTMLIFrameElement$ O $CSSStyleDeclaration$ O $string$ O O O $HTMLIFrameElement$ O $void$ O O O $any$ O O $HTMLIFrameElement$ O $void$ O O O O O O $HTMLIFrameElement$ O $void$ O O O O O O O $HTMLElement$ O O O $HTMLElement$ O O O $HTMLElement$ O $ChildNode$ O O $HTMLElement$ O $T$ O $HTMLElement$ O $ChildNode$ O O O $HTMLElement$ O $T$ O $HTMLIFrameElement$ O O O O $any$ O $HTMLElement$ O $ChildNode$ O O O O $any$ O O O O O $any$ O O O $any$ O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O O O $Embed$ O $Promise<void>$ O $Embed$ O $any$ O $any$ O O O O O O O O O O O $any$ O $any$ O O O $any$ O $number$ O O O O $any$ O O O O O O $Embed$ O $any$ O $Embed$ O $any$ O O O O O O $HTMLElement$ O O O O O O O $any$ O O O O O O O O O O $any$ O $any$ O O O O O O O O $Embed$ O $Promise<void>$ O $Embed$ O $any$ O O O O O O O O O O $any$ O $any$ O $void$ O O O $any$ O O O O O O O $any$ O O O O O O O $any$ O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $void$ O O O $any$ O O O O O O O $HTMLElement$ O O O O O O O $HTMLElement$ O $void$ O O O O $any$ O O O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $void$ O O O $any$ O O O O O O O $HTMLElement$ O O O O O O O $HTMLElement$ O $void$ O O O O O O $any$ O $string$ O O O $string$ O O O $RegExp$ O O O O $RegExpMatchArray$ O $string$ O $complex$ O $RegExp$ O O O $any$ O O O $RegExpMatchArray$ O O $any$ O $RegExpMatchArray$ O O O O O O $string$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $string[]$ O O O O O O O O O O O O O O O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $number$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O O $void$ O $HTMLElement$ O $string$ O $any$ O O O $any$ O O O O $complex$ O O O O $any$ O O $complex$ O $string$ O O $any$ O $any$ O $true$ O O O $true$ O O O O O O O O $any$ O $Document$ O $complex$ O O O O $CustomEvent<any>$ O $void$ O $string$ O O O O O $any$ O O O $HTMLElement$ O $boolean$ O $CustomEvent<any>$ O O O $void$ O $void$ O $void$ O O $number$ O $boolean$ O $T[]$ O O O O O $ArrayConstructor$ O $complex$ O $T[]$ O O O O O $ErrorConstructor$ O O O $never$ O O O O $any$ O $T[]$ O $boolean$ O O O $T$ O $number$ O O O O $boolean$ O $T$ O O O $any$ O $number$ O O O O O O O O O $undefined$ O O $number$ O $number$ O $number$ O O $T$ O $boolean$ O $T[]$ O O O $number$ O $number$ O $boolean$ O $T[]$ O O O $T[]$ O $number$ O O O $T$ O $T$ O $T$ O O $void$ O $any$ O $any$ O O O $number$ O $number$ O $any$ O $any$ O O $any$ O $any$ O $number$ O O O O O $void$ O $void$ O $void$ O O $any$ O O O O $any[]$ O O O O O O O $number$ O O O $number$ O $IArguments$ O $number$ O $number$ O O O $any[]$ O $number$ O O O O $IArguments$ O $number$ O O O O $any$ O $any[]$ O O O O O O O O $any$ O $undefined$ O $any$ O O O O O O $TypeErrorConstructor$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O O O $number$ O O O $number$ O $IArguments$ O $number$ O $number$ O O O O $any$ O $IArguments$ O $number$ O O O O $any$ O $undefined$ O $any$ O O O O O O O $string$ O $any$ O O O O $any$ O $any$ O $string$ O O O $any$ O $string$ O O $any$ O $string$ O O O O O O O $any$ O O $any$ O $any$ O $any$ O O $string$ O O O O O $Math$ O $number$ O O O O O O $string$ O O O O $string$ O O O O O $string$ O $string$ O $string$ O O $string$ O O O O $number$ O O $DateConstructor$ O O O $number$ O O O O O O $Performance$ O O O O $Performance$ O $number$ O O O O $number$ O $Performance$ O $number$ O O O O O O O $complex$ O O O O O $string$ O O O $number$ O O $number$ O $Math$ O $number$ O O O O O O O O O O $number$ O O O O $number$ O $string$ O O O O O O O O $string$ O $string$ O $string$ O O $string$ O $string$ O $string$ O $string$ O O O $string$ O $string$ O $number$ O O O O O O O O O O $string$ O $string$ O $string$ O O O $string$ O O $string$ O O $string$ O $string$ O $string$ O O $Promise<boolean>$ O $any$ O $string$ O $Window$ O O O $any$ O $any$ O O O O $string$ O $string$ O O $Window$ O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O O $Promise<boolean>$ O $Promise<boolean>$ O $Promise<boolean>$ O O $boolean$ O $string$ O O O $string$ O $string$ O O O $number$ O O O O O O O $boolean$ O $boolean$ O $boolean$ O O O O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $string$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O $complex$ O $complex$ O $complex$ O O O O O O O $any$ O $any$ O $any$ O O O O $void$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O $any$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O O O O O O O O O O O O O $void)[]$ O O O ${}$ O O O O O $complex$ O $any$ O O O O ${}$ O $any$ O O O ${}$ O $any$ O O $any$ O O $complex$ O ${}$ O $any$ O O O ${}$ O O O O $any$ O $any$ O $boolean$ O O O O $void)[]$ O $any$ O O $any$ O $complex$ O ${}$ O $complex$ O $complex$ O ${}$ O $complex$ O O $complex$ O $boolean$ O O O O $complex$ O ${}$ O O $complex$ O $void)[]$ O $void)[]$ O $complex$ O ${}$ O ${}$ O $complex$ O $string$ O O O O $complex$ O O O O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O $complex$ O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O O O O O $any$ O $undefined$ O O $complex$ O $any$ O O O $any$ O O O $complex$ O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $string$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $string$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $string$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $string$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any[]$ O O O O O O O $number$ O O O $number$ O $IArguments$ O $number$ O $number$ O O O $any[]$ O $number$ O O O O $IArguments$ O $number$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O O O $any[]$ O $number$ O O O $any$ O O O O O O $ErrorConstructor$ O O O O O O O $ArrayConstructor$ O $complex$ O $any[]$ O O O O O O $any$ O $any$ O $any[]$ O O O O O O O $any$ O $any$ O $any[]$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $string$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O O $any$ O O O O $ErrorConstructor$ O O O $any$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O O O O O $ErrorConstructor$ O O O O O O O O $number$ O O O $number$ O $any$ O $any$ O $any$ O $number$ O O O O O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $any$ O $number$ O O $any$ O O O $any$ O $any$ O O O O $ErrorConstructor$ O O O $any$ O O O $any$ O O O O O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $string$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any[]$ O O O O O O O $number$ O O O $number$ O $IArguments$ O $number$ O $number$ O O O $any[]$ O $number$ O O O O $IArguments$ O $number$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $string$ O O O O $any$ O O O $string$ O $number$ O O O O O O $ErrorConstructor$ O O O $any$ O O O $any$ O $any$ O $string$ O O $any$ O O O $ArrayConstructor$ O $complex$ O $any[]$ O O O O O O $any$ O $any[]$ O O O O O O O $any$ O $any[]$ O O O O $any[]$ O $number$ O O O O O O $ErrorConstructor$ O O O $any[]$ O O O O O $any[]$ O $number$ O O O O O O $ErrorConstructor$ O O O $any[]$ O $number$ O O O O O $any[]$ O $number$ O O O $string$ O O O O O O $ErrorConstructor$ O O O O O $any$ O $any$ O $any[]$ O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $string$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $boolean$ O $any$ O O O $boolean$ O $any$ O O O O $any$ O $any$ O O $boolean$ O $boolean$ O $boolean$ O O $boolean$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $boolean$ O $boolean$ O $boolean$ O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $ArrayConstructor$ O $complex$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O $ArrayConstructor$ O $complex$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $boolean$ O $any$ O O O $any$ O $any$ O $undefined$ O $any$ O $any$ O $undefined$ O O $boolean$ O $boolean$ O $boolean$ O O $boolean$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $boolean$ O $boolean$ O $boolean$ O O $boolean$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $boolean$ O $boolean$ O $boolean$ O O $boolean$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $boolean$ O $boolean$ O $boolean$ O O $boolean$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $boolean$ O $boolean$ O $boolean$ O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O $complex$ O $complex$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O O $complex$ O $complex$ O O $string$ O O O $string$ O O O $string$ O O O O O $complex$ O $complex$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O O $any$ O O O $any$ O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $string$ O O O O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $string$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $string$ O O O O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $string$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $string$ O O O O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $string$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $string$ O O O O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $string$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O ${}$ O ${}$ O O O O O O O $complex$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O $undefined$ O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O O O O O $any$ O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O O O O O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O O $any$ O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O O O O O O O O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O O O O O O O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O O O O $any$ O O $any$ O $any$ O O O O O O O O O O O O O O O O O O $any$ O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O O $any$ O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O O O O O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O O O O O O O $any$ O O O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O O O $any$ O O O $ArrayConstructor$ O $complex$ O $any$ O O O O O O $string$ O $any$ O $undefined$ O $any$ O O O O O $any$ O $any$ O $string$ O O O O O O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O O O O $ArrayConstructor$ O $complex$ O $any$ O O O O O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O O O O $string$ O O $any$ O $any$ O O O O O O $any$ O O O $number$ O O O O $number$ O O O $any$ O O O $any$ O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O O $any$ O $any$ O $any$ O $any[]$ O $number$ O O $string$ O $any$ O O O O $any$ O O O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O O O O O $any$ O O O $any$ O O O O O O $string$ O $any$ O O O O O $any$ O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O O O O $any$ O $any$ O $any$ O O O O O O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $ValueValidator$ O O $any$ O O O $any$ O O O $ValueValidator$ O $complex$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O $any$ O O O O O O O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O $any$ O O O O O O O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O $any$ O O O O O O O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $number$ O O O $any$ O O O $any$ O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O O O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O O O O O O O $any$ O O O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $boolean$ O O O O O O $number$ O O O $any$ O O O $any$ O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $boolean$ O O O O O O O O O O $boolean$ O O O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $string[]$ O O O O O O O O O O O $string[]$ O $number$ O $any$ O O O O O O O O $string$ O O O O O O O O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O O O $string$ O $any$ O O O O $any$ O $any$ O $string$ O O O O $string$ O O $any$ O $any$ O O O O O O $any$ O O O $string$ O O O O $number$ O O O $any$ O O O $any$ O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O $string$ O $string$ O $any$ O O O O $any$ O O O $any$ O O O O O O $number$ O O O $any$ O O O $any$ O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O $any$ O $string$ O O $string$ O $any$ O O O O $any$ O O O $any$ O O O O O O O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O O $any$ O $any$ O O O O O O $string$ O O O $any[]$ O O O $any$ O $any$ O O O O O O O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O O O $any$ O $object$ O O O O O $string$ O $object$ O O O $object$ O $boolean$ O $string$ O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O $complex$ O O O $string$ O O O $any[]$ O O O $any$ O $any$ O O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O $any$ O $any$ O O O O O $string$ O $any$ O O O $any$ O $any$ O $string$ O O $any$ O $string$ O O $any$ O $string$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $HTMLElement$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $HTMLElement$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O O O $string$ O O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O O O $any$ O $any$ O $string[]$ O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $string$ O O O $string$ O O O $RegExp$ O O O O $RegExpMatchArray$ O $string$ O $complex$ O $RegExp$ O O O $any$ O O O $RegExpMatchArray$ O O $any$ O $RegExpMatchArray$ O O O O O O $string$ O O O $any$ O $any$ O $Promise<void>$ O O O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<any[]>$ O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $string$ O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $string$ O O $any$ O $string$ O $any$ O $any$ O O O O O $any$ O O O $string$ O $number$ O O O O O O $ErrorConstructor$ O O O $any$ O $string$ O O O O O O $string$ O O O $any$ O $any$ O $Promise<any[]>$ O O O O O O $Report$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $Report$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O $string$ O $string$ O $boolean$ O $any$ O O O O $any$ O $any$ O O O $string$ O $string$ O $boolean$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<void>$ O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O O O $Promise<void>$ O O O O O O O $any$ O $any$ O $Promise<void>$ O O O $string$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $complex$ O O $string$ O $string$ O $null$ O O O $boolean$ O O O O O O O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<void>$ O O O $any[]$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any[]$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<void>$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $void$ O O O $any$ O O O $any$ O O O $any$ O O O O O $boolean$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O $string$ O O O $any$ O O O $any$ O $any$ O $any$ O $string$ O O O $complex$ O O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $complex$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O $any$ O O O $string$ O O O O O $any$ O $any$ O $string$ O O O O O O O O O O $any$ O $any$ O $Promise<void>$ O O O $any$ O O O $any$ O O O O $any$ O O O O $any$ O $string$ O O O O $any$ O O O $string$ O $any$ O O O O $string$ O O O $string$ O O O O $any$ O $any$ O $any$ O $string$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<boolean>$ O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O O O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $string$ O O O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $string$ O O O $any$ O $any$ O $boolean$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $string[]$ O O O O O O O O O O O O O O O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O $string$ O $string$ O O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O O O O $any$ O $any$ O $string$ O $string$ O $boolean$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $string$ O $string$ O O O $string$ O $string$ O O O $boolean$ O $boolean$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $Promise<any[]>$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O $string$ O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<void>$ O O O O O O O O $Promise<void>$ O O O O O O O $any$ O $any$ O $Promise<void>$ O O O O O O $complex$ O O $string$ O O O $string$ O $null$ O O O $boolean$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<void>$ O O O $any[]$ O O O O O $any$ O $any$ O $any$ O $any$ O O O O O $string$ O O O $any[]$ O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<any[]>$ O O O O O O $Page$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O $string$ O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $Page$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<boolean>$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O O O O O $string$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $Promise<any[]>$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<void>$ O O O O O O O O $Promise<void>$ O O O O O O O $any$ O $any$ O $Promise<void>$ O O O $any[]$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O $any[]$ O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<any>$ O O O $any$ O $any$ O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O $complex$ O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<any>$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<any>$ O O O $any$ O O O O $any$ O O O O O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O O $complex$ O O O O O O O $complex$ O O O O $complex$ O $complex$ O O $boolean$ O O O O $complex$ O $complex$ O O $boolean$ O O O O O $complex$ O O O O O O $complex$ O $complex$ O $complex$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $Promise<any[]>$ O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<void>$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $complex$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<void>$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $complex$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<any>$ O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<void>$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $complex$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O $any$ O $any$ O O O O O $string$ O $any$ O O O $any$ O $any$ O $string$ O O $any$ O $string$ O O $any$ O $string$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $undefined$ O $any$ O $any$ O O O $any$ O $any$ O $string$ O O O O O O $any$ O O O O $complex$ O O O $complex$ O $any$ O O O O $complex$ O $any$ O $any$ O $string$ O O O $any$ O $any$ O O O O O $any$ O O O $string$ O $number$ O O O O O O $ErrorConstructor$ O O O O O O $string$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $void$ O O O $any$ O O O O $any$ O O O O O O $any$ O O O $any$ O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $string$ O O O O O O O O O O $any$ O $any$ O $Promise<boolean>$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $string$ O O O $string$ O O O $RegExp$ O O O O $RegExpMatchArray$ O $string$ O $complex$ O $RegExp$ O O O $any$ O O O $RegExpMatchArray$ O O $any$ O $RegExpMatchArray$ O O O O O O $string$ O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O $any$ O $any$ O O O O O $string$ O $any$ O O O $any$ O $any$ O $string$ O O $any$ O $string$ O O $any$ O $string$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $HTMLElement$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $HTMLElement$ O $any$ O $undefined$ O $any$ O $any$ O O O O $string$ O O O O O $string$ O O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O O O $any$ O $any$ O $string[]$ O O O $any$ O $string$ O O O $string$ O O O $RegExp$ O O O O $RegExpMatchArray$ O $string$ O $complex$ O $RegExp$ O O O $any$ O O O $RegExpMatchArray$ O O $any$ O $RegExpMatchArray$ O O O O O O $string$ O O O $any$ O $any$ O $string$ O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $string$ O O $any$ O $string$ O $any$ O $any$ O O O O O $any$ O O O $string$ O $number$ O O O O O O $ErrorConstructor$ O O O $any$ O $string$ O O O O O O $string$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $complex$ O $any$ O $any$ O O O O $any$ O $any$ O $void$ O O O $any$ O O O O $any$ O O O O O O O $any$ O $any$ O O O $string$ O O O O O $any$ O $any$ O $string$ O O O O O O O O O O $any$ O $any$ O $complex$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O O O $any$ O O O O O O O $string$ O O O O O O O O $any$ O $string[]$ O O O O O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O $any$ O $any$ O O O O O $string$ O $any$ O O O $any$ O $any$ O $string$ O O $any$ O $string$ O O $any$ O $string$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $undefined$ O $any$ O $any$ O O O O $string$ O O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O O O $any$ O $any$ O $string[]$ O O O $any$ O $any$ O $string$ O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $string$ O O O $any$ O $any$ O O O O O $any$ O O O $string$ O $number$ O O O O O O $ErrorConstructor$ O O O O O O $string$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $void$ O O O $any$ O O O O $any$ O O O O O O O $any$ O $any$ O O O $string$ O O O O O $any$ O $any$ O $string$ O O O O O O O O O O $any$ O $string$ O O O $string$ O O O $RegExp$ O O O O $RegExpMatchArray$ O $string$ O $complex$ O $RegExp$ O O O $any$ O O O $RegExpMatchArray$ O O $any$ O $RegExpMatchArray$ O O O O O O $string$ O O O $any$ O $string$ O O O $any$ O $string[]$ O O O O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O $any$ O $any$ O O O O O $string$ O $any$ O O O $any$ O $any$ O $string$ O O $any$ O $string$ O O $any$ O $string$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $undefined$ O $any$ O $any$ O O O O $string$ O O O O O $string$ O O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O O O $any$ O $any$ O $string[]$ O O O $any$ O $any$ O $string$ O O O O O O O O O O $any$ O $any$ O $string$ O O O $any$ O O O $complex$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $void$ O O O $any$ O O O O $any$ O $any$ O $string$ O O O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $string$ O O O $any$ O $string[]$ O O O O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O O O $any$ O $any$ O O O O O $string$ O $any$ O O O $any$ O $any$ O $string$ O O $any$ O $string$ O O $any$ O $string$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $HTMLElement$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $HTMLElement$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $ErrorConstructor$ O O O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $ErrorConstructor$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O ${}$ O O O O ${}$ O $any$ O $any$ O O O $complex$ O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O O ${}$ O O O O O ${}$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O $number$ O O O $number$ O O O $number$ O O O $any$ O $complex$ O $any$ O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $complex$ O $complex$ O ${}$ O ${}$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $Promise<any[]>$ O O O O O O $any$ O $string$ O O O $any$ O $any$ O $Promise<void>$ O O O $string$ O O O $any$ O $string$ O O O $any$ O $any$ O $Promise<any[]>$ O O O $any$ O O O $string$ O O O $string$ O $any$ O O O O O $any$ O $any$ O $any$ O $string$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<void>$ O O O $any[]$ O $any$ O O O $string$ O O O $string$ O $any$ O O O O O $any$ O $any$ O $any$ O $string$ O $any[]$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $Promise<void>$ O O O $any$ O O O O O $Promise<void>$ O O O O $any$ O O O O $any$ O $any$ O $string$ O O O $any$ O O O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $boolean$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O $any$ O O O O $void$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O $any$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O O O O O O O O O O O O O $void)[]$ O O O ${}$ O O O O O $complex$ O $any$ O O O O ${}$ O $any$ O O O ${}$ O $any$ O O $any$ O O $complex$ O ${}$ O $any$ O O O ${}$ O O O O $any$ O $any$ O $boolean$ O O O O $void)[]$ O $any$ O O $any$ O $complex$ O ${}$ O $complex$ O $complex$ O ${}$ O $complex$ O O $complex$ O $boolean$ O O O O $complex$ O ${}$ O O $complex$ O $void)[]$ O $void)[]$ O $complex$ O ${}$ O ${}$ O $complex$ O $string$ O O O O $complex$ O O O O O O O O O O O $any$ O $any$ O O O O O $any$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O $any$ O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $boolean$ O $any$ O $boolean$ O $complex$ O $complex$ O $string$ O $any$ O $string$ O O O O O O O ${}$ O O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $boolean$ O O O $any$ O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $string$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O O $Console$ O $void$ O O O O O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any[]$ O O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $string$ O O $any$ O O $any$ O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $string$ O O O O $any$ O $boolean$ O O O $any$ O O O O O $any$ O $any$ O O O $any$ O $complex$ O O O O O O $complex$ O O $null$ O O O $null$ O O O $null$ O O O O O $Promise<any>$ O O $PromiseConstructor$ O O O $void$ O $void$ O O $complex$ O $any$ O $void$ O $complex$ O $any$ O $void$ O O O O $complex$ O $any$ O $Promise<any>$ O O $complex$ O O O $any$ O $string$ O O O O O O O $Math$ O $number$ O O O O O O $string$ O O O O $string$ O O O O O O $any$ O $any$ O $void$ O O O $any$ O O O O $any[]$ O $number$ O $any$ O O O O $any$ O $any$ O $void$ O O O $any$ O O O $number$ O O O $any[]$ O $number$ O $any$ O O O O $number$ O O O O O O O $ErrorConstructor$ O O O O O O O $any[]$ O $complex$ O $number$ O O O O O O $any$ O $any$ O $void$ O O O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O $any$ O $void$ O O O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $complex$ O O $string$ O $any$ O $string$ O O O O O O $any$ O $any$ O $complex$ O O O O O O $any$ O O $Console$ O $void$ O O O $any$ O O O O $Console$ O $void$ O $JSON$ O $complex$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O O O $complex$ O $any$ O $complex$ O O O O O ${}$ O $complex$ O $string$ O O $complex$ O O $complex$ O $any$ O O O $any$ O $any$ O $void$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O $any$ O O $Console$ O $void$ O O O $any$ O O O O $Console$ O $void$ O $JSON$ O $complex$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $void$ O O O $any$ O O O $WindowPostMessageProxy$ O O O O O O O $any$ O O $Console$ O $void$ O O O $any$ O O O O $Console$ O $void$ O O O $any$ O $any$ O O $Console$ O $void$ O $JSON$ O $complex$ O $any$ O $any$ O O O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O O O $any$ O O $Console$ O $void$ O O O O O $any$ O O O O O O O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O O O O O O O $any$ O O $Console$ O $void$ O O O O O $any$ O O O $JSON$ O $complex$ O $any$ O O O O O O O O $any$ O O O O O $any$ O O O $any$ O O $any$ O O O ${}$ O $any$ O $any$ O O O O O O $any$ O O O $boolean$ O O O $any[]$ O $boolean$ O O O $any$ O O O $boolean$ O O O O O $boolean$ O $any$ O $any$ O $any$ O O O O O $any$ O O O O O $WindowPostMessageProxy$ O $any$ O O $Console$ O $void$ O O O $WindowPostMessageProxy$ O $any$ O O O $JSON$ O $complex$ O $any$ O O O O O O O O $any$ O O O O O O $boolean$ O O O $any$ O O O O O O $any$ O $PromiseConstructor$ O $complex$ O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $WindowPostMessageProxy$ O $any$ O O $Console$ O $void$ O O O $WindowPostMessageProxy$ O $any$ O O O $JSON$ O $complex$ O $any$ O O O O O O O O $any$ O O O $any$ O $PromiseConstructor$ O $complex$ O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O O O $string$ O O O $JSON$ O $complex$ O $any$ O O O O O O O O O O O $WindowPostMessageProxy$ O $any$ O O $Console$ O $void$ O O O $WindowPostMessageProxy$ O $any$ O O O $string$ O O O $any$ O O $string$ O $string$ O O O $WindowPostMessageProxy$ O $void$ O $any$ O $any$ O $any$ O O O O O O O O O O O O O O O $boolean$ O O O O $any$ O O $Console$ O $void$ O O O O O $any$ O O O O O $any[]$ O $number$ O O O $JSON$ O $complex$ O $any$ O O O O O O O O O O O O O O $boolean$ O O O O O $boolean$ O O O $any$ O $any$ O O O O O $any$ O O $Console$ O $void$ O O O O O $any$ O O O $JSON$ O $complex$ O $any$ O O O O O O O O $any$ O O O O O $boolean$ O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O O ${}$ O $any$ O $any$ O O O O O $any$ O $string$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O O O O O O O O O $any$ O $any$ O $any$ O O O O $void$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O $any$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O O O O O O O O O O O O O $void)[]$ O O O ${}$ O O O O O $complex$ O $any$ O O O O ${}$ O $any$ O O O ${}$ O $any$ O O $any$ O O $complex$ O ${}$ O $any$ O O O ${}$ O O O O $any$ O $any$ O $boolean$ O O O O $void)[]$ O $any$ O O $any$ O $complex$ O ${}$ O $complex$ O $complex$ O ${}$ O $complex$ O O $complex$ O $boolean$ O O O O $complex$ O ${}$ O O $complex$ O $void)[]$ O $void)[]$ O $complex$ O ${}$ O ${}$ O $complex$ O $string$ O O O O $complex$ O O O O O O O O O O $any$ O $any$ O O O O O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $complex$ O O O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $boolean$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $any$ O O O O O $any$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $any$ O O O O O $any$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $any$ O O O O O $any$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $any$ O O O O O $any$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O O O O O O $any$ O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $any$ O O O O O $any$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O O O O $ErrorConstructor$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O $any[]$ O O O O O O O $number$ O O O $number$ O $IArguments$ O $number$ O $number$ O O O $any[]$ O $number$ O O O O $IArguments$ O $number$ O O O O O $any$ O $undefined$ O $any$ O O O O O O $TypeErrorConstructor$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $any[]$ O $void$ O O O $any$ O O O O $any$ O $undefined$ O $any$ O O O O O O O $string$ O $any$ O O O O $ObjectConstructor$ O $Object$ O $boolean$ O $any$ O $any$ O $string$ O O O $any$ O $string$ O O $any$ O $string$ O O O O O O O O O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O O O O O O O O $any$ O $any$ O $any$ O O O O $void$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O $any$ O O O $any$ O O O O $any$ O O O O $any$ O O O O $any$ O O O O O O O O O O O O O O O O $void)[]$ O O O ${}$ O O O O O $complex$ O $any$ O O O O ${}$ O $any$ O O O ${}$ O $any$ O O $any$ O O $complex$ O ${}$ O $any$ O O O ${}$ O O O O $any$ O $any$ O $boolean$ O O O O $void)[]$ O $any$ O O $any$ O $complex$ O ${}$ O $complex$ O $complex$ O ${}$ O $complex$ O O $complex$ O $boolean$ O O O O $complex$ O ${}$ O O $complex$ O $void)[]$ O $void)[]$ O $complex$ O ${}$ O ${}$ O $complex$ O $string$ O O O O $complex$ O O O O O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O $any$ O O O O O $any$ O O $any$ O O O O O $any$ O O $any$ O O O O O $any$ O O $any$ O O O O O $any$ O O $any$ O O O O $any$ O $any$ O $Router$ O O O $any$ O $any$ O O O O $void$ O O O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $Router$ O O O $any$ O $any$ O O O O $void$ O O O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $Router$ O O O $any$ O $any$ O O O O $void$ O O O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $Router$ O O O $any$ O $any$ O O O O $void$ O O O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $Router$ O O O $any$ O $any$ O O O O $void$ O O O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $void$ O O O $any$ O $any$ O $any$ O $any$ O O O $Promise<Response>$ O O O $any$ O O O $Response$ O O $any$ O O O O $PromiseConstructor$ O $complex$ O $any$ O $any$ O $Response$ O O O O O O O $any$ O O O $Response$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $Promise<Response>$ O $Promise<Response>$ O O O O O $complex$ O O $boolean$ O O O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $undefined$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $complex$ O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O $any$ O O O O O O O $any$ O O O O O $number$ O O O O O ${}$ O O O O O O $any$ O O O O $any$ O $any$ O $void$ O O O $any$ O $any$ O O O O $number$ O $any$ O O O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $complex$ O O $complex$ O O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O O O O $ErrorConstructor$ O O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O $any$ O $any$ O O O O ${}$ O O O O O O ${}$ O O O O O O $any$ O $any$ O O $any$ O $complex$ O O $void$ O O O $any$ O $any$ O O O O ${}$ O $any$ O O $any$ O O O $void$ O O O $any$ O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O $any$ O O O O ${}$ O $any$ O O $complex$ O O $complex$ O $complex$ O $any$ O $complex$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O $any$ O $complex$ O O O O O O $complex$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $complex$ O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $void$ O $any$ O $any$ O $any$ O O O $number$ O O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O $number$ O $any$ O $number$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O $number$ O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O $void$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $string$ O $any$ O O O O $any$ O $any$ O $string$ O O O O $any$ O $any$ O $any$ O O O $void$ O $any$ O $string$ O $any$ O $string$ O O O O O $any$ O $any$ O $string$ O O O $void$ O $any$ O $any$ O $any$ O $string$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $void$ O O O $any$ O $any$ O O O $complex$ O O $any$ O O O $any$ O $complex$ O O O $complex$ O O O $any$ O O O $void$ O O O O $complex$ O O O $any$ O O O O $any$ O O $any$ O O O $any$ O O O O O O O $any$ O $any$ O O O O O O O O O O O $string[]$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $RegExp$ O O $RegExpConstructor$ O O O $string[]$ O $string$ O O O O O O O O O O $boolean$ O $any$ O O O $ObjectConstructor$ O $Object$ O $string$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $complex$ O O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O $any$ O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O O $undefined$ O $undefined$ O $boolean$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O $RegExp$ O O O O O O $any$ O O O O O O O O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $complex$ O O $any$ O O O $any$ O O O $any$ O $any$ O O $string$ O O O $boolean$ O O O $undefined$ O $undefined$ O O O O O $string$ O O O O O O O O O O $any$ O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $complex$ O O $any$ O O O $any$ O O O $any$ O $any$ O O $string$ O O O $boolean$ O O O $undefined$ O $undefined$ O O O O O $string$ O O O O O O O O O O $any$ O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O O O O $any$ O $complex$ O O $any$ O O O $any$ O O O $any$ O O O $string$ O O O O O O O O O O $string$ O O O O O O O O O O O O $any[]$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any[]$ O O $ArrayConstructor$ O $any$ O $any$ O O $any$ O $any$ O O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any$ O O O $any$ O $any$ O $any$ O O O O O $any[]$ O $number$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O O O $any[]$ O $number$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O O O $any$ O O O O $any[]$ O $number$ O O O $any$ O O O $any$ O $any$ O O O O O O $any[]$ O $number$ O O O $any$ O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O O $any[]$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any[]$ O O O O O O ${}$ O O O O O O $any$ O $undefined$ O O O $any$ O $undefined$ O O O $any$ O $undefined$ O O $any$ O $complex$ O O $any$ O O O $any$ O O O O O O ${}$ O $any$ O $any$ O O O O O O ${}$ O $any$ O $any$ O O O O $any[]$ O O O $any[]$ O O O O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O O O O $any$ O $any[]$ O $number$ O O O $boolean$ O $any$ O $any$ O $any$ O $any$ O $any$ O $boolean$ O $boolean$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $boolean$ O O O O ${}$ O $any$ O $any$ O O $any$ O O $any$ O O O O O $any$ O O O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O $any$ O O $any$ O $any$ O O O O $any[]$ O $number$ O $complex$ O O O O $any$ O $any$ O O $complex$ O $any[]$ O $number$ O $complex$ O O O O $complex$ O O O $any[]$ O O O $any$ O O O $any[]$ O O O $any[]$ O $any$ O $any$ O $any$ O O $any[]$ O O O O O O O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O O O $any$ O $any[]$ O $number$ O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O O O O $any[]$ O $number$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O O O O $any[]$ O $number$ O $any$ O O O O O O $any[]$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any[]$ O $any$ O $any$ O O O $any[]$ O O O O O O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any[]$ O $any[]$ O $complex$ O $any$ O $any$ O $any$ O O O O O $any[]$ O O O $complex$ O $ObjectConstructor$ O $complex$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O $any$ O $complex$ O O $complex$ O $ArrayConstructor$ O $any[]$ O $complex$ O $any[]$ O $ArrayConstructor$ O $any[]$ O $any[]$ O $number$ O $ArrayConstructor$ O $any[]$ O $number$ O $number$ O O O $null$ O O O O O O $$$route$recognizer$$RecognizeResults$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O $number$ O O O O $$$route$recognizer$$RecognizeResults$ O O $any$ O $any$ O O $$$route$recognizer$$RecognizeResults$ O $any$ O $any$ O $any$ O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O ${}$ O O O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O ${}$ O $any$ O $number$ O O O $any$ O $number$ O O O O $$$route$recognizer$$RecognizeResults$ O $number$ O O O $any$ O $any$ O $any$ O ${}$ O ${}$ O $boolean$ O O O $any$ O $any$ O O O O $$$route$recognizer$$RecognizeResults$ O O O $string$ O $any$ O O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $string$ O $any$ O O O O O $any$ O O $any$ O O O O O $string$ O O O $any$ O O O O O O O $complex$ O O $any$ O O O O O ${}$ O O O O O O $any$ O $$$route$recognizer$$Recogni...$ O O $void$ O O O $any$ O $any$ O O O $complex$ O O O $complex$ O $string$ O O O ${}$ O O O O $any[]$ O O $ArrayConstructor$ O $any$ O $any$ O O $any[]$ O O O O $any$ O O $boolean$ O O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any[]$ O O O O O $any[]$ O $any[]$ O $any$ O $any$ O $any[]$ O ${}$ O O $any[]$ O $any[]$ O $complex$ O $any[]$ O O O O O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O O O O $any$ O $any[]$ O $number$ O O O O $any$ O $any$ O O O O O $boolean$ O O O $complex$ O $complex$ O $any$ O O $undefined$ O $undefined$ O $boolean$ O O O $string$ O O O O O $string$ O O O $complex$ O $any$ O $any$ O $complex$ O O $string$ O $any$ O $any$ O O O O O $complex$ O O $any$ O $any$ O $any$ O $any[]$ O $any[]$ O O $any[]$ O $number$ O O $complex$ O O O O $boolean$ O O $complex$ O $complex$ O $any$ O O $undefined$ O $undefined$ O $boolean$ O O O $string$ O O O O O $string$ O O O O $complex$ O $any$ O $any[]$ O $complex$ O $any$ O O $RegExpConstructor$ O $string$ O O O O $complex$ O $any$ O ${}$ O O O $any$ O $any$ O $any$ O $any$ O O O O ${}$ O $any$ O O O $any[]$ O $any[]$ O $any[]$ O $any[]$ O O O O O $any[]$ O O O $any$ O O O $any$ O O O ${}$ O $any$ O O O O O $any$ O O O O $ErrorConstructor$ O O O $any$ O O O O $any[]$ O O $ArrayConstructor$ O $any$ O $any$ O $any$ O O O O O $number$ O O O $number$ O $any$ O $any$ O $any$ O $number$ O O O $any[]$ O $number$ O O $any$ O $any$ O $number$ O O O O $any[]$ O O O $boolean$ O O O $any$ O O O O O O O ${}$ O $any$ O O O O $string$ O O O $any$ O $any$ O O O $any$ O O O ${}$ O $any$ O O $string$ O O O O O O $any$ O O O O $ErrorConstructor$ O O O $any$ O O O O $any$ O $any$ O $any$ O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O O O $any$ O $any$ O O O O O $string$ O O O $string$ O $any$ O $any$ O $any$ O O O O O $string$ O $string$ O O O O O O O $string$ O O O $string$ O O O O $any$ O $any$ O $any$ O O $string$ O O O $string$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $string$ O O O $any$ O $any$ O O O $any[]$ O O O O O $any[]$ O O O O O O O $string$ O $any$ O O O O $any$ O $any$ O $string$ O O O $any[]$ O $number$ O $string$ O O O O $string[]$ O $string[]$ O O O O O O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O O O $string$ O $string[]$ O $number$ O O O $any$ O $any$ O $string$ O O O O $any$ O O O O O O O O $string$ O $string$ O $string$ O O O O $boolean$ O $any$ O O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O $string$ O $string$ O O O O O $string$ O $any$ O $number$ O O O $any[]$ O $number$ O $string$ O O O O O O $string$ O O O $string$ O $any$ O O $any[]$ O $number$ O $string$ O O O O O O $any[]$ O $number$ O O O O O O O O O O O $string[]$ O $string$ O O O O O O ${}$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O ${}$ O O O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any$ O O O O $string$ O $string$ O $any$ O O O O O $number$ O $string$ O $number$ O $boolean$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O O O O O O $number$ O O O $string$ O $string$ O $number$ O O O O O O O $boolean$ O O O $string$ O $string$ O $string$ O O O $number$ O O O O O O O ${}$ O $string$ O O O ${}$ O $string$ O O O O O O O $any$ O $any$ O O O O $string$ O $any$ O O O O O O O O O O $boolean$ O O ${}$ O $string$ O O $any$ O $string$ O O O O O ${}$ O $string$ O O $string$ O O O O ${}$ O O O $$$route$recognizer$$RecognizeResults$ O O O $any$ O O O $complex$ O O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O ${}$ O O O O $boolean$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O ${}$ O O O ${}$ O $any$ O O O $any$ O $string$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O $boolean$ O O O O O O $any$ O O O $number$ O $any$ O $any$ O $any$ O O O $complex$ O $any[]$ O $complex$ O $any$ O $any$ O $number$ O O O O O O $complex$ O $number$ O O O O O O O $any[]$ O O O O O O $any$ O O O $number$ O $complex$ O $number$ O $any$ O O O O O $complex$ O $number$ O O $any$ O O $any[]$ O $number$ O $complex$ O $number$ O O O O O $complex$ O $any$ O $complex$ O O O $complex$ O $complex$ O O O O O O $complex$ O $complex$ O $any$ O O O O $boolean$ O $complex$ O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O O O $$$route$recognizer$$RecognizeResults$ O $complex$ O $any$ O ${}$ O O O O O O $any$ O $$$route$recognizer$$Recogni...$ O $void$ O $void$ O $any$ O $string$ O O O O $any$ O $any$ O O O O O O O $any$ O O O O O O O O O O $any$ O O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $undefined$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O O O O $any$ O O O O $any$ O O O O O O O O O O O O O O O O $any$ O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O O O O O $any$ O $any$ O O $any$ O $any$ O O O O O O O $ErrorConstructor$ O O O O O O O O O O O O O O O O O O O O O
'js' ! function ( t , e ) { "s" == typeof exports && "s" == typeof module ? module . exports = e ( ) : "s" == typeof define && define . amd ? define ( [ ] , e ) : "s" == typeof exports ? exports [ "s" ] = e ( ) : t [ "s" ] = e ( ) } ( this , function ( ) { return function ( t ) { function e ( a ) { if ( r [ a ] ) return r [ a ] . exports ; var i = r [ a ] = { exports : { } , id : a , loaded : ! 0 } ; return t [ a ] . call ( i . exports , i , i . exports , e ) , i . loaded = ! 0 , i . exports } var r = { } ; return e . m = t , e . c = r , e . p = "s" , e ( 0 ) } ( [ function ( t , e , r ) { var a = r ( 0 ) ; e . service = a ; var i = r ( 0 ) ; e . factories = i ; var o = r ( 0 ) ; e . models = o ; var n = r ( 0 ) ; e . Report = n . Report ; var l = r ( 0 ) ; e . Dashboard = l . Dashboard ; var s = r ( 0 ) ; e . Tile = s . Tile ; var d = r ( 0 ) ; e . Embed = d . Embed ; var u = r ( 0 ) ; e . Page = u . Page ; var p = r ( 0 ) ; e . Qna = p . Qna ; var c = r ( 0 ) ; e . Visual = c . Visual ; var f = r ( 0 ) ; e . VisualDescriptor = f . VisualDescriptor ; var h = new a . Service ( i . hpmFactory , i . wpmpFactory , i . routerFactory ) ; window . powerbi = h } , function ( t , e , r ) { var a = r ( 0 ) , i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = r ( 0 ) , s = r ( 0 ) , d = r ( 0 ) , u = r ( 0 ) , p = r ( 0 ) , c = function ( ) { function t ( e , r , a , i ) { var o = this ; void 0 === i && ( i = { } ) , this . wpmp = r ( i . wpmpName , i . logMessages ) , this . hpm = e ( this . wpmp , null , i . version , i . type ) , this . router = a ( this . wpmp ) , this . uniqueSessionId = p . generateUUID ( ) , this . router . post ( "s" , function ( t , e ) { var r = { type : "s" , id : t . params . uniqueId , name : t . params . eventName , value : t . body } ; o . handleEvent ( r ) } ) , this . router . post ( "s" , function ( t , e ) { var r = { type : "s" , id : t . params . uniqueId , name : t . params . eventName , value : t . body } ; o . handleEvent ( r ) } ) , this . router . post ( "s" , function ( t , e ) { var r = { type : "s" , id : t . params . uniqueId , name : t . params . eventName , value : t . body } ; o . handleEvent ( r ) } ) , this . router . post ( "s" , function ( t , e ) { var r = { type : "s" , id : t . params . uniqueId , name : t . params . eventName , value : t . body } ; o . handleEvent ( r ) } ) , this . router . post ( "s" , function ( t , e ) { var r = { type : "s" , id : t . params . uniqueId , name : t . params . eventName , value : t . body } ; o . handleEvent ( r ) } ) , this . router . post ( "s" , function ( t , e ) { var r = { type : "s" , id : t . params . uniqueId , name : t . params . eventName , value : t . body } ; o . handleEvent ( r ) } ) , this . router . post ( "s" , function ( t , e ) { var r = { type : "s" , id : t . params . uniqueId , name : "s" , value : t . body } ; o . handleEvent ( r ) } ) , this . embeds = [ ] , this . config = p . assign ( { } , t . defaultConfig , i ) , this . config . autoEmbedOnContentLoaded && this . enableAutoEmbed ( ) } return t . prototype . createReport = function ( t , e ) { e . type = "s" ; var r = t , a = new o . Create ( this , r , e ) ; return r . powerBiEmbed = a , this . addOrOverwriteEmbed ( a , t ) , a } , t . prototype . init = function ( t , e ) { var r = this ; void 0 === e && ( e = void 0 ) , t = t && t instanceof HTMLElement ? t : document . body ; var i = Array . prototype . slice . call ( t . querySelectorAll ( "s" + a . Embed . embedUrlAttribute + "s" ) ) ; return i . map ( function ( t ) { return r . embed ( t , e ) } ) } , t . prototype . embed = function ( t , e ) { return void 0 === e && ( e = { } ) , this . embedInternal ( t , e ) } , t . prototype . load = function ( t , e ) { return void 0 === e && ( e = { } ) , this . embedInternal ( t , e , ! 0 , ! 0 ) } , t . prototype . bootstrap = function ( t , e ) { return this . embedInternal ( t , e , ! 0 , ! 0 ) } , t . prototype . embedInternal = function ( t , e , r , a ) { void 0 === e && ( e = { } ) ; var i , o = t ; if ( o . powerBiEmbed ) { if ( a ) throw new Error ( "s" + t . outerHTML + "s" ) ; i = this . embedExisting ( o , e , r ) } else i = this . embedNew ( o , e , r , a ) ; return i } , t . prototype . getNumberOfComponents = function ( ) { return this . embeds ? this . embeds . length : 0 } , t . prototype . getSdkSessionId = function ( ) { return this . uniqueSessionId } , t . prototype . embedNew = function ( e , r , o , n ) { var l = r . type || e . getAttribute ( a . Embed . typeAttribute ) ; if ( ! l ) throw new Error ( "s" + JSON . stringify ( r ) + "s" + e . outerHTML + "s" + a . Embed . typeAttribute + 's' + i . Report . type . toLowerCase ( ) + "s" ) ; r . type = l ; var s = p . find ( function ( t ) { return l === t . type . toLowerCase ( ) } , t . components ) ; if ( ! s ) throw new Error ( "s" + l + "s" ) ; var d = new s ( this , e , r , o , n ) ; return e . powerBiEmbed = d , this . addOrOverwriteEmbed ( d , e ) , d } , t . prototype . embedExisting = function ( t , e , r ) { var a = p . find ( function ( e ) { return e . element === t } , this . embeds ) ; if ( ! a ) throw new Error ( "s" + JSON . stringify ( e ) + "s" + t . outerHTML + "s" ) ; if ( e . type && "s" === e . type . toLowerCase ( ) ) return this . embedNew ( t , e ) ; if ( "s" == typeof e . type && e . type !== a . config . type ) { if ( "s" === e . type && "s" === a . config . type ) { var o = new i . Report ( this , t , e , ( ! 0 ) , ( ! 0 ) , t . powerBiEmbed . iframe ) ; return o . load ( e ) , t . powerBiEmbed = o , this . addOrOverwriteEmbed ( a , t ) , o } throw new Error ( "s" + JSON . stringify ( e ) + "s" + t . outerHTML + "s" + this . config . type + "s" + e . type ) } return a . populateConfig ( e , ! 0 ) , a . load ( a . config , r ) , a } , t . prototype . enableAutoEmbed = function ( ) { var t = this ; window . addEventListener ( "s" , function ( e ) { return t . init ( document . body ) } , ! 0 ) } , t . prototype . get = function ( t ) { var e = t ; if ( ! e . powerBiEmbed ) throw new Error ( "s" + t . outerHTML + "s" ) ; return e . powerBiEmbed } , t . prototype . find = function ( t ) { return p . find ( function ( e ) { return e . config . uniqueId === t } , this . embeds ) } , t . prototype . addOrOverwriteEmbed = function ( t , e ) { this . embeds = this . embeds . filter ( function ( t ) { return t . element . id !== e . id } ) , this . embeds . push ( t ) } , t . prototype . reset = function ( t ) { var e = t ; if ( e . powerBiEmbed ) { var r = e . powerBiEmbed ; r . frontLoadHandler && r . element . removeEventListener ( "s" , r . frontLoadHandler , ! 0 ) , p . remove ( function ( t ) { return t === e . powerBiEmbed } , this . embeds ) , delete e . powerBiEmbed ; var a = t . querySelector ( "s" ) ; a && ( void 0 !== a . remove ? a . remove ( ) : a . parentElement . removeChild ( a ) ) } } , t . prototype . handleTileEvents = function ( t ) { "s" === t . type && this . handleEvent ( t ) } , t . prototype . handleEvent = function ( t ) { var e = p . find ( function ( e ) { return e . config . uniqueId === t . id } , this . embeds ) ; if ( e ) { var r = t . value ; if ( "s" === t . name ) { var a = "s" , i = r [ a ] ; if ( ! i ) throw new Error ( "s" + a + "s" ) ; r [ a ] = new s . Page ( e , i . name , i . displayName , ( ! 0 ) ) } p . raiseCustomEvent ( e . element , t . name , r ) } } , t . prototype . preload = function ( t , e ) { var r = document . createElement ( "s" ) ; r . setAttribute ( "s" , "s" ) , r . setAttribute ( "s" , t . embedUrl ) , r . setAttribute ( "s" , "s" ) , r . setAttribute ( "s" , "s" ) ; var a = e ; return a || ( a = document . getElementsByTagName ( "s" ) [ 0 ] ) , a . appendChild ( r ) , r . onload = function ( ) { p . raiseCustomEvent ( r , "s" , { } ) } , r } , t . components = [ l . Tile , i . Report , n . Dashboard , d . Qna , u . Visual ] , t . defaultConfig = { autoEmbedOnContentLoaded : ! 0 , onError : function ( ) { for ( var t = [ ] , e = 0 ; e < arguments . length ; e ++ ) t [ e - 0 ] = arguments [ e ] ; return console . log ( t [ 0 ] , t . slice ( 0 ) ) } } , t } ( ) ; e . Service = c } , function ( t , e , r ) { var a = r ( 0 ) , i = r ( 0 ) , o = r ( 0 ) , n = function ( ) { function t ( e , r , a , i , o , n ) { this . allowedEvents = [ ] , Array . prototype . push . apply ( this . allowedEvents , t . allowedEvents ) , this . eventHandlers = [ ] , this . service = e , this . element = r , this . iframe = i , this . embeType = a . type . toLowerCase ( ) , this . populateConfig ( a , n ) , "s" === this . embeType ? this . setIframe ( ! 0 , o , n ) : this . setIframe ( ! 0 , o , n ) } return t . prototype . createReport = function ( t ) { var e = o . validateCreateReport ( t ) ; if ( e ) throw e ; return this . service . hpm . post ( "s" , t , { uid : this . config . uniqueId , sdkSessionId : this . service . getSdkSessionId ( ) } , this . iframe . contentWindow ) . then ( function ( t ) { return t . body } , function ( t ) { throw t . body } ) } , t . prototype . save = function ( ) { return this . service . hpm . post ( "s" , null , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( t ) { return t . body } ) [ "s" ] ( function ( t ) { throw t . body } ) } , t . prototype . saveAs = function ( t ) { return this . service . hpm . post ( "s" , t , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( t ) { return t . body } ) [ "s" ] ( function ( t ) { throw t . body } ) } , t . prototype . load = function ( t , e ) { var r = this ; if ( t . accessToken ) { var o = e && "s" === t . type ? this . phasedLoadPath : this . loadPath , n = { uid : this . config . uniqueId , sdkSessionId : this . service . getSdkSessionId ( ) , bootstrapped : this . config . bootstrapped , sdkVersion : i [ "s" ] . version } ; return this . service . hpm . post ( o , t , n , this . iframe . contentWindow ) . then ( function ( e ) { return a . assign ( r . config , t ) , e . body } , function ( t ) { throw t . body } ) } } , t . prototype . off = function ( t , e ) { var r = this , i = { name : t , type : null , id : null , value : null } ; if ( e ) a . remove ( function ( t ) { return t . test ( i ) && t . handle === e } , this . eventHandlers ) , this . element . removeEventListener ( t , e ) ; else { var o = this . eventHandlers . filter ( function ( t ) { return t . test ( i ) } ) ; o . forEach ( function ( e ) { a . remove ( function ( t ) { return t === e } , r . eventHandlers ) , r . element . removeEventListener ( t , e . handle ) } ) } } , t . prototype . on = function ( t , e ) { if ( this . allowedEvents . indexOf ( t ) === - 0 ) throw new Error ( "s" + this . allowedEvents + "s" + t ) ; this . eventHandlers . push ( { test : function ( e ) { return e . name === t } , handle : e } ) , this . element . addEventListener ( t , e ) } , t . prototype . reload = function ( ) { return this . load ( this . config ) } , t . prototype . setAccessToken = function ( e ) { var r = this , a = this . config . type ; return a = "s" === a || "s" === a || "s" === a ? "s" : a , this . service . hpm . post ( "s" + a + "s" , e , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( a ) { return r . config . accessToken = e , r . element . setAttribute ( t . accessTokenAttribute , e ) , r . service . accessToken = e , a . body } ) [ "s" ] ( function ( t ) { throw t . body } ) } , t . prototype . getAccessToken = function ( e ) { var r = this . config . accessToken || this . element . getAttribute ( t . accessTokenAttribute ) || e ; if ( ! r ) throw new Error ( "s" + t . accessTokenAttribute + "s" ) ; return r } , t . prototype . populateConfig = function ( t , e ) { this . bootstrapConfig ? ( this . config = a . assign ( { } , this . bootstrapConfig , t ) , this . bootstrapConfig = null ) : this . config = a . assign ( { } , t ) , this . config . embedUrl = this . getEmbedUrl ( e ) , this . config . groupId = this . getGroupId ( ) , this . addLocaleToEmbedUrl ( t ) , this . config . uniqueId = this . getUniqueId ( ) , e ? ( this . bootstrapConfig = this . config , this . bootstrapConfig . bootstrapped = ! 0 ) : this . config . accessToken = this . getAccessToken ( this . service . accessToken ) , this . configChanged ( e ) } , t . prototype . addLocaleToEmbedUrl = function ( t ) { if ( t . settings ) { var e = t . settings . localeSettings ; e && e . language && ( this . config . embedUrl = a . addParamToUrl ( this . config . embedUrl , "s" , e . language ) ) , e && e . formatLocale && ( this . config . embedUrl = a . addParamToUrl ( this . config . embedUrl , "s" , e . formatLocale ) ) } } , t . prototype . getEmbedUrl = function ( e ) { var r = this . config . embedUrl || this . element . getAttribute ( t . embedUrlAttribute ) ; if ( e && ! r && ( r = this . getDefaultEmbedUrl ( this . config . hostname ) ) , "s" != typeof r || 0 === r . length ) throw new Error ( "s" + t . embedUrlAttribute + "s" ) ; return r } , t . prototype . getDefaultEmbedUrl = function ( e ) { e || ( e = t . defaultEmbedHostName ) ; var r = this . getDefaultEmbedUrlEndpoint ( ) ; if ( e = e . toLowerCase ( ) . trim ( ) , 0 === e . indexOf ( "s" ) ) throw new Error ( "s" ) ; return 0 === e . indexOf ( "s" ) ? e + "s" + r : "s" + e + "s" + r } , t . prototype . getUniqueId = function ( ) { return this . config . uniqueId || this . element . getAttribute ( t . nameAttribute ) || a . createRandomString ( ) } , t . prototype . getGroupId = function ( ) { return this . config . groupId || t . findGroupIdFromEmbedUrl ( this . config . embedUrl ) } , t . prototype . fullscreen = function ( ) { var t = this . iframe . requestFullscreen || this . iframe . msRequestFullscreen || this . iframe . mozRequestFullScreen || this . iframe . webkitRequestFullscreen ; t . call ( this . iframe ) } , t . prototype . exitFullscreen = function ( ) { if ( this . isFullscreen ( this . iframe ) ) { var t = document . exitFullscreen || document . mozCancelFullScreen || document . webkitExitFullscreen || document . msExitFullscreen ; t . call ( document ) } } , t . prototype . isFullscreen = function ( t ) { var e = [ "s" , "s" , "s" , "s" ] ; return e . some ( function ( e ) { return document [ e ] === t } ) } , t . prototype . setIframe = function ( e , r , i ) { var o = this ; if ( ! this . iframe ) { var n = document . createElement ( "s" ) , l = this . config . uniqueId ? a . addParamToUrl ( this . config . embedUrl , "s" , this . config . uniqueId ) : this . config . embedUrl ; n . style . width = "s" , n . style . height = "s" , n . setAttribute ( "s" , l ) , n . setAttribute ( "s" , "s" ) , n . setAttribute ( "s" , "s" ) ; for ( var s = this . element ; s . firstChild ; ) s . removeChild ( s . firstChild ) ; s . appendChild ( n ) , this . iframe = s . firstChild } if ( e ) { if ( ! i ) { var d = this . validate ( this . config ) ; if ( d ) throw d } this . iframe . addEventListener ( "s" , function ( ) { return o . load ( o . config , r ) } , ! 0 ) , this . service . getNumberOfComponents ( ) <= t . maxFrontLoadTimes && ( this . frontLoadHandler = function ( ) { return o . frontLoadSendConfig ( o . config ) } , this . element . addEventListener ( "s" , this . frontLoadHandler , ! 0 ) ) } else this . iframe . addEventListener ( "s" , function ( ) { return o . createReport ( o . createConfig ) } , ! 0 ) } , t . prototype . setComponentTitle = function ( t ) { this . iframe && ( null == t ? this . iframe . removeAttribute ( "s" ) : this . iframe . setAttribute ( "s" , t ) ) } , t . prototype . setComponentTabIndex = function ( t ) { this . element && this . element . setAttribute ( "s" , null == t ? "s" : t . toString ( ) ) } , t . prototype . removeComponentTabIndex = function ( t ) { this . element && this . element . removeAttribute ( "s" ) } , t . findGroupIdFromEmbedUrl = function ( t ) { var e , r = "s" , a = t . match ( r ) ; return a && ( e = a [ 0 ] ) , e } , t . prototype . frontLoadSendConfig = function ( t ) { if ( t . accessToken ) { var e = this . validate ( t ) ; if ( e ) throw e ; if ( null != this . iframe . contentWindow ) return this . service . hpm . post ( "s" , t , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( t ) { return t . body } , function ( t ) { throw t . body } ) } } , t . allowedEvents = [ "s" , "s" , "s" , "s" , "s" , "s" , "s" ] , t . accessTokenAttribute = "s" , t . embedUrlAttribute = "s" , t . nameAttribute = "s" , t . typeAttribute = "s" , t . defaultEmbedHostName = "s" , t . maxFrontLoadTimes = 0 , t } ( ) ; e . Embed = n } , function ( t , e ) { function r ( t , e , r ) { var a ; "s" == typeof CustomEvent ? a = new CustomEvent ( e , { detail : r , bubbles : ! 0 , cancelable : ! 0 } ) : ( a = document . createEvent ( "s" ) , a . initCustomEvent ( e , ! 0 , ! 0 , r ) ) , t . dispatchEvent ( a ) } function a ( t , e ) { if ( ! Array . isArray ( e ) ) throw new Error ( "s" + e ) ; var r ; return e . some ( function ( e , a ) { if ( t ( e ) ) return r = a , ! 0 } ) , r } function i ( t , e ) { var r = a ( t , e ) ; return e [ r ] } function o ( t , e ) { var r = a ( t , e ) ; e . splice ( r , 0 ) } function n ( ) { for ( var t = [ ] , e = 0 ; e < arguments . length ; e ++ ) t [ e - 0 ] = arguments [ e ] ; var r = t [ 0 ] ; if ( void 0 === r || null === r ) throw new TypeError ( "s" ) ; for ( var a = Object ( r ) , i = 0 ; i < arguments . length ; i ++ ) { var o = arguments [ i ] ; if ( void 0 !== o && null !== o ) for ( var n in o ) o . hasOwnProperty ( n ) && ( a [ n ] = o [ n ] ) } return a } function l ( ) { return ( Math . random ( ) + 0 ) . toString ( 0 ) . substring ( 0 ) } function s ( ) { var t = ( new Date ) . getTime ( ) ; return "s" != typeof performance && "s" == typeof performance . now && ( t += performance . now ( ) ) , "s" . replace ( "s" , function ( e ) { var r = t + 0 * Math . random ( ) & 0 | 0 ; return t >>= 0 , r . toString ( 0 ) } ) } function d ( t , e , r ) { var a = t . indexOf ( "s" ) > 0 ? "s" : "s" ; return t += a + e + "s" + r } function u ( t , e , r ) { return t . get ( "s" , { uid : e } , r ) . then ( function ( t ) { return ! t . body } , function ( t ) { throw t . body } ) } function p ( t ) { return t . toLowerCase ( ) . indexOf ( "s" ) >= 0 } e . raiseCustomEvent = r , e . findIndex = a , e . find = i , e . remove = o , e . assign = n , e . createRandomString = l , e . generateUUID = s , e . addParamToUrl = d , e . isSavedInternal = u , e . isRDLEmbed = p } , function ( t , e ) { var r = { version : "s" , type : "s" } ; Object . defineProperty ( e , "s" , { value : ! 0 } ) , e [ "s" ] = r } , function ( t , e , r ) { ! function ( e , r ) { t . exports = r ( ) } ( this , function ( ) { return function ( t ) { function e ( a ) { if ( r [ a ] ) return r [ a ] . exports ; var i = r [ a ] = { exports : { } , id : a , loaded : ! 0 } ; return t [ a ] . call ( i . exports , i , i . exports , e ) , i . loaded = ! 0 , i . exports } var r = { } ; return e . m = t , e . c = r , e . p = "s" , e ( 0 ) } ( [ function ( t , e , r ) { function a ( t ) { return l ( t ) && ! ! t . keys } function i ( t ) { return o ( t ) === G . Basic && ! ! t . keyValues } function o ( t ) { if ( t . filterType ) return t . filterType ; var e = t , r = t ; return "s" == typeof e . operator && Array . isArray ( e . values ) ? G . Basic : "s" == typeof r . logicalOperator && Array . isArray ( r . conditions ) ? G . Advanced : G . Unknown } function n ( t ) { return void 0 !== t . table && void 0 !== t . measure } function l ( t ) { return ! ( ! t . table || ! t . column || t . aggregationFunction ) } function s ( t ) { return ! ( ! ( t . table && t . hierarchy && t . hierarchyLevel ) || t . aggregationFunction ) } function d ( t ) { return ! ! ( t . table && t . hierarchy && t . hierarchyLevel && t . aggregationFunction ) } function u ( t ) { return ! ! ( t . table && t . column && t . aggregationFunction ) } function p ( t ) { var e = t . message ; return e || ( e = t . path + "s" + t . keyword + "s" ) , { message : e } } function c ( t ) { var r = e . Validators . visualSelectorValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function f ( t ) { var r = e . Validators . slicerValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function h ( t ) { var r = e . Validators . slicerStateValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function v ( t ) { var r = e . Validators . playBookmarkRequestValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function y ( t ) { var r = e . Validators . addBookmarkRequestValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function m ( t ) { var r = e . Validators . applyBookmarkByNameRequestValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function g ( t ) { var r = e . Validators . applyBookmarkStateRequestValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function V ( t ) { var r = e . Validators . settingsValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function w ( t ) { var r = e . Validators . customPageSizeValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function b ( t ) { var r = e . Validators . extensionValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function E ( t ) { var r = e . Validators . reportLoadValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function S ( t ) { var r = e . Validators . reportCreateValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function T ( t ) { var r = e . Validators . dashboardLoadValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function P ( t ) { var r = e . Validators . tileLoadValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function O ( t ) { var r = e . Validators . pageValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function _ ( t ) { var r = e . Validators . filtersValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function R ( t ) { var r = e . Validators . saveAsParametersValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function A ( t ) { var r = e . Validators . loadQnaValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function F ( t ) { var r = e . Validators . qnaInterpretInputDataValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function x ( t ) { var r = e . Validators . exportDataRequestValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function k ( t ) { var r = e . Validators . visualHeaderValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function C ( t ) { var r = e . Validators . visualSettingsValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function I ( t ) { var r = e . Validators . commandsSettingsValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } function M ( t ) { var r = e . Validators . customThemeValidator . validate ( t ) ; return r ? r . map ( p ) : void 0 } var q = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) , e . Validators = r ( 0 ) . Validators ; var L ; ! function ( t ) { t [ t . Information = 0 ] = "s" , t [ t . Verbose = 0 ] = "s" , t [ t . Warning = 0 ] = "s" , t [ t . Error = 0 ] = "s" , t [ t . ExpectedError = 0 ] = "s" , t [ t . UnexpectedError = 0 ] = "s" , t [ t . Fatal = 0 ] = "s" } ( L = e . TraceType || ( e . TraceType = { } ) ) ; var j ; ! function ( t ) { t [ t . Widescreen = 0 ] = "s" , t [ t . Standard = 0 ] = "s" , t [ t . Cortana = 0 ] = "s" , t [ t . Letter = 0 ] = "s" , t [ t . Custom = 0 ] = "s" } ( j = e . PageSizeType || ( e . PageSizeType = { } ) ) ; var N ; ! function ( t ) { t [ t . FitToPage = 0 ] = "s" , t [ t . FitToWidth = 0 ] = "s" , t [ t . ActualSize = 0 ] = "s" } ( N = e . DisplayOption || ( e . DisplayOption = { } ) ) ; var D ; ! function ( t ) { t [ t . Default = 0 ] = "s" , t [ t . Transparent = 0 ] = "s" } ( D = e . BackgroundType || ( e . BackgroundType = { } ) ) ; var U ; ! function ( t ) { t [ t . Visible = 0 ] = "s" , t [ t . Hidden = 0 ] = "s" } ( U = e . VisualContainerDisplayMode || ( e . VisualContainerDisplayMode = { } ) ) ; var W ; ! function ( t ) { t [ t . Master = 0 ] = "s" , t [ t . Custom = 0 ] = "s" , t [ t . MobilePortrait = 0 ] = "s" , t [ t . MobileLandscape = 0 ] = "s" } ( W = e . LayoutType || ( e . LayoutType = { } ) ) ; var B ; ! function ( t ) { t [ t . AlwaysVisible = 0 ] = "s" , t [ t . HiddenInViewMode = 0 ] = "s" } ( B = e . SectionVisibility || ( e . SectionVisibility = { } ) ) ; var H ; ! function ( t ) { t [ t . Read = 0 ] = "s" , t [ t . ReadWrite = 0 ] = "s" , t [ t . Copy = 0 ] = "s" , t [ t . Create = 0 ] = "s" , t [ t . All = 0 ] = "s" } ( H = e . Permissions || ( e . Permissions = { } ) ) ; var z ; ! function ( t ) { t [ t . View = 0 ] = "s" , t [ t . Edit = 0 ] = "s" } ( z = e . ViewMode || ( e . ViewMode = { } ) ) ; var J ; ! function ( t ) { t [ t . Aad = 0 ] = "s" , t [ t . Embed = 0 ] = "s" } ( J = e . TokenType || ( e . TokenType = { } ) ) ; var Y ; ! function ( t ) { t [ t . Bottom = 0 ] = "s" , t [ t . Top = 0 ] = "s" } ( Y = e . MenuLocation || ( e . MenuLocation = { } ) ) ; var Q ; ! function ( t ) { t [ t . Report = 0 ] = "s" , t [ t . Page = 0 ] = "s" , t [ t . Visual = 0 ] = "s" } ( Q = e . FiltersLevel || ( e . FiltersLevel = { } ) ) ; var G ; ! function ( t ) { t [ t . Advanced = 0 ] = "s" , t [ t . Basic = 0 ] = "s" , t [ t . Unknown = 0 ] = "s" , t [ t . IncludeExclude = 0 ] = "s" , t [ t . RelativeDate = 0 ] = "s" , t [ t . TopN = 0 ] = "s" , t [ t . Tuple = 0 ] = "s" } ( G = e . FilterType || ( e . FilterType = { } ) ) ; var $ ; ! function ( t ) { t [ t . Days = 0 ] = "s" , t [ t . Weeks = 0 ] = "s" , t [ t . CalendarWeeks = 0 ] = "s" , t [ t . Months = 0 ] = "s" , t [ t . CalendarMonths = 0 ] = "s" , t [ t . Years = 0 ] = "s" , t [ t . CalendarYears = 0 ] = "s" } ( $ = e . RelativeDateFilterTimeUnit || ( e . RelativeDateFilterTimeUnit = { } ) ) ; var K ; ! function ( t ) { t [ t . InLast = 0 ] = "s" , t [ t . InThis = 0 ] = "s" , t [ t . InNext = 0 ] = "s" } ( K = e . RelativeDateOperators || ( e . RelativeDateOperators = { } ) ) ; var X = function ( ) { function t ( t , e ) { this . target = t , this . filterType = e } return t . prototype . toJSON = function ( ) { var t = { $schema : this . schemaUrl , target : this . target , filterType : this . filterType } ; return void 0 !== this . displaySettings && ( t . displaySettings = this . displaySettings ) , t } , t } ( ) ; e . Filter = X ; var Z = function ( t ) { function e ( r , a , i ) { var o = t . call ( this , r , G . Unknown ) || this ; return o . message = a , o . notSupportedTypeName = i , o . schemaUrl = e . schemaUrl , o } return q ( e , t ) , e . prototype . toJSON = function ( ) { var e = t . prototype . toJSON . call ( this ) ; return e . message = this . message , e . notSupportedTypeName = this . notSupportedTypeName , e } , e . schemaUrl = "s" , e } ( X ) ; e . NotSupportedFilter = Z ; var tt = function ( t ) { function e ( r , a , i ) { var o = t . call ( this , r , G . IncludeExclude ) || this ; return o . values = i , o . isExclude = a , o . schemaUrl = e . schemaUrl , o } return q ( e , t ) , e . prototype . toJSON = function ( ) { var e = t . prototype . toJSON . call ( this ) ; return e . isExclude = this . isExclude , e . values = this . values , e } , e . schemaUrl = "s" , e } ( X ) ; e . IncludeExcludeFilter = tt ; var et = function ( t ) { function e ( r , a , i , o ) { var n = t . call ( this , r , G . TopN ) || this ; return n . operator = a , n . itemCount = i , n . schemaUrl = e . schemaUrl , n . orderBy = o , n } return q ( e , t ) , e . prototype . toJSON = function ( ) { var e = t . prototype . toJSON . call ( this ) ; return e . operator = this . operator , e . itemCount = this . itemCount , e . orderBy = this . orderBy , e } , e . schemaUrl = "s" , e } ( X ) ; e . TopNFilter = et ; var rt = function ( t ) { function e ( r , a , i , o , n ) { var l = t . call ( this , r , G . RelativeDate ) || this ; return l . operator = a , l . timeUnitsCount = i , l . timeUnitType = o , l . includeToday = n , l . schemaUrl = e . schemaUrl , l } return q ( e , t ) , e . prototype . toJSON = function ( ) { var e = t . prototype . toJSON . call ( this ) ; return e . operator = this . operator , e . timeUnitsCount = this . timeUnitsCount , e . timeUnitType = this . timeUnitType , e . includeToday = this . includeToday , e } , e . schemaUrl = "s" , e } ( X ) ; e . RelativeDateFilter = rt ; var at = function ( t ) { function e ( r , a ) { for ( var i = [ ] , o = 0 ; o < arguments . length ; o ++ ) i [ o - 0 ] = arguments [ o ] ; var n = t . call ( this , r , G . Basic ) || this ; if ( n . operator = a , n . schemaUrl = e . schemaUrl , 0 === i . length && "s" !== a ) throw new Error ( 's' ) ; return Array . isArray ( i [ 0 ] ) ? n . values = i [ 0 ] : n . values = i , n } return q ( e , t ) , e . prototype . toJSON = function ( ) { var e = t . prototype . toJSON . call ( this ) ; return e . operator = this . operator , e . values = this . values , e } , e . schemaUrl = "s" , e } ( X ) ; e . BasicFilter = at ; var it = function ( t ) { function e ( e , r , a , i ) { var o = t . call ( this , e , r , a ) || this ; o . keyValues = i , o . target = e ; var n = e . keys ? e . keys . length : 0 ; if ( n > 0 && ! i ) throw new Error ( "s" + n + "s" ) ; if ( 0 === n && i && i . length > 0 ) throw new Error ( "s" ) ; for ( var l = 0 ; l < o . keyValues . length ; l ++ ) if ( o . keyValues [ l ] ) { var s = o . keyValues [ l ] . length ; if ( s !== n ) throw new Error ( "s" + s + "s" + n + "s" ) } return o } return q ( e , t ) , e . prototype . toJSON = function ( ) { var e = t . prototype . toJSON . call ( this ) ; return e . keyValues = this . keyValues , e } , e } ( at ) ; e . BasicFilterWithKeys = it ; var ot = function ( t ) { function e ( r , a , i ) { var o = t . call ( this , r , G . Tuple ) || this ; return o . operator = a , o . schemaUrl = e . schemaUrl , o . values = i , o } return q ( e , t ) , e . prototype . toJSON = function ( ) { var e = t . prototype . toJSON . call ( this ) ; return e . operator = this . operator , e . values = this . values , e . target = this . target , e } , e . schemaUrl = "s" , e } ( X ) ; e . TupleFilter = ot ; var nt = function ( t ) { function e ( r , a ) { for ( var i = [ ] , o = 0 ; o < arguments . length ; o ++ ) i [ o - 0 ] = arguments [ o ] ; var n = t . call ( this , r , G . Advanced ) || this ; if ( n . schemaUrl = e . schemaUrl , "s" != typeof a || 0 === a . length ) throw new Error ( "s" + a ) ; n . logicalOperator = a ; var l ; if ( l = Array . isArray ( i [ 0 ] ) ? i [ 0 ] : i , 0 === l . length ) throw new Error ( "s" + i ) ; if ( l . length > 0 ) throw new Error ( "s" + i . length ) ; if ( 0 === l . length && "s" !== a ) throw new Error ( 's' ) ; return n . conditions = l , n } return q ( e , t ) , e . prototype . toJSON = function ( ) { var e = t . prototype . toJSON . call ( this ) ; return e . logicalOperator = this . logicalOperator , e . conditions = this . conditions , e } , e . schemaUrl = "s" , e } ( X ) ; e . AdvancedFilter = nt , e . isFilterKeyColumnsTarget = a , e . isBasicFilterWithKeys = i , e . getFilterType = o , e . isMeasure = n , e . isColumn = l , e . isHierarchyLevel = s , e . isHierarchyLevelAggr = d , e . isColumnAggr = u ; var lt ; ! function ( t ) { t [ t . Interactive = 0 ] = "s" , t [ t . ResultOnly = 0 ] = "s" } ( lt = e . QnaMode || ( e . QnaMode = { } ) ) ; var st ; ! function ( t ) { t [ t . Summarized = 0 ] = "s" , t [ t . Underlying = 0 ] = "s" } ( st = e . ExportDataType || ( e . ExportDataType = { } ) ) ; var dt ; ! function ( t ) { t [ t . Off = 0 ] = "s" , t [ t . Presentation = 0 ] = "s" } ( dt = e . BookmarksPlayMode || ( e . BookmarksPlayMode = { } ) ) , e . CommonErrorCodes = { TokenExpired : "s" , NotFound : "s" , InvalidParameters : "s" , LoadReportFailed : "s" , NotAuthorized : "s" , FailedToLoadModel : "s" } , e . TextAlignment = { Left : "s" , Center : "s" , Right : "s" } , e . LegendPosition = { Top : "s" , Bottom : "s" , Right : "s" , Left : "s" , TopCenter : "s" , BottomCenter : "s" , RightCenter : "s" , LeftCenter : "s" } ; var ut ; ! function ( t ) { t [ t . Ascending = 0 ] = "s" , t [ t . Descending = 0 ] = "s" } ( ut = e . SortDirection || ( e . SortDirection = { } ) ) ; var pt = function ( ) { function t ( t ) { this . $schema = t } return t . prototype . toJSON = function ( ) { return { $schema : this . $schema } } , t } ( ) ; e . Selector = pt ; var ct = function ( t ) { function e ( r ) { var a = t . call ( this , e . schemaUrl ) || this ; return a . pageName = r , a } return q ( e , t ) , e . prototype . toJSON = function ( ) { var e = t . prototype . toJSON . call ( this ) ; return e . pageName = this . pageName , e } , e . schemaUrl = "s" , e } ( pt ) ; e . PageSelector = ct ; var ft = function ( t ) { function e ( r ) { var a = t . call ( this , e . schemaUrl ) || this ; return a . visualName = r , a } return q ( e , t ) , e . prototype . toJSON = function ( ) { var e = t . prototype . toJSON . call ( this ) ; return e . visualName = this . visualName , e } , e . schemaUrl = "s" , e } ( pt ) ; e . VisualSelector = ft ; var ht = function ( t ) { function e ( e ) { var r = t . call ( this , ft . schemaUrl ) || this ; return r . visualType = e , r } return q ( e , t ) , e . prototype . toJSON = function ( ) { var e = t . prototype . toJSON . call ( this ) ; return e . visualType = this . visualType , e } , e . schemaUrl = "s" , e } ( pt ) ; e . VisualTypeSelector = ht ; var vt = function ( t ) { function e ( e ) { var r = t . call ( this , ft . schemaUrl ) || this ; return r . target = e , r } return q ( e , t ) , e . prototype . toJSON = function ( ) { var e = t . prototype . toJSON . call ( this ) ; return e . target = this . target , e } , e . schemaUrl = "s" , e } ( pt ) ; e . SlicerTargetSelector = vt ; var yt ; ! function ( t ) { t [ t . Enabled = 0 ] = "s" , t [ t . Disabled = 0 ] = "s" , t [ t . Hidden = 0 ] = "s" } ( yt = e . CommandDisplayOption || ( e . CommandDisplayOption = { } ) ) ; var mt ; ! function ( t ) { t [ t . Grouping = 0 ] = "s" , t [ t . Measure = 0 ] = "s" , t [ t . GroupingOrMeasure = 0 ] = "s" } ( mt = e . VisualDataRoleKind || ( e . VisualDataRoleKind = { } ) ) ; var gt ; ! function ( t ) { t [ t . Measure = 0 ] = "s" , t [ t . Grouping = 0 ] = "s" } ( gt = e . VisualDataRoleKindPreference || ( e . VisualDataRoleKindPreference = { } ) ) , e . validateVisualSelector = c , e . validateSlicer = f , e . validateSlicerState = h , e . validatePlayBookmarkRequest = v , e . validateAddBookmarkRequest = y , e . validateApplyBookmarkByNameRequest = m , e . validateApplyBookmarkStateRequest = g , e . validateSettings = V , e . validateCustomPageSize = w , e . validateExtension = b , e . validateReportLoad = E , e . validateCreateReport = S , e . validateDashboardLoad = T , e . validateTileLoad = P , e . validatePage = O , e . validateFilter = _ , e . validateSaveAsParameters = R , e . validateLoadQnaConfiguration = A , e . validateQnaInterpretInputData = F , e . validateExportDataRequest = x , e . validateVisualHeader = k , e . validateVisualSettings = C , e . validateCommandsSettings = I , e . validateCustomTheme = M } , function ( t , e , r ) { Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var a = r ( 0 ) , i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = r ( 0 ) , s = r ( 0 ) , d = r ( 0 ) , u = r ( 0 ) , p = r ( 0 ) , c = r ( 0 ) , f = r ( 0 ) , h = r ( 0 ) , v = r ( 0 ) , y = r ( 0 ) , m = r ( 0 ) , g = r ( 0 ) , V = r ( 0 ) , w = r ( 0 ) , b = r ( 0 ) , E = r ( 0 ) , S = r ( 0 ) , T = r ( 0 ) ; e . Validators = { addBookmarkRequestValidator : new n . AddBookmarkRequestValidator , advancedFilterTypeValidator : new a . EnumValidator ( [ 0 ] ) , advancedFilterValidator : new l . AdvancedFilterValidator , anyArrayValidator : new a . ArrayValidator ( [ new d . AnyOfValidator ( [ new a . StringValidator , new a . NumberValidator , new a . BooleanValidator ] ) ] ) , anyFilterValidator : new d . AnyOfValidator ( [ new l . BasicFilterValidator , new l . AdvancedFilterValidator , new l . IncludeExcludeFilterValidator , new l . NotSupportedFilterValidator , new l . RelativeDateFilterValidator , new l . TopNFilterValidator ] ) , anyValueValidator : new d . AnyOfValidator ( [ new a . StringValidator , new a . NumberValidator , new a . BooleanValidator ] ) , applyBookmarkByNameRequestValidator : new n . ApplyBookmarkByNameRequestValidator , applyBookmarkStateRequestValidator : new n . ApplyBookmarkStateRequestValidator , applyBookmarkValidator : new d . AnyOfValidator ( [ new n . ApplyBookmarkByNameRequestValidator , new n . ApplyBookmarkStateRequestValidator ] ) , backgroundValidator : new a . EnumValidator ( [ 0 , 0 ] ) , basicFilterTypeValidator : new a . EnumValidator ( [ 0 ] ) , basicFilterValidator : new l . BasicFilterValidator , booleanArrayValidator : new a . BooleanArrayValidator , booleanValidator : new a . BooleanValidator , commandDisplayOptionValidator : new a . EnumValidator ( [ 0 , 0 , 0 ] ) , commandExtensionSelectorValidator : new d . AnyOfValidator ( [ new w . VisualSelectorValidator , new w . VisualTypeSelectorValidator ] ) , commandExtensionValidator : new i . CommandExtensionValidator , commandsSettingsArrayValidator : new a . ArrayValidator ( [ new S . CommandsSettingsValidator ] ) , commandsSettingsValidator : new S . CommandsSettingsValidator , conditionItemValidator : new l . ConditionItemValidator , customLayoutDisplayOptionValidator : new a . EnumValidator ( [ 0 , 0 , 0 ] ) , customLayoutValidator : new g . CustomLayoutValidator , customPageSizeValidator : new h . CustomPageSizeValidator , customThemeValidator : new T . CustomThemeValidator , dashboardLoadValidator : new c . DashboardLoadValidator , displayStateModeValidator : new a . EnumValidator ( [ 0 , 0 ] ) , displayStateValidator : new g . DisplayStateValidator , exportDataRequestValidator : new V . ExportDataRequestValidator , extensionArrayValidator : new a . ArrayValidator ( [ new i . ExtensionValidator ] ) , extensionPointsValidator : new i . ExtensionPointsValidator , extensionValidator : new i . ExtensionValidator , fieldRequiredValidator : new s . FieldRequiredValidator , filterColumnTargetValidator : new l . FilterColumnTargetValidator , filterConditionsValidator : new a . ArrayValidator ( [ new l . ConditionItemValidator ] ) , filterHierarchyTargetValidator : new l . FilterHierarchyTargetValidator , filterMeasureTargetValidator : new l . FilterMeasureTargetValidator , filterTargetValidator : new d . AnyOfValidator ( [ new l . FilterColumnTargetValidator , new l . FilterHierarchyTargetValidator , new l . FilterMeasureTargetValidator ] ) , filtersArrayValidator : new a . ArrayValidator ( [ new d . AnyOfValidator ( [ new l . BasicFilterValidator , new l . AdvancedFilterValidator , new l . RelativeDateFilterValidator ] ) ] ) , filtersValidator : new l . FilterValidator , includeExcludeFilterValidator : new l . IncludeExcludeFilterValidator , includeExludeFilterTypeValidator : new a . EnumValidator ( [ 0 ] ) , layoutTypeValidator : new a . EnumValidator ( [ 0 , 0 , 0 , 0 ] ) , loadQnaValidator : new v . LoadQnaValidator , menuExtensionValidator : new i . MenuExtensionValidator , menuLocationValidator : new a . EnumValidator ( [ 0 , 0 ] ) , notSupportedFilterTypeValidator : new a . EnumValidator ( [ 0 ] ) , notSupportedFilterValidator : new l . NotSupportedFilterValidator , numberArrayValidator : new a . NumberArrayValidator , numberValidator : new a . NumberValidator , pageLayoutValidator : new m . MapValidator ( [ new a . StringValidator ] , [ new g . VisualLayoutValidator ] ) , pageSizeTypeValidator : new a . EnumValidator ( [ 0 , 0 , 0 , 0 , 0 , 0 ] ) , pageSizeValidator : new h . PageSizeValidator , pageValidator : new h . PageValidator , pageViewFieldValidator : new h . PageViewFieldValidator , pagesLayoutValidator : new m . MapValidator ( [ new a . StringValidator ] , [ new g . PageLayoutValidator ] ) , permissionsValidator : new a . EnumValidator ( [ 0 , 0 , 0 , 0 , 0 ] ) , playBookmarkRequestValidator : new n . PlayBookmarkRequestValidator , qnaInterpretInputDataValidator : new v . QnaInterpretInputDataValidator , qnaSettingValidator : new v . QnaSettingsValidator , relativeDateFilterOperatorValidator : new a . EnumValidator ( [ 0 , 0 , 0 ] ) , relativeDateFilterTimeUnitTypeValidator : new a . EnumValidator ( [ 0 , 0 , 0 , 0 , 0 , 0 , 0 ] ) , relativeDateFilterTypeValidator : new a . EnumValidator ( [ 0 ] ) , relativeDateFilterValidator : new l . RelativeDateFilterValidator , reportCreateValidator : new p . ReportCreateValidator , reportLoadValidator : new u . ReportLoadValidator , saveAsParametersValidator : new y . SaveAsParametersValidator , settingsValidator : new o . SettingsValidator , singleCommandSettingsValidator : new S . SingleCommandSettingsValidator , slicerSelectorValidator : new d . AnyOfValidator ( [ new w . VisualSelectorValidator , new w . SlicerTargetSelectorValidator ] ) , slicerStateValidator : new b . SlicerStateValidator , slicerTargetValidator : new d . AnyOfValidator ( [ new l . FilterColumnTargetValidator , new l . FilterHierarchyTargetValidator , new l . FilterMeasureTargetValidator , new l . FilterKeyColumnsTargetValidator , new l . FilterKeyHierarchyTargetValidator ] ) , slicerValidator : new b . SlicerValidator , stringArrayValidator : new a . StringArrayValidator , stringValidator : new a . StringValidator , tileLoadValidator : new f . TileLoadValidator , tokenTypeValidator : new a . EnumValidator ( [ 0 , 0 ] ) , topNFilterTypeValidator : new a . EnumValidator ( [ 0 ] ) , topNFilterValidator : new l . TopNFilterValidator , viewModeValidator : new a . EnumValidator ( [ 0 , 0 ] ) , visualCommandSelectorValidator : new d . AnyOfValidator ( [ new w . VisualSelectorValidator , new w . VisualTypeSelectorValidator ] ) , visualHeaderSelectorValidator : new d . AnyOfValidator ( [ new w . VisualSelectorValidator , new w . VisualTypeSelectorValidator ] ) , visualHeaderSettingsValidator : new E . VisualHeaderSettingsValidator , visualHeaderValidator : new E . VisualHeaderValidator , visualHeadersValidator : new a . ArrayValidator ( [ new E . VisualHeaderValidator ] ) , visualLayoutValidator : new g . VisualLayoutValidator , visualSelectorValidator : new w . VisualSelectorValidator , visualSettingsValidator : new E . VisualSettingsValidator , visualTypeSelectorValidator : new w . VisualTypeSelectorValidator } } , function ( t , e ) { var r = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var a = function ( ) { function t ( ) { } return t . prototype . validate = function ( t , e , r ) { return null == t ? null : "s" != typeof t || Array . isArray ( t ) ? [ { message : void 0 !== r ? r + "s" : "s" , path : e , keyword : "s" } ] : null } , t } ( ) ; e . ObjectValidator = a ; var i = function ( ) { function t ( t ) { this . itemValidators = t } return t . prototype . validate = function ( t , e , r ) { if ( null == t ) return null ; if ( ! Array . isArray ( t ) ) return [ { message : r + "s" , path : ( e ? e + "s" : "s" ) + r , keyword : "s" } ] ; for ( var a = 0 ; a < t . length ; a ++ ) for ( var i = ( e ? e + "s" : "s" ) + r + "s" + a , o = 0 , n = this . itemValidators ; o < n . length ; o ++ ) { var l = n [ o ] , s = l . validate ( t [ a ] , i , r ) ; if ( s ) return [ { message : r + "s" , path : ( e ? e + "s" : "s" ) + r , keyword : "s" } ] } return null } , t } ( ) ; e . ArrayValidator = i ; var o = function ( ) { function t ( t ) { this . expectedType = t } return t . prototype . validate = function ( t , e , r ) { return null == t ? null : typeof t !== this . expectedType ? [ { message : r + "s" + this . expectedType , path : ( e ? e + "s" : "s" ) + r , keyword : "s" } ] : null } , t } ( ) ; e . TypeValidator = o ; var n = function ( t ) { function e ( ) { return t . call ( this , "s" ) || this } return r ( e , t ) , e } ( o ) ; e . StringValidator = n ; var l = function ( t ) { function e ( ) { return t . call ( this , "s" ) || this } return r ( e , t ) , e } ( o ) ; e . BooleanValidator = l ; var s = function ( t ) { function e ( ) { return t . call ( this , "s" ) || this } return r ( e , t ) , e } ( o ) ; e . NumberValidator = s ; var d = function ( ) { function t ( t ) { this . possibleValues = t } return t . prototype . validate = function ( t , e , r ) { return null == t ? null : this . possibleValues . indexOf ( t ) < 0 ? [ { message : r + "s" , path : ( e ? e + "s" : "s" ) + r , keyword : "s" } ] : null } , t } ( ) ; e . ValueValidator = d ; var u = function ( t ) { function e ( e ) { var r = t . call ( this , [ e ] ) || this ; return r . schemaValue = e , r } return r ( e , t ) , e . prototype . validate = function ( e , r , a ) { return t . prototype . validate . call ( this , e , r , a ) } , e } ( d ) ; e . SchemaValidator = u ; var p = function ( t ) { function e ( e ) { var r = t . call ( this ) || this ; return r . possibleValues = e , r } return r ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var i = t . prototype . validate . call ( this , e , r , a ) ; if ( i ) return i ; var o = new d ( this . possibleValues ) ; return o . validate ( e , r , a ) } , e } ( s ) ; e . EnumValidator = p ; var c = function ( t ) { function e ( ) { return t . call ( this , [ new n ] ) || this } return r ( e , t ) , e . prototype . validate = function ( e , r , a ) { var i = t . prototype . validate . call ( this , e , r , a ) ; return i ? [ { message : a + "s" , path : ( r ? r + "s" : "s" ) + a , keyword : "s" } ] : null } , e } ( i ) ; e . StringArrayValidator = c ; var f = function ( t ) { function e ( ) { return t . call ( this , [ new l ] ) || this } return r ( e , t ) , e . prototype . validate = function ( e , r , a ) { var i = t . prototype . validate . call ( this , e , r , a ) ; return i ? [ { message : a + "s" , path : ( r ? r + "s" : "s" ) + a , keyword : "s" } ] : null } , e } ( i ) ; e . BooleanArrayValidator = f ; var h = function ( t ) { function e ( ) { return t . call ( this , [ new s ] ) || this } return r ( e , t ) , e . prototype . validate = function ( e , r , a ) { var i = t . prototype . validate . call ( this , e , r , a ) ; return i ? [ { message : a + "s" , path : ( r ? r + "s" : "s" ) + a , keyword : "s" } ] : null } , e } ( i ) ; e . NumberArrayValidator = h } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . menuLocationValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . MenuExtensionValidator = l ; var s = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . menuExtensionValidator ] } , { field : "s" , validators : [ i . Validators . menuExtensionValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . ExtensionPointsValidator = s ; var d = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . extensionPointsValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . ExtensionItemValidator = d ; var u = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . commandExtensionSelectorValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( d ) ; e . CommandExtensionValidator = u ; var p = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . commandExtensionValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . ExtensionValidator = p } , function ( t , e ) { Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var r = function ( ) { function t ( t ) { this . fieldValidatorsPairs = t } return t . prototype . validate = function ( t , e , r ) { if ( ! this . fieldValidatorsPairs ) return null ; for ( var a = e ? e + "s" + r : r , i = 0 , o = this . fieldValidatorsPairs ; i < o . length ; i ++ ) for ( var n = o [ i ] , l = 0 , s = n . validators ; l < s . length ; l ++ ) { var d = s [ l ] , u = d . validate ( t [ n . field ] , a , n . field ) ; if ( u ) return u } return null } , t } ( ) ; e . MultipleFieldsValidator = r } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . booleanValidator ] } , { field : "s" , validators : [ i . Validators . booleanValidator ] } , { field : "s" , validators : [ i . Validators . booleanValidator ] } , { field : "s" , validators : [ i . Validators . booleanValidator ] } , { field : "s" , validators : [ i . Validators . extensionArrayValidator ] } , { field : "s" , validators : [ i . Validators . layoutTypeValidator ] } , { field : "s" , validators : [ i . Validators . customLayoutValidator ] } , { field : "s" , validators : [ i . Validators . backgroundValidator ] } , { field : "s" , validators : [ i . Validators . visualSettingsValidator ] } , { field : "s" , validators : [ i . Validators . booleanValidator ] } , { field : "s" , validators : [ i . Validators . commandsSettingsArrayValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . SettingsValidator = l } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var l = t . prototype . validate . call ( this , e , r , a ) ; if ( l ) return l ; var s = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , new n . EnumValidator ( [ 0 , 0 ] ) ] } ] , d = new o . MultipleFieldsValidator ( s ) ; return d . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . PlayBookmarkRequestValidator = l ; var s = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . booleanValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . AddBookmarkRequestValidator = s ; var d = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . ApplyBookmarkByNameRequestValidator = d ; var u = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . ApplyBookmarkStateRequestValidator = u } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . FilterColumnTargetValidator = l ; var s = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringArrayValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( l ) ; e . FilterKeyColumnsTargetValidator = s ; var d = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . FilterHierarchyTargetValidator = d ; var u = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringArrayValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( d ) ; e . FilterKeyHierarchyTargetValidator = u ; var p = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . FilterMeasureTargetValidator = p ; var c = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . filterTargetValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . anyArrayValidator ] } , { field : "s" , validators : [ i . Validators . basicFilterTypeValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . BasicFilterValidator = c ; var f = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . filterTargetValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . filterConditionsValidator ] } , { field : "s" , validators : [ i . Validators . advancedFilterTypeValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . AdvancedFilterValidator = f ; var h = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . filterTargetValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . relativeDateFilterOperatorValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . numberValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . relativeDateFilterTimeUnitTypeValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . booleanValidator ] } , { field : "s" , validators : [ i . Validators . relativeDateFilterTypeValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . RelativeDateFilterValidator = h ; var v = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . filterTargetValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . numberValidator ] } , { field : "s" , validators : [ i . Validators . topNFilterTypeValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . filterTargetValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . TopNFilterValidator = v ; var y = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . filterTargetValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . notSupportedFilterTypeValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . NotSupportedFilterValidator = y ; var m = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . filterTargetValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . booleanValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . anyArrayValidator ] } , { field : "s" , validators : [ i . Validators . includeExludeFilterTypeValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . IncludeExcludeFilterValidator = m ; var g = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( t , e , r ) { return null == t ? null : i . Validators . anyFilterValidator . validate ( t , e , r ) } , e } ( n . ObjectValidator ) ; e . FilterValidator = g ; var V = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . anyValueValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . ConditionItemValidator = V } , function ( t , e ) { Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var r = function ( ) { function t ( ) { } return t . prototype . validate = function ( t , e , r ) { return null == t ? [ { message : r + "s" , path : ( e ? e + "s" : "s" ) + r , keyword : "s" } ] : null } , t } ( ) ; e . FieldRequiredValidator = r } , function ( t , e ) { Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var r = function ( ) { function t ( t ) { this . validators = t } return t . prototype . validate = function ( t , e , r ) { if ( null == t ) return null ; for ( var a = ! 0 , i = 0 , o = this . validators ; i < o . length ; i ++ ) { var n = o [ i ] , l = n . validate ( t , e , r ) ; if ( ! l ) { a = ! 0 ; break } } return a ? null : [ { message : r + "s" , path : ( e ? e + "s" : "s" ) + r , keyword : "s" } ] } , t } ( ) ; e . AnyOfValidator = r } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . settingsValidator ] } , { field : "s" , validators : [ i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . filtersArrayValidator ] } , { field : "s" , validators : [ i . Validators . permissionsValidator ] } , { field : "s" , validators : [ i . Validators . viewModeValidator ] } , { field : "s" , validators : [ i . Validators . tokenTypeValidator ] } , { field : "s" , validators : [ i . Validators . applyBookmarkValidator ] } , { field : "s" , validators : [ i . Validators . customThemeValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . ReportLoadValidator = l } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . tokenTypeValidator ] } , { field : "s" , validators : [ i . Validators . customThemeValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . ReportCreateValidator = l } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . pageViewFieldValidator ] } , { field : "s" , validators : [ i . Validators . tokenTypeValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . DashboardLoadValidator = l } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . tokenTypeValidator ] } , { field : "s" , validators : [ i . Validators . numberValidator ] } , { field : "s" , validators : [ i . Validators . numberValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . TileLoadValidator = l } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . pageSizeTypeValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . PageSizeValidator = l ; var s = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . numberValidator ] } , { field : "s" , validators : [ i . Validators . numberValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( l ) ; e . CustomPageSizeValidator = s ; var d = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . PageValidator = d ; var u = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var i = t . prototype . validate . call ( this , e , r , a ) ; if ( i ) return i ; var o = [ "s" , "s" , "s" ] ; return o . indexOf ( e ) < 0 ? [ { message : 's' } ] : null } , e } ( n . StringValidator ) ; e . PageViewFieldValidator = u } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringArrayValidator ] } , { field : "s" , validators : [ i . Validators . stringValidator ] } , { field : "s" , validators : [ i . Validators . viewModeValidator ] } , { field : "s" , validators : [ i . Validators . qnaSettingValidator ] } , { field : "s" , validators : [ i . Validators . tokenTypeValidator ] } , { field : "s" , validators : [ i . Validators . stringValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . LoadQnaValidator = l ; var s = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . booleanValidator ] } , { field : "s" , validators : [ i . Validators . booleanValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . QnaSettingsValidator = s ; var d = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . stringArrayValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . QnaInterpretInputDataValidator = d } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . SaveAsParametersValidator = l } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = function ( t ) { function e ( e , r ) { var a = t . call ( this ) || this ; return a . keyValidators = e , a . valueValidators = r , a } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var i = t . prototype . validate . call ( this , e , r , a ) ; if ( i ) return i ; for ( var o in e ) if ( e . hasOwnProperty ( o ) ) { for ( var n = ( r ? r + "s" : "s" ) + a + "s" + o , l = 0 , s = this . keyValidators ; l < s . length ; l ++ ) { var d = s [ l ] ; if ( i = d . validate ( o , n , a ) ) return i } for ( var u = 0 , p = this . valueValidators ; u < p . length ; u ++ ) { var c = p [ u ] ; if ( i = c . validate ( e [ o ] , n , a ) ) return i } } return null } , e } ( i . ObjectValidator ) ; e . MapValidator = o } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . pageSizeValidator ] } , { field : "s" , validators : [ i . Validators . customLayoutDisplayOptionValidator ] } , { field : "s" , validators : [ i . Validators . pagesLayoutValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . CustomLayoutValidator = l ; var s = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . numberValidator ] } , { field : "s" , validators : [ i . Validators . numberValidator ] } , { field : "s" , validators : [ i . Validators . numberValidator ] } , { field : "s" , validators : [ i . Validators . numberValidator ] } , { field : "s" , validators : [ i . Validators . numberValidator ] } , { field : "s" , validators : [ i . Validators . displayStateValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . VisualLayoutValidator = s ; var d = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . displayStateModeValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . DisplayStateValidator = d ; var u = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . pageLayoutValidator ] } , { field : "s" , validators : [ i . Validators . visualLayoutValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . PageLayoutValidator = u } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ new o . NumberValidator ] } , { field : "s" , validators : [ new o . EnumValidator ( [ 0 , 0 ] ) ] } ] , s = new i . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( o . ObjectValidator ) ; e . ExportDataRequestValidator = n } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = r ( 0 ) , s = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var s = [ { field : "s" , validators : [ i . Validators . stringValidator , new l . SchemaValidator ( "s" ) ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } ] , d = new o . MultipleFieldsValidator ( s ) ; return d . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . VisualSelectorValidator = s ; var d = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var s = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator , new l . SchemaValidator ( "s" ) ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator ] } ] , d = new o . MultipleFieldsValidator ( s ) ; return d . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . VisualTypeSelectorValidator = d ; var u = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var s = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . stringValidator , new l . SchemaValidator ( "s" ) ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . slicerTargetValidator ] } ] , d = new o . MultipleFieldsValidator ( s ) ; return d . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . SlicerTargetSelectorValidator = u } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . slicerSelectorValidator ] } , { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . slicerStateValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . SlicerValidator = l ; var s = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . filtersArrayValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . SlicerStateValidator = s } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . visualHeadersValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . VisualSettingsValidator = l ; var s = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . booleanValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . VisualHeaderSettingsValidator = s ; var d = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . visualHeaderSettingsValidator ] } , { field : "s" , validators : [ i . Validators . visualHeaderSelectorValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . VisualHeaderValidator = d } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ i . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ i . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ i . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ i . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ i . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ i . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ i . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ i . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ i . Validators . singleCommandSettingsValidator ] } , { field : "s" , validators : [ i . Validators . singleCommandSettingsValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . CommandsSettingsValidator = l ; var s = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ i . Validators . fieldRequiredValidator , i . Validators . commandDisplayOptionValidator ] } , { field : "s" , validators : [ i . Validators . visualCommandSelectorValidator ] } ] , s = new o . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( n . ObjectValidator ) ; e . SingleCommandSettingsValidator = s } , function ( t , e , r ) { var a = this && this . __extends || function ( ) { var t = Object . setPrototypeOf || { __proto__ : [ ] } instanceof Array && function ( t , e ) { t . __proto__ = e } || function ( t , e ) { for ( var r in e ) e . hasOwnProperty ( r ) && ( t [ r ] = e [ r ] ) } ; return function ( e , r ) { function a ( ) { this . constructor = e } t ( e , r ) , e . prototype = null === r ? Object . create ( r ) : ( a . prototype = r . prototype , new a ) } } ( ) ; Object . defineProperty ( e , "s" , { value : ! 0 } ) ; var i = r ( 0 ) , o = r ( 0 ) , n = function ( t ) { function e ( ) { return null !== t && t . apply ( this , arguments ) || this } return a ( e , t ) , e . prototype . validate = function ( e , r , a ) { if ( null == e ) return null ; var n = t . prototype . validate . call ( this , e , r , a ) ; if ( n ) return n ; var l = [ { field : "s" , validators : [ new o . ObjectValidator ] } ] , s = new i . MultipleFieldsValidator ( l ) ; return s . validate ( e , r , a ) } , e } ( o . ObjectValidator ) ; e . CustomThemeValidator = n } ] ) } ) } , function ( t , e , r ) { var a = this && this . __extends || function ( t , e ) { function r ( ) { this . constructor = t } for ( var a in e ) e . hasOwnProperty ( a ) && ( t [ a ] = e [ a ] ) ; t . prototype = null === e ? Object . create ( e ) : ( r . prototype = e . prototype , new r ) } , i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = r ( 0 ) , s = r ( 0 ) , d = r ( 0 ) , u = r ( 0 ) , p = function ( t ) { function e ( r , a , i , o , n , l ) { var s = i ; t . call ( this , r , a , s , l , o , n ) , this . loadPath = "s" , this . phasedLoadPath = "s" , Array . prototype . push . apply ( this . allowedEvents , e . allowedEvents ) , this . bookmarksManager = new u . BookmarksManager ( r , s , this . iframe ) } return a ( e , t ) , e . findIdFromEmbedUrl = function ( t ) { var e , r = "s" , a = t . match ( r ) ; return a && ( e = a [ 0 ] ) , e } , e . prototype . render = function ( t ) { return this . service . hpm . post ( "s" , t , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( t ) { return t . body } ) [ "s" ] ( function ( t ) { throw t . body } ) } , e . prototype . getFilters = function ( ) { return n . isRDLEmbed ( this . config . embedUrl ) ? Promise . reject ( l . APINotSupportedForRDLError ) : this . service . hpm . get ( "s" , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( t ) { return t . body } , function ( t ) { throw t . body } ) } , e . prototype . getId = function ( ) { var t = this . config , r = t . id || this . element . getAttribute ( e . reportIdAttribute ) || e . findIdFromEmbedUrl ( t . embedUrl ) ; if ( "s" != typeof r || 0 === r . length ) throw new Error ( "s" + e . reportIdAttribute + "s" ) ; return r } , e . prototype . getPages = function ( ) { var t = this ; return n . isRDLEmbed ( this . config . embedUrl ) ? Promise . reject ( l . APINotSupportedForRDLError ) : this . service . hpm . get ( "s" , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( e ) { return e . body . map ( function ( e ) { return new s . Page ( t , e . name , e . displayName , e . isActive , e . visibility , e . defaultSize , e . defaultDisplayOption ) } ) } , function ( t ) { throw t . body } ) } , e . prototype . page = function ( t , e , r , a ) { return new s . Page ( this , t , e , r , a ) } , e . prototype . print = function ( ) { return n . isRDLEmbed ( this . config . embedUrl ) ? Promise . reject ( l . APINotSupportedForRDLError ) : this . service . hpm . post ( "s" , null , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( t ) { return t . body } ) [ "s" ] ( function ( t ) { throw t . body } ) } , e . prototype . removeFilters = function ( ) { return n . isRDLEmbed ( this . config . embedUrl ) ? Promise . reject ( l . APINotSupportedForRDLError ) : this . setFilters ( [ ] ) } , e . prototype . setPage = function ( t ) { if ( n . isRDLEmbed ( this . config . embedUrl ) ) return Promise . reject ( l . APINotSupportedForRDLError ) ; var e = { name : t , displayName : null , isActive : ! 0 } ; return this . service . hpm . put ( "s" , e , { uid : this . config . uniqueId } , this . iframe . contentWindow ) [ "s" ] ( function ( t ) { throw t . body } ) } , e . prototype . setFilters = function ( t ) { return n . isRDLEmbed ( this . config . embedUrl ) ? Promise . reject ( l . APINotSupportedForRDLError ) : this . service . hpm . put ( "s" , t , { uid : this . config . uniqueId } , this . iframe . contentWindow ) [ "s" ] ( function ( t ) { throw t . body } ) } , e . prototype . updateSettings = function ( t ) { return n . isRDLEmbed ( this . config . embedUrl ) && null != t . customLayout ? Promise . reject ( l . APINotSupportedForRDLError ) : this . service . hpm . patch ( "s" , t , { uid : this . config . uniqueId } , this . iframe . contentWindow ) [ "s" ] ( function ( t ) { throw t . body } ) } , e . prototype . validate = function ( t ) { return o . validateReportLoad ( t ) } , e . prototype . configChanged = function ( t ) { var r = this . config ; this . isMobileSettings ( r . settings ) && ( r . embedUrl = n . addParamToUrl ( r . embedUrl , "s" , "s" ) ) ; var a = this . element . getAttribute ( e . filterPaneEnabledAttribute ) , i = this . element . getAttribute ( e . navContentPaneEnabledAttribute ) , o = { filterPaneEnabled : null == a ? d . Defaults . defaultSettings . filterPaneEnabled : "s" !== a , navContentPaneEnabled : null == i ? d . Defaults . defaultSettings . navContentPaneEnabled : "s" !== i } ; this . config . settings = n . assign ( { } , o , r . settings ) , t || ( r . id = this . getId ( ) ) } , e . prototype . getDefaultEmbedUrlEndpoint = function ( ) { return "s" } , e . prototype . switchMode = function ( t ) { var e ; e = "s" == typeof t ? t : this . viewModeToString ( t ) ; var r = "s" + e ; return this . service . hpm . post ( r , null , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( t ) { return t . body } ) [ "s" ] ( function ( t ) { throw t . body } ) } , e . prototype . refresh = function ( ) { return this . service . hpm . post ( "s" , null , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( t ) { return t . body } ) [ "s" ] ( function ( t ) { throw t . body } ) } , e . prototype . isSaved = function ( ) { return n . isRDLEmbed ( this . config . embedUrl ) ? Promise . reject ( l . APINotSupportedForRDLError ) : n . isSavedInternal ( this . service . hpm , this . config . uniqueId , this . iframe . contentWindow ) } , e . prototype . applyTheme = function ( t ) { return n . isRDLEmbed ( this . config . embedUrl ) ? Promise . reject ( l . APINotSupportedForRDLError ) : this . applyThemeInternal ( t ) } , e . prototype . resetTheme = function ( ) { return n . isRDLEmbed ( this . config . embedUrl ) ? Promise . reject ( l . APINotSupportedForRDLError ) : this . applyThemeInternal ( { } ) } , e . prototype . applyThemeInternal = function ( t ) { return this . service . hpm . put ( "s" , t , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( t ) { return t . body } ) [ "s" ] ( function ( t ) { throw t . body } ) } , e . prototype . viewModeToString = function ( t ) { var e ; switch ( t ) { case o . ViewMode . Edit : e = "s" ; break ; case o . ViewMode . View : e = "s" } return e } , e . prototype . isMobileSettings = function ( t ) { return t && ( t . layoutType === o . LayoutType . MobileLandscape || t . layoutType === o . LayoutType . MobilePortrait ) } , e . allowedEvents = [ "s" , "s" , "s" , "s" , "s" , "s" , "s" ] , e . reportIdAttribute = "s" , e . filterPaneEnabledAttribute = "s" , e . navContentPaneEnabledAttribute = "s" , e . typeAttribute = "s" , e . type = "s" , e } ( i . Embed ) ; e . Report = p } , function ( t , e ) { e . APINotSupportedForRDLError = "s" } , function ( t , e , r ) { var a = r ( 0 ) , i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( ) { function t ( t , e , r , a , i , o , n ) { this . report = t , this . name = e , this . displayName = r , this . isActive = a , this . visibility = i , this . defaultSize = o , this . defaultDisplayOption = n } return t . prototype . getFilters = function ( ) { return this . report . service . hpm . get ( "s" + this . name + "s" , { uid : this . report . config . uniqueId } , this . report . iframe . contentWindow ) . then ( function ( t ) { return t . body } , function ( t ) { throw t . body } ) } , t . prototype . removeFilters = function ( ) { return this . setFilters ( [ ] ) } , t . prototype . setActive = function ( ) { var t = { name : this . name , displayName : null , isActive : ! 0 } ; return this . report . service . hpm . put ( "s" , t , { uid : this . report . config . uniqueId } , this . report . iframe . contentWindow ) [ "s" ] ( function ( t ) { throw t . body } ) } , t . prototype . setFilters = function ( t ) { return this . report . service . hpm . put ( "s" + this . name + "s" , t , { uid : this . report . config . uniqueId } , this . report . iframe . contentWindow ) [ "s" ] ( function ( t ) { throw t . body } ) } , t . prototype . getVisuals = function ( ) { var t = this ; return o . isRDLEmbed ( this . report . config . embedUrl ) ? Promise . reject ( n . APINotSupportedForRDLError ) : this . report . service . hpm . get ( "s" + this . name + "s" , { uid : this . report . config . uniqueId } , this . report . iframe . contentWindow ) . then ( function ( e ) { return e . body . map ( function ( e ) { return new a . VisualDescriptor ( t , e . name , e . title , e . type , e . layout ) } ) } , function ( t ) { throw t . body } ) } , t . prototype . hasLayout = function ( t ) { if ( o . isRDLEmbed ( this . report . config . embedUrl ) ) return Promise . reject ( n . APINotSupportedForRDLError ) ; var e = i . LayoutType [ t ] ; return this . report . service . hpm . get ( "s" + this . name + "s" + e , { uid : this . report . config . uniqueId } , this . report . iframe . contentWindow ) . then ( function ( t ) { return t . body } , function ( t ) { throw t . body } ) } , t } ( ) ; e . Page = l } , function ( t , e ) { var r = function ( ) { function t ( t , e , r , a , i ) { this . name = e , this . title = r , this . type = a , this . layout = i , this . page = t } return t . prototype . getFilters = function ( ) { return this . page . report . service . hpm . get ( "s" + this . page . name + "s" + this . name + "s" , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . then ( function ( t ) { return t . body } , function ( t ) { throw t . body } ) } , t . prototype . removeFilters = function ( ) { return this . setFilters ( [ ] ) } , t . prototype . setFilters = function ( t ) { return this . page . report . service . hpm . put ( "s" + this . page . name + "s" + this . name + "s" , t , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) [ "s" ] ( function ( t ) { throw t . body } ) } , t . prototype . exportData = function ( t , e ) { var r = { rows : e , exportDataType : t } ; return this . page . report . service . hpm . post ( "s" + this . page . name + "s" + this . name + "s" , r , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . then ( function ( t ) { return t . body } , function ( t ) { throw t . body } ) } , t . prototype . setSlicerState = function ( t ) { return this . page . report . service . hpm . put ( "s" + this . page . name + "s" + this . name + "s" , t , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) [ "s" ] ( function ( t ) { throw t . body } ) } , t . prototype . getSlicerState = function ( ) { return this . page . report . service . hpm . get ( "s" + this . page . name + "s" + this . name + "s" , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . then ( function ( t ) { return t . body } , function ( t ) { throw t . body } ) } , t . prototype . clone = function ( t ) { return void 0 === t && ( t = { } ) , this . page . report . service . hpm . post ( "s" + this . page . name + "s" + this . name + "s" , t , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . then ( function ( t ) { return t . body } , function ( t ) { throw t . body } ) } , t . prototype . sortBy = function ( t ) { return this . page . report . service . hpm . put ( "s" + this . page . name + "s" + this . name + "s" , t , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) [ "s" ] ( function ( t ) { throw t . body } ) } , t } ( ) ; e . VisualDescriptor = r } , function ( t , e ) { var r = function ( ) { function t ( ) { } return t . defaultSettings = { filterPaneEnabled : ! 0 } , t . defaultQnaSettings = { filterPaneEnabled : ! 0 } , t } ( ) ; e . Defaults = r } , function ( t , e , r ) { var a = r ( 0 ) , i = r ( 0 ) , o = function ( ) { function t ( t , e , r ) { this . service = t , this . config = e , this . iframe = r } return t . prototype . getBookmarks = function ( ) { return a . isRDLEmbed ( this . config . embedUrl ) ? Promise . reject ( i . APINotSupportedForRDLError ) : this . service . hpm . get ( "s" , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( t ) { return t . body } , function ( t ) { throw t . body } ) } , t . prototype . apply = function ( t ) { if ( a . isRDLEmbed ( this . config . embedUrl ) ) return Promise . reject ( i . APINotSupportedForRDLError ) ; var e = { name : t } ; return this . service . hpm . post ( "s" , e , { uid : this . config . uniqueId } , this . iframe . contentWindow ) [ "s" ] ( function ( t ) { throw t . body } ) } , t . prototype . play = function ( t ) { if ( a . isRDLEmbed ( this . config . embedUrl ) ) return Promise . reject ( i . APINotSupportedForRDLError ) ; var e = { playMode : t } ; return this . service . hpm . post ( "s" , e , { uid : this . config . uniqueId } , this . iframe . contentWindow ) [ "s" ] ( function ( t ) { throw t . body } ) } , t . prototype . capture = function ( ) { return a . isRDLEmbed ( this . config . embedUrl ) ? Promise . reject ( i . APINotSupportedForRDLError ) : this . service . hpm . post ( "s" , null , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( t ) { return t . body } , function ( t ) { throw t . body } ) } , t . prototype . applyState = function ( t ) { if ( a . isRDLEmbed ( this . config . embedUrl ) ) return Promise . reject ( i . APINotSupportedForRDLError ) ; var e = { state : t } ; return this . service . hpm . post ( "s" , e , { uid : this . config . uniqueId } , this . iframe . contentWindow ) [ "s" ] ( function ( t ) { throw t . body } ) } , t } ( ) ; e . BookmarksManager = o } , function ( t , e , r ) { var a = this && this . __extends || function ( t , e ) { function r ( ) { this . constructor = t } for ( var a in e ) e . hasOwnProperty ( a ) && ( t [ a ] = e [ a ] ) ; t . prototype = null === e ? Object . create ( e ) : ( r . prototype = e . prototype , new r ) } , i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) , l = function ( t ) { function e ( e , r , a , i , o ) { t . call ( this , e , r , a , void 0 , i , o ) } return a ( e , t ) , e . prototype . getId = function ( ) { var t = this . createConfig && this . createConfig . datasetId ? this . createConfig . datasetId : e . findIdFromEmbedUrl ( this . config . embedUrl ) ; if ( "s" != typeof t || 0 === t . length ) throw new Error ( "s" ) ; return t } , e . prototype . validate = function ( t ) { return i . validateCreateReport ( t ) } , e . prototype . configChanged = function ( t ) { if ( ! t ) { var e = this . config ; this . createConfig = { accessToken : e . accessToken , datasetId : e . datasetId || this . getId ( ) , groupId : e . groupId , settings : e . settings , tokenType : e . tokenType , theme : e . theme } } } , e . prototype . getDefaultEmbedUrlEndpoint = function ( ) { return "s" } , e . prototype . isSaved = function ( ) { return n . isSavedInternal ( this . service . hpm , this . config . uniqueId , this . iframe . contentWindow ) } , e . findIdFromEmbedUrl = function ( t ) { var e , r = "s" , a = t . match ( r ) ; return a && ( e = a [ 0 ] ) , e } , e } ( o . Embed ) ; e . Create = l } , function ( t , e , r ) { var a = this && this . __extends || function ( t , e ) { function r ( ) { this . constructor = t } for ( var a in e ) e . hasOwnProperty ( a ) && ( t [ a ] = e [ a ] ) ; t . prototype = null === e ? Object . create ( e ) : ( r . prototype = e . prototype , new r ) } , i = r ( 0 ) , o = r ( 0 ) , n = function ( t ) { function e ( r , a , i , o , n ) { t . call ( this , r , a , i , void 0 , o , n ) , this . loadPath = "s" , this . phasedLoadPath = "s" , Array . prototype . push . apply ( this . allowedEvents , e . allowedEvents ) } return a ( e , t ) , e . findIdFromEmbedUrl = function ( t ) { var e , r = "s" , a = t . match ( r ) ; return a && ( e = a [ 0 ] ) , e } , e . prototype . getId = function ( ) { var t = this . config , r = t . id || this . element . getAttribute ( e . dashboardIdAttribute ) || e . findIdFromEmbedUrl ( t . embedUrl ) ; if ( "s" != typeof r || 0 === r . length ) throw new Error ( "s" + e . dashboardIdAttribute + "s" ) ; return r } , e . prototype . validate = function ( t ) { var e = t , r = o . validateDashboardLoad ( e ) ; return r ? r : this . ValidatePageView ( e . pageView ) } , e . prototype . configChanged = function ( t ) { t || ( this . config . id = this . getId ( ) ) } , e . prototype . getDefaultEmbedUrlEndpoint = function ( ) { return "s" } , e . prototype . ValidatePageView = function ( t ) { if ( t && "s" !== t && "s" !== t && "s" !== t ) return [ { message : "s" } ] } , e . allowedEvents = [ "s" , "s" ] , e . dashboardIdAttribute = "s" , e . typeAttribute = "s" , e . type = "s" , e } ( i . Embed ) ; e . Dashboard = n } , function ( t , e , r ) { var a = this && this . __extends || function ( t , e ) { function r ( ) { this . constructor = t } for ( var a in e ) e . hasOwnProperty ( a ) && ( t [ a ] = e [ a ] ) ; t . prototype = null === e ? Object . create ( e ) : ( r . prototype = e . prototype , new r ) } , i = r ( 0 ) , o = r ( 0 ) , n = function ( t ) { function e ( r , a , i , o , n ) { var l = i ; t . call ( this , r , a , l , void 0 , o , n ) , this . loadPath = "s" , Array . prototype . push . apply ( this . allowedEvents , e . allowedEvents ) } return a ( e , t ) , e . prototype . getId = function ( ) { var t = this . config , r = t . id || e . findIdFromEmbedUrl ( this . config . embedUrl ) ; if ( "s" != typeof r || 0 === r . length ) throw new Error ( "s" ) ; return r } , e . prototype . validate = function ( t ) { var e = t ; return i . validateTileLoad ( e ) } , e . prototype . configChanged = function ( t ) { t || ( this . config . id = this . getId ( ) ) } , e . prototype . getDefaultEmbedUrlEndpoint = function ( ) { return "s" } , e . findIdFromEmbedUrl = function ( t ) { var e , r = "s" , a = t . match ( r ) ; return a && ( e = a [ 0 ] ) , e } , e . type = "s" , e . allowedEvents = [ "s" , "s" ] , e } ( o . Embed ) ; e . Tile = n } , function ( t , e , r ) { var a = this && this . __extends || function ( t , e ) { function r ( ) { this . constructor = t } for ( var a in e ) e . hasOwnProperty ( a ) && ( t [ a ] = e [ a ] ) ; t . prototype = null === e ? Object . create ( e ) : ( r . prototype = e . prototype , new r ) } , i = r ( 0 ) , o = r ( 0 ) , n = function ( t ) { function e ( r , a , i , o , n ) { t . call ( this , r , a , i , void 0 , o , n ) , this . loadPath = "s" , this . phasedLoadPath = "s" , Array . prototype . push . apply ( this . allowedEvents , e . allowedEvents ) } return a ( e , t ) , e . prototype . getId = function ( ) { return null } , e . prototype . setQuestion = function ( t ) { var e = { question : t } ; return this . service . hpm . post ( "s" , e , { uid : this . config . uniqueId } , this . iframe . contentWindow ) [ "s" ] ( function ( t ) { throw t . body } ) } , e . prototype . configChanged = function ( t ) { } , e . prototype . getDefaultEmbedUrlEndpoint = function ( ) { return "s" } , e . prototype . validate = function ( t ) { return i . validateLoadQnaConfiguration ( t ) } , e . type = "s" , e . allowedEvents = [ "s" , "s" ] , e } ( o . Embed ) ; e . Qna = n } , function ( t , e , r ) { var a = this && this . __extends || function ( t , e ) { function r ( ) { this . constructor = t } for ( var a in e ) e . hasOwnProperty ( a ) && ( t [ a ] = e [ a ] ) ; t . prototype = null === e ? Object . create ( e ) : ( r . prototype = e . prototype , new r ) } , i = r ( 0 ) , o = r ( 0 ) , n = function ( t ) { function e ( e , r , a , i , o , n ) { t . call ( this , e , r , a , i , o , n ) } return a ( e , t ) , e . prototype . load = function ( e , r ) { var a = e ; if ( a . accessToken ) { if ( "s" != typeof a . pageName || 0 === a . pageName . length ) throw new Error ( "s" ) ; if ( "s" != typeof a . visualName || 0 === a . visualName . length ) throw new Error ( "s" ) ; var o = a . width ? a . width : this . iframe . offsetWidth , n = a . height ? a . height : this . iframe . offsetHeight , l = { type : i . PageSizeType . Custom , width : o , height : n } , s = { } ; return s [ a . pageName ] = { defaultLayout : { displayState : { mode : i . VisualContainerDisplayMode . Hidden } } , visualsLayout : { } } , s [ a . pageName ] . visualsLayout [ a . visualName ] = { displayState : { mode : i . VisualContainerDisplayMode . Visible } , x : 0 , y : 0 , z : 0 , width : l . width , height : l . height } , a . settings = a . settings || { } , a . settings . filterPaneEnabled = ! 0 , a . settings . navContentPaneEnabled = ! 0 , a . settings . layoutType = i . LayoutType . Custom , a . settings . customLayout = { displayOption : i . DisplayOption . FitToPage , pageSize : l , pagesLayout : s } , t . prototype . load . call ( this , a , r ) } } , e . prototype . getPages = function ( ) { throw e . GetPagesNotSupportedError } , e . prototype . setPage = function ( t ) { throw e . SetPageNotSupportedError } , e . prototype . getFilters = function ( t ) { var e = this . getFiltersLevelUrl ( t ) ; return this . service . hpm . get ( e , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( function ( t ) { return t . body } , function ( t ) { throw t . body } ) } , e . prototype . setFilters = function ( t , e ) { var r = this . getFiltersLevelUrl ( e ) ; return this . service . hpm . put ( r , t , { uid : this . config . uniqueId } , this . iframe . contentWindow ) [ "s" ] ( function ( t ) { throw t . body } ) } , e . prototype . removeFilters = function ( t ) { return this . setFilters ( [ ] , t ) } , e . prototype . getFiltersLevelUrl = function ( t ) { var e = this . config ; switch ( t ) { case i . FiltersLevel . Report : return "s" ; case i . FiltersLevel . Page : return "s" + e . pageName + "s" ; default : return "s" + e . pageName + "s" + e . visualName + "s" } } , e . type = "s" , e . GetPagesNotSupportedError = "s" , e . SetPageNotSupportedError = "s" , e } ( o . Report ) ; e . Visual = n } , function ( t , e , r ) { var a = r ( 0 ) , i = r ( 0 ) , o = r ( 0 ) , n = r ( 0 ) ; e . hpmFactory = function ( t , e , r , i ) { return void 0 === r && ( r = a [ "s" ] . version ) , void 0 === i && ( i = a [ "s" ] . type ) , new o . HttpPostMessage ( t , { "s" : i , "s" : r } , e ) } , e . wpmpFactory = function ( t , e , r ) { return new i . WindowPostMessageProxy ( { processTrackingProperties : { addTrackingProperties : o . HttpPostMessage . addTrackingProperties , getTrackingProperties : o . HttpPostMessage . getTrackingProperties } , isErrorMessage : o . HttpPostMessage . isErrorMessage , suppressWarnings : ! 0 , name : t , logMessages : e , eventSourceOverrideWindow : r } ) } , e . routerFactory = function ( t ) { return new n . Router ( t ) } } , function ( t , e , r ) { ! function ( e , r ) { t . exports = r ( ) } ( this , function ( ) { return function ( t ) { function e ( a ) { if ( r [ a ] ) return r [ a ] . exports ; var i = r [ a ] = { exports : { } , id : a , loaded : ! 0 } ; return t [ a ] . call ( i . exports , i , i . exports , e ) , i . loaded = ! 0 , i . exports } var r = { } ; return e . m = t , e . c = r , e . p = "s" , e ( 0 ) } ( [ function ( t , e ) { "s" ; var r = function ( ) { function t ( e ) { var r = this ; void 0 === e && ( e = { processTrackingProperties : { addTrackingProperties : t . defaultAddTrackingProperties , getTrackingProperties : t . defaultGetTrackingProperties } , isErrorMessage : t . defaultIsErrorMessage , receiveWindow : window , name : t . createRandomString ( ) } ) , this . pendingRequestPromises = { } , this . addTrackingProperties = e . processTrackingProperties && e . processTrackingProperties . addTrackingProperties || t . defaultAddTrackingProperties , this . getTrackingProperties = e . processTrackingProperties && e . processTrackingProperties . getTrackingProperties || t . defaultGetTrackingProperties , this . isErrorMessage = e . isErrorMessage || t . defaultIsErrorMessage , this . receiveWindow = e . receiveWindow || window , this . name = e . name || t . createRandomString ( ) , this . logMessages = e . logMessages || ! 0 , this . eventSourceOverrideWindow = e . eventSourceOverrideWindow , this . suppressWarnings = e . suppressWarnings || ! 0 , this . logMessages && console . log ( "s" + this . name + "s" + this . receiveWindow . document . title ) , this . handlers = [ ] , this . windowMessageHandler = function ( t ) { return r . onMessageReceived ( t ) } , this . start ( ) } return t . defaultAddTrackingProperties = function ( e , r ) { return e [ t . messagePropertyName ] = r , e } , t . defaultGetTrackingProperties = function ( e ) { return e [ t . messagePropertyName ] } , t . defaultIsErrorMessage = function ( t ) { return ! ! t . error } , t . createDeferred = function ( ) { var t = { resolve : null , reject : null , promise : null } , e = new Promise ( function ( e , r ) { t . resolve = e , t . reject = r } ) ; return t . promise = e , t } , t . createRandomString = function ( ) { return ( Math . random ( ) + 0 ) . toString ( 0 ) . substring ( 0 ) } , t . prototype . addHandler = function ( t ) { this . handlers . push ( t ) } , t . prototype . removeHandler = function ( t ) { var e = this . handlers . indexOf ( t ) ; if ( e === - 0 ) throw new Error ( "s" ) ; this . handlers . splice ( e , 0 ) } , t . prototype . start = function ( ) { this . receiveWindow . addEventListener ( "s" , this . windowMessageHandler ) } , t . prototype . stop = function ( ) { this . receiveWindow . removeEventListener ( "s" , this . windowMessageHandler ) } , t . prototype . postMessage = function ( e , r ) { var a = { id : t . createRandomString ( ) } ; this . addTrackingProperties ( r , a ) , this . logMessages && ( console . log ( this . name + "s" ) , console . log ( JSON . stringify ( r , null , "s" ) ) ) , e . postMessage ( r , "s" ) ; var i = t . createDeferred ( ) ; return this . pendingRequestPromises [ a . id ] = i , i . promise } , t . prototype . sendResponse = function ( t , e , r ) { this . addTrackingProperties ( e , r ) , this . logMessages && ( console . log ( this . name + "s" ) , console . log ( JSON . stringify ( e , null , "s" ) ) ) , t . postMessage ( e , "s" ) } , t . prototype . onMessageReceived = function ( t ) { var e = this ; this . logMessages && ( console . log ( this . name + "s" ) , console . log ( "s" + t . type ) , console . log ( JSON . stringify ( t . data , null , "s" ) ) ) ; var r = this . eventSourceOverrideWindow || t . source , a = t . data ; if ( "s" != typeof a ) return void ( this . suppressWarnings || console . warn ( "s" + this . name + "s" ) ) ; var i ; try { i = this . getTrackingProperties ( a ) } catch ( o ) { this . suppressWarnings || console . warn ( "s" + this . name + "s" , JSON . stringify ( a , null , "s" ) , "s" , o ) } var n ; if ( i && ( n = this . pendingRequestPromises [ i . id ] ) , n ) { var l = ! 0 ; try { l = this . isErrorMessage ( a ) } catch ( o ) { console . warn ( "s" + this . name + "s" , JSON . stringify ( a , null , "s" ) , "s" , o ) } l ? n . reject ( a ) : n . resolve ( a ) , delete this . pendingRequestPromises [ i . id ] } else { var s = this . handlers . some ( function ( t ) { var o = ! 0 ; try { o = t . test ( a ) } catch ( n ) { e . suppressWarnings || console . warn ( "s" + e . name + "s" , JSON . stringify ( a , null , "s" ) , "s" , n ) } if ( o ) { var l = void 0 ; try { l = Promise . resolve ( t . handle ( a ) ) } catch ( n ) { e . suppressWarnings || console . warn ( "s" + e . name + "s" , JSON . stringify ( a , null , "s" ) , "s" , n ) , l = Promise . resolve ( ) } return l . then ( function ( t ) { if ( ! t ) { var o = "s" + JSON . stringify ( a , null , "s" ) + "s" ; e . suppressWarnings || console . warn ( "s" + e . name + "s" + o ) , t = { warning : o } } e . sendResponse ( r , t , i ) } ) , ! 0 } } ) ; s || this . suppressWarnings || console . warn ( "s" + this . name + "s" + this . handlers . length + "s" + JSON . stringify ( a , null , "s" ) + "s" ) } } , t . messagePropertyName = "s" , t } ( ) ; e . WindowPostMessageProxy = r } ] ) } ) } , function ( t , e , r ) { ! function ( e , r ) { t . exports = r ( ) } ( this , function ( ) { return function ( t ) { function e ( a ) { if ( r [ a ] ) return r [ a ] . exports ; var i = r [ a ] = { exports : { } , id : a , loaded : ! 0 } ; return t [ a ] . call ( i . exports , i , i . exports , e ) , i . loaded = ! 0 , i . exports } var r = { } ; return e . m = t , e . c = r , e . p = "s" , e ( 0 ) } ( [ function ( t , e ) { "s" ; var r = function ( ) { function t ( t , e , r ) { void 0 === e && ( e = { } ) , this . defaultHeaders = e , this . defaultTargetWindow = r , this . windowPostMessageProxy = t } return t . addTrackingProperties = function ( t , e ) { return t . headers = t . headers || { } , e && e . id && ( t . headers . id = e . id ) , t } , t . getTrackingProperties = function ( t ) { return { id : t . headers && t . headers . id } } , t . isErrorMessage = function ( t ) { return "s" == typeof ( t && t . statusCode ) && ! ( 0 <= t . statusCode && t . statusCode < 0 ) } , t . prototype . get = function ( t , e , r ) { return void 0 === e && ( e = { } ) , void 0 === r && ( r = this . defaultTargetWindow ) , this . send ( { method : "s" , url : t , headers : e } , r ) } , t . prototype . post = function ( t , e , r , a ) { return void 0 === r && ( r = { } ) , void 0 === a && ( a = this . defaultTargetWindow ) , this . send ( { method : "s" , url : t , headers : r , body : e } , a ) } , t . prototype . put = function ( t , e , r , a ) { return void 0 === r && ( r = { } ) , void 0 === a && ( a = this . defaultTargetWindow ) , this . send ( { method : "s" , url : t , headers : r , body : e } , a ) } , t . prototype . patch = function ( t , e , r , a ) { return void 0 === r && ( r = { } ) , void 0 === a && ( a = this . defaultTargetWindow ) , this . send ( { method : "s" , url : t , headers : r , body : e } , a ) } , t . prototype [ "s" ] = function ( t , e , r , a ) { return void 0 === e && ( e = null ) , void 0 === r && ( r = { } ) , void 0 === a && ( a = this . defaultTargetWindow ) , this . send ( { method : "s" , url : t , headers : r , body : e } , a ) } , t . prototype . send = function ( t , e ) { if ( void 0 === e && ( e = this . defaultTargetWindow ) , t . headers = this . assign ( { } , this . defaultHeaders , t . headers ) , ! e ) throw new Error ( "s" ) ; return this . windowPostMessageProxy . postMessage ( e , t ) } , t . prototype . assign = function ( t ) { for ( var e = [ ] , r = 0 ; r < arguments . length ; r ++ ) e [ r - 0 ] = arguments [ r ] ; if ( void 0 === t || null === t ) throw new TypeError ( "s" ) ; var a = Object ( t ) ; return e . forEach ( function ( t ) { if ( void 0 !== t && null !== t ) for ( var e in t ) Object . prototype . hasOwnProperty . call ( t , e ) && ( a [ e ] = t [ e ] ) } ) , a } , t } ( ) ; e . HttpPostMessage = r } ] ) } ) } , function ( t , e , r ) { ! function ( e , r ) { t . exports = r ( ) } ( this , function ( ) { return function ( t ) { function e ( a ) { if ( r [ a ] ) return r [ a ] . exports ; var i = r [ a ] = { exports : { } , id : a , loaded : ! 0 } ; return t [ a ] . call ( i . exports , i , i . exports , e ) , i . loaded = ! 0 , i . exports } var r = { } ; return e . m = t , e . c = r , e . p = "s" , e ( 0 ) } ( [ function ( t , e , r ) { "s" ; var a = r ( 0 ) , i = function ( ) { function t ( t ) { this . handlers = t , this . getRouteRecognizer = new a , this . patchRouteRecognizer = new a , this . postRouteRecognizer = new a , this . putRouteRecognizer = new a , this . deleteRouteRecognizer = new a } return t . prototype . get = function ( t , e ) { return this . registerHandler ( this . getRouteRecognizer , "s" , t , e ) , this } , t . prototype . patch = function ( t , e ) { return this . registerHandler ( this . patchRouteRecognizer , "s" , t , e ) , this } , t . prototype . post = function ( t , e ) { return this . registerHandler ( this . postRouteRecognizer , "s" , t , e ) , this } , t . prototype . put = function ( t , e ) { return this . registerHandler ( this . putRouteRecognizer , "s" , t , e ) , this } , t . prototype [ "s" ] = function ( t , e ) { return this . registerHandler ( this . deleteRouteRecognizer , "s" , t , e ) , this } , t . prototype . registerHandler = function ( t , e , r , a ) { var i = function ( t ) { var e = new o ; return Promise . resolve ( a ( t , e ) ) . then ( function ( t ) { return e } ) } ; t . add ( [ { path : r , handler : i } ] ) ; var n = { test : function ( r ) { if ( r . method !== e ) return ! 0 ; var a = t . recognize ( r . url ) ; if ( void 0 === a ) return ! 0 ; var i = a [ 0 ] ; return r . params = i . params , r . queryParams = a . queryParams , r . handler = i . handler , ! 0 } , handle : function ( t ) { return t . handler ( t ) } } ; this . handlers . addHandler ( n ) } , t } ( ) ; e . Router = i ; var o = function ( ) { function t ( ) { this . statusCode = 0 , this . headers = { } , this . body = null } return t . prototype . send = function ( t , e ) { this . statusCode = t , this . body = e } , t } ( ) ; e . Response = o } , function ( t , e , r ) { var a ; ( function ( t ) { ( function ( ) { "s" ; function i ( t , e , r ) { this . path = t , this . matcher = e , this . delegate = r } function o ( t ) { this . routes = { } , this . children = { } , this . target = t } function n ( t , e , r ) { return function ( a , o ) { var l = t + a ; return o ? void o ( n ( l , e , r ) ) : new i ( t + a , e , r ) } } function l ( t , e , r ) { for ( var a = 0 , i = 0 ; i < t . length ; i ++ ) a += t [ i ] . path . length ; e = e . substr ( a ) ; var o = { path : e , handler : r } ; t . push ( o ) } function s ( t , e , r , a ) { var i = e . routes ; for ( var o in i ) if ( i . hasOwnProperty ( o ) ) { var n = t . slice ( ) ; l ( n , o , i [ o ] ) , e . children [ o ] ? s ( n , e . children [ o ] , r , a ) : r . call ( a , n ) } } function d ( t ) { return "s" === Object . prototype . toString . call ( t ) } function u ( t ) { this . string = t } function p ( t ) { this . name = t } function c ( t ) { this . name = t } function f ( ) { } function h ( t , e , r ) { "s" === t . charAt ( 0 ) && ( t = t . substr ( 0 ) ) ; var a = t . split ( "s" ) , i = new Array ( a . length ) ; r . val = "s" ; for ( var o = 0 ; o < a . length ; o ++ ) { var n , l = a [ o ] ; ( n = l . match ( "s" ) ) ? ( i [ o ] = new p ( n [ 0 ] ) , e . push ( n [ 0 ] ) , r . val += "s" ) : ( n = l . match ( "s" ) ) ? ( i [ o ] = new c ( n [ 0 ] ) , r . val += "s" , e . push ( n [ 0 ] ) ) : "s" === l ? ( i [ o ] = new f , r . val += "s" ) : ( i [ o ] = new u ( l ) , r . val += "s" ) } return r . val = + r . val , i } function v ( t ) { this . charSpec = t , this . nextStates = [ ] , this . charSpecs = { } , this . regex = void 0 , this . handlers = void 0 , this . specificity = void 0 } function y ( t ) { return t . sort ( function ( t , e ) { return e . specificity . val - t . specificity . val } ) } function m ( t , e ) { for ( var r = [ ] , a = 0 , i = t . length ; a < i ; a ++ ) { var o = t [ a ] ; r = r . concat ( o . match ( e ) ) } return r } function g ( t ) { this . queryParams = t || { } } function V ( t , e , r ) { var a = t . handlers , i = t . regex , o = e . match ( i ) , n = 0 , l = new g ( r ) ; l . length = a . length ; for ( var s = 0 ; s < a . length ; s ++ ) { for ( var d = a [ s ] , u = d . names , p = { } , c = 0 ; c < u . length ; c ++ ) p [ u [ c ] ] = o [ n ++ ] ; l [ s ] = { handler : d . handler , params : p , isDynamic : ! ! u . length } } return l } function w ( t ) { t = t . replace ( "s" , "s" ) ; var e ; try { e = decodeURIComponent ( t ) } catch ( r ) { e = "s" } return e } i . prototype = { to : function ( t , e ) { var r = this . delegate ; if ( r && r . willAddRoute && ( t = r . willAddRoute ( this . matcher . target , t ) ) , this . matcher . add ( this . path , t ) , e ) { if ( 0 === e . length ) throw new Error ( "s" ) ; this . matcher . addChild ( this . path , t , e , this . delegate ) } return this } } , o . prototype = { add : function ( t , e ) { this . routes [ t ] = e } , addChild : function ( t , e , r , a ) { var i = new o ( e ) ; this . children [ t ] = i ; var l = n ( t , i , a ) ; a && a . contextEntered && a . contextEntered ( e , l ) , r ( l ) } } ; var b = function ( t , e ) { var r = new o ; t ( n ( "s" , r , this . delegate ) ) , s ( [ ] , r , function ( t ) { e ? e ( this , t ) : this . add ( t ) } , this ) } , E = [ "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" , "s" ] , S = new RegExp ( "s" + E . join ( "s" ) + "s" , "s" ) ; u . prototype = { eachChar : function ( t ) { for ( var e , r = this . string , a = 0 ; a < r . length ; a ++ ) e = r . charAt ( a ) , t = t . put ( { invalidChars : void 0 , repeat : ! 0 , validChars : e } ) ; return t } , regex : function ( ) { return this . string . replace ( S , "s" ) } , generate : function ( ) { return this . string } } , p . prototype = { eachChar : function ( t ) { return t . put ( { invalidChars : "s" , repeat : ! 0 , validChars : void 0 } ) } , regex : function ( ) { return "s" } , generate : function ( t ) { return t [ this . name ] } } , c . prototype = { eachChar : function ( t ) { return t . put ( { invalidChars : "s" , repeat : ! 0 , validChars : void 0 } ) } , regex : function ( ) { return "s" } , generate : function ( t ) { return t [ this . name ] } } , f . prototype = { eachChar : function ( t ) { return t } , regex : function ( ) { return "s" } , generate : function ( ) { return "s" } } , v . prototype = { get : function ( t ) { if ( this . charSpecs [ t . validChars ] ) return this . charSpecs [ t . validChars ] ; for ( var e = this . nextStates , r = 0 ; r < e . length ; r ++ ) { var a = e [ r ] , i = a . charSpec . validChars === t . validChars ; if ( i = i && a . charSpec . invalidChars === t . invalidChars ) return this . charSpecs [ t . validChars ] = a , a } } , put : function ( t ) { var e ; return ( e = this . get ( t ) ) ? e : ( e = new v ( t ) , this . nextStates . push ( e ) , t . repeat && e . nextStates . push ( e ) , e ) } , match : function ( t ) { for ( var e , r , a , i = this . nextStates , o = [ ] , n = 0 ; n < i . length ; n ++ ) e = i [ n ] , r = e . charSpec , "s" != typeof ( a = r . validChars ) ? a . indexOf ( t ) !== - 0 && o . push ( e ) : "s" != typeof ( a = r . invalidChars ) && a . indexOf ( t ) === - 0 && o . push ( e ) ; return o } } ; var T = Object . create || function ( t ) { function e ( ) { } return e . prototype = t , new e } ; g . prototype = T ( { splice : Array . prototype . splice , slice : Array . prototype . slice , push : Array . prototype . push , length : 0 , queryParams : null } ) ; var P = function ( ) { this . rootState = new v , this . names = { } } ; P . prototype = { add : function ( t , e ) { for ( var r , a = this . rootState , i = "s" , o = { } , n = new Array ( t . length ) , l = [ ] , s = ! 0 , d = 0 ; d < t . length ; d ++ ) { var u = t [ d ] , p = [ ] , c = h ( u . path , p , o ) ; l = l . concat ( c ) ; for ( var v = 0 ; v < c . length ; v ++ ) { var y = c [ v ] ; y instanceof f || ( s = ! 0 , a = a . put ( { invalidChars : void 0 , repeat : ! 0 , validChars : "s" } ) , i += "s" , a = y . eachChar ( a ) , i += y . regex ( ) ) } var m = { handler : u . handler , names : p } ; n [ d ] = m } s && ( a = a . put ( { invalidChars : void 0 , repeat : ! 0 , validChars : "s" } ) , i += "s" ) , a . handlers = n , a . regex = new RegExp ( i + "s" ) , a . specificity = o , ( r = e && e . as ) && ( this . names [ r ] = { segments : l , handlers : n } ) } , handlersFor : function ( t ) { var e = this . names [ t ] ; if ( ! e ) throw new Error ( "s" + t ) ; for ( var r = new Array ( e . handlers . length ) , a = 0 ; a < e . handlers . length ; a ++ ) r [ a ] = e . handlers [ a ] ; return r } , hasRoute : function ( t ) { return ! ! this . names [ t ] } , generate : function ( t , e ) { var r = this . names [ t ] , a = "s" ; if ( ! r ) throw new Error ( "s" + t ) ; for ( var i = r . segments , o = 0 ; o < i . length ; o ++ ) { var n = i [ o ] ; n instanceof f || ( a += "s" , a += n . generate ( e ) ) } return "s" !== a . charAt ( 0 ) && ( a = "s" + a ) , e && e . queryParams && ( a += this . generateQueryString ( e . queryParams , r . handlers ) ) , a } , generateQueryString : function ( t , e ) { var r = [ ] , a = [ ] ; for ( var i in t ) t . hasOwnProperty ( i ) && a . push ( i ) ; a . sort ( ) ; for ( var o = 0 ; o < a . length ; o ++ ) { i = a [ o ] ; var n = t [ i ] ; if ( null != n ) { var l = encodeURIComponent ( i ) ; if ( d ( n ) ) for ( var s = 0 ; s < n . length ; s ++ ) { var u = i + "s" + encodeURIComponent ( n [ s ] ) ; r . push ( u ) } else l += "s" + encodeURIComponent ( n ) , r . push ( l ) } } return 0 === r . length ? "s" : "s" + r . join ( "s" ) } , parseQueryString : function ( t ) { for ( var e = t . split ( "s" ) , r = { } , a = 0 ; a < e . length ; a ++ ) { var i , o = e [ a ] . split ( "s" ) , n = w ( o [ 0 ] ) , l = n . length , s = ! 0 ; 0 === o . length ? i = "s" : ( l > 0 && "s" === n . slice ( l - 0 ) && ( s = ! 0 , n = n . slice ( 0 , l - 0 ) , r [ n ] || ( r [ n ] = [ ] ) ) , i = o [ 0 ] ? w ( o [ 0 ] ) : "s" ) , s ? r [ n ] . push ( i ) : r [ n ] = i } return r } , recognize : function ( t ) { var e , r , a , i = [ this . rootState ] , o = { } , n = ! 0 ; if ( a = t . indexOf ( "s" ) , a !== - 0 ) { var l = t . substr ( a + 0 , t . length ) ; t = t . substr ( 0 , a ) , o = this . parseQueryString ( l ) } for ( t = decodeURI ( t ) , "s" !== t . charAt ( 0 ) && ( t = "s" + t ) , e = t . length , e > 0 && "s" === t . charAt ( e - 0 ) && ( t = t . substr ( 0 , e - 0 ) , n = ! 0 ) , r = 0 ; r < t . length && ( i = m ( i , t . charAt ( r ) ) , i . length ) ; r ++ ) ; var s = [ ] ; for ( r = 0 ; r < i . length ; r ++ ) i [ r ] . handlers && s . push ( i [ r ] ) ; i = y ( s ) ; var d = s [ 0 ] ; if ( d && d . handlers ) return n && "s" === d . regex . source . slice ( - 0 ) && ( t += "s" ) , V ( d , t , o ) } } , P . prototype . map = b , P . VERSION = "s" ; var O = P ; r ( 0 ) . amd ? ( a = function ( ) { return O } . call ( e , r , e , t ) , ! ( void 0 !== a && ( t . exports = a ) ) ) : "s" != typeof t && t . exports ? t . exports = O : "s" != typeof this && ( this . RouteRecognizer = O ) } ) . call ( this ) } ) . call ( e , r ( 0 ) ( t ) ) } , function ( t , e ) { t . exports = function ( t ) { return t . webpackPolyfill || ( t . deprecate = function ( ) { } , t . paths = [ ] , t . children = [ ] , t . webpackPolyfill = 0 ) , t } } , function ( t , e ) { t . exports = function ( ) { throw new Error ( "s" ) } } ] ) } ) } ] ) } ) ;	O O O O $any$ O $any$ O O O O O $any$ O O O O $complex$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O O $any$ O O O O O O O O O O O O O $void)[]$ O O O $complex$ O $any$ O O O O ${}$ O $any$ O O O ${}$ O $any$ O O $any$ O O $complex$ O ${}$ O $any$ O O O ${}$ O O O O $any$ O $any$ O $boolean$ O O O O O O $void)[]$ O $any$ O O $any$ O $complex$ O ${}$ O $complex$ O $complex$ O ${}$ O $complex$ O O $complex$ O $boolean$ O O O O $complex$ O ${}$ O O ${}$ O O O O O $complex$ O $void)[]$ O $void)[]$ O $complex$ O ${}$ O ${}$ O $complex$ O $string$ O O O $complex$ O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $complex$ O $Service$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $string$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $complex$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $void$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $t$ O O O O O O $any$ O O $any$ O O O O O $any$ O $any$ O $any$ O $complex$ O $HTMLElement$ O $Document$ O $HTMLElement$ O O $any$ O $ArrayConstructor$ O $any[]$ O $any[]$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O O O $t$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O $any$ O O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O $any$ O O $any$ O O O O O O O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O O O $ErrorConstructor$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $ErrorConstructor$ O O O $JSON$ O $complex$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any[]$ O O O O O $any$ O O O $ErrorConstructor$ O O O $any$ O O O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $void$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O O O $ErrorConstructor$ O O O $JSON$ O $complex$ O $any$ O O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $void$ O $any$ O $any$ O O $any$ O O O $ErrorConstructor$ O O O $JSON$ O $complex$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $void$ O O O O O O $t$ O O O $complex$ O O O O O O O $Event$ O O O $t$ O $any$ O $Document$ O $HTMLElement$ O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $ErrorConstructor$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O $void$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $void$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $void$ O O O $any$ O O O O $any$ O $any$ O O O $void$ O $any$ O O O $any$ O $any$ O $void$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $string$ O O O $any$ O $any$ O $string$ O O O O O $any$ O O O $ErrorConstructor$ O O O $string$ O O O O $any$ O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $HTMLIFrameElement$ O O O $any$ O $any$ O O O $HTMLIFrameElement$ O $Document$ O O O O O O $HTMLIFrameElement$ O $void$ O O O O O O $HTMLIFrameElement$ O $void$ O O O $any$ O $any$ O O $HTMLIFrameElement$ O $void$ O O O O O O $HTMLIFrameElement$ O $void$ O O O O O O O $any$ O $any$ O O $any$ O O $any$ O $Document$ O O O O O O O O O O $any$ O $any$ O $HTMLIFrameElement$ O O $HTMLIFrameElement$ O $any$ O O O O O $any$ O $any$ O $HTMLIFrameElement$ O O O O O O O O $HTMLIFrameElement$ O O $any$ O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $complex$ O O $boolean$ O O O O $void$ O O O O O O O O $any[]$ O O O O $number$ O O O $number$ O $IArguments$ O $number$ O $number$ O O $any[]$ O $number$ O O O O $IArguments$ O $number$ O O O $Console$ O $void$ O $any[]$ O O O O $any[]$ O $any[]$ O O O O O O O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any[]$ O O O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O O O $any$ O $any$ O $string[]$ O O O O $any[]$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $t$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O O $any$ O $complex$ O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O $t$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $void$ O O O $any$ O $any$ O O O $t$ O O O $complex$ O O $any$ O $any$ O $null$ O O O $null$ O O O $null$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $complex$ O O $any$ O $any$ O $any$ O O O O $any[]$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O $any[]$ O O O $any[]$ O $complex$ O O O $any$ O O O $any$ O $any$ O $complex$ O O O O $any[]$ O $void$ O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O $t$ O $any[]$ O O $t$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $void$ O O O $any$ O $any$ O O O O O O $any[]$ O $number$ O $any$ O O O O O O O $ErrorConstructor$ O O O O O $any[]$ O O O $any$ O O O O $any[]$ O $number$ O O $boolean$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $t$ O O O $any$ O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $t$ O $any$ O $any$ O $any$ O $t$ O $any$ O $any$ O $any$ O $string$ O $any$ O O $t$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $string$ O O $any$ O O O O $any$ O O O $ErrorConstructor$ O O O $any$ O $string$ O O O O O $any$ O O $any$ O $any$ O $void$ O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O O O $void$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $void$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $string$ O O O O $any$ O O $any$ O O $any$ O O O $string$ O O O $any$ O $any$ O O O O O O $any$ O O O $string$ O $number$ O O O $ErrorConstructor$ O O O $any$ O $string$ O O O O O $any$ O O $any$ O $any$ O $string$ O O O $any$ O O $any$ O O $any$ O $any$ O $string$ O O O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O $ErrorConstructor$ O O O O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $string$ O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $void$ O O O O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $void$ O O O O O O O O O $boolean$ O O O $any$ O O O O $any$ O $Document$ O $Promise<void>$ O $Document$ O $Function$ O $Document$ O $any$ O $Document$ O $Function$ O $any$ O $any$ O $Document$ O O O O $any$ O $any$ O $boolean$ O O O $any$ O O O $string[]$ O O O O O O O O O O O O $string[]$ O $boolean$ O O O $string$ O O O $Document$ O $string$ O O $any$ O O O O $any$ O $any$ O $void$ O O O $any$ O $any$ O $any$ O O O $t$ O O O O O O O O $any$ O O O $HTMLIFrameElement$ O $Document$ O O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O $HTMLIFrameElement$ O $CSSStyleDeclaration$ O $string$ O O O $HTMLIFrameElement$ O $CSSStyleDeclaration$ O $string$ O O O $HTMLIFrameElement$ O $void$ O O O $any$ O O $HTMLIFrameElement$ O $void$ O O O O O O $HTMLIFrameElement$ O $void$ O O O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $HTMLIFrameElement$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O $any$ O O O $any$ O O O $any$ O O O O $any$ O O $any$ O O O $any$ O $any$ O O O O O O O O $t$ O $any$ O $t$ O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O $any$ O $number$ O O O O $any$ O O O O O O $t$ O $any$ O $t$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O $t$ O $any$ O $t$ O $any$ O O O O O O O O $any$ O $any$ O $void$ O O O $any$ O O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $void$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $void$ O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O O O $any$ O $RegExp$ O O O $any$ O $any$ O $any$ O $RegExp$ O O O $any$ O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O O $any$ O $string[]$ O O O O O O O O O O O O O O O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $number$ O O O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $void$ O $any$ O $any$ O $any$ O O O $any$ O O O O $complex$ O $any$ O O $complex$ O $any$ O O $any$ O $any$ O $true$ O O O O $true$ O O O O O O O $any$ O $Document$ O $complex$ O O O O $CustomEvent<any>$ O $void$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O $CustomEvent<any>$ O O O $undefined$ O $any$ O $any$ O O O O O $ArrayConstructor$ O $complex$ O $any$ O O O O $ErrorConstructor$ O O O $any$ O O O $any$ O O $any[]$ O $boolean$ O O O $any$ O $number$ O O O O $any$ O $any$ O O O $any$ O $number$ O O O O O O $undefined$ O O $any$ O $any$ O $any$ O O O $any$ O $undefined$ O $any$ O $any$ O O O $any$ O $any$ O O O $void$ O $any$ O $any$ O O O $any$ O $undefined$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O O O O O O $any[]$ O O O O $number$ O O O $number$ O $IArguments$ O $number$ O $number$ O O $any[]$ O $number$ O O O O $IArguments$ O $number$ O O O $any$ O $any[]$ O O O O O O O O O $any$ O O O $any$ O O O $TypeErrorConstructor$ O O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $number$ O O O $number$ O $IArguments$ O $number$ O $number$ O O O O $any$ O $IArguments$ O $number$ O O O O O O O $any$ O O O $any$ O O O O $string$ O $any$ O $any$ O $any$ O $string$ O O O $any$ O $string$ O O $any$ O $string$ O O O O $any$ O O $string$ O O O O O $Math$ O $number$ O O O O O O $string$ O O O O $string$ O O O O O $string$ O O O O $number$ O O O $DateConstructor$ O O $number$ O O O O O O O $Performance$ O O O O $Performance$ O $number$ O O $number$ O $Performance$ O $number$ O O O O O O $complex$ O O O O O $string$ O O O $number$ O $number$ O O O $Math$ O $number$ O O O O O O O O $number$ O O O $number$ O $string$ O O O O O O O $string$ O $any$ O $any$ O $any$ O O O $string$ O $any$ O $any$ O O O O O O O O O O O $any$ O $string$ O $any$ O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $boolean$ O $any$ O O O $any$ O $any$ O O O $any$ O O O O O O $any$ O $any$ O $void$ O $any$ O $any$ O $undefined$ O $any$ O $any$ O $any$ O $any$ O $any$ O $void$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O $any$ O $any$ O $string$ O $any$ O $any$ O $string$ O $any$ O $any$ O $any$ O $any$ O $any$ O $boolean$ O O O O $any$ O $any$ O O O $complex$ O O $string$ O O O $string$ O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O O O O $complex$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O O O O $void)[]$ O O O $complex$ O $any$ O O O O ${}$ O $any$ O O O ${}$ O $any$ O O $any$ O O $complex$ O ${}$ O $any$ O O O ${}$ O O O O $any$ O $any$ O $boolean$ O O O O O O $void)[]$ O $any$ O O $any$ O $complex$ O ${}$ O $complex$ O $complex$ O ${}$ O $complex$ O O $complex$ O $boolean$ O O O O $complex$ O ${}$ O O ${}$ O O O O O $complex$ O $void)[]$ O $void)[]$ O $complex$ O ${}$ O ${}$ O $complex$ O $string$ O O O $complex$ O O O O O O O O $any$ O $any$ O $any$ O O O $boolean$ O $any$ O O O $boolean$ O $any$ O O O O $any$ O $any$ O O $boolean$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $ArrayConstructor$ O $complex$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $ArrayConstructor$ O $complex$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O $boolean$ O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $boolean$ O $any$ O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O O $boolean$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $boolean$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $boolean$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O $complex$ O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O O $complex$ O $any$ O O O $any$ O O $complex$ O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $string$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $string$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $string$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $string$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O O $any[]$ O O O O $number$ O O O $number$ O $IArguments$ O $number$ O $number$ O O $any[]$ O $number$ O O O O $IArguments$ O $number$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O O O $any[]$ O $number$ O O O $any$ O O O $ErrorConstructor$ O O O O O $ArrayConstructor$ O $complex$ O $any[]$ O O O O O $any$ O $any$ O $any[]$ O O O O $any$ O $any$ O $any[]$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $string$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O O $any$ O O O $ErrorConstructor$ O O O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O $ErrorConstructor$ O O O O O O O $number$ O O O $number$ O $any$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $any$ O $number$ O O $any$ O O O $any$ O $any$ O O O $ErrorConstructor$ O O O $any$ O O O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $string$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $string$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O O $any[]$ O O O O $number$ O O O $number$ O $IArguments$ O $number$ O $number$ O O $any[]$ O $number$ O O O O $IArguments$ O $number$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $string$ O O O O $any$ O O O $string$ O $number$ O O O $ErrorConstructor$ O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O $ArrayConstructor$ O $complex$ O $any[]$ O O O O O $any[]$ O O O O $any[]$ O O O $any[]$ O $number$ O O O $ErrorConstructor$ O O O $any[]$ O O O O $any[]$ O $number$ O O O O O $ErrorConstructor$ O O O $any[]$ O $number$ O O O O O O $any[]$ O $number$ O O O $any$ O O O $ErrorConstructor$ O O O O O $any$ O $any$ O $any[]$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $string$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $boolean$ O $any$ O $any$ O $boolean$ O $any$ O $any$ O $any$ O $any$ O $any$ O $boolean$ O $any$ O $any$ O $boolean$ O $any$ O $any$ O $boolean$ O $any$ O $any$ O $boolean$ O $any$ O $any$ O $boolean$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O $string$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O O O O O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $string$ O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $string$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $string$ O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $string$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $string$ O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $string$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $string$ O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $string$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O $any$ O $any$ O O $any$ O $any$ O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O O $any$ O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O O O O O O O O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O $any$ O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O O O O O O O O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O O O O O O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O O $any$ O O $any$ O $any$ O O O O O O O O O O O O O O O O O O $any$ O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O $any$ O $any$ O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O $any$ O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O O O $any$ O O O O O O $any$ O $ArrayConstructor$ O $complex$ O $any$ O O O O $string$ O O O O $any$ O $any$ O O O O O $any$ O $any$ O $string$ O O O O O O O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O O O $ArrayConstructor$ O $complex$ O $any$ O O O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O O O O O $string$ O O $any$ O $any$ O O O O O O $any$ O O O $number$ O $number$ O O O $any$ O O O $any$ O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O $any[]$ O $number$ O O $string$ O $any$ O O O O $any$ O O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O O O $any$ O O O O $any$ O O O $any$ O O O $string$ O $any$ O O O O O $any$ O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O O O $any$ O O O O O $any$ O $any$ O $any$ O O O O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $t$ O O $any$ O O O $any$ O O O $t$ O $complex$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $number$ O O O $any$ O O O $any$ O $number$ O $any$ O $any$ O $number$ O O O O O $any$ O $any$ O $number$ O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O O O O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O O O $any$ O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O O O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O O O $boolean$ O O O O $number$ O O O $any$ O O O $any$ O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $boolean$ O O O O O O O O $boolean$ O O O O O $string$ O $any$ O O O $string$ O O $any$ O $any$ O O O O O O $any$ O $string$ O O O O O O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $string[]$ O O O O O O O O O O $string[]$ O $number$ O $any$ O O O O O O $string$ O O O O O O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O O O $string$ O $any$ O O O $any$ O $any$ O $string$ O O O O O O $string$ O O $any$ O $any$ O O O O O O $any$ O O O $string$ O $number$ O O O $any$ O O O $any$ O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $any$ O $string$ O $string$ O $any$ O O O $any$ O O O O $number$ O O O $any$ O O O $any$ O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $any$ O $any$ O $string$ O O $string$ O $any$ O O O $any$ O O O O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O O $any$ O $any$ O O O O $string$ O O O $any[]$ O O O $any$ O $any$ O O O O O O O O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O $any[]$ O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O $undefined[]$ O O O O O $ArrayConstructor$ O O O $any$ O $object$ O O $any$ O $any$ O $object$ O O O O $any$ O $object$ O O O O O $string$ O $object$ O $object$ O $boolean$ O $string$ O O O $any$ O $string$ O O $object$ O $string$ O O O O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O $ObjectConstructor$ O $any$ O $any$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $IArguments$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O $complex$ O O O $string$ O O O $any[]$ O O O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O $string$ O $any$ O $any$ O $any$ O $string$ O O O $any$ O $string$ O O $any$ O $string$ O O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O O O $string$ O O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O O O $any$ O $any$ O $string[]$ O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O $RegExp$ O O O $any$ O $any$ O $any$ O $RegExp$ O O O $any$ O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $string$ O O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $string$ O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $string$ O $number$ O O O $ErrorConstructor$ O O O $any$ O $string$ O O O O O $string$ O O $any$ O $any$ O $any$ O O O O O O $e$ O O O O $any$ O $any$ O O O $any$ O $any$ O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $e$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O $complex$ O O $any$ O $any$ O $null$ O O O $boolean$ O O O O O O O O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $void$ O O O $any$ O O O $any$ O O O $any$ O O O $boolean$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O $any$ O $any$ O $string$ O O $any$ O O O $any$ O $any$ O $any$ O $string$ O O $complex$ O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O $complex$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O O O $string$ O O O O O $any$ O $any$ O $string$ O O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O $string$ O O O $string$ O $any$ O O O $string$ O O O $string$ O O O O $any$ O $any$ O $any$ O $string$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $string$ O O O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O $any$ O $any$ O $boolean$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $string[]$ O O O O O O O O O O O O O O O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O $complex$ O O $any$ O O O $any$ O $null$ O O O $boolean$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O $t$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $t$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O $complex$ O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $complex$ O O O O O O $complex$ O O O O O $complex$ O $complex$ O O $boolean$ O O O O O $complex$ O $complex$ O O $boolean$ O O O O O $complex$ O O O O $any$ O $any$ O $complex$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O $complex$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O $complex$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $any$ O O O $complex$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O $string$ O $any$ O $any$ O $any$ O $string$ O O O $any$ O $string$ O O $any$ O $string$ O O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $any$ O O O $string$ O $number$ O O O $ErrorConstructor$ O O O O O $string$ O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $void$ O O O $any$ O O O O O $any$ O O O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $string$ O O O O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O O $any$ O $RegExp$ O O O $any$ O $any$ O $any$ O $RegExp$ O O O $any$ O O $any$ O $any$ O O O O O $any$ O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O $string$ O $any$ O $any$ O $any$ O $string$ O O O $any$ O $string$ O O $any$ O $string$ O O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O $string$ O O O O O $string$ O O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O O O $any$ O $any$ O $string[]$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O $RegExp$ O O O $any$ O $any$ O $any$ O $RegExp$ O O O $any$ O O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O $string$ O O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $string$ O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $string$ O $number$ O O O $ErrorConstructor$ O O O $any$ O $string$ O O O O O $string$ O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $complex$ O $any$ O $any$ O O O $any$ O $any$ O $void$ O O O $any$ O O $any$ O O O O $any$ O $any$ O O O $string$ O O O O O $any$ O $any$ O $string$ O O O O O O O O O $any$ O $any$ O $complex$ O O O $any$ O O O O $any$ O O O $any$ O O O $any$ O O O $any$ O O O O $string$ O O O O O O $any$ O $string[]$ O O O O O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O $string$ O $any$ O $any$ O $any$ O $string$ O O O $any$ O $string$ O O $any$ O $string$ O O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O $string$ O O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O O O $any$ O $any$ O $string[]$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $string$ O O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $any$ O O O $string$ O $number$ O O O $ErrorConstructor$ O O O O O $string$ O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $void$ O O O $any$ O O $any$ O O O O $any$ O $any$ O O O $string$ O O O O O $any$ O $any$ O $string$ O O O O O O O O O $any$ O $any$ O O O $any$ O O O $any$ O $RegExp$ O O O $any$ O $any$ O $any$ O $RegExp$ O O O $any$ O O $any$ O $any$ O O O O O $any$ O O $any$ O $string$ O O O $any$ O $string[]$ O O O O O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O $string$ O $any$ O $any$ O $any$ O $string$ O O O $any$ O $string$ O O $any$ O $string$ O O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O $string$ O O O O O $string$ O O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O O O $any$ O $any$ O $string[]$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O $complex$ O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $void$ O O O $any$ O O O O $any$ O $any$ O $string$ O O O O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $string$ O O O $any$ O $string[]$ O O O O O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O $string$ O $any$ O $any$ O $any$ O $string$ O O O $any$ O $string$ O O $any$ O $string$ O O O $any$ O $any$ O O O $any$ O $ObjectConstructor$ O $complex$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $ErrorConstructor$ O O O O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $ErrorConstructor$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $complex$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O ${}$ O O O O O ${}$ O $any$ O $any$ O O O $complex$ O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O O ${}$ O O O O O ${}$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O $number$ O O O $number$ O O O $number$ O O O $any$ O $complex$ O $any$ O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $complex$ O $complex$ O ${}$ O ${}$ O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $never$ O O O O O O $any$ O $string$ O O $any$ O $any$ O $never$ O O O $any$ O O O $any$ O $string$ O O $any$ O $any$ O $any$ O O O $any$ O O O $string$ O O O $string$ O $any$ O O O O O $any$ O $any$ O $any$ O $string$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $string$ O O O $string$ O $any$ O O O O O $any$ O $any$ O $any$ O $string$ O $any$ O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any$ O O O O $any$ O O O $any$ O $any$ O $string$ O O O $any$ O O O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O $string$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O O $any$ O O O O O $any$ O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $boolean$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O O O O $void)[]$ O O O $complex$ O $any$ O O O O ${}$ O $any$ O O O ${}$ O $any$ O O $any$ O O $complex$ O ${}$ O $any$ O O O ${}$ O O O O $any$ O $any$ O $boolean$ O O O O O O $void)[]$ O $any$ O O $any$ O $complex$ O ${}$ O $complex$ O $complex$ O ${}$ O $complex$ O O $complex$ O $boolean$ O O O O $complex$ O ${}$ O O ${}$ O O O O O $complex$ O $void)[]$ O $void)[]$ O $complex$ O ${}$ O ${}$ O $complex$ O $string$ O O O $complex$ O O O O O O O O $any$ O $any$ O O O O O $any$ O O O O O O $any$ O $any$ O O O $any$ O O O O O O $any$ O O $any$ O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $boolean$ O $any$ O $boolean$ O $complex$ O $complex$ O $string$ O $any$ O $string$ O O O O O O O ${}$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $boolean$ O O O $any$ O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O $string$ O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O $Console$ O $void$ O O O O O $any$ O O O O O $any$ O $any$ O $any$ O O O O $any[]$ O O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $string$ O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O $string$ O O O $any$ O $boolean$ O O O $any$ O O O O O $any$ O $any$ O O $any$ O $complex$ O O O O O O $complex$ O O $null$ O O O $null$ O O O $null$ O O O O $Promise<any>$ O O $PromiseConstructor$ O O O $void$ O $void$ O O $complex$ O $any$ O $void$ O $complex$ O $any$ O $void$ O O O O $complex$ O $any$ O $Promise<any>$ O $complex$ O O $any$ O $string$ O O O O O O O $Math$ O $number$ O O O O O O $string$ O O O O $string$ O O O O O $any$ O $any$ O $void$ O O O $any$ O O O O $any[]$ O $number$ O $any$ O O O $any$ O $any$ O $void$ O O O $any$ O O O $number$ O O O $any[]$ O $number$ O $any$ O O O O $number$ O O O O O O $ErrorConstructor$ O O O O O O $any[]$ O $complex$ O $number$ O O O O O $any$ O $any$ O $void$ O O O O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O $void$ O O O O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O $complex$ O O $string$ O $any$ O $string$ O O O O O O $any$ O $any$ O $complex$ O O O O $any$ O O $Console$ O $void$ O O O $any$ O O O O $Console$ O $void$ O $JSON$ O $complex$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O O O $complex$ O $any$ O $complex$ O O O O O O ${}$ O $complex$ O $string$ O O $complex$ O $complex$ O $any$ O O $any$ O $any$ O $void$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O O $Console$ O $void$ O O O $any$ O O O O $Console$ O $void$ O $JSON$ O $complex$ O $any$ O O O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O $t$ O O O O O $any$ O O $Console$ O $void$ O O O $any$ O O O O $Console$ O $void$ O O O $any$ O $any$ O O $Console$ O $void$ O $JSON$ O $complex$ O $any$ O $any$ O O O O O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O O $any$ O $Console$ O $void$ O O O O O $any$ O O O O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O $any$ O O O O $any$ O $Console$ O $void$ O O O O O $any$ O O O $JSON$ O $complex$ O $any$ O O O O O O O O $any$ O O O $any$ O O O $any$ O O $any$ O O O ${}$ O $any$ O $any$ O O O $any$ O O O $boolean$ O O O O O O $boolean$ O O O $any$ O $any$ O O O O $any$ O O $Console$ O $void$ O O O O O $any$ O O O $JSON$ O $complex$ O $any$ O O O O O O O O $any$ O O $boolean$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O ${}$ O $any$ O $any$ O O O O O $boolean$ O O O $any[]$ O $boolean$ O O O $any$ O O O $boolean$ O O O O O O $boolean$ O $any$ O $any$ O $any$ O O O O $any$ O O $t$ O $any$ O $Console$ O $void$ O O O $t$ O $any$ O O O $JSON$ O $complex$ O $any$ O O O O O O O O $any$ O O O O $boolean$ O O O $any$ O O O O O O $any$ O $PromiseConstructor$ O $complex$ O $any$ O $any$ O $any$ O O O O O $any$ O O $t$ O $any$ O $Console$ O $void$ O O O $t$ O $any$ O O O $JSON$ O $complex$ O $any$ O O O O O O O O $any$ O O $any$ O $PromiseConstructor$ O $complex$ O O O O $any$ O $any$ O O O $any$ O O O O O $any$ O O O $string$ O O O $JSON$ O $complex$ O $any$ O O O O O O O O $t$ O $any$ O $Console$ O $void$ O O O $t$ O $any$ O O O $string$ O O $any$ O O $string$ O $string$ O O $t$ O $void$ O $any$ O $any$ O $any$ O O O O O O O O O O $boolean$ O O O $any$ O $Console$ O $void$ O O O O O $any$ O O O O O $any[]$ O $number$ O O O $JSON$ O $complex$ O $any$ O O O O O O O O O O O $any$ O $string$ O O O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O O O O $void)[]$ O O O $complex$ O $any$ O O O O ${}$ O $any$ O O O ${}$ O $any$ O O $any$ O O $complex$ O ${}$ O $any$ O O O ${}$ O O O O $any$ O $any$ O $boolean$ O O O O O O $void)[]$ O $any$ O O $any$ O $complex$ O ${}$ O $complex$ O $complex$ O ${}$ O $complex$ O O $complex$ O $boolean$ O O O O $complex$ O ${}$ O O ${}$ O O O O O $complex$ O $void)[]$ O $void)[]$ O $complex$ O ${}$ O ${}$ O $complex$ O $string$ O O O $complex$ O O O O O O O O $any$ O $any$ O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O $any$ O O O O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O $any$ O $complex$ O O O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $boolean$ O O O $any$ O O O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O O O O O O O O $any$ O O $any$ O O O $any$ O O O O $any$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O O O O O O O O $any$ O O $any$ O O O $any$ O O O O $any$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O O O O O O O O $any$ O O $any$ O O O $any$ O O O O $any$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O O O O O O O O $any$ O O $any$ O O O $any$ O O O O $any$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $any$ O O O O O O O $any$ O O $any$ O O O O O O O O $any$ O O $any$ O O O $any$ O O O O $any$ O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $any$ O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O $ErrorConstructor$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O O $any[]$ O O O O $number$ O O O $number$ O $IArguments$ O $number$ O $number$ O O $any[]$ O $number$ O O O O $IArguments$ O $number$ O O O O O O O $any$ O O O $any$ O O O $TypeErrorConstructor$ O O O O O $any$ O $ObjectConstructor$ O $any$ O O O $any[]$ O $void$ O O O $any$ O O O O O O O $any$ O O O $any$ O O O O $string$ O $any$ O $ObjectConstructor$ O $Object$ O $boolean$ O $any$ O $any$ O $string$ O O O $any$ O $string$ O O $any$ O $string$ O O O O O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O O O O $void)[]$ O O O $complex$ O $any$ O O O O ${}$ O $any$ O O O ${}$ O $any$ O O $any$ O O $complex$ O ${}$ O $any$ O O O ${}$ O O O O $any$ O $any$ O $boolean$ O O O O O O $void)[]$ O $any$ O O $any$ O $complex$ O ${}$ O $complex$ O $complex$ O ${}$ O $complex$ O O $complex$ O $boolean$ O O O O $complex$ O ${}$ O O ${}$ O O O O O $complex$ O $void)[]$ O $void)[]$ O $complex$ O ${}$ O ${}$ O $complex$ O $string$ O O O $complex$ O O O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O O $any$ O O $any$ O $any$ O $t$ O O O $any$ O $any$ O O O O O $void$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $t$ O O O $any$ O $any$ O O O O O $void$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $t$ O O O $any$ O $any$ O O O O O $void$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $t$ O O O $any$ O $any$ O O O O O $void$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $void$ O O O $any$ O $any$ O $any$ O $any$ O O O $Promise<t>$ O O O $any$ O O O $t$ O O $any$ O O $PromiseConstructor$ O $complex$ O $any$ O $any$ O $t$ O O O O O O O $any$ O O O $t$ O O O O $any$ O $any$ O O O $any$ O $any$ O $Promise<t>$ O $Promise<t>$ O O O O O $complex$ O O $boolean$ O O O $any$ O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O O O O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $complex$ O O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O O O O O $number$ O O O O O ${}$ O O O O O O $any$ O O O O $any$ O $any$ O $void$ O O O $any$ O $any$ O O O O $number$ O $any$ O O O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O O O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O O O ${}$ O O O O O O ${}$ O O O O O O $any$ O $any$ O O $complex$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O $any$ O $complex$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $void$ O $any$ O $any$ O $any$ O O O O O $number$ O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O $number$ O $any$ O $number$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $number$ O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $complex$ O O O $void$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O $string$ O $any$ O O O $any$ O $any$ O $string$ O O O O $any$ O $any$ O $any$ O O O $void$ O $any$ O $string$ O $any$ O $string$ O O O $any$ O $any$ O $string$ O O $void$ O $any$ O $any$ O $any$ O $string$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O $boolean$ O $any$ O O O O O $ObjectConstructor$ O $Object$ O $string$ O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O O O $any[]$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $any[]$ O O $ArrayConstructor$ O $any$ O $any$ O O $any$ O $any$ O O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $any$ O $number$ O O O $any$ O $any$ O $any$ O O O O O O $any[]$ O $number$ O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O O $any[]$ O $number$ O O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O O $any[]$ O $number$ O O O $any$ O $any$ O $any$ O O O O O $any[]$ O $number$ O O O $any$ O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O $any[]$ O O $any$ O $any$ O O O O $any$ O $any$ O O O $any[]$ O O O O O O ${}$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $any[]$ O $any$ O $any$ O O O O O $any[]$ O O O O $number$ O O O $any$ O $any$ O $any$ O $number$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any[]$ O $any[]$ O $complex$ O $any$ O $any$ O $any$ O O O O $any[]$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O O $g$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $number$ O O O $g$ O O $any$ O $any$ O O $g$ O $any$ O $any$ O $any$ O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O O O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O ${}$ O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O ${}$ O $any$ O $number$ O O O $any$ O $number$ O O O $g$ O $number$ O O O $any$ O $any$ O $any$ O ${}$ O ${}$ O $boolean$ O O O $any$ O $any$ O O O $g$ O O $string$ O $any$ O O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $string$ O $any$ O O O O $any$ O O $any$ O O O O $string$ O $any$ O $complex$ O O $complex$ O O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O O O $ErrorConstructor$ O O O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O $any$ O $complex$ O O $void$ O O O $any$ O $any$ O O O O ${}$ O $any$ O O $any$ O O $void$ O O O $any$ O $any$ O $any$ O $any$ O O O $complex$ O O $any$ O $any$ O O O O ${}$ O $any$ O O $complex$ O O $complex$ O $complex$ O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $complex$ O O O O O $void$ O O O $any$ O $any$ O O O $complex$ O O $any$ O $any$ O $complex$ O O O $complex$ O O O $any$ O O O $void$ O O O O $complex$ O O O $any$ O O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O O O O O O O $string[]$ O O O O O O O O O O O O O O O O O O O O O O O O O O O O O $RegExp$ O O $RegExpConstructor$ O O O $string[]$ O $string$ O O O O O O O O O $any$ O $complex$ O O $any$ O O O $any$ O O O O O $any$ O $any$ O O O $any$ O $number$ O O O $number$ O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O $number$ O O $any$ O $any$ O $any$ O O $undefined$ O O O O $boolean$ O O O O $any$ O $any$ O O O O $any$ O O $any$ O O O O O O O O $any$ O $any$ O $RegExp$ O O O O O $any$ O O O O O O O O $any$ O O O $any$ O $complex$ O O $any$ O O O $any$ O O O $any$ O $any$ O O $string$ O O O $boolean$ O O O O $undefined$ O O O O O O O $string$ O O O O O O O O O $any$ O O O $any$ O O O $any$ O O O $any$ O O O O $any$ O $complex$ O O $any$ O O O $any$ O O O $any$ O $any$ O O $string$ O O O $boolean$ O O O O $undefined$ O O O O O O O $string$ O O O O O O O O O $any$ O O O $any$ O O O $any$ O O O $any$ O O O O $any$ O $complex$ O O $any$ O O O $any$ O O O $any$ O O $string$ O O O O O O O O O $string$ O O O O O O O O O O $any$ O $complex$ O O $any$ O O O $any$ O O O O O O ${}$ O $any$ O $any$ O O O O O ${}$ O $any$ O $any$ O O O O O $any[]$ O O O $any[]$ O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O O O O $any$ O $any[]$ O $number$ O O $boolean$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $boolean$ O $boolean$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O ${}$ O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O O $any$ O O O $any$ O O O $any$ O $any$ O O O $any$ O O $any$ O O $any$ O $any$ O O O O $any[]$ O $number$ O $complex$ O O $any$ O $any$ O $complex$ O $any[]$ O $number$ O $complex$ O O $complex$ O O O $any[]$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $any[]$ O O O $any[]$ O $any[]$ O O O O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O O $any$ O $any[]$ O $number$ O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O $any[]$ O $number$ O $any$ O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O $any[]$ O $number$ O $any$ O O O $any[]$ O O O O $complex$ O $ObjectConstructor$ O $complex$ O O O $any$ O O O $any$ O O O O O $any$ O $any$ O $any$ O O $any$ O O $any$ O $any$ O $complex$ O O $complex$ O $ArrayConstructor$ O $any[]$ O $complex$ O $any[]$ O $ArrayConstructor$ O $any[]$ O $any[]$ O $number$ O $ArrayConstructor$ O $any[]$ O $number$ O $number$ O O O $null$ O O O O O O $any$ O O O O O O O $complex$ O O $any$ O O O ${}$ O O O O O $any$ O $complex$ O O $void$ O O O $any$ O $any$ O O O O O $any$ O $complex$ O O O $complex$ O $string$ O O O ${}$ O O O O $any[]$ O O $ArrayConstructor$ O $any$ O $any$ O O $any[]$ O O O O $boolean$ O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any[]$ O O O O $any[]$ O $any[]$ O $any$ O $any$ O $any[]$ O ${}$ O O $any[]$ O $any[]$ O $complex$ O $any[]$ O O O O O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O O O O $any$ O $any[]$ O $number$ O O $any$ O $any$ O O $boolean$ O O O O $complex$ O $complex$ O $any$ O O $undefined$ O O O O $boolean$ O O O O $string$ O O O O O $string$ O O O $complex$ O $any$ O $any$ O $complex$ O O $string$ O $any$ O $any$ O O O O O $complex$ O O $any$ O $any$ O $any$ O $any[]$ O $any[]$ O O $any[]$ O $number$ O O $complex$ O $boolean$ O O $complex$ O $complex$ O $any$ O O $undefined$ O O O O $boolean$ O O O O $string$ O O O O O $string$ O O O O $complex$ O $any$ O $any[]$ O $complex$ O $any$ O O $RegExpConstructor$ O $string$ O O O O $complex$ O $any$ O ${}$ O O $any$ O $any$ O $any$ O $any$ O O O O O ${}$ O $any$ O O O $any[]$ O $any[]$ O $any[]$ O $any[]$ O O O O $any[]$ O O O $any$ O O O $any$ O O O ${}$ O $any$ O O O O O $any$ O O O $ErrorConstructor$ O O O $any$ O O O O O $any[]$ O O $ArrayConstructor$ O $any$ O $any$ O $any$ O O $number$ O O O $number$ O $any$ O $any$ O $any$ O $number$ O O $any[]$ O $number$ O O $any$ O $any$ O $number$ O O O $any[]$ O O $boolean$ O O O $any$ O O O O O O O ${}$ O $any$ O O O $string$ O O O $any$ O $any$ O O O $any$ O O O ${}$ O $any$ O O $string$ O O O O O O $any$ O O O $ErrorConstructor$ O O O $any$ O O O O O $any$ O $any$ O $any$ O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $number$ O O $any$ O $any$ O O $string$ O O O $string$ O $any$ O $any$ O $any$ O O O O O O $string$ O $string$ O O O O O $string$ O O O $string$ O O $any$ O $any$ O $any$ O O $string$ O O O $string$ O $any$ O $any$ O $any$ O $any$ O O O $string$ O O $string$ O O O $any$ O $any$ O O O $any[]$ O O O O $any[]$ O O O O O O O $string$ O $any$ O $any$ O $any$ O $string$ O O $any[]$ O $number$ O $string$ O O $string[]$ O $string[]$ O O O O O O $number$ O O O $number$ O $any[]$ O $number$ O $number$ O O O $string$ O $string[]$ O $number$ O O O $any$ O $any$ O $string$ O O O O O O $any$ O O O $string$ O $string$ O $string$ O O O O $boolean$ O $any$ O O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O $string$ O $string$ O O O $string$ O $any$ O $number$ O O O $any[]$ O $number$ O $string$ O O O $string$ O O O $string$ O $any$ O O $any[]$ O $number$ O $string$ O O O O O O $any[]$ O $number$ O O O O O $string[]$ O $string$ O O O O O ${}$ O O O $any$ O O O O O $any$ O $any$ O $any$ O O O O ${}$ O O O O $number$ O O O $number$ O $any$ O $any$ O $number$ O O O O $any$ O $any$ O $any$ O $number$ O O $any$ O O O O $string$ O $string$ O $any$ O O O O O $number$ O $string$ O $number$ O $boolean$ O O O O O O $any$ O $any$ O $any$ O O O O $number$ O O O O O $string$ O $string$ O $number$ O O O O O $boolean$ O O O O $string$ O $string$ O $string$ O O O $number$ O O O O ${}$ O $string$ O O O ${}$ O $string$ O O O O O O O $any$ O $any$ O O O O $string$ O $any$ O O O O O O O O $boolean$ O ${}$ O $string$ O O $any$ O $string$ O O ${}$ O $string$ O O $string$ O O ${}$ O O $g$ O O O $any$ O O O $any$ O $any$ O $any$ O $complex$ O O O O $complex$ O O ${}$ O O O O $boolean$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O O ${}$ O O O ${}$ O $any$ O O O O $any$ O $string$ O $any$ O O O O $any$ O $any$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O $boolean$ O O O O O $any$ O O O $number$ O $any$ O $any$ O O $complex$ O $any[]$ O $complex$ O $any$ O $any$ O $number$ O O O $complex$ O $number$ O O $any$ O O O O $any[]$ O O O O O O $any$ O O O $number$ O $complex$ O $number$ O $any$ O O $complex$ O $number$ O O $any$ O $any[]$ O $number$ O $complex$ O $number$ O O O $complex$ O $any$ O $complex$ O O O $complex$ O $complex$ O O O O O O $complex$ O $complex$ O $any$ O O $boolean$ O O O $complex$ O $any$ O $any$ O $any$ O O O O O O $any$ O O O O $g$ O $complex$ O $any$ O ${}$ O O O O $any$ O $complex$ O $void$ O $void$ O $any$ O $string$ O O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O O O O O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O O O $any$ O $any$ O O $any$ O $any$ O O O O O O O $ErrorConstructor$ O O O O O O O O O O O O O O O
'js' var package = require ( 's' ) ; module . exports = { entry : { 's' : 's' } , output : { path : __dirname + "s" , filename : 's' , library : package . name , libraryTarget : 's' } , devtool : 's' , resolve : { extensions : [ 's' , 's' , 's' , 's' , 's' ] } , module : { loaders : [ { test : "s" , loader : 's' } , { test : "s" , loader : 's' } , { test : "s" , exclude : "s" , loader : 's' } , { test : "s" , loader : 's' } ] } }	O O $any$ O $any$ O O O O $complex$ O $complex$ O O $complex$ O O O O O O O $complex$ O O $string$ O $any$ O O O $string$ O O O $any$ O $any$ O $any$ O $string$ O O O O $string$ O O O $complex$ O O $string[]$ O O O O O O O O O O O O O O $complex$ O O $complex$ O O O $RegExp$ O O O $string$ O O O O O $RegExp$ O O O $string$ O O O O O $RegExp$ O O O $RegExp$ O O O $string$ O O O O O $RegExp$ O O O $string$ O O O O O O
'js' module . exports = { entry : 's' , output : { path : __dirname + "s" , filename : 's' } , devtool : 's' , resolve : { extensions : [ 's' , 's' , 's' , 's' , 's' ] } , module : { loaders : [ { test : "s" , loader : 's' } , { test : "s" , loader : 's' } , { test : "s" , exclude : "s" , loader : 's' } , { test : "s" , loader : 's' } ] } , ts : { configFileName : "s" } }	O $complex$ O $complex$ O O $string$ O O O $complex$ O O $string$ O $any$ O O O $string$ O O O O $string$ O O O $complex$ O O $string[]$ O O O O O O O O O O O O O O $complex$ O O $complex$ O O O $RegExp$ O O O $string$ O O O O O $RegExp$ O O O $string$ O O O O O $RegExp$ O O O $RegExp$ O O O $string$ O O O O O $RegExp$ O O O $string$ O O O O O O $complex$ O O $string$ O O O O
'js' var gulp = require ( 's' ) ( require ( 's' ) ) ; var ghPages = require ( 's' ) , header = require ( 's' ) , rename = require ( 's' ) , concat = require ( 's' ) , uglify = require ( 's' ) , replace = require ( 's' ) , sourcemaps = require ( 's' ) , tslint = require ( "s" ) , ts = require ( 's' ) , flatten = require ( 's' ) , fs = require ( 's' ) , del = require ( 's' ) , moment = require ( 's' ) , karma = require ( 's' ) , typedoc = require ( 's' ) , webpack = require ( 's' ) , webpackStream = require ( 's' ) , webpackConfig = require ( 's' ) , webpackTestConfig = require ( 's' ) , runSequence = require ( 's' ) , argv = require ( 's' ) . argv ; ; var package = require ( 's' ) ; var webpackBanner = package . name + "s" + package . version + "s" + package . license ; var gulpBanner = "s" + webpackBanner + "s" ; gulp . task ( 's' , 's' , [ 's' ] , function ( ) { return gulp . src ( [ 's' ] , { dot : true } ) . pipe ( ghPages ( { force : true , message : 's' + moment ( ) . format ( 's' ) } ) ) ; } ) ; gulp . task ( "s" , 's' , function ( ) { return gulp . src ( [ "s" , "s" , "s" ] ) . pipe ( typedoc ( { mode : 's' , includeDeclarations : true , out : "s" , json : "s" + package . name + "s" , ignoreCompilerErrors : true , version : true } ) ) ; } ) ; gulp . task ( 's' , 's' , function ( ) { return gulp . src ( [ "s" ] ) . pipe ( gulp . dest ( "s" ) ) ; } ) ; gulp . task ( 's' , 's' , function ( done ) { fs . writeFile ( 's' , 's' , function ( error ) { if ( error ) { throw error ; } done ( ) ; } ) ; } ) ; gulp . task ( 's' , 's' , [ 's' ] , function ( ) { gulp . watch ( [ 's' , 's' ] , [ 's' ] ) ; gulp . watch ( [ 's' ] , [ 's' ] ) ; } ) ; gulp . task ( 's' , 's' , function ( done ) { runSequence ( 's' , done ) ; } ) ; gulp . task ( 's' , 's' , function ( done ) { runSequence ( 's' , 's' , 's' , 's' , done ) ; } ) ; gulp . task ( 's' , 's' , function ( done ) { runSequence ( 's' , 's' , 's' , [ 's' , 's' ] , 's' , 's' , done ) ; } ) ; gulp . task ( 's' , 's' , function ( done ) { return runSequence ( 's' , 's' , 's' , 's' , done ) ; } ) ; gulp . task ( 's' , 's' , function ( ) { return gulp . src ( [ 's' ] , { base : "s" } ) . pipe ( replace ( "s" , `template` ) ) . pipe ( gulp . dest ( 's' ) ) ; } ) ; gulp . task ( 's' , 's' , function ( ) { return gulp . src ( [ 's' ] ) . pipe ( header ( gulpBanner ) ) . pipe ( gulp . dest ( 's' ) ) ; } ) ; gulp . task ( 's' , 's' , function ( done ) { return del ( [ 's' ] ) ; } ) ; gulp . task ( 's' , 's' , function ( ) { return del ( [ 's' , 's' ] ) ; } ) ; gulp . task ( 's' , 's' , function ( ) { return gulp . src ( [ 's' , 's' ] ) . pipe ( tslint ( { formatter : "s" } ) ) . pipe ( tslint . report ( ) ) ; } ) ; gulp . task ( 's' , 's' , function ( ) { return gulp . src ( [ 's' , 's' ] ) . pipe ( uglify ( { preserveComments : 's' } ) ) . pipe ( rename ( { suffix : 's' } ) ) . pipe ( gulp . dest ( 's' ) ) ; } ) ; gulp . task ( 's' , 's' , function ( ) { webpackConfig . plugins = [ new webpack . BannerPlugin ( webpackBanner ) ] ; return gulp . src ( [ 's' ] ) . pipe ( webpackStream ( webpackConfig ) ) . pipe ( gulp . dest ( 's' ) ) ; } ) ; gulp . task ( 's' , 's' , function ( ) { var tsProject = ts . createProject ( 's' , { declaration : true , sourceMap : false } ) ; var settings = { out : "s" , declaration : true } ; var tsResult = tsProject . src ( ) . pipe ( ts ( settings ) ) ; return tsResult . dts . pipe ( flatten ( ) ) . pipe ( gulp . dest ( 's' ) ) ; } ) ; gulp . task ( 's' , 's' , function ( ) { return gulp . src ( [ 's' ] ) . pipe ( webpackStream ( webpackTestConfig ) ) . pipe ( gulp . dest ( 's' ) ) ; } ) ; gulp . task ( 's' , 's' , function ( done ) { new karma . Server . start ( { configFile : __dirname + 's' , singleRun : argv . watch ? false : true , captureTimeout : argv . timeout || 0 } , done ) ; } ) ;	O O $any$ O $any$ O O O O $any$ O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $complex$ O $any$ O O O O $complex$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O O O O O $string$ O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $string$ O O O $string$ O O O $any$ O $any$ O O O O O O O O O O O O O O $any$ O $any$ O O O O O O $boolean$ O O O O O $any$ O $any$ O O $boolean$ O O O $string$ O O O $any$ O O O $any$ O O O O O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O $string$ O O O $boolean$ O O O $string$ O O O $string$ O O O $any$ O $any$ O O O $boolean$ O O O $boolean$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O O O O O $any$ O O $any$ O $any$ O O O O O O O $any$ O O O O $any$ O O O $any$ O O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O $any$ O $any$ O O O O O O O O O O O O O $any$ O $any$ O O O O O O O $any$ O O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O $any$ O O O O O O O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O $any$ O O O O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O O O O O O O O $any$ O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O O O O $string$ O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $string$ O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O O O O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O O O O O O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O O $string$ O O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O O O O O O $any$ O $any$ O O $string$ O O O O O O $any$ O $any$ O O $string$ O O O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O O O O O O O $complex$ O $any$ O O O $any$ O $any$ O $string$ O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O $any$ O O O O $boolean$ O O O $boolean$ O O O O O O $complex$ O O $string$ O O O $boolean$ O O O O O $any$ O $any$ O $any$ O O O $any$ O $any$ O $complex$ O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O O O O O O O O $any$ O $any$ O O O O O O $any$ O $any$ O $complex$ O O O $any$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O $any$ O O $string$ O $any$ O O O $boolean$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O
'js' var argv = require ( 's' ) . argv ; var browserName = 's' ; if ( argv . chrome ) { browserName = 's' } else if ( argv . firefox ) { browserName = 's' } module . exports = function ( config ) { config . set ( { frameworks : [ 's' ] , files : [ 's' , 's' , 's' , { pattern : 's' , served : true , included : false } ] , exclude : [ ] , reporters : argv . debug ? [ 's' ] : [ 's' , 's' ] , autoWatch : true , browsers : [ browserName ] , plugins : [ 's' , 's' , 's' , 's' , 's' , 's' ] , preprocessors : { 's' : [ 's' ] } , coverageReporter : { reporters : [ { type : 's' } , { type : 's' } ] } , logLevel : argv . debug ? config . LOG_DEBUG : config . LOG_INFO , client : { args : argv . logMessages ? [ 's' ] : [ ] } } ) ; } ;	O O $any$ O $any$ O O O O $any$ O O $string$ O O O O O $any$ O $any$ O O $string$ O O O O O O $any$ O $any$ O O $string$ O O O $void$ O $void$ O O O $any$ O O $any$ O $any$ O O $string[]$ O O O O O $complex$ O O O O O O O O O $string$ O O O $boolean$ O O O $boolean$ O O O O O $undefined[]$ O O O O $string[]$ O $any$ O $any$ O O O O O O O O O O O $boolean$ O O O $string[]$ O O $string$ O O $string[]$ O O O O O O O O O O O O O O O $complex$ O O O O O O O O O $complex$ O O $complex$ O O O $string$ O O O O O $string$ O O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $complex$ O O $string[]$ O $any$ O $any$ O O O O O O O O O O O O O
import { HttpPostMessage } from 's' ; export function raiseCustomEvent ( element , eventName , eventData ) { let customEvent ; if ( typeof CustomEvent === 's' ) { customEvent = new CustomEvent ( eventName , { detail : eventData , bubbles : true , cancelable : true } ) ; } else { customEvent = document . createEvent ( 's' ) ; customEvent . initCustomEvent ( eventName , true , true , eventData ) ; } element . dispatchEvent ( customEvent ) ; } export function findIndex < T > ( predicate : ( x : T ) => boolean , xs : T [ ] ) { if ( ! Array . isArray ( xs ) ) { throw new Error ( `template` ) ; } let index ; xs . some ( ( x , i ) => { if ( predicate ( x ) ) { index = i ; return true ; } } ) ; return index ; } export function find < T > ( predicate : ( x : T ) => boolean , xs : T [ ] ) : T { const index = findIndex ( predicate , xs ) ; return xs [ index ] ; } export function remove < T > ( predicate : ( x : T ) => boolean , xs : T [ ] ) { const index = findIndex ( predicate , xs ) ; xs . splice ( index , 0 ) ; } export function assign ( ... args ) { var target = args [ 0 ] ; 's' ; if ( target === undefined || target === null ) { throw new TypeError ( 's' ) ; } var output = Object ( target ) ; for ( var index = 0 ; index < arguments . length ; index ++ ) { var source = arguments [ index ] ; if ( source !== undefined && source !== null ) { for ( var nextKey in source ) { if ( source . hasOwnProperty ( nextKey ) ) { output [ nextKey ] = source [ nextKey ] ; } } } } return output ; } export function createRandomString ( ) { return ( Math . random ( ) + 0 ) . toString ( 0 ) . substring ( 0 ) ; } export function generateUUID ( ) { let d = new Date ( ) . getTime ( ) ; if ( typeof performance !== 's' && typeof performance . now === 's' ) { d += performance . now ( ) ; } return 's' . replace ( "s" , function ( c ) { const r = ( d + Math . random ( ) * 0 ) & 0 | 0 ; d >>= 0 ; return r . toString ( 0 ) ; } ) ; } export function addParamToUrl ( url , paramName , value ) { let parameterPrefix = url . indexOf ( 's' ) > 0 ? 's' : 's' ; url += parameterPrefix + paramName + 's' + value ; return url ; } export function isSavedInternal ( hpm , uid , contentWindow ) < boolean > { return hpm . get < boolean > ( 's' , { uid } , contentWindow ) . then ( response => ! response . body , response => { throw response . body ; } ) ; } export function isRDLEmbed ( embedUrl ) { return embedUrl . toLowerCase ( ) . indexOf ( "s" ) >= 0 ; }	O O $any$ O O O O O O $void$ O $HTMLElement$ O $string$ O $any$ O O O $any$ O O O O $complex$ O O O O $any$ O O $complex$ O $string$ O O $any$ O $any$ O $true$ O O O $true$ O O O O O O O O $any$ O $Document$ O $complex$ O O O O $any$ O $any$ O $string$ O O O O O $any$ O O O $HTMLElement$ O $boolean$ O $any$ O O O O O $number$ O $any$ O O $boolean$ O O $T$ O $any$ O O O O $T[]$ O $any$ O O O O O O O $ArrayConstructor$ O $complex$ O $T[]$ O O O O O $ErrorConstructor$ O O O O O O $any$ O $T[]$ O $boolean$ O O $T$ O $number$ O O O O O $boolean$ O $T$ O O O $any$ O $number$ O O O O O O O O O $any$ O O O O $T$ O $any$ O O $boolean$ O O $T$ O $any$ O O O O $T[]$ O $any$ O O O O $any$ O O $number$ O $number$ O $boolean$ O $T[]$ O O O $T[]$ O $number$ O O O O O $void$ O $any$ O O $boolean$ O O $T$ O $any$ O O O O $T[]$ O $any$ O O O O O $number$ O $number$ O $boolean$ O $T[]$ O O $T[]$ O $complex$ O $number$ O O O O O O O $any$ O O $any[]$ O O O $any$ O $any[]$ O O O O O O O O $any$ O $undefined$ O $any$ O O O O O O $TypeErrorConstructor$ O O O O O O $any$ O $ObjectConstructor$ O $any$ O O O O O $number$ O O O $number$ O $IArguments$ O $number$ O $number$ O O O O $any$ O $IArguments$ O $number$ O O O O $any$ O $undefined$ O $any$ O O O O O O O $string$ O $any$ O O O O $any$ O $any$ O $string$ O O O $any$ O $string$ O O $any$ O $string$ O O O O O O O $any$ O O O O $string$ O O O O O $Math$ O $number$ O O O O O O $string$ O O O O $string$ O O O O O O O $string$ O O O O $number$ O O $DateConstructor$ O O O $number$ O O O O O O $Performance$ O O O O $Performance$ O $number$ O O O O $number$ O $Performance$ O $number$ O O O O O O O $complex$ O O O O O $string$ O O O $number$ O O $number$ O $Math$ O $number$ O O O O O O O O O O $number$ O O O O $number$ O $string$ O O O O O O O O O O $string$ O $string$ O $string$ O $string$ O O O $string$ O $string$ O $number$ O O O O O O O O O O $string$ O $string$ O $string$ O O O $string$ O O $string$ O O O O $Promise$ O $HttpPostMessage$ O $string$ O $Window$ O O O O O O $any$ O $any$ O O O O O O O $string$ O O $Window$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O O $boolean$ O $string$ O O O $string$ O $string$ O O O $number$ O O O O O O O
const config = { version : 's' , type : 's' } ; export default config ;	O $complex$ O O $string$ O O O $string$ O O O O O O $complex$ O
import * as models from 's' ; export abstract class Defaults { public static defaultSettings : models . ISettings = { filterPaneEnabled : true } ; public static defaultQnaSettings : models . IQnaSettings = { filterPaneEnabled : false } ; }	O O O $any$ O O O O O O $any$ O O O $any$ O $any$ O $any$ O O $boolean$ O O O O O O $any$ O $any$ O $any$ O O $boolean$ O O O O O
import * as utils from 's' ; import * as service from 's' ; import * as sdkConfig from 's' ; import * as models from 's' ; import { Defaults } from 's' ; declare global { interface Document { mozCancelFullScreen : Function ; msExitFullscreen : Function ; } interface HTMLIFrameElement { mozRequestFullScreen : Function ; msRequestFullscreen : Function ; } } export interface IBootstrapEmbedConfiguration { hostname ? : string ; embedUrl ? : string ; settings ? : ISettings ; uniqueId ? : string ; type ? : string ; groupId ? : string ; bootstrapped ? : boolean ; } export interface IEmbedConfigurationBase extends IBootstrapEmbedConfiguration { accessToken ? : string ; tokenType ? : models . TokenType ; } export interface IEmbedConfiguration extends IEmbedConfigurationBase { id ? : string ; settings ? : IEmbedSettings ; pageName ? : string ; filters ? : models . IFilter [ ] ; pageView ? : models . PageView ; datasetId ? : string ; permissions ? : models . Permissions ; viewMode ? : models . ViewMode ; action ? : string ; dashboardId ? : string ; height ? : number ; width ? : number ; theme ? : models . IReportTheme ; } export interface IVisualEmbedConfiguration extends IEmbedConfiguration { visualName : string ; } export interface IQnaEmbedConfiguration extends IEmbedConfigurationBase { datasetIds : string [ ] ; question ? : string ; viewMode ? : models . QnaMode ; } export interface ILocaleSettings { language ? : string ; formatLocale ? : string ; } export interface ISettings { localeSettings ? : ILocaleSettings ; } export interface IEmbedSettings extends models . ISettings , ISettings { } export interface IQnaSettings extends models . IQnaSettings , ISettings { } export interface IInternalEventHandler < T > { test ( event : service . IEvent < T > ) : boolean ; handle ( event : service . ICustomEvent < T > ) : void ; } export abstract class Embed { static allowedEvents = [ "s" , "s" , "s" , "s" , "s" , "s" , "s" ] ; static accessTokenAttribute = 's' ; static embedUrlAttribute = 's' ; static nameAttribute = 's' ; static typeAttribute = 's' ; static defaultEmbedHostName = "s" ; static type : string ; static maxFrontLoadTimes : number = 0 ; allowedEvents = [ ] ; eventHandlers : IInternalEventHandler < any > [ ] ; service : service . Service ; element : HTMLElement ; iframe : HTMLIFrameElement ; config : IEmbedConfigurationBase ; bootstrapConfig : IBootstrapEmbedConfiguration ; createConfig : models . IReportCreateConfiguration ; loadPath : string ; phasedLoadPath : string ; embeType : string ; frontLoadHandler : ( ) => any ; constructor ( service : service . Service , element , config , iframe ? , phasedRender ? , isBootstrap ? ) { Array . prototype . push . apply ( this . allowedEvents , Embed . allowedEvents ) ; this . eventHandlers = [ ] ; this . service = service ; this . element = element ; this . iframe = iframe ; this . embeType = config . type . toLowerCase ( ) ; this . populateConfig ( config , isBootstrap ) ; if ( this . embeType === 's' ) { this . setIframe ( false , phasedRender , isBootstrap ) ; } else { this . setIframe ( true , phasedRender , isBootstrap ) ; } } createReport ( config : models . IReportCreateConfiguration ) < void > { const errors = models . validateCreateReport ( config ) ; if ( errors ) { throw errors ; } return this . service . hpm . post < void > ( "s" , config , { uid : this . config . uniqueId , sdkSessionId : this . service . getSdkSessionId ( ) } , this . iframe . contentWindow ) . then ( response => { return response . body ; } , response => { throw response . body ; } ) ; } save ( ) < void > { return this . service . hpm . post < models . IError [ ] > ( 's' , null , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( response => { return response . body ; } ) . catch ( response => { throw response . body ; } ) ; } saveAs ( saveAsParameters : models . ISaveAsParameters ) < void > { return this . service . hpm . post < models . IError [ ] > ( 's' , saveAsParameters , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( response => { return response . body ; } ) . catch ( response => { throw response . body ; } ) ; } load ( config , phasedRender ? ) < void > { if ( ! config . accessToken ) { return ; } const path = phasedRender && config . type === 's' ? this . phasedLoadPath : this . loadPath ; const headers = { uid : this . config . uniqueId , sdkSessionId : this . service . getSdkSessionId ( ) , bootstrapped : this . config . bootstrapped , sdkVersion : sdkConfig . default . version } ; return this . service . hpm . post < void > ( path , config , headers , this . iframe . contentWindow ) . then ( response => { utils . assign ( this . config , config ) ; return response . body ; } , response => { throw response . body ; } ) ; } off < T > ( eventName , handler ? : service . IEventHandler < T > ) { const fakeEvent : service . IEvent < any > = { name : eventName , type : null , id : null , value : null } ; if ( handler ) { utils . remove ( eventHandler => eventHandler . test ( fakeEvent ) && ( eventHandler . handle === handler ) , this . eventHandlers ) ; this . element . removeEventListener ( eventName , < any > handler ) ; } else { const eventHandlersToRemove = this . eventHandlers . filter ( eventHandler => eventHandler . test ( fakeEvent ) ) ; eventHandlersToRemove . forEach ( eventHandlerToRemove => { utils . remove ( eventHandler => eventHandler === eventHandlerToRemove , this . eventHandlers ) ; this . element . removeEventListener ( eventName , < any > eventHandlerToRemove . handle ) ; } ) ; } } on < T > ( eventName , handler : service . IEventHandler < T > ) { if ( this . allowedEvents . indexOf ( eventName ) === - 0 ) { throw new Error ( `template` ) ; } this . eventHandlers . push ( { test : ( event : service . IEvent < T > ) => event . name === eventName , handle : handler } ) ; this . element . addEventListener ( eventName , < any > handler ) } reload ( ) < void > { return this . load ( this . config ) ; } setAccessToken ( accessToken ) < void > { var embedType = this . config . type ; embedType = ( embedType === 's' || embedType === 's' || embedType === 's' ) ? 's' : embedType ; return this . service . hpm . post < models . IError [ ] > ( 's' + embedType + 's' , accessToken , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( response => { this . config . accessToken = accessToken ; this . element . setAttribute ( Embed . accessTokenAttribute , accessToken ) ; this . service . accessToken = accessToken ; return response . body ; } ) . catch ( response => { throw response . body ; } ) ; } private getAccessToken ( globalAccessToken ) { const accessToken = this . config . accessToken || this . element . getAttribute ( Embed . accessTokenAttribute ) || globalAccessToken ; if ( ! accessToken ) { throw new Error ( `template` ) ; } return accessToken ; } populateConfig ( config , isBootstrap ) { if ( this . bootstrapConfig ) { this . config = utils . assign ( { } , this . bootstrapConfig , config ) ; this . bootstrapConfig = null ; } else { this . config = utils . assign ( { } , config ) ; } this . config . embedUrl = this . getEmbedUrl ( isBootstrap ) ; this . config . groupId = this . getGroupId ( ) ; this . addLocaleToEmbedUrl ( config ) ; this . config . uniqueId = this . getUniqueId ( ) ; if ( isBootstrap ) { this . bootstrapConfig = this . config ; this . bootstrapConfig . bootstrapped = true ; } else { this . config . accessToken = this . getAccessToken ( this . service . accessToken ) ; } this . configChanged ( isBootstrap ) ; } private addLocaleToEmbedUrl ( config ) { if ( ! config . settings ) { return ; } let localeSettings = config . settings . localeSettings if ( localeSettings && localeSettings . language ) { this . config . embedUrl = utils . addParamToUrl ( this . config . embedUrl , 's' , localeSettings . language ) ; } if ( localeSettings && localeSettings . formatLocale ) { this . config . embedUrl = utils . addParamToUrl ( this . config . embedUrl , 's' , localeSettings . formatLocale ) ; } } private getEmbedUrl ( isBootstrap ) { let embedUrl = this . config . embedUrl || this . element . getAttribute ( Embed . embedUrlAttribute ) ; if ( isBootstrap && ! embedUrl ) { embedUrl = this . getDefaultEmbedUrl ( this . config . hostname ) ; } if ( typeof embedUrl !== 's' || embedUrl . length === 0 ) { throw new Error ( `template` ) ; } return embedUrl ; } private getDefaultEmbedUrl ( hostname ) { if ( ! hostname ) { hostname = Embed . defaultEmbedHostName ; } let endpoint = this . getDefaultEmbedUrlEndpoint ( ) ; hostname = hostname . toLowerCase ( ) . trim ( ) ; if ( hostname . indexOf ( "s" ) === 0 ) { throw new Error ( "s" ) ; } if ( hostname . indexOf ( "s" ) === 0 ) { return `template` ; } return `template` ; } private getUniqueId ( ) { return this . config . uniqueId || this . element . getAttribute ( Embed . nameAttribute ) || utils . createRandomString ( ) ; } private getGroupId ( ) { return this . config . groupId || Embed . findGroupIdFromEmbedUrl ( this . config . embedUrl ) ; } abstract getId ( ) ; abstract configChanged ( isBootstrap ) ; abstract getDefaultEmbedUrlEndpoint ( ) ; fullscreen ( ) { const requestFullScreen = this . iframe . requestFullscreen || this . iframe . msRequestFullscreen || this . iframe . mozRequestFullScreen || this . iframe . webkitRequestFullscreen ; requestFullScreen . call ( this . iframe ) ; } exitFullscreen ( ) { if ( ! this . isFullscreen ( this . iframe ) ) { return ; } const exitFullscreen = document . exitFullscreen || document . mozCancelFullScreen || document . webkitExitFullscreen || document . msExitFullscreen ; exitFullscreen . call ( document ) ; } private isFullscreen ( iframe ) { const options = [ 's' , 's' , 's' , 's' ] ; return options . some ( option => document [ option ] === iframe ) ; } abstract validate ( config ) : models . IError [ ] ; private setIframe ( isLoad , phasedRender ? , isBootstrap ? ) { if ( ! this . iframe ) { var iframeContent = document . createElement ( "s" ) ; var embedUrl = this . config . uniqueId ? utils . addParamToUrl ( this . config . embedUrl , 's' , this . config . uniqueId ) : this . config . embedUrl ; iframeContent . style . width = 's' ; iframeContent . style . height = 's' ; iframeContent . setAttribute ( "s" , embedUrl ) ; iframeContent . setAttribute ( "s" , "s" ) ; iframeContent . setAttribute ( "s" , "s" ) ; var node = this . element ; while ( node . firstChild ) { node . removeChild ( node . firstChild ) ; } node . appendChild ( iframeContent ) ; this . iframe = < HTMLIFrameElement > node . firstChild ; } if ( isLoad ) { if ( ! isBootstrap ) { const errors = this . validate ( this . config ) ; if ( errors ) { throw errors ; } } this . iframe . addEventListener ( 's' , ( ) => this . load ( this . config , phasedRender ) , false ) ; if ( this . service . getNumberOfComponents ( ) <= Embed . maxFrontLoadTimes ) { this . frontLoadHandler = ( ) => this . frontLoadSendConfig ( this . config ) ; this . element . addEventListener ( 's' , this . frontLoadHandler , false ) ; } } else { this . iframe . addEventListener ( 's' , ( ) => this . createReport ( this . createConfig ) , false ) ; } } setComponentTitle ( title ) { if ( ! this . iframe ) { return ; } if ( title == null ) { this . iframe . removeAttribute ( "s" ) ; } else { this . iframe . setAttribute ( "s" , title ) ; } } setComponentTabIndex ( tabIndex ? ) { if ( ! this . element ) { return ; } this . element . setAttribute ( "s" , ( tabIndex == null ) ? "s" : tabIndex . toString ( ) ) ; } removeComponentTabIndex ( tabIndex ? ) { if ( ! this . element ) { return ; } this . element . removeAttribute ( "s" ) ; } static findGroupIdFromEmbedUrl ( url ) { const groupIdRegEx = "s" const groupIdMatch = url . match ( groupIdRegEx ) ; let groupId ; if ( groupIdMatch ) { groupId = groupIdMatch [ 0 ] ; } return groupId ; } private frontLoadSendConfig ( config ) < void > { if ( ! config . accessToken ) { return ; } const errors = this . validate ( config ) ; if ( errors ) { throw errors ; } if ( this . iframe . contentWindow == null ) return ; return this . service . hpm . post < void > ( "s" , config , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( response => { return response . body ; } , response => { throw response . body ; } ) ; } }	O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O $any$ O O O O O $any$ O O $complex$ O $Function$ O $FunctionConstructor$ O $Function$ O $FunctionConstructor$ O O O $complex$ O $Function$ O $FunctionConstructor$ O $Function$ O $FunctionConstructor$ O O O O O $any$ O $string$ O O O O $string$ O O O O $ISettings$ O O $any$ O $string$ O O O O $string$ O O O O $string$ O O O O $boolean$ O O O O O O O $any$ O $any$ O $string$ O O O O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $string$ O O O O $IEmbedSettings$ O O $any$ O $string$ O O O O $any[]$ O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O $string$ O O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $string$ O O O O $string$ O O O O $number$ O O O O $number$ O O O O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $string$ O O O O O O $any$ O $any$ O $string[]$ O O O O O $string$ O O O O $any$ O O $any$ O $any$ O O O O $any$ O $string$ O O O O $string$ O O O O O O O $any$ O $ILocaleSettings$ O O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O $boolean$ O $IEvent<T>$ O $any$ O $any$ O $any$ O O O O O $void$ O $ICustomEvent<T>$ O $any$ O $any$ O $any$ O O O O O O O O O $any$ O O $string[]$ O O O O O O O O O O O O O O O O O O $string$ O O O O $string$ O O O O $string$ O O O O $string$ O O O O $string$ O O O O $string$ O O O O $number$ O O O O O $any[]$ O O O O $IInternalEventHandler<any>[]$ O $any$ O O O O O O $Service$ O $any$ O $any$ O $HTMLElement$ O $complex$ O $HTMLIFrameElement$ O $complex$ O $IEmbedConfigurationBase$ O $any$ O $IBootstrapEmbedConfiguration$ O $any$ O $any$ O $any$ O $any$ O $string$ O O O $string$ O O O $string$ O O O $any$ O O O O O O O O $Service$ O $any$ O $any$ O $HTMLElement$ O $IEmbedConfigurationBase$ O $HTMLIFrameElement$ $HTMLIFrameElement$ O $boolean$ $boolean$ O $boolean$ $boolean$ O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O O O $any[]$ O $any$ O $string[]$ O O O O $IInternalEventHandler<any>[]$ O O O O O O $Service$ O $Service$ O O O $HTMLElement$ O $HTMLElement$ O O O $HTMLIFrameElement$ O $HTMLIFrameElement$ O O O $string$ O $IEmbedConfigurationBase$ O $string$ O $string$ O O O O O $void$ O $IEmbedConfigurationBase$ O $boolean$ O O O O O O $string$ O O O O O O $void$ O O O $boolean$ O $boolean$ O O O O O O O $void$ O O O $boolean$ O $boolean$ O O O O $Promise$ O $any$ O $any$ O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O O O O O $Service$ O $any$ O $any$ O O O O O O $any$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O $string$ O O O $Service$ O $string$ O O O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $Promise$ O O O O O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O $any$ O $any$ O $any$ O O O O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O $IEmbedConfigurationBase$ O $boolean$ $boolean$ O O O O O O O O $IEmbedConfigurationBase$ O $string$ O O O O O O $string$ O $boolean$ O $IEmbedConfigurationBase$ O $string$ O O O O O $string$ O O O $string$ O O $complex$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O $string$ O O O $Service$ O $string$ O O O $boolean$ O O O $IEmbedConfigurationBase$ O $boolean$ O $string$ O $any$ O $complex$ O $string$ O O O O O $Service$ O $any$ O $any$ O O O O $string$ O $IEmbedConfigurationBase$ O $complex$ O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O $any$ O $any$ O O O $IEmbedConfigurationBase$ O $IEmbedConfigurationBase$ O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O $void$ O $any$ O O $string$ O $IEventHandler<T>$ O O $any$ O $any$ O $any$ O O O O $IEvent<any>$ O $any$ O $any$ O O O O O $string$ O $string$ O $null$ O O O $null$ O O O $null$ O O O O O O $IEventHandler<T>$ O O $any$ O $void$ O $IInternalEventHandler<any>$ O $IInternalEventHandler<any>$ O $boolean$ O $IEvent<any>$ O O O $IInternalEventHandler<any>$ O $void$ O $IEventHandler<T>$ O O O O $IInternalEventHandler<any>[]$ O O O O $HTMLElement$ O O O $string$ O O O O $IEventHandler<T>$ O O O O O O $IInternalEventHandler<any>[]$ O O O $IInternalEventHandler<any>[]$ O $complex$ O $IInternalEventHandler<any>$ O $IInternalEventHandler<any>$ O $boolean$ O $IEvent<any>$ O O O $IInternalEventHandler<any>[]$ O $void$ O $IInternalEventHandler<any>$ O O $any$ O $void$ O $IInternalEventHandler<any>$ O $IInternalEventHandler<any>$ O $IInternalEventHandler<any>$ O O O $IInternalEventHandler<any>[]$ O O O O $HTMLElement$ O O O $string$ O O O O $IInternalEventHandler<any>$ O $void$ O O O O O O O $void$ O $any$ O O $string$ O $IEventHandler<T>$ O $any$ O $any$ O $any$ O O O O O O O $any[]$ O $number$ O $string$ O O O O O O O O $ErrorConstructor$ O O O O O O O $IInternalEventHandler<any>[]$ O $number$ O O $boolean$ O O $IEvent<T>$ O $any$ O $any$ O $any$ O O O $IEvent<T>$ O $string$ O $string$ O $IEventHandler<T>$ O $IEventHandler<T>$ O O O O O $HTMLElement$ O O O $string$ O O O O $IEventHandler<T>$ O O $Promise$ O O O O O O O O O $Promise<void>$ O O O $IEmbedConfigurationBase$ O O O $Promise$ O $string$ O O O O O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O $string$ O O $string$ O O O $string$ O O O $string$ O O O O O O $string$ O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O $string$ O O O $string$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O O $IEmbedConfigurationBase$ O $string$ O $string$ O O O $HTMLElement$ O $void$ O $any$ O $string$ O $string$ O O O O $Service$ O $string$ O $string$ O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O O $string$ O $string$ O O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O $HTMLElement$ O $string$ O $any$ O $string$ O O $string$ O O O O $string$ O O O O $ErrorConstructor$ O O O O O O $string$ O O $void$ O $IBootstrapEmbedConfiguration$ O $boolean$ O O O O O O $IBootstrapEmbedConfiguration$ O O O O $IEmbedConfigurationBase$ O $any$ O $any$ O O O O O O $IBootstrapEmbedConfiguration$ O $IBootstrapEmbedConfiguration$ O O O O $IBootstrapEmbedConfiguration$ O O O O O O O O $IEmbedConfigurationBase$ O $any$ O $any$ O O O O $IBootstrapEmbedConfiguration$ O O O O O $IEmbedConfigurationBase$ O $string$ O O O $string$ O $boolean$ O O O O $IEmbedConfigurationBase$ O $string$ O O O $string$ O O O O O $void$ O $IBootstrapEmbedConfiguration$ O O O O $IEmbedConfigurationBase$ O $string$ O O O $string$ O O O O O $boolean$ O O O O $IBootstrapEmbedConfiguration$ O O O $IEmbedConfigurationBase$ O O O $IBootstrapEmbedConfiguration$ O $boolean$ O O O O O O O O $IEmbedConfigurationBase$ O $string$ O O O $string$ O O O $Service$ O $string$ O O O O O $void$ O $boolean$ O O O O $void$ O $IEmbedConfiguration$ O O O O O $IEmbedConfiguration$ O $IEmbedSettings$ O O O O O O $ILocaleSettings$ O $IEmbedConfiguration$ O $IEmbedSettings$ O $ILocaleSettings$ O O $ILocaleSettings$ O $ILocaleSettings$ O $string$ O O O O $IEmbedConfigurationBase$ O $string$ O $any$ O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O $ILocaleSettings$ O $string$ O O O O O $ILocaleSettings$ O $ILocaleSettings$ O $string$ O O O O $IEmbedConfigurationBase$ O $string$ O $any$ O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O $ILocaleSettings$ O $string$ O O O O O $string$ O $boolean$ O O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O $HTMLElement$ O $string$ O $any$ O $string$ O O O O $boolean$ O O $string$ O O $string$ O O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O O O $string$ O O O $string$ O $number$ O O O O O O $ErrorConstructor$ O O O O O O $string$ O O O $string$ O $string$ O O O O O $string$ O O $string$ O $any$ O $string$ O O O $string$ O O O $string$ O O O $string$ O $string$ O $string$ O O O $string$ O O O O O $string$ O $number$ O O O O O O O O O $ErrorConstructor$ O O O O O O O $string$ O $number$ O O O O O O O O O O O O O O O O $string$ O O O O O O $IEmbedConfigurationBase$ O $string$ O O O $HTMLElement$ O $string$ O $any$ O $string$ O O $any$ O $string$ O O O O O $string$ O O O O O O $IEmbedConfigurationBase$ O $string$ O $any$ O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $string$ O O O O $void$ O $boolean$ O O O $string$ O O O $void$ O O O O $any$ O O O $HTMLIFrameElement$ O $Promise<void>$ O O O $HTMLIFrameElement$ O $Function$ O O O $HTMLIFrameElement$ O $Function$ O O O $HTMLIFrameElement$ O $any$ O $any$ O $any$ O O O $HTMLIFrameElement$ O O O $void$ O O O O O O O O $boolean$ O O O $HTMLIFrameElement$ O O O O O O O $any$ O $Document$ O $Promise<void>$ O $Document$ O $Function$ O $Document$ O $any$ O $Document$ O $Function$ O $any$ O $any$ O $Document$ O O O O $boolean$ O $HTMLIFrameElement$ O O O $string[]$ O O O O O O O O O O O O $string[]$ O $boolean$ O $string$ O $Document$ O $string$ O O $HTMLIFrameElement$ O O O O $any[]$ O $IEmbedConfigurationBase$ O O $any$ O $any$ O O O O $void$ O $boolean$ O $boolean$ $boolean$ O $boolean$ $boolean$ O O O O O O O $HTMLIFrameElement$ O O O $HTMLIFrameElement$ O $Document$ O O O O O O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O $any$ O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O O $IEmbedConfigurationBase$ O $string$ O O O O $IEmbedConfigurationBase$ O $string$ O $HTMLIFrameElement$ O $CSSStyleDeclaration$ O $string$ O O O $HTMLIFrameElement$ O $CSSStyleDeclaration$ O $string$ O O O $HTMLIFrameElement$ O $void$ O O O $string$ O O $HTMLIFrameElement$ O $void$ O O O O O O $HTMLIFrameElement$ O $void$ O O O O O O O $HTMLElement$ O O O $HTMLElement$ O O O $HTMLElement$ O $ChildNode$ O O $HTMLElement$ O $T$ O $HTMLElement$ O $ChildNode$ O O O $HTMLElement$ O $T$ O $HTMLIFrameElement$ O O O O $HTMLIFrameElement$ O O $complex$ O $HTMLElement$ O $ChildNode$ O O O O $boolean$ O O O O O $boolean$ O O O $any[]$ O O O $any[]$ O O O $IEmbedConfigurationBase$ O O O O $any[]$ O O O $any[]$ O O O O O $HTMLIFrameElement$ O O O O O O O O O O $Promise<void>$ O O O $IEmbedConfigurationBase$ O $boolean$ O O O O O O O O O $Service$ O $number$ O O O $any$ O $number$ O O O O $any$ O O O O O O $Promise<void>$ O O O $IEmbedConfigurationBase$ O O O O $HTMLElement$ O O O O O O O $any$ O O O O O O O O O O $HTMLIFrameElement$ O O O O O O O O O O $Promise<void>$ O O O $any$ O O O O O O O $void$ O $string$ O O O O O O O $HTMLIFrameElement$ O O O O O O O $string$ O O O O O O $HTMLIFrameElement$ O $void$ O O O O O O O O O $HTMLIFrameElement$ O $void$ O O O $string$ O O O O $void$ O $number$ $number$ O O O O O O O $HTMLElement$ O O O O O O O $HTMLElement$ O $void$ O O O O $number$ O O O O O O $number$ O $string$ O O O O O $void$ O $number$ $number$ O O O O O O O $HTMLElement$ O O O O O O O $HTMLElement$ O $void$ O O O O O O $string$ O $string$ O O O $RegExp$ O O O $RegExpMatchArray$ O $string$ O $complex$ O $RegExp$ O O O $any$ O O O $RegExpMatchArray$ O O $any$ O $RegExpMatchArray$ O O O O O O $any$ O O O $Promise$ O $IEmbedConfigurationBase$ O O O O O O O O $IEmbedConfigurationBase$ O $string$ O O O O O O $any[]$ O O O $any[]$ O $IEmbedConfigurationBase$ O O O O $any[]$ O O O $any[]$ O O O O O O $HTMLIFrameElement$ O $Window$ O O O O O O O O $Service$ O $any$ O $any$ O O O O O O $IEmbedConfigurationBase$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O O O $any$ O $any$ O O O O O O
export let APINotSupportedForRDLError = "s" ;	O O $string$ O O O
import * as models from 's' ; export interface IFilterable { getFilters ( ) : Promise < models . IFilter [ ] > ; setFilters ( filters : models . IFilter [ ] ) : Promise < void > ; removeFilters ( ) : Promise < void > ; }	O O O $any$ O O O O O $any$ O $Promise<any[]>$ O O O $PromiseConstructor$ O $any$ O $any$ O O O O $Promise<void>$ O $any[]$ O $any$ O $any$ O O O O $PromiseConstructor$ O O O O $Promise<void>$ O O O $PromiseConstructor$ O O O O O
import * as models from 's' ; import { IFilterable } from 's' ; import { IPageNode , Page } from 's' ; export interface IVisualNode { name : string ; title : string ; type : string ; layout : models . IVisualLayout ; page : IPageNode ; } export class VisualDescriptor implements IVisualNode , IFilterable { name : string ; title : string ; type : string ; layout : models . IVisualLayout ; page : IPageNode ; constructor ( page , name , title , type , layout : models . IVisualLayout ) { this . name = name ; this . title = title ; this . type = type ; this . layout = layout ; this . page = page ; } getFilters ( ) < models . IFilter [ ] > { return this . page . report . service . hpm . get < models . IFilter [ ] > ( `template` , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . then ( response => response . body , response => { throw response . body ; } ) ; } removeFilters ( ) < void > { return this . setFilters ( [ ] ) ; } setFilters ( filters : models . IFilter [ ] ) < void > { return this . page . report . service . hpm . put < models . IError [ ] > ( `template` , filters , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . catch ( response => { throw response . body ; } ) ; } exportData ( exportDataType ? : models . ExportDataType , rows ? ) < models . ExportDataType > { let exportDataRequestBody : models . IExportDataRequest = { rows : rows , exportDataType : exportDataType } ; return this . page . report . service . hpm . post < models . ExportDataType > ( `template` , exportDataRequestBody , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . then ( response => response . body , response => { throw response . body ; } ) ; } setSlicerState ( state : models . ISlicerState ) < void > { return this . page . report . service . hpm . put < models . IError [ ] > ( `template` , state , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . catch ( response => { throw response . body ; } ) ; } getSlicerState ( ) < models . ISlicerState > { return this . page . report . service . hpm . get < models . ISlicerState > ( `template` , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . then ( response => response . body , response => { throw response . body ; } ) ; } clone ( request : models . ICloneVisualRequest = { } ) < models . ICloneVisualResponse > { return this . page . report . service . hpm . post < models . ICloneVisualResponse > ( `template` , request , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . then ( response => response . body , response => { throw response . body ; } ) ; } sortBy ( request : models . ISortByVisualRequest ) < void > { return this . page . report . service . hpm . put < models . IError [ ] > ( `template` , request , { uid : this . page . report . config . uniqueId } , this . page . report . iframe . contentWindow ) . catch ( response => { throw response . body ; } ) ; } }	O O O $any$ O O O O O $any$ O O O O O O $any$ O $any$ O O O O O O $any$ O $string$ O O O $string$ O O O $string$ O O O $any$ O $any$ O $any$ O $IPageNode$ O $any$ O O O O $any$ O $any$ O $any$ O $string$ O O O $string$ O O O $string$ O O O $any$ O $any$ O $any$ O $IPageNode$ O $any$ O O O $IPageNode$ O $string$ O $string$ O $string$ O $any$ O $any$ O $any$ O O O O $string$ O $string$ O O O $string$ O $string$ O O O $string$ O $string$ O O O $any$ O $any$ O O O $IPageNode$ O $IPageNode$ O O $Promise$ O O O $any$ O $any$ O O O O O O O $IPageNode$ O $IReportNode$ O $IService$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $string$ O O O $IPageNode$ O $IReportNode$ O $IEmbedConfiguration$ O $string$ O O O O $IPageNode$ O $IReportNode$ O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O O O O O O O O O $Promise<void>$ O O O O O O $Promise$ O $any[]$ O $any$ O $any$ O O O O O O O O O O $IPageNode$ O $IReportNode$ O $IService$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any[]$ O O $string$ O O O $IPageNode$ O $IReportNode$ O $IEmbedConfiguration$ O $string$ O O O O $IPageNode$ O $IReportNode$ O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O $any$ O O $any$ O $any$ O $number$ $number$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $number$ O $number$ O $any$ O $any$ O O O O O $IPageNode$ O $IReportNode$ O $IService$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $string$ O O O $IPageNode$ O $IReportNode$ O $IEmbedConfiguration$ O $string$ O O O O $IPageNode$ O $IReportNode$ O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O $any$ O $any$ O $any$ O O O O O O O O $IPageNode$ O $IReportNode$ O $IService$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $string$ O O O $IPageNode$ O $IReportNode$ O $IEmbedConfiguration$ O $string$ O O O O $IPageNode$ O $IReportNode$ O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O O O $any$ O $any$ O O O O O $IPageNode$ O $IReportNode$ O $IService$ O $any$ O $any$ O $any$ O $any$ O O O O O $string$ O O O $IPageNode$ O $IReportNode$ O $IEmbedConfiguration$ O $string$ O O O O $IPageNode$ O $IReportNode$ O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O O $IPageNode$ O $IReportNode$ O $IService$ O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O $string$ O O O $IPageNode$ O $IReportNode$ O $IEmbedConfiguration$ O $string$ O O O O $IPageNode$ O $IReportNode$ O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O $any$ O $any$ O $any$ O O O O O O O O $IPageNode$ O $IReportNode$ O $IService$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $string$ O O O $IPageNode$ O $IReportNode$ O $IEmbedConfiguration$ O $string$ O O O O $IPageNode$ O $IReportNode$ O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O O
import { IFilterable } from 's' ; import { IReportNode } from 's' ; import { VisualDescriptor } from 's' ; import * as models from 's' ; import * as utils from 's' ; import * as errors from 's' ; export interface IPageNode { report : IReportNode ; name : string ; } export class Page implements IPageNode , IFilterable { report : IReportNode ; name : string ; displayName : string ; isActive : boolean ; visibility : models . SectionVisibility ; defaultSize : models . ICustomPageSize ; defaultDisplayOption : models . DisplayOption ; constructor ( report , name , displayName ? , isActivePage ? , visibility ? : models . SectionVisibility , defaultSize ? : models . ICustomPageSize , defaultDisplayOption ? : models . DisplayOption ) { this . report = report ; this . name = name ; this . displayName = displayName ; this . isActive = isActivePage ; this . visibility = visibility ; this . defaultSize = defaultSize ; this . defaultDisplayOption = defaultDisplayOption ; } getFilters ( ) < models . IFilter [ ] > { return this . report . service . hpm . get < models . IFilter [ ] > ( `template` , { uid : this . report . config . uniqueId } , this . report . iframe . contentWindow ) . then ( response => response . body , response => { throw response . body ; } ) ; } removeFilters ( ) < void > { return this . setFilters ( [ ] ) ; } setActive ( ) < void > { const page : models . IPage = { name : this . name , displayName : null , isActive : true } ; return this . report . service . hpm . put < models . IError [ ] > ( 's' , page , { uid : this . report . config . uniqueId } , this . report . iframe . contentWindow ) . catch ( response => { throw response . body ; } ) ; } setFilters ( filters : models . IFilter [ ] ) < void > { return this . report . service . hpm . put < models . IError [ ] > ( `template` , filters , { uid : this . report . config . uniqueId } , this . report . iframe . contentWindow ) . catch ( response => { throw response . body ; } ) ; } getVisuals ( ) < VisualDescriptor [ ] > { if ( utils . isRDLEmbed ( this . report . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . report . service . hpm . get < models . IVisual [ ] > ( `template` , { uid : this . report . config . uniqueId } , this . report . iframe . contentWindow ) . then ( response => { return response . body . map ( visual => { return new VisualDescriptor ( this , visual . name , visual . title , visual . type , visual . layout ) ; } ) ; } , response => { throw response . body ; } ) ; } hasLayout ( layoutType ) < boolean > { if ( utils . isRDLEmbed ( this . report . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } let layoutTypeEnum = models . LayoutType [ layoutType ] ; return this . report . service . hpm . get < boolean > ( `template` , { uid : this . report . config . uniqueId } , this . report . iframe . contentWindow ) . then ( response => response . body , response => { throw response . body ; } ) ; } }	O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O $any$ O $IReportNode$ O $any$ O $string$ O O O O O O $any$ O $any$ O $any$ O $IReportNode$ O $any$ O $string$ O O O $string$ O O O $boolean$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $IReportNode$ O $string$ O $string$ $string$ O $boolean$ $boolean$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $IReportNode$ O $IReportNode$ O O O $string$ O $string$ O O O $string$ O $string$ O O O $boolean$ O $boolean$ O O O $any$ O $any$ O O O $any$ O $any$ O O O $any$ O $any$ O O $Promise$ O O O $any$ O $any$ O O O O O O O $IReportNode$ O $IService$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $string$ O O O $IReportNode$ O $IEmbedConfiguration$ O $string$ O O O O $IReportNode$ O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O O O O O O O O O $Promise<void>$ O O O O O O $Promise$ O O O O O O O $any$ O $any$ O $any$ O O $string$ O O O $string$ O $null$ O O O $boolean$ O O O O O O O $IReportNode$ O $IService$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $string$ O O O $IReportNode$ O $IEmbedConfiguration$ O $string$ O O O O $IReportNode$ O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O $any[]$ O $any$ O $any$ O O O O O O O O O O $IReportNode$ O $IService$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any[]$ O O $string$ O O O $IReportNode$ O $IEmbedConfiguration$ O $string$ O O O O $IReportNode$ O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O O O $any$ O O O O O O $any$ O $boolean$ O O O $IReportNode$ O $IEmbedConfiguration$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O O O $IReportNode$ O $IService$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $string$ O O O $IReportNode$ O $IEmbedConfiguration$ O $string$ O O O O $IReportNode$ O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O O $Promise$ O $any$ O O O O O O O $any$ O $boolean$ O O O $IReportNode$ O $IEmbedConfiguration$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O $any$ O $any$ O $any$ O $any$ O O O O O $IReportNode$ O $IService$ O $any$ O $any$ O O O O O O O $string$ O O O $IReportNode$ O $IEmbedConfiguration$ O $string$ O O O O $IReportNode$ O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O O
import * as service from 's' ; import * as embed from 's' ; import * as models from 's' ; import * as utils from 's' ; import * as errors from 's' ; import { IFilterable } from 's' ; import { Page } from 's' ; import { Defaults } from 's' ; import { IReportLoadConfiguration } from 's' ; import { BookmarksManager } from 's' ; export interface IReportNode { iframe : HTMLIFrameElement ; service : service . IService ; config : embed . IEmbedConfiguration } export class Report extends embed . Embed implements IReportNode , IFilterable { static allowedEvents = [ "s" , "s" , "s" , "s" , "s" , "s" , "s" ] ; static reportIdAttribute = 's' ; static filterPaneEnabledAttribute = 's' ; static navContentPaneEnabledAttribute = 's' ; static typeAttribute = 's' ; static type = "s" ; public bookmarksManager : BookmarksManager ; constructor ( service : service . Service , element , baseConfig : embed . IEmbedConfigurationBase , phasedRender ? , isBootstrap ? , iframe ? ) { const config = < embed . IEmbedConfiguration > baseConfig ; super ( service , element , config , iframe , phasedRender , isBootstrap ) ; this . loadPath = "s" ; this . phasedLoadPath = "s" ; Array . prototype . push . apply ( this . allowedEvents , Report . allowedEvents ) ; this . bookmarksManager = new BookmarksManager ( service , config , this . iframe ) ; } static findIdFromEmbedUrl ( url ) { const reportIdRegEx = "s" const reportIdMatch = url . match ( reportIdRegEx ) ; let reportId ; if ( reportIdMatch ) { reportId = reportIdMatch [ 0 ] ; } return reportId ; } render ( config ? ) < void > { return this . service . hpm . post < models . IError [ ] > ( `template` , config , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( response => { return response . body ; } ) . catch ( response => { throw response . body ; } ) ; } getFilters ( ) < models . IFilter [ ] > { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . service . hpm . get < models . IFilter [ ] > ( `template` , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( response => response . body , response => { throw response . body ; } ) ; } getId ( ) { let config = < embed . IEmbedConfiguration > this . config ; const reportId = config . id || this . element . getAttribute ( Report . reportIdAttribute ) || Report . findIdFromEmbedUrl ( config . embedUrl ) ; if ( typeof reportId !== 's' || reportId . length === 0 ) { throw new Error ( `template` ) ; } return reportId ; } getPages ( ) < Page [ ] > { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . service . hpm . get < models . IPage [ ] > ( 's' , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( response => { return response . body . map ( page => { return new Page ( this , page . name , page . displayName , page . isActive , page . visibility , page . defaultSize , page . defaultDisplayOption ) ; } ) ; } , response => { throw response . body ; } ) ; } page ( name , displayName ? , isActive ? , visibility ? : models . SectionVisibility ) { return new Page ( this , name , displayName , isActive , visibility ) ; } print ( ) < void > { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . service . hpm . post < models . IError [ ] > ( 's' , null , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( response => { return response . body ; } ) . catch ( response => { throw response . body ; } ) ; } removeFilters ( ) < void > { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . setFilters ( [ ] ) ; } setPage ( pageName ) < void > { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } const page : models . IPage = { name : pageName , displayName : null , isActive : true } ; return this . service . hpm . put < models . IError [ ] > ( 's' , page , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( response => { throw response . body ; } ) ; } setFilters ( filters : models . IFilter [ ] ) < void > { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . service . hpm . put < models . IError [ ] > ( `template` , filters , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( response => { throw response . body ; } ) ; } updateSettings ( settings : models . ISettings ) < void > { if ( utils . isRDLEmbed ( this . config . embedUrl ) && settings . customLayout != null ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . service . hpm . patch < models . IError [ ] > ( 's' , settings , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( response => { throw response . body ; } ) ; } validate ( config : embed . IEmbedConfigurationBase ) : models . IError [ ] { return models . validateReportLoad ( config ) ; } configChanged ( isBootstrap ) { let config = < embed . IEmbedConfiguration > this . config ; if ( this . isMobileSettings ( config . settings ) ) config . embedUrl = utils . addParamToUrl ( config . embedUrl , "s" , "s" ) ; let filterPaneEnabledAttribute = this . element . getAttribute ( Report . filterPaneEnabledAttribute ) ; let navContentPaneEnabledAttribute = this . element . getAttribute ( Report . navContentPaneEnabledAttribute ) ; let elementAttrSettings : embed . IEmbedSettings = { filterPaneEnabled : ( filterPaneEnabledAttribute == null ) ? Defaults . defaultSettings . filterPaneEnabled : ( filterPaneEnabledAttribute !== "s" ) , navContentPaneEnabled : ( navContentPaneEnabledAttribute == null ) ? Defaults . defaultSettings . navContentPaneEnabled : ( navContentPaneEnabledAttribute !== "s" ) } ; this . config . settings = utils . assign ( { } , elementAttrSettings , config . settings ) ; if ( isBootstrap ) { return ; } config . id = this . getId ( ) ; } getDefaultEmbedUrlEndpoint ( ) { return "s" ; } switchMode ( viewMode : models . ViewMode | string ) < void > { let newMode ; if ( typeof viewMode === "s" ) { newMode = viewMode ; } else { newMode = this . viewModeToString ( viewMode ) ; } let url = 's' + newMode ; return this . service . hpm . post < models . IError [ ] > ( url , null , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( response => { return response . body ; } ) . catch ( response => { throw response . body ; } ) ; } refresh ( ) < void > { return this . service . hpm . post < models . IError [ ] > ( 's' , null , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( response => { return response . body ; } ) . catch ( response => { throw response . body ; } ) ; } isSaved ( ) < boolean > { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return utils . isSavedInternal ( this . service . hpm , this . config . uniqueId , this . iframe . contentWindow ) ; } applyTheme ( theme : models . IReportTheme ) < void > { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . applyThemeInternal ( theme ) ; } resetTheme ( ) < void > { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . applyThemeInternal ( < models . IReportTheme > { } ) ; } private applyThemeInternal ( theme : models . IReportTheme ) < void > { return this . service . hpm . put < models . IError [ ] > ( 's' , theme , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( response => { return response . body ; } ) . catch ( response => { throw response . body ; } ) ; } private viewModeToString ( viewMode : models . ViewMode ) { let mode ; switch ( viewMode ) { case models . ViewMode . Edit : mode = "s" ; break ; case models . ViewMode . View : mode = "s" ; break ; } return mode ; } private isMobileSettings ( settings : embed . IEmbedSettings ) { return settings && ( settings . layoutType === models . LayoutType . MobileLandscape || settings . layoutType === models . LayoutType . MobilePortrait ) ; } }	O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O $HTMLIFrameElement$ O $complex$ O $IService$ O $any$ O $any$ O $IEmbedConfiguration$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $string[]$ O O O O O O O O O O O O O O O O O O $string$ O O O O $string$ O O O O $string$ O O O O $string$ O O O O $string$ O O O O $BookmarksManager$ O $any$ O O O $Service$ O $any$ O $any$ O $HTMLElement$ O $IEmbedConfigurationBase$ O $any$ O $any$ O $boolean$ $boolean$ O $boolean$ $boolean$ O $HTMLIFrameElement$ $HTMLIFrameElement$ O O O $IEmbedConfiguration$ O O $any$ O $any$ O $IEmbedConfigurationBase$ O O O $Service$ O $HTMLElement$ O $IEmbedConfiguration$ O $HTMLIFrameElement$ O $boolean$ O $boolean$ O O O O $string$ O O O O O $string$ O O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O O O $any[]$ O $any$ O $string[]$ O O O O $BookmarksManager$ O O $any$ O $Service$ O $IEmbedConfiguration$ O O O $HTMLIFrameElement$ O O O O $string$ O $string$ O O O $RegExp$ O O O $RegExpMatchArray$ O $string$ O $complex$ O $RegExp$ O O O $any$ O O O $RegExpMatchArray$ O O $any$ O $RegExpMatchArray$ O O O O O O $any$ O O $Promise$ O $any$ $IReportLoadConfiguration$ O O O O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O O O $any$ O $any$ O O O O O O $any$ O $boolean$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $string$ O O O O $IEmbedConfiguration$ O O $any$ O $any$ O O O $IEmbedConfigurationBase$ O O $string$ O $IEmbedConfiguration$ O $string$ O O O $HTMLElement$ O $string$ O $any$ O $string$ O O $any$ O $string$ O $IEmbedConfiguration$ O $string$ O O O O O $string$ O O O $string$ O $number$ O O O O O O $ErrorConstructor$ O O O O O O $string$ O O $Promise$ O O O $any$ O O O O O O $any$ O $boolean$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O O O $any$ O $any$ O O O O O $Page$ O $string$ O $string$ $string$ O $boolean$ $boolean$ O $any$ O O $any$ O $any$ O O O O $any$ O O O $string$ O $string$ O $boolean$ O $any$ O O O $Promise$ O O O O O O O O $any$ O $boolean$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O O O O O O O O $any$ O $boolean$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O O O $Promise<void>$ O O O O O O $Promise$ O $string$ O O O O O O O $any$ O $boolean$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O $any$ O $any$ O $any$ O O $string$ O $string$ O $null$ O O O $boolean$ O O O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O $any[]$ O $any$ O $any$ O O O O O O O O O $any$ O $boolean$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any[]$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $boolean$ O O O $IEmbedConfigurationBase$ O $string$ O O $any$ O $any$ O O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $any[]$ O $IEmbedConfigurationBase$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $IEmbedConfigurationBase$ O O O $void$ O $boolean$ O O O $IEmbedConfiguration$ O O $any$ O $any$ O O O $IEmbedConfigurationBase$ O O O O O $boolean$ O $IEmbedConfiguration$ O $IEmbedSettings$ O O $IEmbedConfiguration$ O $string$ O $any$ O $string$ O $IEmbedConfiguration$ O $string$ O O O O O O O $string$ O O O $HTMLElement$ O $string$ O $any$ O $string$ O O O $string$ O O O $HTMLElement$ O $string$ O $any$ O $string$ O O O $IEmbedSettings$ O $any$ O $any$ O O $any$ O O $string$ O O O O $any$ O $any$ O $any$ O O $string$ O O O O $any$ O O $string$ O O O O $any$ O $any$ O $any$ O O $string$ O O O O O O O $IEmbedConfigurationBase$ O $ISettings$ O $any$ O $any$ O O O O $IEmbedSettings$ O $IEmbedConfiguration$ O $IEmbedSettings$ O O O O $boolean$ O O O O O $IEmbedConfiguration$ O $string$ O O O $string$ O O O O $string$ O O O O O O O $Promise$ O $any$ O $any$ O $any$ O O O O O O O O $string$ O O O O $any$ O O O O $string$ O $string$ O O O O $string$ O O O $string$ O $any$ O O O O $string$ O O O $string$ O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O O O O O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O O O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O O O O O O O O $any$ O $boolean$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O $any$ O $Promise<boolean>$ O O O $Service$ O $any$ O O O $IEmbedConfigurationBase$ O $string$ O O O $HTMLIFrameElement$ O $Window$ O O O $Promise$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $boolean$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O O O $Promise<void>$ O $any$ O O O $Promise$ O O O O O O O O $any$ O $boolean$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O O O $Promise<void>$ O O $any$ O $any$ O O O O O O O $Promise$ O $any$ O $any$ O $any$ O O O O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O O O O O O $string$ O $any$ O $any$ O $any$ O O O $string$ O O O $any$ O O O $any$ O $any$ O $any$ O $string$ O O O O O O $any$ O $any$ O $any$ O $string$ O O O O O O O $string$ O O O $boolean$ O $IEmbedSettings$ O $any$ O $any$ O O O $IEmbedSettings$ O O $IEmbedSettings$ O $any$ O $any$ O $any$ O $any$ O $IEmbedSettings$ O $any$ O $any$ O $any$ O $any$ O O O O
import * as service from 's' ; import * as models from 's' ; import * as embed from 's' ; import * as utils from 's' ; import { Defaults } from 's' ; export class Create extends embed . Embed { constructor ( service : service . Service , element , config : embed . IEmbedConfiguration , phasedRender ? , isBootstrap ? ) { super ( service , element , config , undefined , phasedRender , isBootstrap ) ; } getId ( ) { const datasetId = ( this . createConfig && this . createConfig . datasetId ) ? this . createConfig . datasetId : Create . findIdFromEmbedUrl ( this . config . embedUrl ) ; if ( typeof datasetId !== 's' || datasetId . length === 0 ) { throw new Error ( 's' ) ; } return datasetId ; } validate ( config : embed . IEmbedConfigurationBase ) : models . IError [ ] { return models . validateCreateReport ( config ) ; } configChanged ( isBootstrap ) { if ( isBootstrap ) { return ; } const config = < embed . IEmbedConfiguration > this . config ; this . createConfig = { accessToken : config . accessToken , datasetId : config . datasetId || this . getId ( ) , groupId : config . groupId , settings : config . settings , tokenType : config . tokenType , theme : config . theme } } getDefaultEmbedUrlEndpoint ( ) { return "s" ; } isSaved ( ) < boolean > { return utils . isSavedInternal ( this . service . hpm , this . config . uniqueId , this . iframe . contentWindow ) ; } static findIdFromEmbedUrl ( url ) { const datasetIdRegEx = "s" const datasetIdMatch = url . match ( datasetIdRegEx ) ; let datasetId ; if ( datasetIdMatch ) { datasetId = datasetIdMatch [ 0 ] ; } return datasetId ; } }	O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $Service$ O $any$ O $any$ O $HTMLElement$ O $IEmbedConfiguration$ O $any$ O $any$ O $boolean$ $boolean$ O $boolean$ $boolean$ O O O O $Service$ O $HTMLElement$ O $IEmbedConfiguration$ O $undefined$ O $boolean$ O $boolean$ O O O $string$ O O O O $any$ O O O O $any$ O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O O $any$ O O O $string$ O $number$ O O O O O O $ErrorConstructor$ O O O O O O $string$ O O $any[]$ O $IEmbedConfigurationBase$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $IEmbedConfigurationBase$ O O O $void$ O $boolean$ O O O O $boolean$ O O O O O O $IEmbedConfiguration$ O O $any$ O $any$ O O O $IEmbedConfigurationBase$ O O O $any$ O O $string$ O $IEmbedConfiguration$ O $string$ O $string$ O $IEmbedConfiguration$ O $string$ O O O $string$ O O O $string$ O $IEmbedConfiguration$ O $string$ O $IEmbedSettings$ O $IEmbedConfiguration$ O $IEmbedSettings$ O $any$ O $IEmbedConfiguration$ O $any$ O $any$ O $IEmbedConfiguration$ O $any$ O O $string$ O O O O O O O $Promise$ O O O O O O O $any$ O $Promise<boolean>$ O O O $Service$ O $any$ O O O $IEmbedConfigurationBase$ O $string$ O O O $HTMLIFrameElement$ O $Window$ O O O O $string$ O $string$ O O O $RegExp$ O O O $RegExpMatchArray$ O $string$ O $complex$ O $RegExp$ O O O $any$ O O O $RegExpMatchArray$ O O $any$ O $RegExpMatchArray$ O O O O O O $any$ O O O
import * as service from 's' ; import * as embed from 's' ; import * as models from 's' ; import * as wpmp from 's' ; import * as hpm from 's' ; import * as utils from 's' ; import { Defaults } from 's' ; export interface IDashboardNode { iframe : HTMLIFrameElement ; service : service . IService ; config : embed . IEmbedConfigurationBase } export class Dashboard extends embed . Embed implements IDashboardNode { static allowedEvents = [ "s" , "s" ] ; static dashboardIdAttribute = 's' ; static typeAttribute = 's' ; static type = "s" ; constructor ( service : service . Service , element , config : embed . IEmbedConfigurationBase , phasedRender ? , isBootstrap ? ) { super ( service , element , config , undefined , phasedRender , isBootstrap ) ; this . loadPath = "s" ; this . phasedLoadPath = "s" ; Array . prototype . push . apply ( this . allowedEvents , Dashboard . allowedEvents ) ; } static findIdFromEmbedUrl ( url ) { const dashboardIdRegEx = "s" const dashboardIdMatch = url . match ( dashboardIdRegEx ) ; let dashboardId ; if ( dashboardIdMatch ) { dashboardId = dashboardIdMatch [ 0 ] ; } return dashboardId ; } getId ( ) { let config = < embed . IEmbedConfiguration > this . config ; const dashboardId = config . id || this . element . getAttribute ( Dashboard . dashboardIdAttribute ) || Dashboard . findIdFromEmbedUrl ( config . embedUrl ) ; if ( typeof dashboardId !== 's' || dashboardId . length === 0 ) { throw new Error ( `template` ) ; } return dashboardId ; } validate ( baseConfig : embed . IEmbedConfigurationBase ) : models . IError [ ] { const config = baseConfig as embed . IEmbedConfiguration ; let error = models . validateDashboardLoad ( config ) ; return error ? error : this . ValidatePageView ( config . pageView ) ; } configChanged ( isBootstrap ) { if ( isBootstrap ) { return ; } ( < embed . IEmbedConfiguration > this . config ) . id = this . getId ( ) ; } getDefaultEmbedUrlEndpoint ( ) { return "s" ; } private ValidatePageView ( pageView : models . PageView ) : models . IError [ ] { if ( pageView && pageView !== "s" && pageView !== "s" && pageView !== "s" ) { return [ { message : "s" } ] ; } } }	O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O $any$ O O O O O O $any$ O $HTMLIFrameElement$ O $complex$ O $IService$ O $any$ O $any$ O $IEmbedConfigurationBase$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O O $string[]$ O O O O O O O O $string$ O O O O $string$ O O O O $string$ O O O O O $Service$ O $any$ O $any$ O $HTMLElement$ O $IEmbedConfigurationBase$ O $any$ O $any$ O $boolean$ $boolean$ O $boolean$ $boolean$ O O O O $Service$ O $HTMLElement$ O $IEmbedConfigurationBase$ O $undefined$ O $boolean$ O $boolean$ O O O O $string$ O O O O O $string$ O O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O O O $any[]$ O $any$ O $string[]$ O O O O $string$ O $string$ O O O $RegExp$ O O O $RegExpMatchArray$ O $string$ O $complex$ O $RegExp$ O O O $any$ O O O $RegExpMatchArray$ O O $any$ O $RegExpMatchArray$ O O O O O O $any$ O O $string$ O O O O $IEmbedConfiguration$ O O $any$ O $any$ O O O $IEmbedConfigurationBase$ O O $string$ O $IEmbedConfiguration$ O $string$ O O O $HTMLElement$ O $string$ O $any$ O $string$ O O $any$ O $string$ O $IEmbedConfiguration$ O $string$ O O O O O $string$ O O O $string$ O $number$ O O O O O O $ErrorConstructor$ O O O O O O $string$ O O $any[]$ O $IEmbedConfigurationBase$ O $any$ O $any$ O O $any$ O $any$ O O O O $IEmbedConfiguration$ O $IEmbedConfigurationBase$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $IEmbedConfiguration$ O O O $any$ O $any$ O O O $any[]$ O $IEmbedConfiguration$ O $any$ O O O $void$ O $boolean$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O $IEmbedConfigurationBase$ O O $string$ O O O $string$ O O O O $string$ O O O O O O O O $any[]$ O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O O O $any$ O O O O O O O $string$ O O O O O O O O
import * as service from 's' ; import * as models from 's' ; import * as embed from 's' ; import * as utils from 's' ; import { Defaults } from 's' ; export class Tile extends embed . Embed { static type = "s" ; static allowedEvents = [ "s" , "s" ] ; constructor ( service : service . Service , element , baseConfig : embed . IEmbedConfigurationBase , phasedRender ? , isBootstrap ? ) { let config = < embed . IEmbedConfiguration > baseConfig ; super ( service , element , config , undefined , phasedRender , isBootstrap ) ; this . loadPath = "s" ; Array . prototype . push . apply ( this . allowedEvents , Tile . allowedEvents ) ; } getId ( ) { let config = < embed . IEmbedConfiguration > this . config ; const tileId = config . id || Tile . findIdFromEmbedUrl ( this . config . embedUrl ) ; if ( typeof tileId !== 's' || tileId . length === 0 ) { throw new Error ( `template` ) ; } return tileId ; } validate ( config : embed . IEmbedConfigurationBase ) : models . IError [ ] { let embedConfig = < embed . IEmbedConfiguration > config ; return models . validateTileLoad ( embedConfig ) ; } configChanged ( isBootstrap ) { if ( isBootstrap ) { return ; } ( < embed . IEmbedConfiguration > this . config ) . id = this . getId ( ) ; } getDefaultEmbedUrlEndpoint ( ) { return "s" ; } static findIdFromEmbedUrl ( url ) { const tileIdRegEx = "s" const tileIdMatch = url . match ( tileIdRegEx ) ; let tileId ; if ( tileIdMatch ) { tileId = tileIdMatch [ 0 ] ; } return tileId ; } }	O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O $string$ O O O O $string[]$ O O O O O O O O O $Service$ O $any$ O $any$ O $HTMLElement$ O $IEmbedConfigurationBase$ O $any$ O $any$ O $boolean$ $boolean$ O $boolean$ $boolean$ O O O $IEmbedConfiguration$ O O $any$ O $any$ O $IEmbedConfigurationBase$ O O O $Service$ O $HTMLElement$ O $IEmbedConfiguration$ O $undefined$ O $boolean$ O $boolean$ O O O O $string$ O O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O O O $any[]$ O $any$ O $string[]$ O O O $string$ O O O O $IEmbedConfiguration$ O O $any$ O $any$ O O O $IEmbedConfigurationBase$ O O $string$ O $IEmbedConfiguration$ O $string$ O $any$ O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O O $string$ O O O $string$ O $number$ O O O O O O $ErrorConstructor$ O O O O O O $string$ O O $any[]$ O $IEmbedConfigurationBase$ O $any$ O $any$ O O $any$ O $any$ O O O O $IEmbedConfiguration$ O O $any$ O $any$ O $IEmbedConfigurationBase$ O O $any$ O $any$ O $IEmbedConfiguration$ O O O $void$ O $boolean$ O O O O $boolean$ O O O O O O O $any$ O $any$ O O O $IEmbedConfigurationBase$ O O $string$ O O O $string$ O O O O $string$ O O O O O O O O $string$ O $string$ O O O $RegExp$ O O O $RegExpMatchArray$ O $string$ O $complex$ O $RegExp$ O O O $any$ O O O $RegExpMatchArray$ O O $any$ O $RegExpMatchArray$ O O O O O O $any$ O O O
import * as service from 's' ; import * as models from 's' ; import * as embed from 's' ; import * as utils from 's' ; export class Qna extends embed . Embed { static type = "s" ; static allowedEvents = [ "s" , "s" ] ; constructor ( service : service . Service , element , config : embed . IEmbedConfigurationBase , phasedRender ? , isBootstrap ? ) { super ( service , element , config , undefined , phasedRender , isBootstrap ) ; this . loadPath = "s" ; this . phasedLoadPath = "s" ; Array . prototype . push . apply ( this . allowedEvents , Qna . allowedEvents ) ; } getId ( ) { return null ; } setQuestion ( question ) < void > { const qnaData : models . IQnaInterpretInputData = { question : question } ; return this . service . hpm . post < models . IError [ ] > ( 's' , qnaData , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( response => { throw response . body ; } ) ; } configChanged ( isBootstrap ) { } getDefaultEmbedUrlEndpoint ( ) { return "s" ; } validate ( config : embed . IEmbedConfigurationBase ) : models . IError [ ] { return models . validateLoadQnaConfiguration ( config ) ; } }	O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O O $string$ O O O O $string[]$ O O O O O O O O O $Service$ O $any$ O $any$ O $HTMLElement$ O $IEmbedConfigurationBase$ O $any$ O $any$ O $boolean$ $boolean$ O $boolean$ $boolean$ O O O O $Service$ O $HTMLElement$ O $IEmbedConfigurationBase$ O $undefined$ O $boolean$ O $boolean$ O O O O $string$ O O O O O $string$ O O O $ArrayConstructor$ O $any[]$ O $number$ O $any$ O O O $any[]$ O $any$ O $string[]$ O O O $string$ O O O O O O O $Promise$ O $string$ O O O O O O $any$ O $any$ O $any$ O O $string$ O $string$ O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $void$ O $boolean$ O O O $string$ O O O O O O O $any[]$ O $IEmbedConfigurationBase$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O $IEmbedConfigurationBase$ O O O O
import * as service from 's' ; import * as embed from 's' ; import * as models from 's' ; import { Report } from 's' import { Page } from 's' ; export class Visual extends Report { static type = "s" ; static GetPagesNotSupportedError = "s" ; static SetPageNotSupportedError = "s" ; constructor ( service : service . Service , element , baseConfig : embed . IEmbedConfigurationBase , phasedRender ? , isBootstrap ? , iframe ? ) { super ( service , element , baseConfig , phasedRender , isBootstrap , iframe ) ; } load ( baseConfig : embed . IEmbedConfigurationBase , phasedRender ? ) < void > { var config = < embed . IVisualEmbedConfiguration > baseConfig ; if ( ! config . accessToken ) { return ; } if ( typeof config . pageName !== 's' || config . pageName . length === 0 ) { throw new Error ( `template` ) ; } if ( typeof config . visualName !== 's' || config . visualName . length === 0 ) { throw new Error ( `template` ) ; } let width = config . width ? config . width : this . iframe . offsetWidth ; let height = config . height ? config . height : this . iframe . offsetHeight ; const pageSize : models . ICustomPageSize = { type : models . PageSizeType . Custom , width : width , height : height , } ; let pagesLayout : models . PagesLayout = { } ; pagesLayout [ config . pageName ] = { defaultLayout : { displayState : { mode : models . VisualContainerDisplayMode . Hidden } } , visualsLayout : { } } ; pagesLayout [ config . pageName ] . visualsLayout [ config . visualName ] = { displayState : { mode : models . VisualContainerDisplayMode . Visible } , x : 0 , y : 0 , z : 0 , width : pageSize . width , height : pageSize . height } config . settings = config . settings || { } ; config . settings . filterPaneEnabled = false ; config . settings . navContentPaneEnabled = false ; config . settings . layoutType = models . LayoutType . Custom ; config . settings . customLayout = { displayOption : models . DisplayOption . FitToPage , pageSize : pageSize , pagesLayout : pagesLayout } ; return super . load ( config , phasedRender ) ; } getPages ( ) < Page [ ] > { throw Visual . GetPagesNotSupportedError ; } setPage ( pageName ) < void > { throw Visual . SetPageNotSupportedError ; } getFilters ( filtersLevel ? : models . FiltersLevel ) < models . IFilter [ ] > { const url = this . getFiltersLevelUrl ( filtersLevel ) ; return this . service . hpm . get < models . IFilter [ ] > ( url , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( response => response . body , response => { throw response . body ; } ) ; } setFilters ( filters : models . IFilter [ ] , filtersLevel ? : models . FiltersLevel ) < void > { const url = this . getFiltersLevelUrl ( filtersLevel ) ; return this . service . hpm . put < models . IError [ ] > ( url , filters , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( response => { throw response . body ; } ) ; } removeFilters ( filtersLevel ? : models . FiltersLevel ) < void > { return this . setFilters ( [ ] , filtersLevel ) ; } private getFiltersLevelUrl ( filtersLevel : models . FiltersLevel ) { const config = < embed . IVisualEmbedConfiguration > this . config ; switch ( filtersLevel ) { case models . FiltersLevel . Report : return `template` ; case models . FiltersLevel . Page : return `template` ; default : return `template` ; } } }	O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O $any$ O O O O O $any$ O O O O O O $any$ O $any$ O O $string$ O O O O $string$ O O O O $string$ O O O O O $Service$ O $any$ O $any$ O $HTMLElement$ O $IEmbedConfigurationBase$ O $any$ O $any$ O $boolean$ $boolean$ O $boolean$ $boolean$ O $HTMLIFrameElement$ $HTMLIFrameElement$ O O O O $Service$ O $HTMLElement$ O $IEmbedConfigurationBase$ O $boolean$ O $boolean$ O $HTMLIFrameElement$ O O O $Promise$ O $IEmbedConfigurationBase$ O $any$ O $any$ O $boolean$ $boolean$ O O O O O O $IVisualEmbedConfiguration$ O O $any$ O $any$ O $IEmbedConfigurationBase$ O O O O $IVisualEmbedConfiguration$ O $string$ O O O O O O O O $IVisualEmbedConfiguration$ O $string$ O O O $IVisualEmbedConfiguration$ O $string$ O $number$ O O O O O O $ErrorConstructor$ O O O O O O O O $IVisualEmbedConfiguration$ O $string$ O O O $IVisualEmbedConfiguration$ O $string$ O $number$ O O O O O O $ErrorConstructor$ O O O O O O $number$ O $IVisualEmbedConfiguration$ O $number$ O $IVisualEmbedConfiguration$ O $number$ O O O $HTMLIFrameElement$ O $number$ O O $number$ O $IVisualEmbedConfiguration$ O $number$ O $IVisualEmbedConfiguration$ O $number$ O O O $HTMLIFrameElement$ O $number$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $number$ O $number$ O $number$ O $number$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $IVisualEmbedConfiguration$ O $string$ O O O $complex$ O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O O ${}$ O O O O O $any$ O $IVisualEmbedConfiguration$ O $string$ O O $any$ O $IVisualEmbedConfiguration$ O $string$ O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O $number$ O O O $number$ O O O $number$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $IVisualEmbedConfiguration$ O $IEmbedSettings$ O $IVisualEmbedConfiguration$ O $IEmbedSettings$ O O O O $IVisualEmbedConfiguration$ O $IEmbedSettings$ O $any$ O O O $IVisualEmbedConfiguration$ O $IEmbedSettings$ O $any$ O O O $IVisualEmbedConfiguration$ O $IEmbedSettings$ O $any$ O $any$ O $any$ O $any$ O $IVisualEmbedConfiguration$ O $IEmbedSettings$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O O $Promise<void>$ O $IVisualEmbedConfiguration$ O $boolean$ O O O $Promise$ O O O $any$ O O O O O $any$ O $string$ O O $Promise$ O $string$ O O O O O O $any$ O $string$ O O $Promise$ O $any$ O O $any$ O $any$ O O $any$ O $any$ O O O O O $string$ O O O $string$ O $any$ O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O $any[]$ O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O O O O $string$ O O O $string$ O $any$ O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O $string$ O $any[]$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O $any$ O O $any$ O $any$ O O O O O O O O $Promise<void>$ O O O O $any$ O O O O $string$ O $any$ O $any$ O $any$ O O O $IVisualEmbedConfiguration$ O O $any$ O $any$ O O O $IEmbedConfigurationBase$ O O O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O O O O O O O O
import * as embed from 's' ; import { Report } from 's' ; import { Create } from 's' ; import { Dashboard } from 's' ; import { Tile } from 's' ; import { Page } from 's' ; import { Qna } from 's' ; import { Visual } from 's' ; import * as utils from 's' ; import * as wpmp from 's' ; import * as hpm from 's' ; import * as router from 's' ; import * as models from 's' ; export interface IEvent < T > { type : string ; id : string ; name : string ; value : T ; } export interface ICustomEvent < T > extends CustomEvent { detail : T ; } export interface IEventHandler < T > { ( event < T > ) : any ; } export interface IHpmFactory { ( wpmp : wpmp . WindowPostMessageProxy , targetWindow ? , version ? , type ? , origin ? ) : hpm . HttpPostMessage ; } export interface IWpmpFactory { ( name ? , logMessages ? , eventSourceOverrideWindow ? ) : wpmp . WindowPostMessageProxy ; } export interface IRouterFactory { ( wpmp : wpmp . WindowPostMessageProxy ) : router . Router ; } export interface IPowerBiElement extends HTMLElement { powerBiEmbed : embed . Embed ; } export interface IDebugOptions { logMessages ? : boolean ; wpmpName ? : string ; } export interface IServiceConfiguration extends IDebugOptions { autoEmbedOnContentLoaded ? : boolean ; onError ? : ( error ) => any ; version ? : string ; type ? : string ; } export interface IService { hpm : hpm . HttpPostMessage ; } export class Service implements IService { private static components : ( typeof Report | typeof Tile | typeof Dashboard | typeof Qna | typeof Visual ) [ ] = [ Tile , Report , Dashboard , Qna , Visual ] ; private static defaultConfig : IServiceConfiguration = { autoEmbedOnContentLoaded : false , onError : ( ... args ) => console . log ( args [ 0 ] , args . slice ( 0 ) ) } ; accessToken : string ; private config : IServiceConfiguration ; private embeds : embed . Embed [ ] ; hpm : hpm . HttpPostMessage ; wpmp : wpmp . WindowPostMessageProxy ; private router : router . Router ; private uniqueSessionId : string ; constructor ( hpmFactory , wpmpFactory , routerFactory , config = { } ) { this . wpmp = wpmpFactory ( config . wpmpName , config . logMessages ) ; this . hpm = hpmFactory ( this . wpmp , null , config . version , config . type ) ; this . router = routerFactory ( this . wpmp ) ; this . uniqueSessionId = utils . generateUUID ( ) ; this . router . post ( `template` , ( req , res ) => { const event < any > = { type : 's' , id : req . params . uniqueId , name : req . params . eventName , value : req . body } ; this . handleEvent ( event ) ; } ) ; this . router . post ( `template` , ( req , res ) => { const event < any > = { type : 's' , id : req . params . uniqueId , name : req . params . eventName , value : req . body } ; this . handleEvent ( event ) ; } ) ; this . router . post ( `template` , ( req , res ) => { const event < any > = { type : 's' , id : req . params . uniqueId , name : req . params . eventName , value : req . body } ; this . handleEvent ( event ) ; } ) ; this . router . post ( `template` , ( req , res ) => { const event < any > = { type : 's' , id : req . params . uniqueId , name : req . params . eventName , value : req . body } ; this . handleEvent ( event ) ; } ) ; this . router . post ( `template` , ( req , res ) => { const event < any > = { type : 's' , id : req . params . uniqueId , name : req . params . eventName , value : req . body } ; this . handleEvent ( event ) ; } ) ; this . router . post ( `template` , ( req , res ) => { const event < any > = { type : 's' , id : req . params . uniqueId , name : req . params . eventName , value : req . body } ; this . handleEvent ( event ) ; } ) ; this . router . post ( `template` , ( req , res ) => { const event < any > = { type : 's' , id : req . params . uniqueId , name : 's' , value : req . body } ; this . handleEvent ( event ) ; } ) ; this . embeds = [ ] ; this . config = utils . assign ( { } , Service . defaultConfig , config ) ; if ( this . config . autoEmbedOnContentLoaded ) { this . enableAutoEmbed ( ) ; } } createReport ( element , config : embed . IEmbedConfiguration ) : embed . Embed { config . type = 's' ; let powerBiElement = < IPowerBiElement > element ; const component = new Create ( this , powerBiElement , config ) ; powerBiElement . powerBiEmbed = component ; this . addOrOverwriteEmbed ( component , element ) ; return component ; } init ( container ? , config : embed . IEmbedConfiguration = undefined ) : embed . Embed [ ] { container = ( container && container instanceof HTMLElement ) ? container : document . body ; const elements = Array . prototype . slice . call ( container . querySelectorAll ( `template` ) ) ; return elements . map ( element => this . embed ( element , config ) ) ; } embed ( element , config : embed . IEmbedConfigurationBase = { } ) : embed . Embed { return this . embedInternal ( element , config ) ; } load ( element , config : embed . IEmbedConfigurationBase = { } ) : embed . Embed { return this . embedInternal ( element , config , true , false ) ; } bootstrap ( element , config : embed . IBootstrapEmbedConfiguration ) : embed . Embed { return this . embedInternal ( element , config , false , true ) ; } embedInternal ( element , config : embed . IEmbedConfigurationBase = { } , phasedRender ? , isBootstrap ? ) : embed . Embed { let component : embed . Embed ; let powerBiElement = < IPowerBiElement > element ; if ( powerBiElement . powerBiEmbed ) { if ( isBootstrap ) { throw new Error ( `template` ) ; } component = this . embedExisting ( powerBiElement , config , phasedRender ) ; } else { component = this . embedNew ( powerBiElement , config , phasedRender , isBootstrap ) ; } return component ; } getNumberOfComponents ( ) { if ( ! this . embeds ) { return 0 ; } return this . embeds . length ; } getSdkSessionId ( ) { return this . uniqueSessionId ; } private embedNew ( element , config : embed . IEmbedConfigurationBase , phasedRender ? , isBootstrap ? ) : embed . Embed { const componentType = config . type || element . getAttribute ( embed . Embed . typeAttribute ) ; if ( ! componentType ) { throw new Error ( `template` ) ; } config . type = componentType ; const Component = utils . find ( component => componentType === component . type . toLowerCase ( ) , Service . components ) ; if ( ! Component ) { throw new Error ( `template` ) ; } const component = new Component ( this , element , config , phasedRender , isBootstrap ) ; element . powerBiEmbed = component ; this . addOrOverwriteEmbed ( component , element ) ; return component ; } private embedExisting ( element , config : embed . IEmbedConfigurationBase , phasedRender ? ) : embed . Embed { const component = utils . find ( x => x . element === element , this . embeds ) ; if ( ! component ) { throw new Error ( `template` ) ; } if ( config . type && config . type . toLowerCase ( ) === "s" ) { return this . embedNew ( element , config ) ; } if ( typeof config . type === "s" && config . type !== component . config . type ) { if ( config . type === "s" && component . config . type === "s" ) { const report = new Report ( this , element , config , false , false , element . powerBiEmbed . iframe ) ; report . load ( config ) ; element . powerBiEmbed = report ; this . addOrOverwriteEmbed ( component , element ) ; return report ; } throw new Error ( `template` ) ; } component . populateConfig ( config , false ) ; component . load ( component . config , phasedRender ) ; return component ; } enableAutoEmbed ( ) { window . addEventListener ( 's' , ( event ) => this . init ( document . body ) , false ) ; } get ( element ) : embed . Embed { const powerBiElement = < IPowerBiElement > element ; if ( ! powerBiElement . powerBiEmbed ) { throw new Error ( `template` ) ; } return powerBiElement . powerBiEmbed ; } find ( uniqueId ) : embed . Embed { return utils . find ( x => x . config . uniqueId === uniqueId , this . embeds ) ; } addOrOverwriteEmbed ( component : embed . Embed , element ) { this . embeds = this . embeds . filter ( function ( embed ) { return embed . element . id !== element . id ; } ) ; this . embeds . push ( component ) ; } reset ( element ) { const powerBiElement = < IPowerBiElement > element ; if ( ! powerBiElement . powerBiEmbed ) { return ; } let embedElement = powerBiElement . powerBiEmbed ; if ( embedElement . frontLoadHandler ) { embedElement . element . removeEventListener ( 's' , embedElement . frontLoadHandler , false ) ; } utils . remove ( x => x === powerBiElement . powerBiEmbed , this . embeds ) ; delete powerBiElement . powerBiEmbed ; const iframe = element . querySelector ( 's' ) ; if ( iframe ) { if ( iframe . remove !== undefined ) { iframe . remove ( ) ; } else { iframe . parentElement . removeChild ( iframe ) ; } } } handleTileEvents ( event < any > ) { if ( event . type === 's' ) { this . handleEvent ( event ) ; } } private handleEvent ( event < any > ) { let embed = utils . find ( embed => { return ( embed . config . uniqueId === event . id ) ; } , this . embeds ) ; if ( embed ) { const value = event . value ; if ( event . name === 's' ) { const pageKey = 's' ; const page : models . IPage = value [ pageKey ] ; if ( ! page ) { throw new Error ( `template` ) ; } value [ pageKey ] = new Page ( embed , page . name , page . displayName , true ) ; } utils . raiseCustomEvent ( embed . element , event . name , value ) ; } } preload ( config : embed . IEmbedConfigurationBase , element ? ) { var iframeContent = document . createElement ( "s" ) ; iframeContent . setAttribute ( "s" , "s" ) ; iframeContent . setAttribute ( "s" , config . embedUrl ) ; iframeContent . setAttribute ( "s" , "s" ) ; iframeContent . setAttribute ( "s" , "s" ) ; var node = element ; if ( ! node ) { node = document . getElementsByTagName ( "s" ) [ 0 ] ; } node . appendChild ( iframeContent ) ; iframeContent . onload = ( ) => { utils . raiseCustomEvent ( iframeContent , "s" , { } ) ; } ; return iframeContent ; } }	O O O $any$ O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O $string$ O O O $T$ O $any$ O O O O $any$ O $any$ O O $complex$ O $T$ O $any$ O O O O $any$ O $any$ O O O $ICustomEvent$ O $any$ O O O O O O O O $any$ O O $any$ O $any$ O $any$ O $Window$ $Window$ O $string$ $string$ O $string$ $string$ O $string$ $string$ O O $any$ O $any$ O O O O $any$ O O $string$ $string$ O $boolean$ $boolean$ O $Window$ $Window$ O O $any$ O $any$ O O O O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O $any$ O $complex$ O $Embed$ O $any$ O $any$ O O O O $any$ O $boolean$ O O O O $string$ O O O O O O O $any$ O $any$ O $boolean$ O O O O $any$ O O O $any$ O O O O $string$ O O O O $string$ O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $complex$ O O O $any$ O O $any$ O O $any$ O O $any$ O O $any$ O O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $IServiceConfiguration$ O $any$ O O $false$ O O O $void$ O O O $[any]$ O O $Console$ O $void$ O $[any]$ O O O O $[any]$ O $any[]$ O O O O O O $string$ O O O O $IServiceConfiguration$ O $any$ O O $Embed[]$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $string$ O O O O O $IHpmFactory$ O $IWpmpFactory$ O $IRouterFactory$ O $IServiceConfiguration$ O O O O O O O $any$ O $IWpmpFactory$ O $IServiceConfiguration$ O $string$ O $IServiceConfiguration$ O $boolean$ O O O O $any$ O $IHpmFactory$ O O O $any$ O O O $IServiceConfiguration$ O $string$ O $IServiceConfiguration$ O $string$ O O O O $any$ O $IRouterFactory$ O O O $any$ O O O O $string$ O $any$ O $string$ O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $IEvent$ O O O O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $void$ O $IEvent<any>$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $IEvent$ O O O O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $void$ O $IEvent<any>$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $IEvent$ O O O O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $void$ O $IEvent<any>$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $IEvent$ O O O O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $void$ O $IEvent<any>$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $IEvent$ O O O O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $void$ O $IEvent<any>$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $IEvent$ O O O O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O O $void$ O $IEvent<any>$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $IEvent$ O O O O O $string$ O O O $any$ O $any$ O $any$ O $any$ O $string$ O O O $any$ O $any$ O $any$ O O O O $void$ O $IEvent<any>$ O O O O O O O $Embed[]$ O O O O O O $IServiceConfiguration$ O $any$ O $any$ O O O O $any$ O $IServiceConfiguration$ O $IServiceConfiguration$ O O O O O O $IServiceConfiguration$ O $boolean$ O O O O $void$ O O O O O $Embed$ O $HTMLElement$ O $IEmbedConfiguration$ O $any$ O $any$ O O $any$ O $any$ O $IEmbedConfiguration$ O $string$ O O O O $IPowerBiElement$ O O $any$ O $HTMLElement$ O O $Create$ O O $any$ O O O $IPowerBiElement$ O $IEmbedConfiguration$ O O $IPowerBiElement$ O $Embed$ O $Create$ O O O $void$ O $Create$ O $HTMLElement$ O O O $Create$ O O $Embed[]$ O $HTMLElement$ $HTMLElement$ O $IEmbedConfiguration$ O $any$ O $any$ O $undefined$ O O $any$ O $any$ O O O $HTMLElement$ O O $HTMLElement$ O $HTMLElement$ O $complex$ O O $HTMLElement$ O $Document$ O $HTMLElement$ O O $any$ O $ArrayConstructor$ O $any[]$ O $any[]$ O $any$ O $HTMLElement$ O O O O O O O O $any$ O $any$ O $any$ O O O $Embed$ O $any$ O $IEmbedConfiguration$ O O O O $Embed$ O $HTMLElement$ O $IEmbedConfigurationBase$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O $Embed$ O $HTMLElement$ O $IEmbedConfigurationBase$ O O O $Embed$ O $HTMLElement$ O $IEmbedConfigurationBase$ O $any$ O $any$ O O O O O $any$ O $any$ O O O O $Embed$ O $HTMLElement$ O $IEmbedConfigurationBase$ O O O O O O O $Embed$ O $HTMLElement$ O $IBootstrapEmbedConfiguration$ O $any$ O $any$ O O $any$ O $any$ O O O O $Embed$ O $HTMLElement$ O $IBootstrapEmbedConfiguration$ O O O O O O O $Embed$ O $HTMLElement$ O $IEmbedConfigurationBase$ O $any$ O $any$ O O O O $boolean$ $boolean$ O $boolean$ $boolean$ O O $any$ O $any$ O O $Embed$ O $any$ O $any$ O O $IPowerBiElement$ O O $any$ O $HTMLElement$ O O O $IPowerBiElement$ O $Embed$ O O O O $boolean$ O O O O $ErrorConstructor$ O O O O O $Embed$ O O O $Embed$ O $IPowerBiElement$ O $IEmbedConfigurationBase$ O $boolean$ O O O O O $Embed$ O O O $Embed$ O $IPowerBiElement$ O $IEmbedConfigurationBase$ O $boolean$ O $boolean$ O O O O $Embed$ O O $number$ O O O O O O O O $Embed[]$ O O O O O O O O O $Embed[]$ O $number$ O O $string$ O O O O O O $string$ O O O $Embed$ O $IPowerBiElement$ O $IEmbedConfigurationBase$ O $any$ O $any$ O $boolean$ $boolean$ O $boolean$ $boolean$ O O $any$ O $any$ O O $string$ O $IEmbedConfigurationBase$ O $string$ O $IPowerBiElement$ O $string$ O $any$ O $any$ O $string$ O O O O O $string$ O O O O $ErrorConstructor$ O O O O O $IEmbedConfigurationBase$ O $string$ O $string$ O O $any$ O $any$ O $T$ O $any$ O $string$ O $any$ O $string$ O $string$ O O O $any$ O $complex$ O O O O O $any$ O O O O $ErrorConstructor$ O O O O O O $complex$ O O $any$ O O O $IPowerBiElement$ O $IEmbedConfigurationBase$ O $boolean$ O $boolean$ O O $IPowerBiElement$ O $Embed$ O $complex$ O O O $void$ O $complex$ O $IPowerBiElement$ O O O $complex$ O O O $Embed$ O $IPowerBiElement$ O $IEmbedConfigurationBase$ O $any$ O $any$ O $boolean$ $boolean$ O O $any$ O $any$ O O $Embed$ O $any$ O $T$ O $Embed$ O $Embed$ O $HTMLElement$ O $IPowerBiElement$ O O O $Embed[]$ O O O O O $Embed$ O O O O $ErrorConstructor$ O O O O O O O $IEmbedConfigurationBase$ O $string$ O $IEmbedConfigurationBase$ O $string$ O $string$ O O O O O O O O O $Embed$ O $IPowerBiElement$ O $IEmbedConfigurationBase$ O O O O O O $IEmbedConfigurationBase$ O $string$ O O O $IEmbedConfigurationBase$ O $string$ O $Embed$ O $IEmbedConfigurationBase$ O $string$ O O O O $IEmbedConfigurationBase$ O $string$ O O O $Embed$ O $IEmbedConfigurationBase$ O $string$ O O O O O $Report$ O O $any$ O O O $IPowerBiElement$ O $IEmbedConfigurationBase$ O O O O O $IPowerBiElement$ O $Embed$ O $HTMLIFrameElement$ O O $Report$ O $Promise<void>$ O $IEmbedConfigurationBase$ O O $IPowerBiElement$ O $Embed$ O $Report$ O O O $void$ O $Embed$ O $IPowerBiElement$ O O O $Report$ O O O O $ErrorConstructor$ O O O O O $Embed$ O $void$ O $IEmbedConfigurationBase$ O O O O $Embed$ O $Promise<void>$ O $Embed$ O $IEmbedConfigurationBase$ O $boolean$ O O O $Embed$ O O $void$ O O O $complex$ O O O O O O $Event$ O O O O $Embed[]$ O $Document$ O $HTMLElement$ O O O O O O $Embed$ O $HTMLElement$ O O $any$ O $any$ O O $IPowerBiElement$ O O $any$ O $HTMLElement$ O O O O $IPowerBiElement$ O $Embed$ O O O O $ErrorConstructor$ O O O O O O $IPowerBiElement$ O $Embed$ O O $Embed$ O $string$ O O $any$ O $any$ O O $any$ O $T$ O $Embed$ O $Embed$ O $IEmbedConfigurationBase$ O $string$ O $string$ O O O $Embed[]$ O O O $void$ O $Embed$ O $any$ O $any$ O $HTMLElement$ O O O O $Embed[]$ O O O $Embed[]$ O $complex$ O O O $Embed$ O O O $Embed$ O $HTMLElement$ O $string$ O $HTMLElement$ O $string$ O O O O O O $Embed[]$ O $number$ O $Embed$ O O O $void$ O $HTMLElement$ O O O $IPowerBiElement$ O O $any$ O $HTMLElement$ O O O O $IPowerBiElement$ O $Embed$ O O O O O O $Embed$ O $IPowerBiElement$ O $Embed$ O O O $Embed$ O $any$ O O $Embed$ O $HTMLElement$ O O O O O $Embed$ O $any$ O O O O O $any$ O $void$ O $Embed$ O $Embed$ O $IPowerBiElement$ O $Embed$ O O O $Embed[]$ O O O $IPowerBiElement$ O $Embed$ O O $HTMLIFrameElement$ O $HTMLElement$ O O O O O O O O $HTMLIFrameElement$ O O O O $HTMLIFrameElement$ O $void$ O $undefined$ O O $HTMLIFrameElement$ O $void$ O O O O O O $HTMLIFrameElement$ O $HTMLElement$ O $T$ O $HTMLIFrameElement$ O O O O O $void$ O $IEvent$ O O O O O O O $IEvent<any>$ O $string$ O O O O O O $void$ O $IEvent<any>$ O O O O O $void$ O $IEvent$ O O O O O O $Embed$ O $any$ O $T$ O $Embed$ O O O O $Embed$ O $IEmbedConfigurationBase$ O $string$ O $IEvent<any>$ O $string$ O O O O O O $Embed[]$ O O O O $Embed$ O O O $any$ O $IEvent<any>$ O $any$ O O O $IEvent<any>$ O $string$ O O O O O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O O O O $ErrorConstructor$ O O O O O $any$ O O O O O $any$ O $Embed$ O $any$ O $any$ O $any$ O $any$ O O O O O $any$ O $void$ O $Embed$ O $HTMLElement$ O $IEvent<any>$ O $string$ O $any$ O O O O $HTMLIFrameElement$ O $IEmbedConfigurationBase$ O $any$ O $any$ O $HTMLElement$ $HTMLElement$ O O O $HTMLIFrameElement$ O $Document$ O O O O O O $HTMLIFrameElement$ O $void$ O O O O O O $HTMLIFrameElement$ O $void$ O O O $IEmbedConfigurationBase$ O $string$ O O $HTMLIFrameElement$ O $void$ O O O O O O $HTMLIFrameElement$ O $void$ O O O O O O O $HTMLElement$ O $HTMLElement$ O O O O $HTMLElement$ O O $HTMLElement$ O $Document$ O O O O O O O O O O $HTMLElement$ O $T$ O $HTMLIFrameElement$ O O $HTMLIFrameElement$ O $any$ O O O O O $any$ O $void$ O $HTMLIFrameElement$ O O O O O O O O O O $HTMLIFrameElement$ O O O
import * as service from 's' ; import * as embed from 's' ; import * as models from 's' ; import * as wpmp from 's' ; import * as hpm from 's' ; import * as utils from 's' ; import * as errors from 's' ; import { IPageNode , Page } from 's' ; import { Defaults } from 's' ; import { IReportLoadConfiguration } from 's' ; export interface IBookmarksManager { getBookmarks ( ) : Promise < models . IReportBookmark [ ] > ; apply ( bookmarkName ) : Promise < void > ; play ( playMode : models . BookmarksPlayMode ) : Promise < void > ; capture ( ) : Promise < models . IReportBookmark > ; applyState ( state ) : Promise < void > ; } export class BookmarksManager implements IBookmarksManager { constructor ( private service : service . Service , private config : embed . IEmbedConfigurationBase , private iframe ? ) { } getBookmarks ( ) < models . IReportBookmark [ ] > { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . service . hpm . get < models . IReportBookmark [ ] > ( `template` , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( response => response . body , response => { throw response . body ; } ) ; } apply ( bookmarkName ) < void > { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } var request : models . IApplyBookmarkByNameRequest = { name : bookmarkName } ; return this . service . hpm . post < models . IError [ ] > ( `template` , request , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( response => { throw response . body ; } ) ; } play ( playMode : models . BookmarksPlayMode ) < void > { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } var playBookmarkRequest : models . IPlayBookmarkRequest = { playMode : playMode } ; return this . service . hpm . post < models . IError [ ] > ( `template` , playBookmarkRequest , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( response => { throw response . body ; } ) ; } capture ( ) < models . IReportBookmark > { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } return this . service . hpm . post < models . IReportBookmark > ( `template` , null , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . then ( response => response . body , response => { throw response . body ; } ) ; } applyState ( state ) < void > { if ( utils . isRDLEmbed ( this . config . embedUrl ) ) { return Promise . reject ( errors . APINotSupportedForRDLError ) ; } var request : models . IApplyBookmarkStateRequest = { state : state } ; return this . service . hpm . post < models . IError [ ] > ( `template` , request , { uid : this . config . uniqueId } , this . iframe . contentWindow ) . catch ( response => { throw response . body ; } ) ; } }	O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O $Promise<any[]>$ O O O $PromiseConstructor$ O $any$ O $any$ O O O O $Promise<void>$ O $string$ O O $PromiseConstructor$ O O O O $Promise<void>$ O $any$ O $any$ O $any$ O O $PromiseConstructor$ O O O O $Promise<any>$ O O O $PromiseConstructor$ O $any$ O $any$ O O $Promise<void>$ O $string$ O O $PromiseConstructor$ O O O O O O O $any$ O $any$ O O O O $Service$ O $any$ O $any$ O O $IEmbedConfigurationBase$ O $any$ O $any$ O O $HTMLIFrameElement$ $HTMLIFrameElement$ O O O $Promise$ O O O $any$ O $any$ O O O O O O $any$ O $boolean$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O $string$ O O O O O O O $any$ O $boolean$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O $any$ O $any$ O $any$ O O $string$ O $string$ O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $boolean$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O O O $any$ O $any$ O O O O $any$ O $boolean$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O O O O O $Promise$ O $string$ O O O O O O O $any$ O $boolean$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $PromiseConstructor$ O $Promise<T>$ O $any$ O $string$ O O O O $any$ O $any$ O $any$ O O $string$ O $string$ O O O O O $Service$ O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O $string$ O O O $IEmbedConfigurationBase$ O $string$ O O O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O O $any$ O $any$ O O O O O O
import { IHpmFactory , IWpmpFactory , IRouterFactory } from 's' ; import config from 's' ; import * as wpmp from 's' ; import * as hpm from 's' ; import * as router from 's' ; export { IHpmFactory , IWpmpFactory , IRouterFactory } ; export const hpmFactory = ( wpmp , defaultTargetWindow , sdkVersion = config . version , sdkType = config . type ) => { return new hpm . HttpPostMessage ( wpmp , { 's' : sdkType , 's' : sdkVersion } , defaultTargetWindow ) ; } ; export const wpmpFactory = ( name ? , logMessages ? , eventSourceOverrideWindow ? ) => { return new wpmp . WindowPostMessageProxy ( { processTrackingProperties : { addTrackingProperties : hpm . HttpPostMessage . addTrackingProperties , getTrackingProperties : hpm . HttpPostMessage . getTrackingProperties , } , isErrorMessage : hpm . HttpPostMessage . isErrorMessage , suppressWarnings : true , name , logMessages , eventSourceOverrideWindow } ) ; } ; export const routerFactory = ( wpmp ) => { return new router . Router ( wpmp ) ; } ;	O O $any$ O $any$ O $any$ O O O O O $complex$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O $any$ O O O O $IHpmFactory$ O O $any$ O $Window$ O $string$ O $complex$ O $string$ O $string$ O $complex$ O $string$ O O O O O $any$ O $any$ O $any$ O O O O $string$ O O O $string$ O O $Window$ O O O O O O $IWpmpFactory$ O O $string$ $string$ O $boolean$ $boolean$ O $Window$ $Window$ O O O O O $any$ O $any$ O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $boolean$ O O O $string$ O $boolean$ O $Window$ O O O O O O O $IRouterFactory$ O O $any$ O O O O O $any$ O $any$ O $any$ O O O O
import * as service from 's' ; import * as factories from 's' ; import * as models from 's' ; import { IFilterable } from 's' ; export { IFilterable , service , factories , models } ; export { Report } from 's' ; export { Dashboard } from 's' ; export { Tile } from 's' ; export { IEmbedConfiguration , Embed , ILocaleSettings , IEmbedSettings } from 's' ; export { Page } from 's' ; export { Qna } from 's' ; export { Visual } from 's' ; export { VisualDescriptor } from 's' ; declare var powerbi : service . Service ; declare global { interface Window { powerbi : service . Service ; } } var powerbi = new service . Service ( factories . hpmFactory , factories . wpmpFactory , factories . routerFactory ) ; window . powerbi = powerbi ;	O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $Service$ O $any$ O $any$ O O $any$ O O $complex$ O $Service$ O $any$ O $any$ O O O O $Service$ O O $any$ O $any$ O $any$ O $IHpmFactory$ O $any$ O $IWpmpFactory$ O $any$ O $IRouterFactory$ O O $complex$ O $Service$ O $Service$ O
import * as models from 's' ; export interface IApp { dashboardLoad ( config : models . IDashboardLoadConfiguration ) : Promise < void > ; validateDashboardLoad ( config : models . IDashboardLoadConfiguration ) : Promise < models . IError [ ] > ; reportLoad ( config : models . IReportLoadConfiguration ) : Promise < void > ; validateReportLoad ( config : models . IReportLoadConfiguration ) : Promise < models . IError [ ] > ; render ( ) : Promise < void > ; updateSettings ( settings : models . ISettings ) : Promise < void > ; validateSettings ( settigns : models . ISettings ) : Promise < models . IError [ ] > ; getPages ( ) : Promise < models . IPage > ; setPage ( pageName ) : Promise < void > ; validatePage ( page : models . IPage ) : Promise < models . IError [ ] > ; validateVisual ( page : models . IPage , visual : models . IVisual ) : Promise < models . IError [ ] > ; getFilters ( ) : Promise < models . IFilter [ ] > ; setFilters ( filters : models . IFilter [ ] ) : Promise < void > ; validateFilter ( filter : models . IFilter ) : Promise < models . IError [ ] > ; print ( ) : Promise < void > ; refreshData ( ) : Promise < void > ; exportData ( ) : Promise < void > ; validateCreateReport ( config : models . IReportCreateConfiguration ) : Promise < models . IError [ ] > ; switchMode ( ) : Promise < void > ; save ( ) : Promise < void > ; saveAs ( saveAsParameters : models . ISaveAsParameters ) : Promise < void > ; setAccessToken ( accessToken ) : Promise < void > ; } export const mockAppSpyObj = { dashboardLoad : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , validateDashboardLoad : jasmine . createSpy ( "s" ) . and . callFake ( models . validateDashboardLoad ) , reportLoad : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , validateReportLoad : jasmine . createSpy ( "s" ) . and . callFake ( models . validateReportLoad ) , render : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , updateSettings : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , validateSettings : jasmine . createSpy ( "s" ) . and . callFake ( models . validateSettings ) , getPages : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , setPage : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , validatePage : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , validateVisual : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , getFilters : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , setFilters : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , validateFilter : jasmine . createSpy ( "s" ) . and . callFake ( models . validateFilter ) , print : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , refreshData : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , exportData : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , validateCreateReport : jasmine . createSpy ( "s" ) . and . callFake ( models . validateCreateReport ) , switchMode : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , save : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , saveAs : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , setAccessToken : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , reset ( ) { mockAppSpyObj . dashboardLoad . calls . reset ( ) ; mockAppSpyObj . validateDashboardLoad . calls . reset ( ) ; mockAppSpyObj . reportLoad . calls . reset ( ) ; mockAppSpyObj . validateReportLoad . calls . reset ( ) ; mockAppSpyObj . updateSettings . calls . reset ( ) ; mockAppSpyObj . validateSettings . calls . reset ( ) ; mockAppSpyObj . getPages . calls . reset ( ) ; mockAppSpyObj . setPage . calls . reset ( ) ; mockAppSpyObj . validatePage . calls . reset ( ) ; mockAppSpyObj . validateVisual . calls . reset ( ) ; mockAppSpyObj . getFilters . calls . reset ( ) ; mockAppSpyObj . setFilters . calls . reset ( ) ; mockAppSpyObj . validateFilter . calls . reset ( ) ; mockAppSpyObj . print . calls . reset ( ) ; mockAppSpyObj . refreshData . calls . reset ( ) ; mockAppSpyObj . exportData . calls . reset ( ) ; mockAppSpyObj . validateCreateReport . calls . reset ( ) ; mockAppSpyObj . switchMode . calls . reset ( ) ; mockAppSpyObj . save . calls . reset ( ) ; mockAppSpyObj . saveAs . calls . reset ( ) ; mockAppSpyObj . setAccessToken . calls . reset ( ) ; } } ; export const mockApp = mockAppSpyObj ;	O O O $any$ O O O O O $any$ O $Promise<void>$ O $any$ O $any$ O $any$ O O $PromiseConstructor$ O O O O $Promise<any[]>$ O $any$ O $any$ O $any$ O O $PromiseConstructor$ O $any$ O $any$ O O O O $Promise<void>$ O $any$ O $any$ O $any$ O O $PromiseConstructor$ O O O O $Promise<any[]>$ O $any$ O $any$ O $any$ O O $PromiseConstructor$ O $any$ O $any$ O O O O $Promise<void>$ O O O $PromiseConstructor$ O O O O $Promise<void>$ O $any$ O $any$ O $any$ O O $PromiseConstructor$ O O O O $Promise<any[]>$ O $any$ O $any$ O $any$ O O $PromiseConstructor$ O $any$ O $any$ O O O O $Promise<any>$ O O O $PromiseConstructor$ O $any$ O $any$ O O $Promise<void>$ O $string$ O O $PromiseConstructor$ O O O O $Promise<any[]>$ O $any$ O $any$ O $any$ O O $PromiseConstructor$ O $any$ O $any$ O O O O $Promise<any[]>$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $PromiseConstructor$ O $any$ O $any$ O O O O $Promise<any[]>$ O O O $PromiseConstructor$ O $any$ O $any$ O O O O $Promise<void>$ O $any[]$ O $any$ O $any$ O O O O $PromiseConstructor$ O O O O $Promise<any[]>$ O $any$ O $any$ O $any$ O O $PromiseConstructor$ O $any$ O $any$ O O O O $Promise<void>$ O O O $PromiseConstructor$ O O O O $Promise<void>$ O O O $PromiseConstructor$ O O O O $Promise<void>$ O O O $PromiseConstructor$ O O O O $Promise<any[]>$ O $any$ O $any$ O $any$ O O $PromiseConstructor$ O $any$ O $any$ O O O O $Promise<void>$ O O O $PromiseConstructor$ O O O O $Promise<void>$ O O O $PromiseConstructor$ O O O O $Promise<void>$ O $any$ O $any$ O $any$ O O $PromiseConstructor$ O O O O $Promise<void>$ O $string$ O O $PromiseConstructor$ O O O O O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $void$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O O O O $IApp$ O O O
import * as Wpmp from 's' ; import * as Hpm from 's' ; import * as Router from 's' ; import * as models from 's' ; import { mockAppSpyObj , mockApp } from 's' ; export const spyApp = mockAppSpyObj ; export function setupEmbedMockApp ( iframeContentWindow , parentWindow , logMessages , name = 's' ) : Hpm . HttpPostMessage { const parent = parentWindow || iframeContentWindow . parent ; const wpmp = new Wpmp . WindowPostMessageProxy ( { processTrackingProperties : { addTrackingProperties : Hpm . HttpPostMessage . addTrackingProperties , getTrackingProperties : Hpm . HttpPostMessage . getTrackingProperties , } , isErrorMessage : Hpm . HttpPostMessage . isErrorMessage , receiveWindow : iframeContentWindow , name , logMessages } ) ; const hpm = new Hpm . HttpPostMessage ( wpmp , { 's' : 's' , 's' : 's' } , parent ) ; const router = new Router . Router ( wpmp ) ; const app = mockApp ; function notFoundHandler ( req , res ) { res . send ( 0 , `template` ) ; } ; router . get ( 's' , notFoundHandler ) ; router . post ( 's' , notFoundHandler ) ; router . patch ( 's' , notFoundHandler ) ; router . put ( 's' , notFoundHandler ) ; router . delete ( 's' , notFoundHandler ) ; router . post ( 's' , ( req , res ) => { const uniqueId = req . headers [ 's' ] ; const loadConfig = req . body ; return app . validateDashboardLoad ( loadConfig ) . then ( ( ) => { app . dashboardLoad ( loadConfig ) . then ( ( ) => { const initiator = "s" ; hpm . post ( `template` , { initiator } ) ; } , error => { hpm . post ( `template` , error ) ; } ) ; res . send ( 0 ) ; } , error => { res . send ( 0 , error ) ; } ) ; } ) ; router . post ( 's' , ( req , res ) => { const uniqueId = req . headers [ 's' ] ; const createConfig = req . body ; return app . validateCreateReport ( createConfig ) . then ( ( ) => { app . reportLoad ( createConfig ) . then ( ( ) => { const initiator = "s" ; hpm . post ( `template` , { initiator } ) ; } , error => { hpm . post ( `template` , error ) ; } ) ; res . send ( 0 ) ; } , error => { res . send ( 0 , error ) ; } ) ; } ) ; router . post ( 's' , ( req , res ) => { const uniqueId = req . headers [ 's' ] ; const loadConfig = req . body ; return app . validateReportLoad ( loadConfig ) . then ( ( ) => { app . reportLoad ( loadConfig ) . then ( ( ) => { const initiator = "s" ; hpm . post ( `template` , { initiator } ) ; } , error => { hpm . post ( `template` , error ) ; } ) ; res . send ( 0 ) ; } , error => { res . send ( 0 , error ) ; } ) ; } ) ; router . post ( 's' , ( req , res ) => { const uniqueId = req . headers [ 's' ] ; const loadConfig = req . body ; return app . validateReportLoad ( loadConfig ) . then ( ( ) => { app . reportLoad ( loadConfig ) . then ( ( ) => { const initiator = "s" ; hpm . post ( `template` , { initiator } ) ; } , error => { hpm . post ( `template` , error ) ; } ) ; res . send ( 0 ) ; } , error => { res . send ( 0 , error ) ; } ) ; } ) ; router . post ( 's' , ( req , res ) => { app . render ( ) ; res . send ( 0 ) ; } ) ; router . get ( 's' , ( req , res ) => { return app . getPages ( ) . then ( pages => { res . send ( 0 , pages ) ; } , error => { res . send ( 0 , error ) ; } ) ; } ) ; router . put ( 's' , ( req , res ) => { const uniqueId = req . headers [ 's' ] ; const page = req . body ; return app . validatePage ( page ) . then ( ( ) => { app . setPage ( page ) . then ( ( ) => { const initiator = "s" ; hpm . post ( `template` , { initiator , newPage : page } ) ; } , error => { hpm . post ( `template` , error ) ; } ) ; res . send ( 0 ) ; } , errors => { res . send ( 0 , errors ) ; } ) ; } ) ; router . get ( 's' , ( req , res ) => { return app . getFilters ( ) . then ( filters => { res . send ( 0 , filters ) ; } , error => { res . send ( 0 , error ) ; } ) ; } ) ; router . put ( 's' , ( req , res ) => { const uniqueId = req . headers [ 's' ] ; const filters = req . body ; return Promise . all ( filters . map ( filter => app . validateFilter ( filter ) ) ) . then ( ( ) => { app . setFilters ( filters ) . then ( filter => { const initiator = "s" ; hpm . post ( `template` , { initiator , filter } ) ; } , error => { hpm . post ( `template` , error ) ; } ) ; res . send ( 0 ) ; } , error => { res . send ( 0 , error ) ; } ) ; } ) ; router . get ( 's' , ( req , res ) => { const page = { name : req . params . pageName , displayName : null } ; return app . validatePage ( page ) . then ( ( ) => { return app . getFilters ( ) . then ( filters => { res . send ( 0 , filters ) ; } , error => { res . send ( 0 , error ) ; } ) ; } , errors => { res . send ( 0 , errors ) ; } ) ; } ) ; router . put ( 's' , ( req , res ) => { const pageName = req . params . pageName ; const uniqueId = req . headers [ 's' ] ; const filters = req . body ; const page : models . IPage = { name : pageName , displayName : null } ; return app . validatePage ( page ) . then ( ( ) => Promise . all ( filters . map ( filter => app . validateFilter ( filter ) ) ) ) . then ( ( ) => { app . setFilters ( filters ) . then ( filter => { const initiator = "s" ; hpm . post ( `template` , { initiator , filter } ) ; } , error => { hpm . post ( `template` , error ) ; } ) ; res . send ( 0 ) ; } , errors => { res . send ( 0 , errors ) ; } ) ; } ) ; router . get ( 's' , ( req , res ) => { const page = { name : req . params . pageName , displayName : null } ; const visual : models . IVisual = { name : req . params . visualName , title : 's' , type : 's' , layout : { } , } ; return app . validateVisual ( page , visual ) . then ( ( ) => { return app . getFilters ( ) . then ( filters => { res . send ( 0 , filters ) ; } , error => { res . send ( 0 , error ) ; } ) ; } , errors => { res . send ( 0 , errors ) ; } ) ; } ) ; router . put ( 's' , ( req , res ) => { const pageName = req . params . pageName ; const visualName = req . params . visualName ; const uniqueId = req . headers [ 's' ] ; const filters = req . body ; const page : models . IPage = { name : pageName , displayName : null } ; const visual : models . IVisual = { name : visualName , title : 's' , type : 's' , layout : { } , } ; return app . validateVisual ( page , visual ) . then ( ( ) => Promise . all ( filters . map ( filter => app . validateFilter ( filter ) ) ) ) . then ( ( ) => { app . setFilters ( filters ) . then ( filter => { const initiator = "s" ; hpm . post ( `template` , { initiator , filter } ) ; } , error => { hpm . post ( `template` , error ) ; } ) ; res . send ( 0 ) ; } , errors => { res . send ( 0 , errors ) ; } ) ; } ) ; router . patch ( 's' , ( req , res ) => { const uniqueId = req . headers [ 's' ] ; const settings = req . body ; return app . validateSettings ( settings ) . then ( ( ) => { app . updateSettings ( settings ) . then ( updatedSettings => { const initiator = "s" ; hpm . post ( `template` , { initiator , settings : updatedSettings } ) ; } , error => { hpm . post ( `template` , error ) ; } ) ; res . send ( 0 ) ; } , errors => { res . send ( 0 , errors ) ; } ) ; } ) ; router . get ( 's' , ( req , res ) => { return app . exportData ( ) . then ( data => { res . send ( 0 , data ) ; } ) ; } ) ; router . post ( 's' , ( req , res ) => { app . refreshData ( ) ; res . send ( 0 ) ; } ) ; router . post ( 's' , ( req , res ) => { app . print ( ) ; res . send ( 0 ) ; } ) ; router . post ( 's' , ( req , res ) => { app . switchMode ( ) ; res . send ( 0 ) ; } ) ; router . post ( 's' , ( req , res ) => { app . save ( ) ; res . send ( 0 ) ; } ) ; router . post ( 's' , ( req , res ) => { const settings = req . body ; app . saveAs ( settings ) ; res . send ( 0 ) ; } ) ; router . post ( 's' , ( req , res ) => { const settings = req . body ; app . setAccessToken ( settings ) ; res . send ( 0 ) ; } ) ; return hpm ; }	O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O O $IApp$ O O O O O O O O O O O O $any$ O $Window$ O $Window$ O $boolean$ O $string$ O O O O $any$ O $any$ O O $Window$ O $Window$ O $Window$ O $Window$ O O $any$ O O $any$ O $any$ O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O $any$ O $Window$ O $Window$ O $string$ O $boolean$ O O O O $any$ O O $any$ O $any$ O $any$ O O O O O O O O O O O $Window$ O O O $any$ O O $any$ O $any$ O $any$ O O O $IApp$ O $IApp$ O O $void$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O $void$ O O $any$ O $any$ O O O $void$ O O $any$ O $any$ O O O $void$ O O $any$ O $any$ O O O $void$ O O $any$ O $any$ O O O $void$ O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O $IApp$ O $Promise<any[]>$ O $any$ O O O O O O O O $IApp$ O $Promise<void>$ O $any$ O O O O O O O O O O O O O $any$ O $any$ O O O O $string$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O $IApp$ O $Promise<any[]>$ O $any$ O O O O O O O O $IApp$ O $Promise<void>$ O $any$ O O O O O O O O O O O O O $any$ O $any$ O O O O $string$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O $IApp$ O $Promise<any[]>$ O $any$ O O O O O O O O $IApp$ O $Promise<void>$ O $any$ O O O O O O O O O O O O O $any$ O $any$ O O O O $string$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O $IApp$ O $Promise<any[]>$ O $any$ O O O O O O O O $IApp$ O $Promise<void>$ O $any$ O O O O O O O O O O O O O $any$ O $any$ O O O O $string$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $IApp$ O $Promise<void>$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $IApp$ O $Promise<any>$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O $IApp$ O $Promise<any[]>$ O $any$ O O O O O O O O $IApp$ O $Promise<void>$ O $any$ O O O O O O O O O O O O O $any$ O $any$ O O O O $string$ O $any$ O $any$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $IApp$ O $Promise<any[]>$ O O O O O $any[]$ O O $any$ O $any$ O O O $any[]$ O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O $PromiseConstructor$ O O O $any$ O $any$ O $any$ O $IApp$ O $Promise<any[]>$ O $any$ O O O O O O O O O O $IApp$ O $Promise<void>$ O $any$ O O O O $void$ O O O O O O O $any$ O $any$ O O O O $string$ O $void$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $null$ O O O O O $IApp$ O $Promise<any[]>$ O $complex$ O O O O O O O O O $IApp$ O $Promise<any[]>$ O O O O O $any[]$ O O $any$ O $any$ O O O $any[]$ O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $null$ O O O O O $IApp$ O $Promise<any[]>$ O $any$ O O O O O O O $PromiseConstructor$ O O O $any$ O $any$ O $any$ O $IApp$ O $Promise<any[]>$ O $any$ O O O O O O O O O O O $IApp$ O $Promise<void>$ O $any$ O O O O $void$ O O O O O O O $any$ O $any$ O O O O $string$ O $void$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $null$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O $string$ O O O $string$ O O O ${}$ O O O O O O O $IApp$ O $Promise<any[]>$ O $complex$ O $any$ O O O O O O O O O $IApp$ O $Promise<any[]>$ O O O O O $any[]$ O O $any$ O $any$ O O O $any[]$ O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $null$ O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $string$ O O O $string$ O O O ${}$ O O O O O O O $IApp$ O $Promise<any[]>$ O $any$ O $any$ O O O O O O O $PromiseConstructor$ O O O $any$ O $any$ O $any$ O $IApp$ O $Promise<any[]>$ O $any$ O O O O O O O O O O O $IApp$ O $Promise<void>$ O $any$ O O O O $void$ O O O O O O O $any$ O $any$ O O O O $string$ O $void$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O $IApp$ O $Promise<any[]>$ O $any$ O O O O O O O O $IApp$ O $Promise<void>$ O $any$ O O O O $void$ O O O O O O O $any$ O $any$ O O O O $string$ O $void$ O $void$ O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $IApp$ O $Promise<void>$ O O O O O $void$ O O $any$ O $any$ O O O $void$ O O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $IApp$ O $Promise<void>$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $IApp$ O $Promise<void>$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $IApp$ O $Promise<void>$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $IApp$ O $Promise<void>$ O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $IApp$ O $Promise<void>$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $IApp$ O $Promise<void>$ O $any$ O O $any$ O $any$ O O O O O O O O $any$ O O
export const spyWpmp = { handlers : [ ] , clearHandlers ( ) { spyWpmp . handlers . length = 0 ; } , addHandlerSpy ( handler ) { spyWpmp . handlers . push ( handler ) ; } , addHandler : jasmine . createSpy ( "s" ) . and . callFake ( ( x ) => spyWpmp . addHandlerSpy ( x ) ) , postMessageSpy : jasmine . createSpy ( "s" ) , postMessage < T > ( message ) < T > { spyWpmp . postMessageSpy ( message ) ; return Promise . resolve ( null ) ; } , start : jasmine . createSpy ( "s" ) , stop : jasmine . createSpy ( "s" ) , onMessageReceived ( event ) { let message = event . data ; const handled = spyWpmp . handlers . some ( handler => { if ( handler . test ( message ) ) { Promise . resolve ( handler . handle ( message ) ) return true ; } } ) ; if ( ! handled ) { throw Error ( `template` ) ; } } } ;	O O $complex$ O O $undefined[]$ O O O O $void$ O O O $complex$ O $any[]$ O $number$ O O O O O $void$ O $any$ O O $complex$ O $any[]$ O $number$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O $complex$ O $void$ O $any$ O O O $any$ O $any$ O $any$ O O O O $Promise$ O $any$ O O $any$ O O $any$ O O $complex$ O $any$ O $any$ O O O $PromiseConstructor$ O $complex$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $void$ O $any$ O O O $any$ O $any$ O $any$ O O $boolean$ O $complex$ O $any[]$ O $boolean$ O $any$ O O O O $any$ O $any$ O $any$ O O O $PromiseConstructor$ O $complex$ O $any$ O $any$ O $any$ O O O O O O O O O O O O $boolean$ O O O $ErrorConstructor$ O O O O O O O O
export const spyHpm = { get : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , post : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , patch : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , put : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) , delete : jasmine . createSpy ( "s" ) . and . returnValue ( Promise . resolve ( null ) ) } ;	O O $complex$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O O
export const spyRouter = { get : jasmine . createSpy ( "s" ) , post : jasmine . createSpy ( "s" ) , patch : jasmine . createSpy ( "s" ) , put : jasmine . createSpy ( "s" ) , delete : jasmine . createSpy ( "s" ) } ;	O O $complex$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O
import * as service from 's' ; import * as embed from 's' ; import * as report from 's' ; import * as visual from 's' ; import * as create from 's' ; import * as dashboard from 's' ; import * as page from 's' ; import * as sdkConfig from 's' ; import * as visualDescriptor from 's' ; import * as Wpmp from 's' ; import * as Hpm from 's' ; import * as Router from 's' ; import * as models from 's' ; import { spyApp , setupEmbedMockApp } from 's' ; import * as factories from 's' ; import { spyWpmp } from 's' ; import { spyHpm } from 's' ; import { spyRouter } from 's' ; import * as util from 's' ; declare global { interface Window { __karma__ : any ; } } function ValidateDashboardConfigurationWorksAsExpected ( pageView , exceptionExpected , powerbi : service . Service ) { const embedUrl = `template` ; const component = $ ( `template` ) . appendTo ( 's' ) ; const dashboardEmbedConfig = { type : "s" , id : "s" , groupId : "s" , accessToken : "s" , embedUrl : "s" , pageView : pageView } ; var exceptionThrown = false ; try { powerbi . embed ( component [ 0 ] , < any > dashboardEmbedConfig ) ; } catch ( e ) { exceptionThrown = true ; } expect ( exceptionThrown ) . toBe ( exceptionExpected ) ; } let logMessages = ( window . __karma__ . config . args [ 0 ] === 's' ) ; describe ( 's' , function ( ) { let powerbi : service . Service ; let $element ; beforeAll ( function ( ) { powerbi = new service . Service ( factories . hpmFactory , factories . wpmpFactory , factories . routerFactory ) ; powerbi . accessToken = 's' ; $element = $ ( 's' ) . appendTo ( document . body ) ; } ) ; afterAll ( function ( ) { $element . remove ( ) ; powerbi . wpmp . stop ( ) ; } ) ; afterEach ( function ( ) { $element . empty ( ) ; } ) ; it ( 's' , function ( ) { expect ( powerbi ) . toBeDefined ( ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { const elements = [ 's' , 's' , ] ; elements . forEach ( element => { $ ( element ) . appendTo ( 's' ) ; } ) ; powerbi . init ( ) ; const iframes = document . querySelectorAll ( 's' ) ; expect ( iframes . length ) . toEqual ( 0 ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { const $component = $ ( 's' ) ; const attemptGet = ( ) => { powerbi . get ( $component [ 0 ] ) ; } ; expect ( attemptGet ) . toThrowError ( Error ) ; } ) ; it ( 's' , function ( ) { const $element = $ ( 's' ) . appendTo ( 's' ) ; const componentInstance = powerbi . embed ( $element [ 0 ] ) ; const 0 = powerbi . get ( $element [ 0 ] ) ; expect ( componentInstance ) . toEqual ( 0 ) ; } ) it ( 's' , function ( ) { const $element = $ ( 's' ) . appendTo ( 's' ) ; const componentInstance = powerbi . embed ( $element [ 0 ] ) ; const 0 = powerbi . get ( $element [ 0 ] ) ; expect ( componentInstance ) . toEqual ( 0 ) ; } ) } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { const component = $ ( 's' ) . appendTo ( 's' ) ; const attemptEmbed = ( ) => { powerbi . embed ( component [ 0 ] ) ; } ; expect ( attemptEmbed ) . toThrowError ( Error ) ; } ) ; it ( 's' , function ( ) { const component = $ ( 's' ) . appendTo ( 's' ) ; const attemptEmbed = ( ) => { powerbi . embed ( component [ 0 ] ) ; } ; expect ( attemptEmbed ) . toThrowError ( Error ) ; } ) ; it ( 's' , function ( ) { const component = $ ( 's' ) . appendTo ( 's' ) ; const reportEmbedConfig : embed . IEmbedConfiguration = { type : "s" , id : "s" , accessToken : "s" , embedUrl : "s" , groupId : "s" , } ; const dashboardEmbedConfig : embed . IEmbedConfiguration = { type : "s" , id : "s" , accessToken : "s" , embedUrl : "s" , groupId : "s" } ; powerbi . embed ( component [ 0 ] , reportEmbedConfig ) ; const attemptEmbed = ( ) => { powerbi . embed ( component [ 0 ] , dashboardEmbedConfig ) ; } ; expect ( attemptEmbed ) . toThrowError ( Error ) ; } ) ; it ( 's' , function ( ) { const $element = $ ( 's' ) . appendTo ( 's' ) ; const testConfiguration = { accessToken : "s" , embedUrl : 's' , id : 's' , type : 's' , groupId : "s" } ; const createConfig : embed . IEmbedConfiguration = { datasetId : "s" , accessToken : "s" , embedUrl : "s" , groupId : "s" } ; const component = powerbi . createReport ( $element [ 0 ] , createConfig ) ; const 0 = powerbi . embed ( $element [ 0 ] , testConfiguration ) ; const 0 = powerbi . get ( $element [ 0 ] ) ; expect ( component ) . toBeDefined ( ) ; expect ( 0 ) . toBeDefined ( ) ; expect ( 0 ) . toBe ( 0 ) ; } ) ; it ( 's' , function ( ) { const $reportContainer = $ ( 's' ) . appendTo ( 's' ) ; const testConfiguration : embed . IEmbedConfiguration = { accessToken : "s" , embedUrl : 's' , id : 's' , type : 's' , settings : { localeSettings : { language : 's' , formatLocale : 's' } } , groupId : "s" , uniqueId : "s" , } ; powerbi . embed ( $reportContainer [ 0 ] , testConfiguration ) ; var iframe = $reportContainer . find ( 's' ) ; expect ( iframe . attr ( 's' ) ) . toEqual ( 's' ) ; } ) ; it ( 's' , function ( ) { const component = $ ( 's' ) . appendTo ( 's' ) ; const attemptEmbed = ( ) => { const configuration : embed . IEmbedConfiguration = { type : "s" , embedUrl : null , accessToken : null , id : null } ; powerbi . embed ( component [ 0 ] , configuration ) ; } ; expect ( attemptEmbed ) . toThrowError ( Error ) ; } ) ; it ( 's' , function ( ) { const component = $ ( 's' ) . appendTo ( 's' ) ; const originalToken = powerbi . accessToken ; powerbi . accessToken = undefined ; const attemptEmbed = ( ) => { const configuration : embed . IEmbedConfiguration = { type : "s" , embedUrl : null , accessToken : null , id : null } ; powerbi . embed ( component [ 0 ] , configuration ) ; } ; expect ( attemptEmbed ) . toThrowError ( Error ) ; powerbi . accessToken = originalToken ; } ) ; it ( 's' , function ( ) { const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const attemptToEmbed = ( ) => { powerbi . embed ( $reportContainer [ 0 ] ) ; } ; expect ( attemptToEmbed ) . toThrowError ( ) ; } ) ; it ( 's' , function ( ) { ValidateDashboardConfigurationWorksAsExpected ( "s" , true , powerbi ) ; } ) ; it ( 's' , function ( ) { ValidateDashboardConfigurationWorksAsExpected ( "s" , false , powerbi ) ; } ) ; it ( 's' , function ( ) { ValidateDashboardConfigurationWorksAsExpected ( "s" , false , powerbi ) ; } ) ; it ( 's' , function ( ) { ValidateDashboardConfigurationWorksAsExpected ( "s" , false , powerbi ) ; } ) ; it ( 's' , function ( ) { ValidateDashboardConfigurationWorksAsExpected ( undefined , false , powerbi ) ; } ) ; it ( 's' , function ( ) { const testUniqueId = 's' ; const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const report = powerbi . embed ( $reportContainer [ 0 ] , { uniqueId : testUniqueId } ) ; expect ( report . config . uniqueId ) . toEqual ( testUniqueId ) ; } ) ; it ( 's' , function ( ) { const testUniqueId = 's' ; const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const report = powerbi . embed ( $reportContainer [ 0 ] ) ; expect ( report . config . uniqueId ) . toEqual ( testUniqueId ) ; } ) ; it ( 's' , function ( ) { const testUniqueId = 's' ; const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const report = powerbi . embed ( $reportContainer [ 0 ] ) ; expect ( report . config . uniqueId ) . toEqual ( jasmine . any ( String ) ) ; } ) ; it ( 's' , function ( ) { const testGroupId = "s" ; const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const configuration : embed . IEmbedConfiguration = { id : 's' , groupId : testGroupId } ; const report = powerbi . embed ( $reportContainer [ 0 ] , configuration ) ; expect ( ( < embed . IEmbedConfiguration > report . config ) . groupId ) . toEqual ( testGroupId ) ; } ) ; it ( 's' , function ( ) { const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const configuration : embed . IEmbedConfiguration = { id : 's' } ; const report = powerbi . embed ( $reportContainer [ 0 ] , configuration ) ; expect ( ( < embed . IEmbedConfiguration > report . config ) . groupId ) . toEqual ( 's' ) ; } ) ; it ( 's' , function ( ) { const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const configuration : embed . IEmbedConfiguration = { id : 's' } ; const report = powerbi . embed ( $reportContainer [ 0 ] , configuration ) ; expect ( ( < embed . IEmbedConfiguration > report . config ) . groupId ) . toBeUndefined ( ) ; } ) ; it ( 's' , function ( ) { const testUniqueId = 's' ; const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const report = powerbi . embed ( $reportContainer [ 0 ] ) ; expect ( ( < embed . IEmbedSettings > report . config . settings ) . filterPaneEnabled ) . toEqual ( false ) ; } ) ; it ( 's' , function ( ) { const testUniqueId = 's' ; const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const report = powerbi . embed ( $reportContainer [ 0 ] ) ; expect ( ( < embed . IEmbedSettings > report . config . settings ) . navContentPaneEnabled ) . toEqual ( false ) ; } ) ; it ( 's' , function ( ) { const $element = $ ( 's' ) . appendTo ( 's' ) ; const component = powerbi . embed ( $element [ 0 ] ) ; spyOn ( component , "s" ) ; const testConfiguration : embed . IEmbedConfiguration = { accessToken : "s" , embedUrl : 's' , id : 's' , } ; const 0 = powerbi . embed ( $element [ 0 ] , testConfiguration ) ; const actualConfig = ( < jasmine . Spy > component . load ) . calls . mostRecent ( ) . args [ 0 ] ; expect ( component . load ) . toHaveBeenCalled ( ) ; expect ( actualConfig . accessToken ) . toEqual ( testConfiguration . accessToken ) ; expect ( actualConfig . embedUrl ) . toEqual ( testConfiguration . embedUrl ) ; expect ( actualConfig . id ) . toEqual ( testConfiguration . id ) ; expect ( 0 ) . toBe ( component ) ; } ) ; it ( 's' , function ( ) { var component = $ ( 's' ) . appendTo ( 's' ) ; var report = powerbi . embed ( component [ 0 ] ) ; expect ( report ) . toBeDefined ( ) ; } ) ; it ( 's' , function ( ) { var component = $ ( 's' ) . appendTo ( 's' ) ; var dashboard = powerbi . embed ( component [ 0 ] ) ; expect ( dashboard ) . toBeDefined ( ) ; } ) ; it ( "s" , function ( ) { var embedUrl = 's' ; var testToken = "s" ; var $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; powerbi . embed ( $reportContainer [ 0 ] ) ; var report = powerbi . get ( $reportContainer [ 0 ] ) ; var accessToken = report . config . accessToken ; expect ( accessToken ) . toEqual ( testToken ) ; } ) ; it ( "s" , function ( ) { var embedUrl = 's' ; var testToken = "s" ; var $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; var originalToken = powerbi . accessToken ; powerbi . accessToken = testToken ; powerbi . embed ( $reportContainer [ 0 ] ) ; var report = powerbi . get ( $reportContainer [ 0 ] ) ; var accessToken = report . config . accessToken ; expect ( accessToken ) . toEqual ( testToken ) ; powerbi . accessToken = originalToken ; } ) ; describe ( 's' , function ( ) { const embedUrl = `template` ; const accessToken = 's' ; it ( 's' , function ( ) { const component = $ ( 's' ) . appendTo ( 's' ) ; const attemptCreate = ( ) => { powerbi . createReport ( component [ 0 ] , { embedUrl : null , accessToken : accessToken , datasetId : 's' } ) ; } ; expect ( attemptCreate ) . toThrowError ( Error ) ; } ) ; it ( 's' , function ( ) { const component = $ ( 's' ) . appendTo ( 's' ) ; const originalToken = powerbi . accessToken ; powerbi . accessToken = undefined ; const attemptCreate = ( ) => { powerbi . createReport ( component [ 0 ] , { embedUrl : embedUrl , accessToken : null , datasetId : 's' } ) ; } ; expect ( attemptCreate ) . toThrowError ( Error ) ; powerbi . accessToken = originalToken ; } ) ; it ( 's' , function ( ) { const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const attemptCreate = ( ) => { powerbi . createReport ( $reportContainer [ 0 ] , { embedUrl : embedUrl , accessToken : accessToken } ) ; } ; expect ( attemptCreate ) . toThrowError ( ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { const testDatasetId = "s" ; const testEmbedUrl = `template` ; const datasetId = create . Create . findIdFromEmbedUrl ( testEmbedUrl ) ; expect ( datasetId ) . toEqual ( testDatasetId ) ; } ) ; it ( 's' , function ( ) { const testEmbedUrl = `template` ; const datasetId = create . Create . findIdFromEmbedUrl ( testEmbedUrl ) ; expect ( datasetId ) . toBeUndefined ( ) ; } ) ; it ( 's' , function ( ) { const testDatasetId = "s" ; const accessToken = 's' ; const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const report = powerbi . createReport ( $reportContainer [ 0 ] , { embedUrl : embedUrl , accessToken : accessToken , datasetId : testDatasetId } ) ; expect ( report . createConfig . datasetId ) . toEqual ( testDatasetId ) ; } ) ; it ( 's' , function ( ) { const testDatasetId = "s" ; const accessToken = 's' ; const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const report = powerbi . createReport ( $reportContainer [ 0 ] , { embedUrl : embedUrl , accessToken : accessToken } ) ; expect ( report . createConfig . datasetId ) . toEqual ( testDatasetId ) ; } ) ; it ( 's' , function ( ) { const testDatasetId = "s" ; const accessToken = 's' ; const theme = { themeJson : { name : "s" } } ; const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const report = powerbi . createReport ( $reportContainer [ 0 ] , { embedUrl : embedUrl , accessToken : accessToken , theme : theme } ) ; expect ( report . createConfig . theme ) . toEqual ( theme ) ; } ) ; it ( 's' , function ( ) { const testDatasetId = "s" ; const accessToken = 's' ; const theme = { themeJson : { name : "s" } } ; const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const report = powerbi . createReport ( $reportContainer [ 0 ] , { embedUrl : embedUrl , accessToken : accessToken } ) ; expect ( report . createConfig . theme ) . toBeUndefined ( ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { var embedUrl = 's' ; var $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; let report = powerbi . embed ( $reportContainer [ 0 ] , { uniqueId : "s" } ) ; var iframe = $reportContainer . find ( 's' ) ; expect ( iframe . length ) . toEqual ( 0 ) ; expect ( iframe . attr ( 's' ) ) . toEqual ( embedUrl + "s" ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { const testReportId = "s" ; const testEmbedUrl = `template` ; const reportId = report . Report . findIdFromEmbedUrl ( testEmbedUrl ) ; expect ( reportId ) . toEqual ( testReportId ) ; } ) ; it ( 's' , function ( ) { const testEmbedUrl = `template` ; const reportId = report . Report . findIdFromEmbedUrl ( testEmbedUrl ) ; expect ( reportId ) . toBeUndefined ( ) ; } ) ; } ) ; it ( 's' , function ( ) { const testReportId = "s" ; const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const configuration : embed . IEmbedConfiguration = { id : testReportId } ; const report = powerbi . embed ( $reportContainer [ 0 ] , configuration ) ; expect ( ( < embed . IEmbedConfiguration > report . config ) . id ) . toEqual ( testReportId ) ; } ) ; it ( 's' , function ( ) { const testReportId = "s" ; const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const report = powerbi . embed ( $reportContainer [ 0 ] ) ; const config : embed . IEmbedConfiguration = report . config ; expect ( config . id ) . toEqual ( testReportId ) ; } ) ; it ( 's' , function ( ) { const testReportId = "s" ; const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const report = powerbi . embed ( $reportContainer [ 0 ] ) ; expect ( ( < embed . IEmbedConfiguration > report . config ) . id ) . toEqual ( testReportId ) ; } ) ; it ( 's' , function ( ) { const testReportId = "s" ; const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const theme = { themeJson : { name : "s" } } ; const configuration : embed . IEmbedConfiguration = { theme : theme } ; const report = powerbi . embed ( $reportContainer [ 0 ] , configuration ) ; expect ( ( < embed . IEmbedConfiguration > report . config ) . theme ) . toEqual ( theme ) ; } ) ; it ( 's' , function ( ) { const testReportId = "s" ; const embedUrl = `template` ; const $reportContainer = $ ( `template` ) . appendTo ( 's' ) ; const theme = { themeJson : { name : "s" } } ; const configuration : embed . IEmbedConfiguration = { } ; const report = powerbi . embed ( $reportContainer [ 0 ] , configuration ) ; expect ( ( < embed . IEmbedConfiguration > report . config ) . theme ) . toBeUndefined ( ) ; } ) ; } ) ; xdescribe ( 's' , function ( ) { it ( 's' , function ( ) { var embedUrl = 's' ; var $tileContainer = $ ( 's' + embedUrl + 's' ) . appendTo ( 's' ) ; let tile = powerbi . embed ( $tileContainer [ 0 ] ) ; var iframe = $tileContainer . find ( 's' ) ; expect ( iframe . length ) . toEqual ( 0 ) ; expect ( iframe . attr ( 's' ) ) . toEqual ( embedUrl ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { const component = $ ( 's' ) . appendTo ( 's' ) ; const attemptEmbed = ( ) => { powerbi . bootstrap ( component [ 0 ] , { } ) ; } ; expect ( attemptEmbed ) . toThrowError ( Error ) ; } ) ; it ( 's' , function ( ) { const component = $ ( 's' ) . appendTo ( 's' ) ; const attemptEmbed = ( ) => { powerbi . bootstrap ( component [ 0 ] , { } ) ; } ; expect ( attemptEmbed ) . toThrowError ( Error ) ; } ) ; it ( 's' , function ( ) { const component = $ ( 's' ) . appendTo ( 's' ) ; const reportEmbedConfig : embed . IEmbedConfiguration = { type : "s" , id : "s" , accessToken : "s" , embedUrl : "s" , groupId : "s" , } ; const 0 : embed . IEmbedConfiguration = { type : "s" , id : "s" , accessToken : "s" , embedUrl : "s" , groupId : "s" } ; powerbi . embed ( component [ 0 ] , reportEmbedConfig ) ; const attemptBootstrap = ( ) => { powerbi . bootstrap ( component [ 0 ] , 0 ) ; } ; expect ( attemptBootstrap ) . toThrowError ( Error ) ; } ) ; it ( 's' , function ( ) { const $element = $ ( 's' ) . appendTo ( 's' ) ; const testConfiguration = { accessToken : "s" , embedUrl : 's' , id : 's' , type : 's' , groupId : "s" } ; const component = powerbi . bootstrap ( $element [ 0 ] , { type : 's' , embedUrl : 's' , } ) ; const 0 = powerbi . embed ( $element [ 0 ] , testConfiguration ) ; const 0 = powerbi . get ( $element [ 0 ] ) ; expect ( component ) . toBeDefined ( ) ; expect ( 0 ) . toBeDefined ( ) ; expect ( 0 ) . toBe ( 0 ) ; } ) ; it ( 's' , function ( ) { const $reportContainer = $ ( 's' ) . appendTo ( 's' ) ; const testConfiguration : embed . IEmbedConfiguration = { embedUrl : 's' , id : 's' , type : 's' , settings : { localeSettings : { language : 's' , formatLocale : 's' } } , uniqueId : "s" , } ; powerbi . bootstrap ( $reportContainer [ 0 ] , testConfiguration ) ; var iframe = $reportContainer . find ( 's' ) ; expect ( iframe . attr ( 's' ) ) . toEqual ( 's' ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { const $element = $ ( 's' ) ; const config : embed . IEmbedConfiguration = { type : 's' , embedUrl : 's' , id : 's' , accessToken : 's' } ; powerbi . embed ( $element . get ( 0 ) , config ) ; expect ( ( < service . IPowerBiElement > $element . get ( 0 ) ) . powerBiEmbed ) . toBeDefined ( ) ; powerbi . reset ( $element . get ( 0 ) ) ; expect ( ( < service . IPowerBiElement > $element . get ( 0 ) ) . powerBiEmbed ) . toBeUndefined ( ) ; } ) ; it ( 's' , function ( ) { const $element = $ ( 's' ) ; const config : embed . IEmbedConfiguration = { type : 's' , embedUrl : 's' , id : 's' , accessToken : 's' } ; powerbi . embed ( $element . get ( 0 ) , config ) ; var iframe = $element . find ( 's' ) ; expect ( iframe . length ) . toEqual ( 0 ) ; powerbi . reset ( $element . get ( 0 ) ) ; expect ( $element . html ( ) ) . toEqual ( 's' ) ; } ) ; it ( 's' , function ( ) { const $element = $ ( 's' ) ; const testEmbedConfig = { type : 's' , embedUrl : 's' , id : 's' , accessToken : 's' , uniqueId : 's' } ; powerbi . embed ( $element . get ( 0 ) , testEmbedConfig ) ; const report = powerbi . find ( testEmbedConfig . uniqueId ) ; expect ( report ) . toBeDefined ( ) ; powerbi . reset ( $element . get ( 0 ) ) ; const 0 = powerbi . find ( testEmbedConfig . uniqueId ) ; expect ( 0 ) . toBeUndefined ( ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { let powerbi : service . Service ; let $element ; let $container ; let $iframe ; beforeAll ( function ( ) { powerbi = new service . Service ( factories . hpmFactory , factories . wpmpFactory , factories . routerFactory ) ; powerbi . accessToken = 's' ; $element = $ ( 's' ) . appendTo ( document . body ) ; } ) ; beforeEach ( function ( ) { $container = $ ( 's' ) . appendTo ( 's' ) ; powerbi . embed ( $container [ 0 ] ) ; $iframe = $container . find ( 's' ) ; } ) ; afterEach ( function ( ) { $element . empty ( ) ; } ) ; afterAll ( function ( ) { $element . remove ( ) ; powerbi . wpmp . stop ( ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { expect ( $iframe . attr ( 's' ) . length ) . toBeGreaterThan ( 0 ) ; } ) ; it ( 's' , function ( ) { expect ( $iframe . attr ( 's' ) ) . toEqual ( 's' ) ; } ) ; it ( 's' , function ( ) { expect ( $iframe [ 0 ] . style . width ) . toEqual ( 's' ) ; expect ( $iframe [ 0 ] . style . height ) . toEqual ( 's' ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { var report = powerbi . get ( $container [ 0 ] ) ; report . fullscreen ( ) ; expect ( document . webkitFullscreenElement === $iframe [ 0 ] ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { var report = powerbi . get ( $container [ 0 ] ) ; report . fullscreen ( ) ; report . exitFullscreen ( ) ; expect ( document . webkitFullscreenElement !== $iframe [ 0 ] ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { let hpm : Hpm . HttpPostMessage ; let wpmp : Wpmp . WindowPostMessageProxy ; let iframe ; let iframeHpm : Hpm . HttpPostMessage ; let iframeLoaded < void > ; let handler : Wpmp . IMessageHandler ; let spyHandler : { test : jasmine . Spy , handle : jasmine . Spy } ; beforeAll ( function ( ) { const iframeSrc = "s" ; const $iframe = $ ( `template` ) . appendTo ( document . body ) ; iframe = < HTMLIFrameElement > $iframe . get ( 0 ) ; iframeHpm = setupEmbedMockApp ( iframe . contentWindow , window , logMessages , 's' ) ; wpmp = factories . wpmpFactory ( 's' , logMessages , iframe . contentWindow ) ; hpm = factories . hpmFactory ( wpmp , iframe . contentWindow , 's' ) ; const router = factories . routerFactory ( wpmp ) ; router . post ( 's' , ( req , res ) => { handler . handle ( req ) ; res . send ( 0 ) ; } ) ; router . post ( 's' , ( req , res ) => { handler . handle ( req ) ; res . send ( 0 ) ; } ) ; router . post ( 's' , ( req , res ) => { handler . handle ( req ) ; res . send ( 0 ) ; } ) ; handler = { test : jasmine . createSpy ( "s" ) . and . returnValue ( true ) , handle : jasmine . createSpy ( "s" ) . and . callFake ( function ( message ) { message . handled = true ; return message ; } ) } ; spyHandler = < any > handler ; iframeLoaded = new Promise < void > ( ( resolve , reject ) => { iframe . addEventListener ( 's' , ( ) => { resolve ( null ) ; } ) ; } ) ; } ) ; afterAll ( function ( ) { wpmp . stop ( ) ; } ) ; beforeEach ( ( ) => { } ) ; afterEach ( function ( ) { spyHandler . test . calls . reset ( ) ; spyHandler . handle . calls . reset ( ) ; } ) ; describe ( 's' , function ( ) { describe ( 's' , function ( ) { it ( 's' , function ( done ) { iframeLoaded . then ( ( ) => { hpm . get < any > ( 's' ) . catch ( response => { expect ( response . statusCode ) . toEqual ( 0 ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { iframeLoaded . then ( ( ) => { hpm . post < any > ( 's' , null ) . catch ( response => { expect ( response . statusCode ) . toEqual ( 0 ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { iframeLoaded . then ( ( ) => { hpm . put < any > ( 's' , null ) . catch ( response => { expect ( response . statusCode ) . toEqual ( 0 ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { iframeLoaded . then ( ( ) => { hpm . patch < any > ( 's' , null ) . catch ( response => { expect ( response . statusCode ) . toEqual ( 0 ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { iframeLoaded . then ( ( ) => { hpm . delete < any > ( 's' ) . catch ( response => { expect ( response . statusCode ) . toEqual ( 0 ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { uniqueId : 's' , create : { datasetId : "s" , accessToken : "s" , } } ; iframeLoaded . then ( ( ) => { spyApp . validateCreateReport . and . returnValue ( Promise . reject ( null ) ) ; hpm . post < models . IError > ( 's' , testData . create , { uid : testData . uniqueId } ) . then ( ( ) => { expect ( false ) . toBe ( true ) ; spyApp . validateReportLoad . calls . reset ( ) ; done ( ) ; } ) . catch ( response => { expect ( spyApp . validateCreateReport ) . toHaveBeenCalledWith ( testData . create ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validateCreateReport . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { create : { datasetId : "s" , accessToken : "s" , } } ; iframeLoaded . then ( ( ) => { spyApp . validateCreateReport . and . returnValue ( Promise . resolve ( null ) ) ; hpm . post < void > ( 's' , testData . create ) . then ( response => { expect ( spyApp . validateCreateReport ) . toHaveBeenCalledWith ( testData . create ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validateCreateReport . calls . reset ( ) ; spyApp . reportLoad . calls . reset ( ) ; done ( ) ; } ) . catch ( response => { expect ( false ) . toBe ( true ) ; spyApp . validateCreateReport . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { describe ( 's' , function ( ) { for ( var action of [ 's' , 's' ] ) { it ( `template` , function ( done ) { const testData = { uniqueId : 's' , load : { reportId : "s" , accessToken : "s" , options : { } } } ; iframeLoaded . then ( ( ) => { spyApp . validateReportLoad . and . returnValue ( Promise . reject ( null ) ) ; hpm . post < models . IError > ( `template` , testData . load , { uid : testData . uniqueId } ) . then ( ( ) => { expect ( false ) . toBe ( true ) ; spyApp . validateReportLoad . calls . reset ( ) ; done ( ) ; } ) . catch ( response => { expect ( spyApp . validateReportLoad ) . toHaveBeenCalledWith ( testData . load ) ; expect ( spyApp . reportLoad ) . not . toHaveBeenCalledWith ( testData . load ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validateReportLoad . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( `template` , function ( done ) { const testData = { load : { reportId : "s" , accessToken : "s" , options : { } } } ; iframeLoaded . then ( ( ) => { spyApp . validateReportLoad . and . returnValue ( Promise . resolve ( null ) ) ; hpm . post < void > ( `template` , testData . load ) . then ( response => { expect ( spyApp . validateReportLoad ) . toHaveBeenCalledWith ( testData . load ) ; expect ( spyApp . reportLoad ) . toHaveBeenCalledWith ( testData . load ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validateReportLoad . calls . reset ( ) ; spyApp . reportLoad . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( `template` , function ( done ) { const testData = { uniqueId : 's' , load : { reportId : "s" , accessToken : "s" , options : { navContentPaneEnabled : false } } , } ; const testExpectedEvent = { method : 's' , url : `template` , body : { initiator : 's' } } ; iframeLoaded . then ( ( ) => { spyApp . reportLoad . and . returnValue ( Promise . resolve ( testData . load ) ) ; hpm . post < void > ( `template` , testData . load , { uid : testData . uniqueId } ) . then ( response => { setTimeout ( ( ) => { expect ( spyApp . validateReportLoad ) . toHaveBeenCalledWith ( testData . load ) ; expect ( spyApp . reportLoad ) . toHaveBeenCalledWith ( testData . load ) ; expect ( spyHandler . handle ) . toHaveBeenCalledWith ( jasmine . objectContaining ( testExpectedEvent ) ) ; spyApp . validateReportLoad . calls . reset ( ) ; spyApp . reportLoad . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; it ( `template` , function ( done ) { const testData = { uniqueId : 's' , load : { reportId : "s" , accessToken : "s" , options : { navContentPaneEnabled : false } } , error : { message : "s" } } ; const testExpectedEvent = { method : 's' , url : `template` , body : testData . error } ; iframeLoaded . then ( ( ) => { spyApp . reportLoad . and . returnValue ( Promise . reject ( testData . error ) ) ; hpm . post < void > ( `template` , testData . load , { uid : testData . uniqueId } ) . then ( response => { setTimeout ( ( ) => { expect ( spyApp . validateReportLoad ) . toHaveBeenCalledWith ( testData . load ) ; expect ( spyApp . reportLoad ) . toHaveBeenCalledWith ( testData . load ) ; expect ( spyHandler . handle ) . toHaveBeenCalledWith ( jasmine . objectContaining ( testExpectedEvent ) ) ; spyApp . validateReportLoad . calls . reset ( ) ; spyApp . reportLoad . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; } } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { load : { dashboardId : "s" , accessToken : "s" , options : { } } } ; iframeLoaded . then ( ( ) => { spyApp . validateDashboardLoad . and . returnValue ( Promise . resolve ( null ) ) ; hpm . post < void > ( 's' , testData . load ) . then ( response => { expect ( spyApp . validateDashboardLoad ) . toHaveBeenCalledWith ( testData . load ) ; expect ( spyApp . dashboardLoad ) . toHaveBeenCalledWith ( testData . load ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validateDashboardLoad . calls . reset ( ) ; spyApp . dashboardLoad . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { uniqueId : 's' , load : { dashboardId : "s" , accessToken : "s" , options : { } } } ; iframeLoaded . then ( ( ) => { spyApp . validateDashboardLoad . and . returnValue ( Promise . reject ( null ) ) ; hpm . post < models . IError > ( 's' , testData . load , { uid : testData . uniqueId } ) . then ( ( ) => { expect ( false ) . toBe ( true ) ; spyApp . validateDashboardLoad . calls . reset ( ) ; done ( ) ; } ) . catch ( response => { expect ( spyApp . validateDashboardLoad ) . toHaveBeenCalledWith ( testData . load ) ; expect ( spyApp . dashboardLoad ) . not . toHaveBeenCalledWith ( testData . load ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validateDashboardLoad . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { iframeLoaded . then ( ( ) => { spyApp . render . and . returnValue ( Promise . resolve ( null ) ) ; hpm . post < void > ( 's' , null ) . then ( response => { expect ( spyApp . render ) . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . render . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { expectedPages : [ { name : "s" } , { name : "s" } ] } ; iframeLoaded . then ( ( ) => { spyApp . getPages . and . returnValue ( Promise . resolve ( testData . expectedPages ) ) ; hpm . get < models . IPage [ ] > ( 's' ) . then ( response => { expect ( spyApp . getPages ) . toHaveBeenCalled ( ) ; const pages = response . body ; expect ( pages ) . toEqual ( testData . expectedPages ) ; spyApp . getPages . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { expectedError : { message : "s" } } ; iframeLoaded . then ( ( ) => { spyApp . getPages . and . returnValue ( Promise . reject ( testData . expectedError ) ) ; hpm . get < models . IPage [ ] > ( 's' ) . catch ( response => { expect ( spyApp . getPages ) . toHaveBeenCalled ( ) ; const error = response . body ; expect ( error ) . toEqual ( testData . expectedError ) ; spyApp . getPages . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { page : { name : "s" } } ; iframeLoaded . then ( ( ) => { spyApp . validatePage . and . returnValue ( Promise . reject ( null ) ) ; hpm . put < void > ( 's' , testData . page ) . catch ( response => { expect ( spyApp . validatePage ) . toHaveBeenCalledWith ( testData . page ) ; expect ( spyApp . setPage ) . not . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validatePage . calls . reset ( ) ; spyApp . setPage . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { page : { name : "s" } } ; iframeLoaded . then ( ( ) => { spyApp . validatePage . and . returnValue ( Promise . resolve ( null ) ) ; hpm . put < void > ( 's' , testData . page ) . then ( response => { expect ( spyApp . validatePage ) . toHaveBeenCalledWith ( testData . page ) ; expect ( spyApp . setPage ) . toHaveBeenCalledWith ( testData . page ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validatePage . calls . reset ( ) ; spyApp . setPage . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { uniqueId : 's' , reportId : 's' , page : { name : "s" } } ; const expectedEvent = { method : 's' , url : `template` , body : jasmine . objectContaining ( { initiator : 's' } ) } ; iframeLoaded . then ( ( ) => { spyApp . validatePage . and . returnValue ( Promise . resolve ( null ) ) ; hpm . put < void > ( 's' , testData . page , { uid : testData . uniqueId } ) . then ( response => { expect ( spyApp . validatePage ) . toHaveBeenCalledWith ( testData . page ) ; expect ( spyApp . setPage ) . toHaveBeenCalledWith ( testData . page ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; expect ( spyHandler . handle ) . toHaveBeenCalledWith ( jasmine . objectContaining ( expectedEvent ) ) ; spyApp . validateReportLoad . calls . reset ( ) ; spyApp . setPage . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { uniqueId : 's' , reportId : 's' , page : { name : "s" } , error : { message : "s" } } ; const expectedEvent = { method : 's' , url : `template` , body : testData . error } ; iframeLoaded . then ( ( ) => { spyApp . validatePage . and . returnValue ( Promise . resolve ( null ) ) ; spyApp . setPage . and . returnValue ( Promise . reject ( testData . error ) ) ; hpm . put < void > ( 's' , testData . page , { uid : testData . uniqueId } ) . then ( response => { expect ( spyApp . validatePage ) . toHaveBeenCalledWith ( testData . page ) ; expect ( spyApp . setPage ) . toHaveBeenCalledWith ( testData . page ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; expect ( spyHandler . handle ) . toHaveBeenCalledWith ( jasmine . objectContaining ( expectedEvent ) ) ; spyApp . validateReportLoad . calls . reset ( ) ; spyApp . setPage . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { iframeLoaded . then ( ( ) => { spyApp . refreshData . and . returnValue ( Promise . resolve ( null ) ) ; hpm . post < void > ( 's' , null ) . then ( response => { expect ( spyApp . refreshData ) . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . refreshData . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { iframeLoaded . then ( ( ) => { spyApp . print . and . returnValue ( Promise . resolve ( null ) ) ; hpm . post < void > ( 's' , null ) . then ( response => { expect ( spyApp . print ) . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . print . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { iframeLoaded . then ( ( ) => { spyApp . switchMode . and . returnValue ( Promise . resolve ( null ) ) ; hpm . post < void > ( 's' , null ) . then ( response => { expect ( spyApp . switchMode ) . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . switchMode . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { iframeLoaded . then ( ( ) => { spyApp . save . and . returnValue ( Promise . resolve ( null ) ) ; hpm . post < void > ( 's' , null ) . then ( response => { expect ( spyApp . save ) . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . save . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { let saveAsParameters : models . ISaveAsParameters = { name : "s" } ; iframeLoaded . then ( ( ) => { spyApp . saveAs . and . returnValue ( Promise . resolve ( null ) ) ; hpm . post < void > ( 's' , saveAsParameters ) . then ( response => { expect ( spyApp . saveAs ) . toHaveBeenCalled ( ) ; expect ( spyApp . saveAs ) . toHaveBeenCalledWith ( saveAsParameters ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . saveAs . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { let accessToken = "s" ; iframeLoaded . then ( ( ) => { spyApp . setAccessToken . and . returnValue ( Promise . resolve ( null ) ) ; hpm . post < void > ( 's' , accessToken ) . then ( response => { expect ( spyApp . setAccessToken ) . toHaveBeenCalled ( ) ; expect ( spyApp . setAccessToken ) . toHaveBeenCalledWith ( accessToken ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . saveAs . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { filters : [ { name : "s" } , { name : "s" } ] } ; iframeLoaded . then ( ( ) => { spyApp . getFilters . and . returnValue ( Promise . resolve ( testData . filters ) ) ; hpm . get < models . IFilter [ ] > ( 's' ) . then ( response => { expect ( spyApp . getFilters ) . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; expect ( response . body ) . toEqual ( testData . filters ) ; spyApp . getFilters . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { error : { message : "s" } } ; iframeLoaded . then ( ( ) => { spyApp . getFilters . and . returnValue ( Promise . reject ( testData . error ) ) ; hpm . get < models . IFilter [ ] > ( 's' ) . catch ( response => { expect ( spyApp . getFilters ) . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; expect ( response . body ) . toEqual ( testData . error ) ; spyApp . getFilters . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ { name : "s" } ] } ; iframeLoaded . then ( ( ) => { spyApp . validateFilter . and . returnValue ( Promise . reject ( null ) ) ; hpm . put < models . IError > ( 's' , testData . filters ) . catch ( response => { expect ( spyApp . validateFilter ) . toHaveBeenCalledWith ( testData . filters [ 0 ] ) ; expect ( spyApp . setFilters ) . not . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validateFilter . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ { name : "s" } ] } ; iframeLoaded . then ( ( ) => { spyApp . validateFilter . and . returnValue ( Promise . resolve ( null ) ) ; hpm . put < void > ( 's' , testData . filters ) . then ( response => { expect ( spyApp . validateFilter ) . toHaveBeenCalledWith ( testData . filters [ 0 ] ) ; expect ( spyApp . setFilters ) . toHaveBeenCalledWith ( testData . filters ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validateFilter . calls . reset ( ) ; spyApp . setFilters . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { uniqueId : 's' , reportId : 's' , filters : [ { name : "s" } ] } ; const testExpectedEvent = { method : 's' , url : `template` } ; iframeLoaded . then ( ( ) => { spyApp . validateFilter . and . returnValue ( Promise . resolve ( null ) ) ; hpm . put < void > ( 's' , testData . filters , { uid : testData . uniqueId } ) . then ( response => { expect ( spyApp . validateFilter ) . toHaveBeenCalledWith ( testData . filters [ 0 ] ) ; expect ( spyApp . setFilters ) . toHaveBeenCalledWith ( testData . filters ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; expect ( spyHandler . handle ) . toHaveBeenCalledWith ( jasmine . objectContaining ( testExpectedEvent ) ) ; spyApp . validateFilter . calls . reset ( ) ; spyApp . setFilters . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { filters : [ { name : "s" } , { name : "s" } ] } ; iframeLoaded . then ( ( ) => { spyApp . getFilters . and . returnValue ( Promise . resolve ( testData . filters ) ) ; hpm . get < models . IFilter [ ] > ( 's' ) . then ( response => { expect ( spyApp . getFilters ) . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; expect ( response . body ) . toEqual ( testData . filters ) ; spyApp . getFilters . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { error : { message : "s" } } ; iframeLoaded . then ( ( ) => { spyApp . getFilters . and . returnValue ( Promise . reject ( testData . error ) ) ; hpm . get < models . IFilter [ ] > ( 's' ) . catch ( response => { expect ( spyApp . getFilters ) . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; expect ( response . body ) . toEqual ( testData . error ) ; spyApp . getFilters . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ { name : "s" } ] } ; iframeLoaded . then ( ( ) => { spyApp . validateFilter . and . returnValue ( Promise . reject ( null ) ) ; hpm . put < models . IError > ( 's' , testData . filters ) . catch ( response => { expect ( spyApp . validateFilter ) . toHaveBeenCalledWith ( testData . filters [ 0 ] ) ; expect ( spyApp . setFilters ) . not . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validatePage . calls . reset ( ) ; spyApp . validateFilter . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ { name : "s" } ] , } ; iframeLoaded . then ( ( ) => { spyApp . validateFilter . and . returnValue ( Promise . resolve ( null ) ) ; hpm . put < void > ( 's' , testData . filters ) . then ( response => { expect ( spyApp . validateFilter ) . toHaveBeenCalledWith ( testData . filters [ 0 ] ) ; expect ( spyApp . setFilters ) . toHaveBeenCalledWith ( testData . filters ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validatePage . calls . reset ( ) ; spyApp . validateFilter . calls . reset ( ) ; spyApp . setFilters . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { uniqueId : 's' , reportId : 's' , filters : [ { name : "s" } ] } ; const testExpectedEvent = { method : 's' , url : `template` } ; iframeLoaded . then ( ( ) => { spyHandler . handle . calls . reset ( ) ; spyApp . validateFilter . and . returnValue ( Promise . resolve ( null ) ) ; hpm . put < void > ( 's' , testData . filters , { uid : testData . uniqueId } ) . then ( response => { expect ( spyApp . validateFilter ) . toHaveBeenCalledWith ( testData . filters [ 0 ] ) ; expect ( spyApp . setFilters ) . toHaveBeenCalledWith ( testData . filters ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; expect ( spyHandler . handle ) . toHaveBeenCalledWith ( jasmine . objectContaining ( testExpectedEvent ) ) ; spyApp . validatePage . calls . reset ( ) ; spyApp . validateFilter . calls . reset ( ) ; spyApp . setFilters . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { filters : [ { name : "s" } , { name : "s" } ] } ; iframeLoaded . then ( ( ) => { spyApp . getFilters . and . returnValue ( Promise . resolve ( testData . filters ) ) ; hpm . get < models . IFilter [ ] > ( 's' ) . then ( response => { expect ( spyApp . getFilters ) . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; expect ( response . body ) . toEqual ( testData . filters ) ; spyApp . getFilters . calls . reset ( ) ; spyApp . validateVisual . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { error : { message : "s" } } ; iframeLoaded . then ( ( ) => { spyApp . getFilters . and . returnValue ( Promise . reject ( testData . error ) ) ; hpm . get < models . IFilter [ ] > ( 's' ) . catch ( response => { expect ( spyApp . getFilters ) . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; expect ( response . body ) . toEqual ( testData . error ) ; spyApp . getFilters . calls . reset ( ) ; spyApp . validateVisual . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { uniqueId : 's' , filters : [ { name : "s" } ] } ; iframeLoaded . then ( ( ) => { spyApp . validateFilter . and . returnValue ( Promise . reject ( null ) ) ; hpm . put < models . IError > ( 's' , testData . filters , { uid : testData . uniqueId } ) . catch ( response => { expect ( spyApp . validateFilter ) . toHaveBeenCalledWith ( testData . filters [ 0 ] ) ; expect ( spyApp . setFilters ) . not . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validateVisual . calls . reset ( ) ; spyApp . validateFilter . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { uniqueId : 's' , filters : [ { name : "s" } ] , } ; iframeLoaded . then ( ( ) => { spyApp . validateFilter . and . returnValue ( Promise . resolve ( null ) ) ; hpm . put < void > ( 's' , testData . filters , { uid : testData . uniqueId } ) . then ( response => { expect ( spyApp . validateFilter ) . toHaveBeenCalledWith ( testData . filters [ 0 ] ) ; expect ( spyApp . setFilters ) . toHaveBeenCalledWith ( testData . filters ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validateVisual . calls . reset ( ) ; spyApp . validateFilter . calls . reset ( ) ; spyApp . setFilters . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { uniqueId : 's' , filters : [ { name : "s" } ] } ; const testExpectedEvent = { method : 's' , url : `template` } ; iframeLoaded . then ( ( ) => { hpm . put < void > ( 's' , testData . filters , { uid : testData . uniqueId } ) . then ( response => { expect ( spyApp . validateFilter ) . toHaveBeenCalledWith ( testData . filters [ 0 ] ) ; expect ( spyApp . setFilters ) . toHaveBeenCalledWith ( testData . filters ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; expect ( spyHandler . handle ) . toHaveBeenCalledWith ( jasmine . objectContaining ( testExpectedEvent ) ) ; spyApp . validateVisual . calls . reset ( ) ; spyApp . validateFilter . calls . reset ( ) ; spyApp . setFilters . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { settings : { filterPaneEnabled : false , navContentPaneEnabled : false } } ; iframeLoaded . then ( ( ) => { spyApp . validateSettings . and . returnValue ( Promise . reject ( null ) ) ; hpm . patch < models . IError [ ] > ( 's' , testData . settings ) . catch ( response => { expect ( spyApp . validateSettings ) . toHaveBeenCalledWith ( testData . settings ) ; expect ( spyApp . updateSettings ) . not . toHaveBeenCalled ( ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validateSettings . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { settings : { filterPaneEnabled : false , navContentPaneEnabled : false } } ; iframeLoaded . then ( ( ) => { spyApp . validateSettings . and . returnValue ( Promise . resolve ( null ) ) ; hpm . patch < void > ( 's' , testData . settings ) . then ( response => { expect ( spyApp . validateSettings ) . toHaveBeenCalledWith ( testData . settings ) ; expect ( spyApp . updateSettings ) . toHaveBeenCalledWith ( testData . settings ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; spyApp . validateSettings . calls . reset ( ) ; spyApp . updateSettings . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { uniqueId : 's' , reportId : 's' , settings : { filterPaneEnabled : false } } ; const testExpectedEvent = { method : 's' , url : `template` , body : { initiator : 's' , settings : { filterPaneEnabled : false , navContentPaneEnabled : false } } } ; iframeLoaded . then ( ( ) => { spyApp . validateSettings . and . returnValue ( Promise . resolve ( null ) ) ; spyApp . updateSettings . and . returnValue ( Promise . resolve ( testExpectedEvent . body . settings ) ) ; hpm . patch < void > ( 's' , testData . settings , { uid : testData . uniqueId } ) . then ( response => { setTimeout ( ( ) => { expect ( spyApp . validateSettings ) . toHaveBeenCalledWith ( testData . settings ) ; expect ( spyApp . updateSettings ) . toHaveBeenCalledWith ( testData . settings ) ; expect ( response . statusCode ) . toEqual ( 0 ) ; expect ( spyHandler . handle ) . toHaveBeenCalledWith ( jasmine . objectContaining ( testExpectedEvent ) ) ; spyApp . validateSettings . calls . reset ( ) ; spyApp . updateSettings . calls . reset ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { uniqueId : 's' , reportId : 's' , event : { initiator : 's' , newPage : { name : "s" } } } ; const testExpectedRequest = { method : 's' , url : `template` , body : testData . event } ; iframeLoaded . then ( ( ) => { iframeHpm . post < void > ( testExpectedRequest . url , testData . event ) . then ( response => { expect ( response . statusCode ) . toBe ( 0 ) ; expect ( spyHandler . handle ) . toHaveBeenCalledWith ( jasmine . objectContaining ( testExpectedRequest ) ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { uniqueId : 's' , reportId : 's' , event : { initiator : 's' , filters : [ { name : "s" } ] } } ; const testExpectedRequest = { method : 's' , url : `template` , body : testData . event } ; iframeLoaded . then ( ( ) => { iframeHpm . post ( testExpectedRequest . url , testData . event ) . then ( response => { expect ( response . statusCode ) . toBe ( 0 ) ; expect ( spyHandler . handle ) . toHaveBeenCalledWith ( jasmine . objectContaining ( testExpectedRequest ) ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { uniqueId : 's' , reportId : 's' , event : { initiator : 's' , filters : [ { name : "s" } ] } } ; const testExpectedRequest = { method : 's' , url : `template` , body : testData . event } ; iframeLoaded . then ( ( ) => { iframeHpm . post ( testExpectedRequest . url , testData . event ) . then ( response => { expect ( response . statusCode ) . toBe ( 0 ) ; expect ( spyHandler . handle ) . toHaveBeenCalledWith ( jasmine . objectContaining ( testExpectedRequest ) ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { uniqueId : 's' , reportId : 's' , event : { initiator : 's' , filters : [ { name : "s" } ] } } ; const testExpectedRequest = { method : 's' , url : `template` , body : testData . event } ; iframeLoaded . then ( ( ) => { spyHandler . handle . calls . reset ( ) ; iframeHpm . post ( testExpectedRequest . url , testData . event ) . then ( response => { expect ( response . statusCode ) . toBe ( 0 ) ; expect ( spyHandler . handle ) . toHaveBeenCalledWith ( jasmine . objectContaining ( testExpectedRequest ) ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { uniqueId : 's' , reportId : 's' , event : { initiator : 's' , settings : { navContentPaneEnabled : true } } } ; const testExpectedRequest = { method : 's' , url : `template` , body : testData . event } ; iframeLoaded . then ( ( ) => { iframeHpm . post ( testExpectedRequest . url , testData . event ) . then ( response => { expect ( response . statusCode ) . toBe ( 0 ) ; expect ( spyHandler . handle ) . toHaveBeenCalledWith ( jasmine . objectContaining ( testExpectedRequest ) ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { uniqueId : 's' , reportId : 's' , event : { initiator : 's' , selection : { data : true } } } ; const testExpectedRequest = { method : 's' , url : `template` , body : testData . event } ; iframeLoaded . then ( ( ) => { iframeHpm . post ( testExpectedRequest . url , testData . event ) . then ( response => { expect ( response . statusCode ) . toBe ( 0 ) ; expect ( spyHandler . handle ) . toHaveBeenCalledWith ( jasmine . objectContaining ( testExpectedRequest ) ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { let $reportElement ; let $dashboardElement ; let $createElement ; let iframe ; let dashboardIframe ; let createIframe ; let visualFrame ; let powerbi : service . Service ; let report : report . Report ; let create : create . Create ; let dashboard : dashboard . Dashboard ; let embeddedVisual : visual . Visual ; let 0 : page . Page ; let 0 : visualDescriptor . VisualDescriptor ; let uniqueId = 's' ; let sdkSessionId = 's' ; let createUniqueId = 's' ; let dashboardUniqueId = 's' ; let visualUniqueId = 's' ; let embedConfiguration : embed . IEmbedConfiguration ; let dashboardEmbedConfiguration : embed . IEmbedConfiguration ; let embedCreateConfiguration : embed . IEmbedConfiguration ; let visualEmbedConfiguration : embed . IVisualEmbedConfiguration ; const iframeSrc = "s" ; beforeAll ( function ( ) { const spyHpmFactory : factories . IHpmFactory = ( ) => { return < Hpm . HttpPostMessage > < any > spyHpm ; } ; const noop : factories . IWpmpFactory = ( ) => { return < Wpmp . WindowPostMessageProxy > null ; } ; const spyRouterFactory : factories . IRouterFactory = ( ) => { return < Router . Router > < any > spyRouter ; } ; powerbi = new service . Service ( spyHpmFactory , noop , spyRouterFactory , { wpmpName : 's' } ) ; $reportElement = $ ( `template` ) . appendTo ( document . body ) ; $createElement = $ ( `template` ) . appendTo ( document . body ) ; $dashboardElement = $ ( `template` ) . appendTo ( document . body ) ; let $visualElement = $ ( `template` ) . appendTo ( document . body ) ; embedConfiguration = { type : "s" , id : "s" , accessToken : 's' , embedUrl : iframeSrc } ; embedCreateConfiguration = { datasetId : "s" , accessToken : 's' , embedUrl : iframeSrc } ; dashboardEmbedConfiguration = { type : "s" , id : "s" , accessToken : 's' , embedUrl : iframeSrc } ; visualEmbedConfiguration = { id : "s" , accessToken : 's' , embedUrl : iframeSrc , type : "s" , pageName : "s" , visualName : "s" , width : 0 , height : 0 } ; report = < report . Report > powerbi . embed ( $reportElement [ 0 ] , embedConfiguration ) ; create = < create . Create > powerbi . createReport ( $createElement [ 0 ] , embedCreateConfiguration ) ; dashboard = < dashboard . Dashboard > powerbi . embed ( $dashboardElement [ 0 ] , dashboardEmbedConfiguration ) ; embeddedVisual = < visual . Visual > powerbi . embed ( $visualElement [ 0 ] , visualEmbedConfiguration ) ; 0 = new page . Page ( report , 's' ) ; 0 = new visualDescriptor . VisualDescriptor ( 0 , 's' , 's' , 's' , { } ) ; uniqueId = report . config . uniqueId ; sdkSessionId = powerbi . getSdkSessionId ( ) ; createUniqueId = create . config . uniqueId ; dashboardUniqueId = dashboard . config . uniqueId ; visualUniqueId = embeddedVisual . config . uniqueId ; iframe = < HTMLIFrameElement > $reportElement . find ( 's' ) [ 0 ] ; createIframe = < HTMLIFrameElement > $createElement . find ( 's' ) [ 0 ] ; dashboardIframe = < HTMLIFrameElement > $dashboardElement . find ( 's' ) [ 0 ] ; visualFrame = < HTMLIFrameElement > $visualElement . find ( 's' ) [ 0 ] ; spyHpm . post . calls . reset ( ) ; } ) ; afterAll ( function ( ) { powerbi . reset ( $reportElement . get ( 0 ) ) ; powerbi . reset ( $dashboardElement . get ( 0 ) ) ; $reportElement . remove ( ) ; $dashboardElement . remove ( ) ; powerbi . wpmp . stop ( ) ; } ) ; afterEach ( function ( ) { spyHpm . get . calls . reset ( ) ; spyHpm . post . calls . reset ( ) ; spyHpm . patch . calls . reset ( ) ; spyHpm . put . calls . reset ( ) ; spyHpm . delete . calls . reset ( ) ; spyRouter . get . calls . reset ( ) ; spyRouter . post . calls . reset ( ) ; spyRouter . patch . calls . reset ( ) ; spyRouter . put . calls . reset ( ) ; spyRouter . delete . calls . reset ( ) ; } ) ; describe ( 's' , function ( ) { describe ( 's' , function ( ) { it ( 's' , function ( ) { const testData = { loadConfiguration : { id : 's' , accessToken : 's' } , response : { body : null } } ; spyHpm . post . and . returnValue ( Promise . resolve ( testData . response ) ) ; report . load ( testData . loadConfiguration ) ; const expectedHeaders = { bootstrapped : undefined , sdkVersion : sdkConfig . default . version , uid : uniqueId , sdkSessionId : sdkSessionId } ; expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , testData . loadConfiguration , expectedHeaders , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { const testData = { loadConfiguration : { id : 's' , accessToken : 's' } , errorResponse : { body : { message : "s" } } } ; spyHpm . post . and . returnValue ( Promise . reject ( testData . errorResponse ) ) ; report . load ( testData . loadConfiguration ) . catch ( error => { const expectedHeaders = { bootstrapped : undefined , sdkVersion : sdkConfig . default . version , uid : uniqueId , sdkSessionId : sdkSessionId } ; expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , testData . loadConfiguration , expectedHeaders , iframe . contentWindow ) ; expect ( error ) . toEqual ( testData . errorResponse . body ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { loadConfiguration : { id : 's' , accessToken : 's' } , response : { body : null } } ; spyHpm . post . and . returnValue ( Promise . resolve ( testData . response ) ) ; report . load ( testData . loadConfiguration ) . then ( response => { const expectedHeaders = { bootstrapped : undefined , sdkVersion : sdkConfig . default . version , uid : uniqueId , sdkSessionId : sdkSessionId } ; expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , testData . loadConfiguration , expectedHeaders , iframe . contentWindow ) ; expect ( response ) . toEqual ( null ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { loadConfiguration : { id : 's' , accessToken : 's' } , response : { body : null } } ; spyHpm . post . and . returnValue ( Promise . resolve ( testData . response ) ) ; report . load ( testData . loadConfiguration ) . then ( response => { expect ( report . config ) . toEqual ( jasmine . objectContaining ( testData . loadConfiguration ) ) ; expect ( response ) . toEqual ( null ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( ) { let testData = { loadConfiguration : visualEmbedConfiguration , response : { body : null } } ; let expectedConfiguration = { id : visualEmbedConfiguration . id , accessToken : visualEmbedConfiguration . accessToken , embedUrl : visualEmbedConfiguration . embedUrl , type : visualEmbedConfiguration . type , pageName : visualEmbedConfiguration . pageName , visualName : visualEmbedConfiguration . visualName , width : visualEmbedConfiguration . width , height : visualEmbedConfiguration . height , settings : { filterPaneEnabled : false , navContentPaneEnabled : false , layoutType : models . LayoutType . Custom , customLayout : { displayOption : models . DisplayOption . FitToPage , pageSize : { type : models . PageSizeType . Custom , width : testData . loadConfiguration . width , height : testData . loadConfiguration . height , } , pagesLayout : { "s" : { defaultLayout : { displayState : { mode : models . VisualContainerDisplayMode . Hidden } } , visualsLayout : { "s" : { displayState : { mode : models . VisualContainerDisplayMode . Visible } , x : 0 , y : 0 , z : 0 , width : testData . loadConfiguration . width , height : testData . loadConfiguration . height } } } } } } } spyHpm . post . and . returnValue ( Promise . resolve ( testData . response ) ) ; embeddedVisual . load ( visualEmbedConfiguration ) ; expect ( spyHpm . post ) . toHaveBeenCalled ( ) ; let spyArgs = spyHpm . post . calls . mostRecent ( ) . args ; expect ( spyArgs [ 0 ] ) . toEqual ( 's' ) ; expect ( spyArgs [ 0 ] ) . toEqual ( expectedConfiguration ) ; expect ( spyArgs [ 0 ] ) . toEqual ( { bootstrapped : undefined , sdkVersion : sdkConfig . default . version , uid : visualUniqueId , sdkSessionId : sdkSessionId } ) ; expect ( spyArgs [ 0 ] ) . toEqual ( visualFrame . contentWindow ) ; } ) ; it ( 's' , function ( ) { embeddedVisual . getFilters ( models . FiltersLevel . Report ) ; expect ( spyHpm . get ) . toHaveBeenCalledWith ( 's' , { uid : visualUniqueId } , visualFrame . contentWindow ) ; } ) ; it ( 's' , function ( ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , measure : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) , ( new models . AdvancedFilter ( { table : "s" , measure : "s" } , "s" , [ { value : "s" , operator : "s" } , { value : "s" , operator : "s" } ] ) ) . toJSON ( ) ] } ; embeddedVisual . setFilters ( testData . filters , models . FiltersLevel . Report ) ; expect ( spyHpm . put ) . toHaveBeenCalledWith ( 's' , testData . filters , { uid : visualUniqueId } , visualFrame . contentWindow ) ; } ) ; it ( 's' , function ( ) { embeddedVisual . getFilters ( models . FiltersLevel . Page ) ; expect ( spyHpm . get ) . toHaveBeenCalledWith ( `template` , { uid : visualUniqueId } , visualFrame . contentWindow ) ; } ) ; it ( 's' , function ( ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , measure : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) , ( new models . AdvancedFilter ( { table : "s" , measure : "s" } , "s" , [ { value : "s" , operator : "s" } , { value : "s" , operator : "s" } ] ) ) . toJSON ( ) ] , response : { body : [ ] } } ; spyHpm . put . and . returnValue ( Promise . resolve ( testData . response ) ) ; embeddedVisual . setFilters ( testData . filters , models . FiltersLevel . Page ) ; expect ( spyHpm . put ) . toHaveBeenCalledWith ( `template` , testData . filters , { uid : visualUniqueId } , visualFrame . contentWindow ) ; } ) ; it ( 's' , function ( ) { embeddedVisual . getFilters ( ) ; expect ( spyHpm . get ) . toHaveBeenCalledWith ( `template` , { uid : visualUniqueId } , visualFrame . contentWindow ) ; } ) ; it ( 's' , function ( ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , measure : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) , ( new models . AdvancedFilter ( { table : "s" , measure : "s" } , "s" , [ { value : "s" , operator : "s" } , { value : "s" , operator : "s" } ] ) ) . toJSON ( ) ] , response : { body : [ ] } } ; spyHpm . put . and . returnValue ( Promise . resolve ( testData . response ) ) ; embeddedVisual . setFilters ( testData . filters ) ; expect ( spyHpm . put ) . toHaveBeenCalledWith ( `template` , testData . filters , { uid : visualUniqueId } , visualFrame . contentWindow ) ; } ) ; it ( 's' , function ( ) { const attempt = ( ) => { embeddedVisual . getPages ( ) } ; expect ( attempt ) . toThrow ( visual . Visual . GetPagesNotSupportedError ) ; } ) ; it ( 's' , function ( ) { const attempt = ( ) => { embeddedVisual . setPage ( null ) } ; expect ( attempt ) . toThrow ( visual . Visual . SetPageNotSupportedError ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { const testData = { response : { body : [ { name : 's' } ] } } ; spyHpm . get . and . returnValue ( Promise . resolve ( testData . response ) ) ; report . getPages ( ) ; expect ( spyHpm . get ) . toHaveBeenCalledWith ( 's' , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { const testData = { expectedError : { body : { message : 's' } } } ; spyHpm . get . and . returnValue ( Promise . reject ( testData . expectedError ) ) ; report . getPages ( ) . catch ( error => { expect ( spyHpm . get ) . toHaveBeenCalledWith ( 's' , { uid : uniqueId } , iframe . contentWindow ) ; expect ( error ) . toEqual ( testData . expectedError . body ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { pages : [ 's' , 's' ] , expectedResponse : { body : [ report . page ( 's' ) , report . page ( 's' ) ] } } ; spyHpm . get . and . returnValue ( Promise . resolve ( testData . expectedResponse ) ) ; report . getPages ( ) . then ( pages => { expect ( spyHpm . get ) . toHaveBeenCalledWith ( 's' , { uid : uniqueId } , iframe . contentWindow ) ; expect ( pages [ 0 ] . name ) . toEqual ( testData . expectedResponse . body [ 0 ] . name ) ; expect ( pages [ 0 ] . name ) . toEqual ( testData . expectedResponse . body [ 0 ] . name ) ; done ( ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { const testData = { response : { body : [ ( new models . BasicFilter ( { table : "s" , measure : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) , ( new models . AdvancedFilter ( { table : "s" , measure : "s" } , "s" , [ { value : "s" , operator : "s" } , { value : "s" , operator : "s" } ] ) ) . toJSON ( ) ] } } ; spyHpm . get . and . returnValue ( Promise . resolve ( testData . response ) ) ; report . getFilters ( ) ; expect ( spyHpm . get ) . toHaveBeenCalledWith ( 's' , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { const testData = { expectedErrors : { body : [ { message : 's' } ] } } ; spyHpm . get . and . returnValue ( Promise . reject ( testData . expectedErrors ) ) ; report . getFilters ( ) . catch ( errors => { expect ( spyHpm . get ) . toHaveBeenCalledWith ( 's' , { uid : uniqueId } , iframe . contentWindow ) ; expect ( errors ) . toEqual ( jasmine . objectContaining ( testData . expectedErrors . body ) ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { response : { body : [ ( new models . BasicFilter ( { table : "s" , measure : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) , ( new models . AdvancedFilter ( { table : "s" , measure : "s" } , "s" , [ { value : "s" , operator : "s" } , { value : "s" , operator : "s" } ] ) ) . toJSON ( ) ] } } ; spyHpm . get . and . returnValue ( Promise . resolve ( testData . response ) ) ; report . getFilters ( ) . then ( filters => { expect ( spyHpm . get ) . toHaveBeenCalledWith ( 's' , { uid : uniqueId } , iframe . contentWindow ) ; expect ( filters ) . toEqual ( testData . response . body ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , measure : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) , ( new models . AdvancedFilter ( { table : "s" , measure : "s" } , "s" , [ { value : "s" , operator : "s" } , { value : "s" , operator : "s" } ] ) ) . toJSON ( ) ] } ; report . setFilters ( testData . filters ) ; expect ( spyHpm . put ) . toHaveBeenCalledWith ( 's' , testData . filters , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , measure : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) , ( new models . AdvancedFilter ( { table : "s" , measure : "s" } , "s" , [ { value : "s" , operator : "s" } , { value : "s" , operator : "s" } ] ) ) . toJSON ( ) ] , expectedErrors : { body : [ { message : 's' } ] } } ; spyHpm . put . and . returnValue ( Promise . reject ( testData . expectedErrors ) ) ; report . setFilters ( testData . filters ) . catch ( errors => { expect ( spyHpm . put ) . toHaveBeenCalledWith ( 's' , testData . filters , { uid : uniqueId } , iframe . contentWindow ) ; expect ( errors ) . toEqual ( jasmine . objectContaining ( testData . expectedErrors . body ) ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , measure : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) , ( new models . AdvancedFilter ( { table : "s" , measure : "s" } , "s" , [ { value : "s" , operator : "s" } , { value : "s" , operator : "s" } ] ) ) . toJSON ( ) ] } ; spyHpm . put . and . returnValue ( Promise . resolve ( null ) ) ; report . setFilters ( testData . filters ) . then ( response => { expect ( spyHpm . put ) . toHaveBeenCalledWith ( 's' , testData . filters , { uid : uniqueId } , iframe . contentWindow ) ; expect ( response ) . toEqual ( null ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( ) { report . removeFilters ( ) ; expect ( spyHpm . put ) . toHaveBeenCalledWith ( 's' , [ ] , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { spyHpm . put . and . returnValue ( Promise . resolve ( null ) ) ; report . removeFilters ( ) . then ( response => { expect ( spyHpm . put ) . toHaveBeenCalledWith ( 's' , [ ] , { uid : uniqueId } , iframe . contentWindow ) ; expect ( response ) . toEqual ( null ) ; done ( ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { spyHpm . post . and . returnValue ( Promise . resolve ( { body : { } } ) ) ; report . switchMode ( models . ViewMode . Edit ) ; let url = 's' ; expect ( spyHpm . post ) . toHaveBeenCalledWith ( url , null , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { spyHpm . post . and . returnValue ( Promise . resolve ( { body : { } } ) ) ; report . switchMode ( models . ViewMode . Edit ) . then ( ( ) => { let url = 's' ; expect ( spyHpm . post ) . toHaveBeenCalledWith ( url , null , { uid : uniqueId } , iframe . contentWindow ) ; done ( ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { spyHpm . post . and . returnValue ( Promise . resolve ( { body : { } } ) ) ; report . save ( ) ; expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , null , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { spyHpm . post . and . returnValue ( Promise . resolve ( { body : { } } ) ) ; report . save ( ) . then ( ( ) => { expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , null , { uid : uniqueId } , iframe . contentWindow ) ; done ( ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { let saveAsParameters : models . ISaveAsParameters = { name : "s" } ; it ( 's' , function ( ) { spyHpm . post . and . returnValue ( Promise . resolve ( { body : { } } ) ) ; report . saveAs ( saveAsParameters ) ; expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , saveAsParameters , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { spyHpm . post . and . returnValue ( Promise . resolve ( { body : { } } ) ) ; report . saveAs ( saveAsParameters ) . then ( ( ) => { expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , saveAsParameters , { uid : uniqueId } , iframe . contentWindow ) ; done ( ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { let accessToken = "s" ; it ( 's' , function ( ) { spyHpm . post . and . returnValue ( Promise . resolve ( { body : { } } ) ) ; report . setAccessToken ( accessToken ) ; expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , accessToken , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { spyHpm . post . and . returnValue ( Promise . resolve ( { body : { } } ) ) ; let newToken = "s" report . setAccessToken ( newToken ) . then ( ( ) => { expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , newToken , { uid : uniqueId } , iframe . contentWindow ) ; expect ( report . service . accessToken ) . toEqual ( newToken ) ; expect ( report . config . accessToken ) . toEqual ( newToken ) ; expect ( report . element . getAttribute ( embed . Embed . accessTokenAttribute ) ) . toEqual ( newToken ) ; done ( ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { spyHpm . post . and . returnValue ( Promise . resolve ( { body : { } } ) ) ; report . print ( ) ; expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , null , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { spyHpm . post . and . returnValue ( Promise . resolve ( { body : { } } ) ) ; report . print ( ) . then ( ( ) => { expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , null , { uid : uniqueId } , iframe . contentWindow ) ; done ( ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { const testData = { loadConfiguration : { id : 's' , accessToken : 's' } , response : { body : null } } ; spyHpm . post . and . returnValue ( Promise . resolve ( testData . response ) ) ; report . load ( testData . loadConfiguration ) . then ( ( ) => { spyHpm . post . calls . reset ( ) ; report . reload ( ) ; const expectedHeaders = { bootstrapped : undefined , sdkVersion : sdkConfig . default . version , uid : uniqueId , sdkSessionId : sdkSessionId } ; expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , jasmine . objectContaining ( testData . loadConfiguration ) , expectedHeaders , iframe . contentWindow ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { spyHpm . post . and . returnValue ( Promise . resolve ( { body : { } } ) ) ; report . refresh ( ) ; expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , null , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { const testData = { settings : { filterPaneEnabled : false } } ; report . updateSettings ( testData . settings ) ; expect ( spyHpm . patch ) . toHaveBeenCalledWith ( 's' , testData . settings , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { const testData = { settings : { filterPaneEnabled : false } , expectedError : { body : [ { message : 's' } ] } } ; spyHpm . patch . and . returnValue ( Promise . reject ( testData . expectedError ) ) ; report . updateSettings ( testData . settings ) . catch ( errors => { expect ( spyHpm . patch ) . toHaveBeenCalledWith ( 's' , testData . settings , { uid : uniqueId } , iframe . contentWindow ) ; expect ( errors ) . toEqual ( testData . expectedError . body ) ; done ( ) } ) ; } ) ; it ( 's' , function ( done ) { const testData = { settings : { filterPaneEnabled : false } } ; spyHpm . patch . and . returnValue ( Promise . resolve ( null ) ) ; report . updateSettings ( testData . settings ) . then ( response => { expect ( spyHpm . patch ) . toHaveBeenCalledWith ( 's' , testData . settings , { uid : uniqueId } , iframe . contentWindow ) ; expect ( response ) . toEqual ( null ) ; done ( ) } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { describe ( 's' , function ( ) { it ( 's' , function ( ) { const testData = { createConfiguration : { datasetId : 's' , accessToken : 's' } , response : { body : null } } ; spyHpm . post . and . returnValue ( Promise . resolve ( testData . response ) ) ; create . createReport ( testData . createConfiguration ) ; expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , testData . createConfiguration , { uid : createUniqueId , sdkSessionId : sdkSessionId } , createIframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { const testData = { createConfiguration : { datasetId : 's' , accessToken : 's' } , errorResponse : { body : { message : "s" } } } ; spyHpm . post . and . returnValue ( Promise . reject ( testData . errorResponse ) ) ; create . createReport ( testData . createConfiguration ) . catch ( error => { expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , testData . createConfiguration , { uid : createUniqueId , sdkSessionId : sdkSessionId } , createIframe . contentWindow ) ; expect ( error ) . toEqual ( testData . errorResponse . body ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { createConfiguration : { datasetId : 's' , accessToken : 's' } , response : { body : null } } ; spyHpm . post . and . returnValue ( Promise . resolve ( testData . response ) ) ; create . createReport ( testData . createConfiguration ) . then ( response => { expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , testData . createConfiguration , { uid : createUniqueId , sdkSessionId : sdkSessionId } , createIframe . contentWindow ) ; expect ( response ) . toEqual ( null ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { describe ( 's' , function ( ) { it ( 's' , function ( ) { const testData = { loadConfiguration : { id : 's' , accessToken : 's' , type : 's' } , response : { body : null } } ; spyHpm . post . and . returnValue ( Promise . resolve ( testData . response ) ) ; dashboard . load ( testData . loadConfiguration ) ; const expectedHeaders = { bootstrapped : undefined , sdkVersion : sdkConfig . default . version , uid : dashboardUniqueId , sdkSessionId : sdkSessionId } ; expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , testData . loadConfiguration , expectedHeaders , dashboardIframe . contentWindow ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { describe ( 's' , function ( ) { it ( 's' , function ( ) { 0 . getFilters ( ) ; expect ( spyHpm . get ) . toHaveBeenCalledWith ( `template` , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { const testData = { expectedError : { body : { message : 's' } } } ; spyHpm . get . and . returnValue ( Promise . reject ( testData . expectedError ) ) ; 0 . getFilters ( ) . catch ( error => { expect ( spyHpm . get ) . toHaveBeenCalledWith ( `template` , { uid : uniqueId } , iframe . contentWindow ) ; expect ( error ) . toEqual ( testData . expectedError . body ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { expectedResponse : { body : [ { x : 's' } , { x : 's' } ] } } ; spyHpm . get . and . returnValue ( Promise . resolve ( testData . expectedResponse ) ) ; 0 . getFilters ( ) . then ( filters => { expect ( spyHpm . get ) . toHaveBeenCalledWith ( `template` , { uid : uniqueId } , iframe . contentWindow ) ; expect ( filters ) . toEqual ( testData . expectedResponse . body ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , measure : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) , ( new models . AdvancedFilter ( { table : "s" , measure : "s" } , "s" , [ { value : "s" , operator : "s" } , { value : "s" , operator : "s" } ] ) ) . toJSON ( ) ] , response : { body : [ ] } } ; spyHpm . put . and . returnValue ( Promise . resolve ( testData . response ) ) ; 0 . setFilters ( testData . filters ) ; expect ( spyHpm . put ) . toHaveBeenCalledWith ( `template` , testData . filters , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , measure : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) , ( new models . AdvancedFilter ( { table : "s" , measure : "s" } , "s" , [ { value : "s" , operator : "s" } , { value : "s" , operator : "s" } ] ) ) . toJSON ( ) ] , expectedErrors : { body : [ { message : 's' } ] } } ; spyHpm . put . and . returnValue ( Promise . reject ( testData . expectedErrors ) ) ; 0 . setFilters ( testData . filters ) . catch ( errors => { expect ( spyHpm . put ) . toHaveBeenCalledWith ( `template` , testData . filters , { uid : uniqueId } , iframe . contentWindow ) ; expect ( errors ) . toEqual ( jasmine . objectContaining ( testData . expectedErrors . body ) ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , measure : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) , ( new models . AdvancedFilter ( { table : "s" , measure : "s" } , "s" , [ { value : "s" , operator : "s" } , { value : "s" , operator : "s" } ] ) ) . toJSON ( ) ] } ; spyHpm . put . and . returnValue ( Promise . resolve ( null ) ) ; 0 . setFilters ( testData . filters ) . then ( response => { expect ( spyHpm . put ) . toHaveBeenCalledWith ( `template` , testData . filters , { uid : uniqueId } , iframe . contentWindow ) ; expect ( response ) . toEqual ( null ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( ) { 0 . removeFilters ( ) ; expect ( spyHpm . put ) . toHaveBeenCalledWith ( `template` , [ ] , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { spyHpm . put . and . returnValue ( Promise . resolve ( null ) ) ; 0 . removeFilters ( ) . then ( response => { expect ( spyHpm . put ) . toHaveBeenCalledWith ( `template` , [ ] , { uid : uniqueId } , iframe . contentWindow ) ; expect ( response ) . toEqual ( null ) ; done ( ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { const testData = { page : { name : 0 . name , displayName : null , isActive : true , } } ; spyHpm . put . and . returnValue ( Promise . resolve ( null ) ) ; 0 . setActive ( ) ; expect ( spyHpm . put ) . toHaveBeenCalledWith ( `template` , testData . page , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { const testData = { page : { name : 0 . name , displayName : null , isActive : true , } , response : { body : [ { message : 's' } ] } } ; spyHpm . put . and . returnValue ( Promise . reject ( testData . response ) ) ; 0 . setActive ( ) . catch ( errors => { expect ( spyHpm . put ) . toHaveBeenCalledWith ( `template` , testData . page , { uid : uniqueId } , iframe . contentWindow ) ; expect ( errors ) . toEqual ( jasmine . objectContaining ( testData . response . body ) ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { page : { name : 0 . name , displayName : null , isActive : true , } } ; spyHpm . put . and . returnValue ( Promise . resolve ( null ) ) ; 0 . setActive ( ) . then ( response => { expect ( spyHpm . put ) . toHaveBeenCalledWith ( `template` , testData . page , { uid : uniqueId } , iframe . contentWindow ) ; expect ( response ) . toEqual ( null ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { describe ( 's' , function ( ) { it ( 's' , function ( ) { 0 . getFilters ( ) ; expect ( spyHpm . get ) . toHaveBeenCalledWith ( `template` , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { const testData = { expectedError : { body : { message : 's' } } } ; spyHpm . get . and . returnValue ( Promise . reject ( testData . expectedError ) ) ; 0 . getFilters ( ) . catch ( error => { expect ( spyHpm . get ) . toHaveBeenCalledWith ( `template` , { uid : uniqueId } , iframe . contentWindow ) ; expect ( error ) . toEqual ( testData . expectedError . body ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { expectedResponse : { body : [ { x : 's' } , { x : 's' } ] } } ; spyHpm . get . and . returnValue ( Promise . resolve ( testData . expectedResponse ) ) ; 0 . getFilters ( ) . then ( filters => { expect ( spyHpm . get ) . toHaveBeenCalledWith ( `template` , { uid : uniqueId } , iframe . contentWindow ) ; expect ( filters ) . toEqual ( testData . expectedResponse . body ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , measure : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) , ( new models . AdvancedFilter ( { table : "s" , measure : "s" } , "s" , [ { value : "s" , operator : "s" } , { value : "s" , operator : "s" } ] ) ) . toJSON ( ) ] , response : { body : [ ] } } ; spyHpm . put . and . returnValue ( Promise . resolve ( testData . response ) ) ; 0 . setFilters ( testData . filters ) ; expect ( spyHpm . put ) . toHaveBeenCalledWith ( `template` , testData . filters , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , measure : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) , ( new models . AdvancedFilter ( { table : "s" , measure : "s" } , "s" , [ { value : "s" , operator : "s" } , { value : "s" , operator : "s" } ] ) ) . toJSON ( ) ] , expectedErrors : { body : [ { message : 's' } ] } } ; spyHpm . put . and . returnValue ( Promise . reject ( testData . expectedErrors ) ) ; 0 . setFilters ( testData . filters ) . catch ( errors => { expect ( spyHpm . put ) . toHaveBeenCalledWith ( `template` , testData . filters , { uid : uniqueId } , iframe . contentWindow ) ; expect ( errors ) . toEqual ( jasmine . objectContaining ( testData . expectedErrors . body ) ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , measure : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) , ( new models . AdvancedFilter ( { table : "s" , measure : "s" } , "s" , [ { value : "s" , operator : "s" } , { value : "s" , operator : "s" } ] ) ) . toJSON ( ) ] } ; spyHpm . put . and . returnValue ( Promise . resolve ( null ) ) ; 0 . setFilters ( testData . filters ) . then ( response => { expect ( spyHpm . put ) . toHaveBeenCalledWith ( `template` , testData . filters , { uid : uniqueId } , iframe . contentWindow ) ; expect ( response ) . toEqual ( null ) ; done ( ) ; } ) ; } ) ; it ( 's' , function ( ) { 0 . removeFilters ( ) ; expect ( spyHpm . put ) . toHaveBeenCalledWith ( `template` , [ ] , { uid : uniqueId } , iframe . contentWindow ) ; } ) ; it ( 's' , function ( done ) { spyHpm . put . and . returnValue ( Promise . resolve ( null ) ) ; 0 . removeFilters ( ) . then ( response => { expect ( spyHpm . put ) . toHaveBeenCalledWith ( `template` , [ ] , { uid : uniqueId } , iframe . contentWindow ) ; expect ( response ) . toEqual ( null ) ; done ( ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( ) { const testData = { theme : { themeJson : { name : "s" } } , response : { body : null } } ; spyHpm . post . and . returnValue ( Promise . resolve ( testData . response ) ) ; report . applyTheme ( testData . theme ) . then ( ( ) => { spyHpm . post . calls . reset ( ) ; report . reload ( ) ; expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , jasmine . objectContaining ( testData . theme ) , { uid : uniqueId , sdkSessionId : sdkSessionId } , iframe . contentWindow ) ; } ) ; } ) ; it ( 's' , function ( ) { const response = { body : null } ; spyHpm . post . and . returnValue ( Promise . resolve ( response ) ) ; report . resetTheme ( ) . then ( ( ) => { spyHpm . post . calls . reset ( ) ; report . reload ( ) ; expect ( spyHpm . post ) . toHaveBeenCalledWith ( 's' , jasmine . objectContaining ( { } ) , { uid : uniqueId , sdkSessionId : sdkSessionId } , iframe . contentWindow ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( `template` , function ( ) { const testData = { eventName : 's' , handler : jasmine . createSpy ( 's' ) } ; const attemptToSubscribeToEvent = ( ) => { report . on ( testData . eventName , testData . handler ) ; } ; expect ( attemptToSubscribeToEvent ) . toThrowError ( ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { let $element ; let iframe ; let powerbi : service . Service ; let report : report . Report ; let uniqueId ; beforeAll ( function ( ) { const spyWpmpFactory : factories . IWpmpFactory = ( name ? , logMessages ? ) => { return < Wpmp . WindowPostMessageProxy > < any > spyWpmp ; } ; powerbi = new service . Service ( factories . hpmFactory , spyWpmpFactory , factories . routerFactory ) ; $element = $ ( `template` ) . appendTo ( document . body ) ; const iframeSrc = "s" ; const embedConfiguration = { type : "s" , id : "s" , accessToken : 's' , embedUrl : iframeSrc , wpmpName : 's' } ; report = < report . Report > powerbi . embed ( $element [ 0 ] , embedConfiguration ) ; uniqueId = report . config . uniqueId ; iframe = < HTMLIFrameElement > $element . find ( 's' ) [ 0 ] ; spyWpmp . addHandler . calls . reset ( ) ; spyHpm . post . calls . reset ( ) ; } ) ; afterAll ( function ( ) { powerbi . reset ( $element . get ( 0 ) ) ; $element . remove ( ) ; powerbi . wpmp . stop ( ) ; } ) ; afterEach ( function ( ) { spyHpm . get . calls . reset ( ) ; spyHpm . post . calls . reset ( ) ; spyHpm . patch . calls . reset ( ) ; spyHpm . put . calls . reset ( ) ; spyHpm . delete . calls . reset ( ) ; spyRouter . get . calls . reset ( ) ; spyRouter . post . calls . reset ( ) ; spyRouter . patch . calls . reset ( ) ; spyRouter . put . calls . reset ( ) ; spyRouter . delete . calls . reset ( ) ; } ) ; describe ( 's' , function ( ) { it ( `template` , function ( ) { const testData = { eventName : 's' , handler : jasmine . createSpy ( 's' ) , filtersAppliedEvent : { data : { method : 's' , url : `template` , body : { initiator : 's' , filters : [ { x : 's' } ] } } } } ; report . on ( testData . eventName , testData . handler ) ; spyWpmp . onMessageReceived ( testData . filtersAppliedEvent ) ; expect ( testData . handler ) . toHaveBeenCalledWith ( jasmine . objectContaining ( { detail : testData . filtersAppliedEvent . data . body } ) ) ; } ) ; it ( `template` , function ( ) { const testData = { eventName : 's' , handler : jasmine . createSpy ( 's' ) , simulatedEvent : { data : { method : 's' , url : `template` , body : { initiator : 's' , filter : { x : 's' , y : 's' } } } } } ; report . on ( testData . eventName , testData . handler ) ; report . off ( testData . eventName , testData . handler ) ; spyWpmp . onMessageReceived ( testData . simulatedEvent ) ; expect ( testData . handler ) . not . toHaveBeenCalled ( ) ; } ) ; it ( 's' , function ( ) { const testData = { eventName : 's' , handler : jasmine . createSpy ( 's' ) , 0 : jasmine . createSpy ( 's' ) , 0 : jasmine . createSpy ( 's' ) , simulatedEvent : { data : { method : 's' , url : `template` , body : { initiator : 's' , filter : { x : 's' , y : 's' } } } } } ; report . on ( testData . eventName , testData . handler ) ; report . on ( testData . eventName , testData . 0 ) ; report . on ( testData . eventName , testData . 0 ) ; spyWpmp . onMessageReceived ( testData . simulatedEvent ) ; expect ( testData . handler ) . toHaveBeenCalledWith ( jasmine . objectContaining ( { detail : testData . simulatedEvent . data . body } ) ) ; expect ( testData . 0 ) . toHaveBeenCalledWith ( jasmine . objectContaining ( { detail : testData . simulatedEvent . data . body } ) ) ; expect ( testData . 0 ) . toHaveBeenCalledWith ( jasmine . objectContaining ( { detail : testData . simulatedEvent . data . body } ) ) ; } ) ; it ( `template` , function ( ) { const testData = { eventName : 's' , handler : jasmine . createSpy ( 's' ) , 0 : jasmine . createSpy ( 's' ) , 0 : jasmine . createSpy ( 's' ) , simulatedEvent : { data : { method : 's' , url : 's' , body : { initiator : 's' , filter : { x : 's' , y : 's' } } } } } ; report . on ( testData . eventName , testData . handler ) ; report . on ( testData . eventName , testData . 0 ) ; report . on ( testData . eventName , testData . 0 ) ; report . off ( testData . eventName ) ; spyWpmp . onMessageReceived ( testData . simulatedEvent ) ; expect ( testData . handler ) . not . toHaveBeenCalled ( ) ; expect ( testData . 0 ) . not . toHaveBeenCalled ( ) ; expect ( testData . 0 ) . not . toHaveBeenCalled ( ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { let $element ; let 0 ; let iframe ; let 0 ; let iframeHpm : Hpm . HttpPostMessage ; let 0 : Hpm . HttpPostMessage ; let iframeLoaded < void [ ] > ; let powerbi : service . Service ; let report : report . Report ; let 0 : page . Page ; let 0 : report . Report ; beforeAll ( function ( ) { powerbi = new service . Service ( factories . hpmFactory , factories . wpmpFactory , factories . routerFactory , { wpmpName : 's' , logMessages } ) ; $element = $ ( `template` ) . appendTo ( document . body ) ; 0 = $ ( `template` ) . appendTo ( document . body ) ; const iframeSrc = "s" ; const embedConfiguration : embed . IEmbedConfiguration = { type : "s" , id : "s" , accessToken : 's' , embedUrl : iframeSrc } ; report = < report . Report > powerbi . embed ( $element [ 0 ] , embedConfiguration ) ; 0 = report . page ( 's' ) ; 0 = < report . Report > powerbi . embed ( 0 [ 0 ] , embedConfiguration ) ; iframe = < HTMLIFrameElement > $element . find ( 's' ) [ 0 ] ; 0 = < HTMLIFrameElement > 0 . find ( 's' ) [ 0 ] ; ( < any > powerbi . wpmp ) . eventSourceOverrideWindow = iframe . contentWindow ; iframeHpm = setupEmbedMockApp ( iframe . contentWindow , window , logMessages , 's' ) ; 0 = setupEmbedMockApp ( 0 . contentWindow , window , logMessages , 's' ) ; spyApp . validateReportLoad . calls . reset ( ) ; spyApp . validateDashboardLoad . calls . reset ( ) ; spyApp . reset ( ) ; const 0 = new Promise < void > ( ( resolve , reject ) => { iframe . addEventListener ( 's' , ( ) => { resolve ( null ) ; } ) ; } ) ; const 0 = new Promise < void > ( ( resolve , reject ) => { 0 . addEventListener ( 's' , ( ) => { resolve ( null ) ; } ) ; } ) ; iframeLoaded = Promise . all < void > ( [ 0 , 0 ] ) ; } ) ; afterAll ( function ( ) { powerbi . reset ( $element . get ( 0 ) ) ; $element . remove ( ) ; powerbi . wpmp . stop ( ) ; } ) ; afterEach ( function ( ) { spyApp . reset ( ) ; } ) ; describe ( 's' , function ( ) { describe ( 's' , function ( ) { it ( `template` , function ( done ) { const testData = { loadConfig : { id : 's' , accessToken : 's' } , expectedErrors : [ { message : 's' } ] } ; iframeLoaded . then ( ( ) => { spyApp . validateReportLoad . and . returnValue ( Promise . reject ( testData . expectedErrors ) ) ; report . load ( testData . loadConfig ) . catch ( errors => { expect ( spyApp . validateReportLoad ) . toHaveBeenCalledWith ( testData . loadConfig ) ; expect ( spyApp . reportLoad ) . not . toHaveBeenCalled ( ) ; expect ( errors ) . toEqual ( jasmine . objectContaining ( testData . expectedErrors ) ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { loadConfig : { id : 's' , accessToken : 's' } } ; iframeLoaded . then ( ( ) => { spyApp . validateReportLoad . and . returnValue ( Promise . resolve ( null ) ) ; spyApp . reportLoad . and . returnValue ( Promise . resolve ( null ) ) ; report . load ( testData . loadConfig ) . then ( response => { expect ( spyApp . validateReportLoad ) . toHaveBeenCalledWith ( testData . loadConfig ) ; expect ( spyApp . reportLoad ) . toHaveBeenCalledWith ( testData . loadConfig ) ; expect ( response ) . toEqual ( undefined ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { expectedError : { message : 's' } } ; iframeLoaded . then ( ( ) => { spyApp . getPages . and . returnValue ( Promise . reject ( testData . expectedError ) ) ; report . getPages ( ) . catch ( error => { expect ( spyApp . getPages ) . toHaveBeenCalled ( ) ; expect ( error ) . toEqual ( jasmine . objectContaining ( testData . expectedError ) ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { pages : [ { name : "s" , displayName : "s" , isActive : true } ] } ; iframeLoaded . then ( ( ) => { spyApp . getPages . and . returnValue ( Promise . resolve ( testData . pages ) ) ; report . getPages ( ) . then ( pages => { expect ( spyApp . getPages ) . toHaveBeenCalled ( ) ; pages . forEach ( page => { const testPage = util . find ( p => p . name === page . name , testData . pages ) ; if ( testPage ) { expect ( page . name ) . toEqual ( testPage . name ) ; expect ( page . isActive ) . toEqual ( testPage . isActive ) } else { expect ( true ) . toBe ( false ) ; } } ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { expectedError : { message : 's' } } ; iframeLoaded . then ( ( ) => { spyApp . getFilters . and . returnValue ( Promise . reject ( testData . expectedError ) ) ; report . getFilters ( ) . catch ( error => { expect ( spyApp . getFilters ) . toHaveBeenCalled ( ) ; expect ( error ) . toEqual ( jasmine . objectContaining ( testData . expectedError ) ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ { x : 's' } ] } ; iframeLoaded . then ( ( ) => { spyApp . getFilters . and . returnValue ( Promise . resolve ( testData . filters ) ) ; report . getFilters ( ) . then ( filters => { expect ( spyApp . getFilters ) . toHaveBeenCalled ( ) ; expect ( filters ) . toEqual ( testData . filters ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , column : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) ] , expectedErrors : [ { message : 's' } ] } ; iframeLoaded . then ( ( ) => { spyApp . validateFilter . and . returnValue ( Promise . reject ( testData . expectedErrors ) ) ; report . setFilters ( testData . filters ) . catch ( error => { expect ( spyApp . validateFilter ) . toHaveBeenCalledWith ( testData . filters [ 0 ] ) ; expect ( spyApp . setFilters ) . not . toHaveBeenCalled ( ) ; expect ( error ) . toEqual ( jasmine . objectContaining ( testData . expectedErrors ) ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , column : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) ] } ; iframeLoaded . then ( ( ) => { spyApp . validateFilter . and . returnValue ( Promise . resolve ( null ) ) ; spyApp . setFilters . and . returnValue ( Promise . resolve ( null ) ) ; report . setFilters ( testData . filters ) . then ( response => { expect ( spyApp . validateFilter ) . toHaveBeenCalledWith ( testData . filters [ 0 ] ) ; expect ( spyApp . setFilters ) . toHaveBeenCalledWith ( testData . filters ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { iframeLoaded . then ( ( ) => { spyApp . setFilters . and . returnValue ( Promise . resolve ( null ) ) ; report . removeFilters ( ) . then ( response => { expect ( spyApp . setFilters ) . toHaveBeenCalled ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { iframeLoaded . then ( ( ) => { spyApp . print . and . returnValue ( Promise . resolve ( null ) ) ; report . print ( ) . then ( response => { expect ( spyApp . print ) . toHaveBeenCalled ( ) ; expect ( response ) . toEqual ( undefined ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { iframeLoaded . then ( ( ) => { spyApp . refreshData . and . returnValue ( Promise . resolve ( null ) ) ; report . refresh ( ) . then ( response => { expect ( spyApp . refreshData ) . toHaveBeenCalled ( ) ; expect ( response ) . toEqual ( undefined ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { settings : { filterPaneEnabled : false } , expectedErrors : [ { message : 's' } ] } ; iframeLoaded . then ( ( ) => { spyApp . validateSettings . and . returnValue ( Promise . reject ( testData . expectedErrors ) ) ; report . updateSettings ( testData . settings ) . catch ( errors => { expect ( spyApp . validateSettings ) . toHaveBeenCalledWith ( testData . settings ) ; expect ( spyApp . updateSettings ) . not . toHaveBeenCalled ( ) ; expect ( errors ) . toEqual ( jasmine . objectContaining ( testData . expectedErrors ) ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { settings : { filterPaneEnabled : false } , expectedErrors : [ { message : 's' } ] } ; iframeLoaded . then ( ( ) => { spyApp . validateSettings . and . returnValue ( Promise . resolve ( null ) ) ; spyApp . updateSettings . and . returnValue ( Promise . resolve ( null ) ) ; report . updateSettings ( testData . settings ) . then ( response => { expect ( spyApp . validateSettings ) . toHaveBeenCalledWith ( testData . settings ) ; expect ( spyApp . updateSettings ) . toHaveBeenCalledWith ( testData . settings ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { expectedError : { message : 's' } } ; iframeLoaded . then ( ( ) => { spyApp . getFilters . and . returnValue ( Promise . reject ( testData . expectedError ) ) ; 0 . getFilters ( ) . catch ( error => { expect ( spyApp . getFilters ) . toHaveBeenCalled ( ) ; expect ( error ) . toEqual ( jasmine . objectContaining ( testData . expectedError ) ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ { x : 's' } ] } ; iframeLoaded . then ( ( ) => { spyApp . getFilters . and . returnValue ( Promise . resolve ( testData . filters ) ) ; 0 . getFilters ( ) . then ( filters => { expect ( spyApp . getFilters ) . toHaveBeenCalled ( ) ; expect ( filters ) . toEqual ( testData . filters ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , column : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) ] , expectedErrors : [ { message : 's' } ] } ; iframeLoaded . then ( ( ) => { spyApp . validateFilter . and . returnValue ( Promise . reject ( testData . expectedErrors ) ) ; 0 . setFilters ( testData . filters ) . catch ( error => { expect ( spyApp . validateFilter ) . toHaveBeenCalledWith ( testData . filters [ 0 ] ) ; expect ( spyApp . setFilters ) . not . toHaveBeenCalled ( ) ; expect ( error ) . toEqual ( jasmine . objectContaining ( testData . expectedErrors ) ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { filters : [ ( new models . BasicFilter ( { table : "s" , column : "s" } , "s" , [ "s" , "s" ] ) ) . toJSON ( ) ] } ; iframeLoaded . then ( ( ) => { spyApp . validateFilter . and . returnValue ( Promise . resolve ( null ) ) ; spyApp . setFilters . and . returnValue ( Promise . resolve ( null ) ) ; 0 . setFilters ( testData . filters ) . then ( response => { expect ( spyApp . validateFilter ) . toHaveBeenCalledWith ( testData . filters [ 0 ] ) ; expect ( spyApp . setFilters ) . toHaveBeenCalledWith ( testData . filters ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { iframeLoaded . then ( ( ) => { spyApp . setFilters . and . returnValue ( Promise . resolve ( null ) ) ; 0 . removeFilters ( ) . then ( response => { expect ( spyApp . setFilters ) . toHaveBeenCalled ( ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( 's' , function ( done ) { const testData = { errors : [ { message : 's' } ] } ; iframeLoaded . then ( ( ) => { spyApp . validatePage . and . returnValue ( Promise . reject ( testData . errors ) ) ; 0 . setActive ( ) . catch ( errors => { expect ( spyApp . validatePage ) . toHaveBeenCalled ( ) ; expect ( spyApp . setPage ) . not . toHaveBeenCalled ( ) ; expect ( errors ) . toEqual ( jasmine . objectContaining ( testData . errors ) ) ; done ( ) ; } ) ; } ) ; } ) ; it ( 's' , function ( done ) { const testData = { errors : [ { message : 's' } ] } ; iframeLoaded . then ( ( ) => { setTimeout ( ( ) => { spyApp . validatePage . and . returnValue ( Promise . resolve ( null ) ) ; spyApp . setPage . and . returnValue ( Promise . resolve ( null ) ) ; 0 . setActive ( ) . then ( ( ) => { expect ( spyApp . validatePage ) . toHaveBeenCalled ( ) ; expect ( spyApp . setPage ) . toHaveBeenCalled ( ) ; done ( ) ; } ) ; } , 0 ) ; } ) ; } ) ; } ) ; } ) ; describe ( 's' , function ( ) { it ( `template` , function ( ) { const testData = { eventName : 's' , handler : jasmine . createSpy ( 's' ) } ; const attemptToSubscribeToEvent = ( ) => { report . on ( testData . eventName , testData . handler ) ; } ; expect ( attemptToSubscribeToEvent ) . toThrowError ( ) ; } ) ; it ( `template` , function ( done ) { const testData = { reportId : 's' , eventName : 's' , handler : jasmine . createSpy ( 's' ) , simulatedPageChangeBody : { initiator : 's' , newPage : { name : 's' , displayName : 's' } } , expectedEvent : { detail : { initiator : 's' , newPage : report . page ( 's' ) } } } ; const testDataHandler : jasmine . Spy = testData . handler ; report . on ( testData . eventName , testData . handler ) ; iframeHpm . post ( `template` , testData . simulatedPageChangeBody ) . then ( response => { expect ( testData . handler ) . toHaveBeenCalledWith ( jasmine . any ( CustomEvent ) ) ; expect ( testData . handler . calls . mostRecent ( ) . args [ 0 ] . detail . newPage . name ) . toEqual ( testData . expectedEvent . detail . newPage . name ) ; done ( ) ; } ) ; } ) ; it ( `template` , function ( done ) { const testData = { reportId : 's' , eventName : 's' , handler : jasmine . createSpy ( 's' ) , 0 : jasmine . createSpy ( 's' ) , simulatedPageChangeBody : { initiator : 's' , newPage : { name : 's' , displayName : 's' } } } ; report . on ( testData . eventName , testData . handler ) ; 0 . on ( testData . eventName , testData . 0 ) ; iframeHpm . post ( `template` , testData . simulatedPageChangeBody ) . then ( response => { expect ( testData . handler ) . not . toHaveBeenCalled ( ) ; expect ( testData . 0 ) . toHaveBeenCalledWith ( jasmine . any ( CustomEvent ) ) ; expect ( testData . 0 . calls . mostRecent ( ) . args [ 0 ] . detail . newPage . name ) . toEqual ( testData . simulatedPageChangeBody . newPage . name ) ; done ( ) ; } ) ; } ) ; it ( `template` , function ( done ) { const testData = { reportId : 's' , eventName : 's' , handler : jasmine . createSpy ( 's' ) , simulatedBody : { initiator : 's' } } ; report . on ( testData . eventName , testData . handler ) ; iframeHpm . post ( `template` , testData . simulatedBody ) . then ( response => { expect ( testData . handler ) . toHaveBeenCalledWith ( jasmine . any ( CustomEvent ) ) ; expect ( testData . handler ) . toHaveBeenCalledWith ( jasmine . objectContaining ( { detail : testData . simulatedBody } ) ) ; done ( ) ; } ) ; } ) ; } ) ; } ) ;	O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O $any$ O O O O O O O $any$ O O O O O O O $any$ O O O O O $complex$ O O O O O O $complex$ O O O O O O $complex$ O O O O O O O $any$ O O O O $any$ O O $complex$ O $any$ O O O O O O $void$ O $string$ O $boolean$ O $Service$ O $any$ O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O $string$ O O O $boolean$ O O O O O $Service$ O $Embed$ O $any$ O O O O O O O $complex$ O O O O O $any$ O O $boolean$ O O O O $any$ O $boolean$ O O $any$ O $boolean$ O O O O $boolean$ O O $complex$ O $any$ O $any$ O $any$ O O O O O O O $any$ O O O O O O O O $Service$ O $any$ O $any$ O O $JQuery$ O $any$ O O O O O $Service$ O O $any$ O $any$ O $any$ O $IHpmFactory$ O $any$ O $IWpmpFactory$ O $any$ O $IRouterFactory$ O O $Service$ O $string$ O O O $any$ O $any$ O O O O $any$ O $Document$ O $HTMLElement$ O O O O O $any$ O O O O O $any$ O $any$ O O O $Service$ O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O O O O O O $any$ O $Service$ O O $any$ O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $string[]$ O O O O O O O O $string[]$ O $void$ O $string$ O O $any$ O $string$ O O $any$ O O O O O O O $Service$ O $Embed[]$ O O O O $NodeListOf<Element>$ O $Document$ O O O O O O $any$ O $NodeListOf<Element>$ O $number$ O O $any$ O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O O $void$ O O O O O $Service$ O $Embed$ O $any$ O O O O O O O $any$ O $void$ O O $any$ O $ErrorConstructor$ O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $any$ O $Embed$ O O $any$ O $Embed$ O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $any$ O $Embed$ O O $any$ O $Embed$ O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $void$ O O O O O $Service$ O $Embed$ O $any$ O O O O O O O $any$ O $void$ O O $any$ O $ErrorConstructor$ O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $void$ O O O O O $Service$ O $Embed$ O $any$ O O O O O O O $any$ O $void$ O O $any$ O $ErrorConstructor$ O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O O $void$ O O O O O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O O O $any$ O $void$ O O $any$ O $ErrorConstructor$ O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O $complex$ O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $any$ O $Embed$ O O $any$ O O O $any$ O $Embed$ O O $any$ O O O $any$ O $Embed$ O O $any$ O $Embed$ O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O O O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $void$ O O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O $null$ O O O $null$ O O O $null$ O O O O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O O O $any$ O $void$ O O $any$ O $ErrorConstructor$ O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $string$ O $Service$ O $string$ O $Service$ O $string$ O $undefined$ O O $void$ O O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O $null$ O O O $null$ O O O $null$ O O O O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O O O $any$ O $void$ O O $any$ O $ErrorConstructor$ O O $Service$ O $string$ O $string$ O O O O $any$ O O O O O O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $void$ O O O O O $Service$ O $Embed$ O $any$ O O O O O O O $any$ O $void$ O O $any$ O O O O O O $any$ O O O O O O O $void$ O O O O O $Service$ O O O O O $any$ O O O O O O O $void$ O O O O O $Service$ O O O O O $any$ O O O O O O O $void$ O O O O O $Service$ O O O O O $any$ O O O O O O O $void$ O O O O O $Service$ O O O O O $any$ O O O O O O O $void$ O $undefined$ O O O $Service$ O O O O O $any$ O O O O O O O O O O O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $string$ O O O O O $any$ O $Embed$ O $IEmbedConfigurationBase$ O $string$ O O $any$ O O O O O O O $any$ O O O O O O O O O O O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $any$ O $Embed$ O $IEmbedConfigurationBase$ O $string$ O O $any$ O O O O O O O $any$ O O O O O O O O O O O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $any$ O $Embed$ O $IEmbedConfigurationBase$ O $string$ O O $any$ O $any$ O $any$ O $StringConstructor$ O O O O O O $any$ O O O O O O O O O O O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O $string$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O $any$ O O O $any$ O $any$ O $Embed$ O $IEmbedConfigurationBase$ O O $string$ O O $any$ O O O O O O O $any$ O O O O O O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O $any$ O O O $any$ O $any$ O $Embed$ O $IEmbedConfigurationBase$ O O $string$ O O $any$ O O O O O O O $any$ O O O O O O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O $any$ O O O $any$ O $any$ O $Embed$ O $IEmbedConfigurationBase$ O O $string$ O O $any$ O O O O O O $any$ O O O O O O O O O O O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $any$ O O O $any$ O $any$ O $Embed$ O $IEmbedConfigurationBase$ O $ISettings$ O O $any$ O O $any$ O O O O O O O $any$ O O O O O O O O O O O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $any$ O O O $any$ O $any$ O $Embed$ O $IEmbedConfigurationBase$ O $ISettings$ O O $any$ O O $any$ O O O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $any$ O $Embed$ O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O $string$ O O O $string$ O O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O O $any$ O O O $any$ O $any$ O $Embed$ O $Promise<void>$ O O $any$ O $any$ O O O $any$ O O O O $any$ O $Embed$ O $Promise<void>$ O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $IEmbedConfiguration$ O $string$ O O $any$ O $any$ O $any$ O O $any$ O $IEmbedConfiguration$ O $string$ O O $any$ O $any$ O $any$ O O $any$ O $IEmbedConfiguration$ O $string$ O O $any$ O $Embed$ O O $any$ O $Embed$ O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $any$ O $Embed$ O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $any$ O $Embed$ O O $any$ O O O O O O $any$ O O O O O O O O $string$ O O O O $string$ O O O O $any$ O $any$ O O O O $any$ O O O O $Service$ O $Embed$ O $any$ O O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O O $string$ O $Embed$ O $IEmbedConfigurationBase$ O $string$ O $any$ O $string$ O O $any$ O $string$ O O O O O $any$ O O O O O O O O $string$ O O O O $string$ O O O O $any$ O $any$ O O O O $any$ O O O O O $string$ O $Service$ O $string$ O $Service$ O $string$ O $string$ O $Service$ O $Embed$ O $any$ O O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O O $string$ O $Embed$ O $IEmbedConfigurationBase$ O $string$ O $any$ O $string$ O O $any$ O $string$ O O $Service$ O $string$ O $string$ O O O O $any$ O O O O O O O O O O O O O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $void$ O O O O O $Service$ O $Embed$ O $any$ O O O O O $null$ O O O $string$ O O O $string$ O O O O O O O $any$ O $void$ O O $any$ O $ErrorConstructor$ O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $string$ O $Service$ O $string$ O $Service$ O $string$ O $undefined$ O O $void$ O O O O O $Service$ O $Embed$ O $any$ O O O O O $string$ O O O $null$ O O O $string$ O O O O O O O $any$ O $void$ O O $any$ O $ErrorConstructor$ O O $Service$ O $string$ O $string$ O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $void$ O O O O O $Service$ O $Embed$ O $any$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O $void$ O O $any$ O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O O O O O O $string$ O O O O $string$ O $any$ O $any$ O $string$ O $string$ O O $any$ O $string$ O O $any$ O O O O O O O $any$ O O O O O O O O O O O O O $string$ O $any$ O $any$ O $string$ O O O O $any$ O $string$ O O $any$ O O O O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $string$ O O O $string$ O O O $string$ O O O O O $any$ O $Embed$ O $any$ O $any$ O O $any$ O O O O O O O $any$ O O O O O O O O O O O O O O O O O O $string$ O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $string$ O $string$ O $string$ O O O O O $any$ O $Embed$ O $any$ O $any$ O O $any$ O O O O O O O $any$ O O O O O O O O O O O O O O O O O O $complex$ O O $complex$ O O $string$ O O O O O O $string$ O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $string$ O $string$ O $string$ O O O $complex$ O $complex$ O O O $any$ O $Embed$ O $any$ O $any$ O O $any$ O $complex$ O O O O O $any$ O O O O O O O O O O O O O O O O O O $complex$ O O $complex$ O O $string$ O O O O O O $string$ O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $string$ O $string$ O $string$ O O O O O $any$ O $Embed$ O $any$ O $any$ O O $any$ O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $string$ O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $string$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O $string$ O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O O O O O O $string$ O O O O $string$ O $any$ O $any$ O $string$ O $string$ O O $any$ O $string$ O O $any$ O O O O O O O $any$ O O O O O O O O O O O O O $string$ O $any$ O $any$ O $string$ O O O O $any$ O $string$ O O $any$ O O O O O O O O O $any$ O O O O O O O O O O O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O $any$ O O O $any$ O $any$ O $Embed$ O $IEmbedConfigurationBase$ O O $string$ O O $any$ O O O O O O O $any$ O O O O O O O O O O O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O O $IEmbedConfiguration$ O $any$ O $any$ O $Embed$ O $IEmbedConfigurationBase$ O $any$ O $IEmbedConfiguration$ O $string$ O O $any$ O O O O O O O $any$ O O O O O O O O O O O O O $string$ O O O O $any$ O $any$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $any$ O O O $any$ O $any$ O $Embed$ O $IEmbedConfigurationBase$ O O $string$ O O $any$ O O O O O O O $any$ O O O O O O O O O O O O O $string$ O O O O $any$ O $any$ O O O O $any$ O O O O O $complex$ O O $complex$ O O $string$ O O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $complex$ O $complex$ O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O $any$ O O O $any$ O $any$ O $Embed$ O $IEmbedConfigurationBase$ O O $any$ O O $any$ O $complex$ O O O O O $any$ O O O O O O O O O O O O O $string$ O O O O $any$ O $any$ O O O O $any$ O O O O O $complex$ O O $complex$ O O $string$ O O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O $any$ O O O $any$ O $any$ O $Embed$ O $IEmbedConfigurationBase$ O O $any$ O O $any$ O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $string$ O O O O $any$ O $any$ O O O $string$ O O O O $any$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O $string$ O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $void$ O O O O O $Service$ O $Embed$ O $any$ O O O O O O O O O O $any$ O $void$ O O $any$ O $ErrorConstructor$ O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $void$ O O O O O $Service$ O $Embed$ O $any$ O O O O O O O O O O $any$ O $void$ O O $any$ O $ErrorConstructor$ O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O O $void$ O O O O O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O O O $any$ O $void$ O O $any$ O $ErrorConstructor$ O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $string$ O O O $string$ O O O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O $complex$ O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $any$ O $Embed$ O O $any$ O O O $any$ O $Embed$ O O $any$ O O O $any$ O $Embed$ O O $any$ O $Embed$ O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O $any$ O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O $string$ O O O $string$ O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O O O $string$ O O O O O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O $Service$ O $Embed$ O $any$ O $any$ O O O O $IEmbedConfiguration$ O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O $Embed$ O O $any$ O O O $Service$ O $void$ O $any$ O $any$ O O O O O $any$ O O O $any$ O $any$ O $any$ O $any$ O O O O O $Embed$ O O $any$ O O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O $Service$ O $Embed$ O $any$ O $any$ O O O O $IEmbedConfiguration$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O O $Service$ O $void$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O $any$ O O O O O O O $any$ O O O O O O O O $any$ O $any$ O O O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O $Service$ O $Embed$ O $any$ O $any$ O O O O $complex$ O O O $Embed$ O $Service$ O $Embed$ O $complex$ O $string$ O O $any$ O $Embed$ O O $any$ O O O $Service$ O $void$ O $any$ O $any$ O O O O O O $Embed$ O $Service$ O $Embed$ O $complex$ O $string$ O O $any$ O $Embed$ O O $any$ O O O O O O O O O O O O $any$ O O O O O O O O $Service$ O $any$ O $any$ O O $JQuery$ O O $JQuery$ O O $JQuery$ O $any$ O O O O O $Service$ O O $any$ O $any$ O $any$ O $IHpmFactory$ O $any$ O $IWpmpFactory$ O $any$ O $IRouterFactory$ O O $Service$ O $string$ O O O $any$ O $any$ O O O O $any$ O $Document$ O $HTMLElement$ O O O O O $any$ O O O O O $any$ O $any$ O O O O $any$ O O O O $Service$ O $Embed$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O O O O $any$ O $any$ O O O $Service$ O $any$ O $any$ O O O O O O $any$ O O O O O O O $any$ O O O O O O O $any$ O $any$ O $any$ O O O O $any$ O O $any$ O O O O O O O $any$ O O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O O O O O O O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O O $any$ O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $Embed$ O $void$ O O O $any$ O $Document$ O $any$ O $any$ O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $Embed$ O $Service$ O $Embed$ O $any$ O O O O O $Embed$ O $void$ O O O $Embed$ O $void$ O O O $any$ O $Document$ O $any$ O $any$ O O O O O O O O O O O O O O $any$ O O O O O O O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $HTMLIFrameElement$ O O $any$ O $any$ O $any$ O O $Promise$ O O O O O $any$ O $any$ O $any$ O O $complex$ O O $any$ O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O O O O O O O O O O O $any$ O $any$ O O O O $any$ O $Document$ O $HTMLElement$ O O $HTMLIFrameElement$ O O $complex$ O $any$ O $any$ O O O O $any$ O $any$ O $HTMLIFrameElement$ O $Window$ O $complex$ O $boolean$ O O O O $any$ O $any$ O $IWpmpFactory$ O O O $boolean$ O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O $IHpmFactory$ O $any$ O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O $any$ O $IRouterFactory$ O $any$ O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O $any$ O O O O O O O $any$ O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O O O $any$ O O $any$ O $any$ O O O O $any$ O O O O O $complex$ O O O O $any$ O $Promise<void>$ O O $PromiseConstructor$ O O O O O $void$ O $void$ O O O $HTMLIFrameElement$ O O O O O O O O O $void$ O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O O O O O $any$ O O O O O O O O $any$ O O O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O $Promise<void>$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O $Promise<void>$ O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O $Promise<void>$ O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O $Promise<void>$ O O O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O $Promise<void>$ O O O O O O O $any$ O $any$ O O O O O O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O O O O O $any$ O $any$ O $any$ O $any$ O O O O $complex$ O $complex$ O O $string$ O $complex$ O $string$ O O O $any$ O O O O O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O $any$ O O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O O O $string$ O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O ${}$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O O O O O $any$ O $any$ O $any$ O $any$ O O O O $complex$ O $complex$ O O $string$ O $complex$ O $string$ O O O $any$ O O O O O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O ${}$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $boolean$ O O O O O O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $string$ O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $string$ O $complex$ O $string$ O O O $any$ O $any$ O O $number$ O O O O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $boolean$ O O O O O $complex$ O O $string$ O O O O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O $complex$ O $complex$ O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $string$ O $complex$ O $string$ O O O $any$ O $any$ O O $number$ O O O O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O ${}$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O ${}$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O O O O O $any$ O $any$ O $any$ O $any$ O O O O $complex$ O $complex$ O O $string$ O $complex$ O $string$ O O O $any$ O O O O O $any$ O O O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O O $string$ O O O O O $string$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $complex$ O $complex$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $any$ O O $any$ O $complex$ O $complex$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O O O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $string$ O O O O O O $complex$ O O $string$ O O O $string$ O O O $any$ O $any$ O $any$ O O $string$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $string$ O $complex$ O $string$ O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $string$ O O O O $complex$ O O $string$ O O O O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O $complex$ O $complex$ O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $string$ O $complex$ O $string$ O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $any$ O $any$ O $any$ O O $string$ O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O $any$ O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $string$ O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O $string$ O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O O O $any$ O O $any$ O $string$ O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O O $string$ O O O O O $string$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $complex$ O $complex$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $complex$ O $complex$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O O $string$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O O O O O $any$ O $any$ O $any$ O $any$ O O O O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O O $string$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O O O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O O $string$ O O O O O O O $complex$ O O $string$ O O O $string$ O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $string$ O $complex$ O $string$ O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O O O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O O $string$ O O O O O $string$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $complex$ O $complex$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $complex$ O $complex$ O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O O $string$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O O O O O $any$ O $any$ O $any$ O $any$ O O O O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O O $string$ O O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O O O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O O $string$ O O O O O O O $complex$ O O $string$ O O O $string$ O O O O $Promise<void>$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $string$ O $complex$ O $string$ O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O O O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O O $string$ O O O O O $string$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $complex$ O $complex$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $any$ O $any$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $complex$ O $complex$ O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $complex$ O O O $string$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O O O O O $any$ O $any$ O $any$ O $any$ O O O O $complex$ O $complex$ O O $string$ O $complex$ O $string$ O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $complex$ O O O $string$ O O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $string$ O $complex$ O $string$ O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O O O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $complex$ O O O $string$ O O O O O O O $complex$ O O $string$ O O O $string$ O O O O $Promise<void>$ O O O O O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $string$ O $complex$ O $string$ O O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O O O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $boolean$ O O O $boolean$ O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O O O O O $any$ O $any$ O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $boolean$ O O O $boolean$ O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $boolean$ O O O O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $string$ O O O $complex$ O O $boolean$ O O O $boolean$ O O O O O O $Promise<void>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O $complex$ O O O $any$ O $any$ O O O O O O $complex$ O $complex$ O O $string$ O $complex$ O $string$ O O O $any$ O $any$ O O $number$ O O O O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O $any$ O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O O O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O $complex$ O $complex$ O O $Promise<void>$ O O O O O O O $any$ O $any$ O O O O $complex$ O $string$ O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $string$ O O O $complex$ O O O $string$ O O O O O O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O $complex$ O $complex$ O O $Promise<void>$ O O O O O O O $any$ O $any$ O $complex$ O $string$ O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $string$ O O O $complex$ O O O $string$ O O O O O O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O $complex$ O $complex$ O O $Promise<void>$ O O O O O O O $any$ O $any$ O $complex$ O $string$ O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $string$ O O O $complex$ O O O $string$ O O O O O O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O $complex$ O $complex$ O O $Promise<void>$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $complex$ O $string$ O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $string$ O O O $complex$ O O $boolean$ O O O O O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O $complex$ O $complex$ O O $Promise<void>$ O O O O O O O $any$ O $any$ O $complex$ O $string$ O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $string$ O O O $complex$ O O $boolean$ O O O O O O O $complex$ O O $string$ O O O $string$ O O O $complex$ O $complex$ O $complex$ O O $Promise<void>$ O O O O O O O $any$ O $any$ O $complex$ O $string$ O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O O $any$ O O O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O $any$ O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O O $JQuery$ O O $JQuery$ O O $JQuery$ O O $HTMLIFrameElement$ O O $HTMLIFrameElement$ O O $HTMLIFrameElement$ O O $HTMLIFrameElement$ O O $Service$ O $any$ O $any$ O O $Report$ O $any$ O $any$ O O $Create$ O $any$ O $any$ O O $Dashboard$ O $any$ O $any$ O O $Visual$ O $any$ O $any$ O O $Page$ O $any$ O $any$ O O $VisualDescriptor$ O $any$ O $any$ O O $string$ O O O O $string$ O O O O $string$ O O O O $string$ O O O O $string$ O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $IEmbedConfiguration$ O $any$ O $any$ O O $IEmbedConfiguration$ O $any$ O $any$ O O $IVisualEmbedConfiguration$ O $any$ O $any$ O O O O O O $any$ O O O O O O $IHpmFactory$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $complex$ O O O O $IWpmpFactory$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O O O $IRouterFactory$ O $any$ O $any$ O O O O O O O $any$ O $any$ O O O O $complex$ O O O $Service$ O O $any$ O $any$ O $IHpmFactory$ O $IWpmpFactory$ O $IRouterFactory$ O O $string$ O O O O O $any$ O $any$ O O O O $any$ O $Document$ O $HTMLElement$ O O $any$ O $any$ O O O O $any$ O $Document$ O $HTMLElement$ O O $any$ O $any$ O O O O $any$ O $Document$ O $HTMLElement$ O O O $any$ O $any$ O O O O $any$ O $Document$ O $HTMLElement$ O O $IEmbedConfiguration$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O $IEmbedConfiguration$ O O $string$ O O O $string$ O O O $string$ O O O O $IEmbedConfiguration$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O $IVisualEmbedConfiguration$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $number$ O O O $number$ O O O O $Report$ O O $any$ O $any$ O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O $Create$ O O $any$ O $any$ O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O $Dashboard$ O O $any$ O $any$ O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O $Visual$ O O $any$ O $any$ O $Service$ O $Embed$ O $any$ O O O O $IVisualEmbedConfiguration$ O O $Page$ O O $any$ O $any$ O $Report$ O O O O $VisualDescriptor$ O O $any$ O $any$ O $Page$ O O O O O O O O O O O $string$ O $Report$ O $IEmbedConfigurationBase$ O $string$ O $string$ O $Service$ O $string$ O O O $string$ O $Create$ O $IEmbedConfigurationBase$ O $string$ O $string$ O $Dashboard$ O $IEmbedConfigurationBase$ O $string$ O $string$ O $Visual$ O $IEmbedConfigurationBase$ O $string$ O $HTMLIFrameElement$ O O $complex$ O $any$ O $any$ O O O O O O O $HTMLIFrameElement$ O O $complex$ O $any$ O $any$ O O O O O O O $HTMLIFrameElement$ O O $complex$ O $any$ O $any$ O O O O O O O $HTMLIFrameElement$ O O $complex$ O $any$ O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $Service$ O $void$ O $any$ O $any$ O O O O O $Service$ O $void$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $any$ O $any$ O O O $Service$ O $any$ O $any$ O O O O O O $any$ O O O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O O $complex$ O O $null$ O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Report$ O $Promise<void>$ O $complex$ O $complex$ O O O $complex$ O O $undefined$ O $undefined$ O $string$ O $any$ O $complex$ O $string$ O $string$ O $string$ O $string$ O $string$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $complex$ O $complex$ O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O O $complex$ O O $complex$ O O $string$ O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Report$ O $Promise<void>$ O $complex$ O $complex$ O O $complex$ O $any$ O O O $complex$ O O $undefined$ O $undefined$ O $string$ O $any$ O $complex$ O $string$ O $string$ O $string$ O $string$ O $string$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $complex$ O $complex$ O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O $any$ O $complex$ O $complex$ O $complex$ O O $any$ O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O O $complex$ O O $null$ O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Report$ O $Promise<void>$ O $complex$ O $complex$ O O O O $void$ O O O $complex$ O O $undefined$ O $undefined$ O $string$ O $any$ O $complex$ O $string$ O $string$ O $string$ O $string$ O $string$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $complex$ O $complex$ O $HTMLIFrameElement$ O $Window$ O O $any$ O $void$ O O $any$ O O O O $any$ O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O O $complex$ O O $null$ O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Report$ O $Promise<void>$ O $complex$ O $complex$ O O O O $void$ O O $any$ O $Report$ O $IEmbedConfigurationBase$ O O $any$ O $any$ O $any$ O $complex$ O $complex$ O O O $any$ O $void$ O O $any$ O O O O $any$ O O O O O O O O O $any$ O O O O O O O O $complex$ O O $IVisualEmbedConfiguration$ O $IVisualEmbedConfiguration$ O $complex$ O O $null$ O O O O O O $complex$ O O $string$ O $IVisualEmbedConfiguration$ O $string$ O $string$ O $IVisualEmbedConfiguration$ O $string$ O $string$ O $IVisualEmbedConfiguration$ O $string$ O $string$ O $IVisualEmbedConfiguration$ O $string$ O $string$ O $IVisualEmbedConfiguration$ O $string$ O $string$ O $IVisualEmbedConfiguration$ O $string$ O $number$ O $IVisualEmbedConfiguration$ O $number$ O $number$ O $IVisualEmbedConfiguration$ O $number$ O O O O $boolean$ O O O $boolean$ O O O $any$ O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O $any$ O $complex$ O O $any$ O $any$ O $any$ O $any$ O $number$ O $complex$ O $IVisualEmbedConfiguration$ O $number$ O $number$ O $complex$ O $IVisualEmbedConfiguration$ O $number$ O O O O O O O O O $complex$ O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O O O O O O O O $complex$ O O $any$ O $any$ O $any$ O $any$ O O $number$ O O O $number$ O O O $number$ O O O $number$ O $complex$ O $IVisualEmbedConfiguration$ O $number$ O $number$ O $complex$ O $IVisualEmbedConfiguration$ O $number$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Visual$ O $Promise<void>$ O $IVisualEmbedConfiguration$ O O $any$ O $complex$ O $any$ O O $any$ O O O O $any$ O $complex$ O $any$ O $any$ O $any$ O O O $any$ O $any$ O $any$ O O O O O $any$ O O O O $any$ O $any$ O O O O O $any$ O $complex$ O O $any$ O $any$ O O O O O $any$ O O $undefined$ O $undefined$ O $string$ O $any$ O $complex$ O $string$ O $string$ O $string$ O $string$ O $string$ O O O $any$ O $any$ O O O O O $any$ O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O O O $Visual$ O $Promise<any[]>$ O $any$ O $any$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O O O O O $Visual$ O $Promise<void>$ O $complex$ O $any[]$ O $any$ O $any$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $any[]$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O O O $Visual$ O $Promise<any[]>$ O $any$ O $any$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O O O O $complex$ O O $undefined[]$ O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Visual$ O $Promise<void>$ O $complex$ O $any[]$ O $any$ O $any$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $any[]$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O O O $Visual$ O $Promise<any[]>$ O O O $any$ O $complex$ O $any$ O O $any$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O O O O $complex$ O O $undefined[]$ O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Visual$ O $Promise<void>$ O $complex$ O $any[]$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $any[]$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O O O O $void$ O O O O O $Visual$ O $Promise<Page[]>$ O O O O $any$ O $void$ O O $any$ O $any$ O $any$ O $string$ O O O O O $any$ O O O O O O O O $void$ O O O O O $Visual$ O $Promise<void>$ O O O O O $any$ O $void$ O O $any$ O $any$ O $any$ O $string$ O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $complex$ O O $complex$ O O $complex$ O O O $string$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Report$ O $Promise<Page[]>$ O O O $any$ O $complex$ O $any$ O O $any$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $complex$ O O $string$ O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Report$ O $Promise<Page[]>$ O O O $complex$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O $any$ O $complex$ O $complex$ O $complex$ O O $any$ O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string[]$ O O O O O O O $complex$ O O $Page[]$ O O $Report$ O $Page$ O O O O $Report$ O $Page$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Report$ O $Promise<Page[]>$ O O O O O $Page[]$ O O $any$ O $complex$ O $any$ O O $any$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $Page[]$ O O O O $string$ O O $any$ O $complex$ O $complex$ O $Page[]$ O O O O $string$ O O $any$ O $Page[]$ O O O O $string$ O O $any$ O $complex$ O $complex$ O $Page[]$ O O O O $string$ O O $any$ O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $complex$ O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Report$ O $Promise<any[]>$ O O O $any$ O $complex$ O $any$ O O $any$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $complex$ O O O $string$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Report$ O $Promise<any[]>$ O O O $complex$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O $complex$ O $complex$ O O O $any$ O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Report$ O $Promise<any[]>$ O O O O O $any[]$ O O $any$ O $complex$ O $any$ O O $any$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any[]$ O O $any$ O $complex$ O $complex$ O $any[]$ O O $any$ O O O O O O O O O $any$ O O O O O O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O O O O O $Report$ O $Promise<void>$ O $complex$ O $any[]$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $any[]$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O O O O $complex$ O O $complex$ O O O $string$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Report$ O $Promise<void>$ O $complex$ O $any[]$ O O $complex$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $any[]$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O $complex$ O $complex$ O O O $any$ O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Report$ O $Promise<void>$ O $complex$ O $any[]$ O O O O $void$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $any[]$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $void$ O O $any$ O O O O $any$ O O O O O O O O O $any$ O O O O O O O $Report$ O $Promise<void>$ O O O $any$ O $complex$ O $any$ O O $any$ O O O O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Report$ O $Promise<void>$ O O O O O $void$ O O $any$ O $complex$ O $any$ O O $any$ O O O O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $void$ O O $any$ O O O O $any$ O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O ${}$ O O O O O O O $Report$ O $Promise<void>$ O $any$ O $any$ O $any$ O O O $string$ O O O $any$ O $complex$ O $any$ O O $any$ O $string$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O ${}$ O O O O O O O $Report$ O $Promise<void>$ O $any$ O $any$ O $any$ O O O O O O O O O $string$ O O O $any$ O $complex$ O $any$ O O $any$ O $string$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O ${}$ O O O O O O O $Report$ O $Promise<void>$ O O O $any$ O $complex$ O $any$ O O $any$ O O O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O ${}$ O O O O O O O $Report$ O $Promise<void>$ O O O O O O O O O $any$ O $complex$ O $any$ O O $any$ O O O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O O O O O O O O O O O O $any$ O O O O O O O O $any$ O $any$ O $any$ O O $string$ O O O O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O ${}$ O O O O O O O $Report$ O $Promise<void>$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O O O $any$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O ${}$ O O O O O O O $Report$ O $Promise<void>$ O $any$ O O O O O O O O $any$ O $complex$ O $any$ O O $any$ O O O $any$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O O O O O O O O O O O O $any$ O O O O O O O O $string$ O O O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O ${}$ O O O O O O O $Report$ O $Promise<void>$ O $string$ O O $any$ O $complex$ O $any$ O O $any$ O O O $string$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O ${}$ O O O O O O O O $string$ O O $Report$ O $Promise<void>$ O $string$ O O O O O O O O $any$ O $complex$ O $any$ O O $any$ O O O $string$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $Report$ O $Service$ O $string$ O O $any$ O $string$ O O $any$ O $Report$ O $IEmbedConfigurationBase$ O $string$ O O $any$ O $string$ O O $any$ O $Report$ O $HTMLElement$ O $string$ O $any$ O $any$ O $string$ O O O $any$ O $string$ O O $any$ O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O ${}$ O O O O O O O $Report$ O $Promise<void>$ O O O $any$ O $complex$ O $any$ O O $any$ O O O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O ${}$ O O O O O O O $Report$ O $Promise<void>$ O O O O O O O O O $any$ O $complex$ O $any$ O O $any$ O O O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O O $complex$ O O $null$ O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Report$ O $Promise<void>$ O $complex$ O $complex$ O O O O O O O O $complex$ O $any$ O $any$ O $any$ O O O $Report$ O $Promise<void>$ O O O O $complex$ O O $undefined$ O $undefined$ O $string$ O $any$ O $complex$ O $string$ O $string$ O $string$ O $string$ O $string$ O O $any$ O $complex$ O $any$ O O $any$ O O O $any$ O $any$ O $complex$ O $complex$ O O $complex$ O $HTMLIFrameElement$ O $Window$ O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O ${}$ O O O O O O O $Report$ O $Promise<void>$ O O O $any$ O $complex$ O $any$ O O $any$ O O O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $complex$ O O $complex$ O O $boolean$ O O O O O $Report$ O $Promise<void>$ O $complex$ O $complex$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $complex$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $boolean$ O O O O $complex$ O O $complex$ O O O $string$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Report$ O $Promise<void>$ O $complex$ O $complex$ O O $complex$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $complex$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O $any$ O $complex$ O $complex$ O $complex$ O O $any$ O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $boolean$ O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Report$ O $Promise<void>$ O $complex$ O $complex$ O O O O $void$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $complex$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $void$ O O $any$ O O O O $any$ O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O O $complex$ O O $null$ O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Create$ O $Promise<void>$ O $complex$ O $complex$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $complex$ O O $string$ O $string$ O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O O $complex$ O O $complex$ O O $string$ O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Create$ O $Promise<void>$ O $complex$ O $complex$ O O $complex$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $complex$ O O $string$ O $string$ O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O $any$ O $complex$ O $complex$ O $complex$ O O $any$ O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O O $complex$ O O $null$ O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Create$ O $Promise<void>$ O $complex$ O $complex$ O O O O $void$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $complex$ O O $string$ O $string$ O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $void$ O O $any$ O O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O O $complex$ O O $null$ O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Dashboard$ O $Promise<void>$ O $complex$ O $complex$ O O O $complex$ O O $undefined$ O $undefined$ O $string$ O $any$ O $complex$ O $string$ O $string$ O $string$ O $string$ O $string$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $complex$ O $complex$ O $HTMLIFrameElement$ O $Window$ O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O $any$ O O O O O O O $Page$ O $Promise<any[]>$ O O O $any$ O $complex$ O $any$ O O $any$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $complex$ O O $string$ O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Page$ O $Promise<any[]>$ O O O $complex$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O $any$ O $complex$ O $complex$ O $complex$ O O $any$ O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $complex$ O O O $string$ O O O O O $string$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Page$ O $Promise<any[]>$ O O O O O $any[]$ O O $any$ O $complex$ O $any$ O O $any$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any[]$ O O $any$ O $complex$ O $complex$ O $complex$ O O $any$ O O O O O O O O O $any$ O O O O O O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O O O O $complex$ O O $undefined[]$ O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Page$ O $Promise<void>$ O $complex$ O $any[]$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $any[]$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O O O O $complex$ O O $complex$ O O O $string$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Page$ O $Promise<void>$ O $complex$ O $any[]$ O O $complex$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $any[]$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O $complex$ O $complex$ O O O $any$ O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Page$ O $Promise<void>$ O $complex$ O $any[]$ O O O O $void$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $any[]$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $void$ O O $any$ O O O O $any$ O O O O O O O O O $any$ O O O O O O O $Page$ O $Promise<void>$ O O O $any$ O $complex$ O $any$ O O $any$ O O O O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Page$ O $Promise<void>$ O O O O O $void$ O O $any$ O $complex$ O $any$ O O $any$ O O O O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $void$ O O $any$ O O O O $any$ O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $complex$ O O $complex$ O O $string$ O $Page$ O $string$ O $null$ O O O $boolean$ O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Page$ O $Promise<void>$ O O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $complex$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O $Page$ O $string$ O $null$ O O O $boolean$ O O O O O $complex$ O O $complex$ O O O $string$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Page$ O $Promise<void>$ O O O $complex$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $complex$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O $complex$ O $complex$ O O O $any$ O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O $Page$ O $string$ O $null$ O O O $boolean$ O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Page$ O $Promise<void>$ O O O O O $void$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $complex$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $void$ O O $any$ O O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O $any$ O O O O O O O $VisualDescriptor$ O $Promise<any[]>$ O O O $any$ O $complex$ O $any$ O O $any$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $complex$ O O $string$ O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $VisualDescriptor$ O $Promise<any[]>$ O O O $complex$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O $any$ O $complex$ O $complex$ O $complex$ O O $any$ O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $complex$ O O O $string$ O O O O O $string$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $VisualDescriptor$ O $Promise<any[]>$ O O O O O $any[]$ O O $any$ O $complex$ O $any$ O O $any$ O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any[]$ O O $any$ O $complex$ O $complex$ O $complex$ O O $any$ O O O O O O O O O $any$ O O O O O O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O O O O $complex$ O O $undefined[]$ O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $VisualDescriptor$ O $Promise<void>$ O $complex$ O $any[]$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $any[]$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O O O O $complex$ O O $complex$ O O O $string$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $VisualDescriptor$ O $Promise<void>$ O $complex$ O $any[]$ O O $complex$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $any[]$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O $complex$ O $complex$ O O O $any$ O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O $string$ O O O $string$ O O O O O $string$ O O O $string$ O O O O O O O $any$ O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $VisualDescriptor$ O $Promise<void>$ O $complex$ O $any[]$ O O O O $void$ O O $any$ O $complex$ O $any$ O O $any$ O O O $complex$ O $any[]$ O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $void$ O O $any$ O O O O $any$ O O O O O O O O O $any$ O O O O O O O $VisualDescriptor$ O $Promise<void>$ O O O $any$ O $complex$ O $any$ O O $any$ O O O O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O $any$ O O O O O $any$ O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $VisualDescriptor$ O $Promise<void>$ O O O O O $void$ O O $any$ O $complex$ O $any$ O O $any$ O O O O O O O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O $any$ O $void$ O O $any$ O O O O $any$ O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $complex$ O O $complex$ O O $complex$ O O $string$ O O O O O $complex$ O O $null$ O O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Report$ O $Promise<void>$ O $complex$ O $complex$ O O O O O O O O $complex$ O $any$ O $any$ O $any$ O O O $Report$ O $Promise<void>$ O O O $any$ O $complex$ O $any$ O O $any$ O O O $any$ O $any$ O $complex$ O $complex$ O O O $string$ O $string$ O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O O O O $any$ O O O O O O O O $complex$ O O $null$ O O O O $complex$ O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O O O $Report$ O $Promise<void>$ O O O O O O O O O $complex$ O $any$ O $any$ O $any$ O O O $Report$ O $Promise<void>$ O O O $any$ O $complex$ O $any$ O O $any$ O O O $any$ O $any$ O O O O O O $string$ O $string$ O $string$ O $string$ O O $HTMLIFrameElement$ O $Window$ O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O O O O O O $void$ O O O O O $Report$ O $void$ O $complex$ O $string$ O $complex$ O $any$ O O O O $any$ O $void$ O O $any$ O O O O O O O O O O O O $any$ O O O O O O O O $JQuery$ O O $HTMLIFrameElement$ O O $Service$ O $any$ O $any$ O O $Report$ O $any$ O $any$ O O $string$ O $any$ O O O O O O $IWpmpFactory$ O $any$ O $any$ O O $string$ $string$ O $boolean$ $boolean$ O O O O O $any$ O $any$ O O O O $complex$ O O O $Service$ O O $any$ O $any$ O $any$ O $IHpmFactory$ O $IWpmpFactory$ O $any$ O $IRouterFactory$ O O $any$ O $any$ O O O O $any$ O $Document$ O $HTMLElement$ O O O O O O O O $complex$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O $Report$ O O $any$ O $any$ O $Service$ O $Embed$ O $any$ O O O O $complex$ O O $string$ O $Report$ O $IEmbedConfigurationBase$ O $string$ O $HTMLIFrameElement$ O O $complex$ O $any$ O $any$ O O O O O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O $Service$ O $void$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $Service$ O $any$ O $any$ O O O O O O $any$ O O O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O $complex$ O $any$ O $any$ O $any$ O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $string$ O O O $complex$ O O O $string$ O O O O O O O O O $Report$ O $void$ O $complex$ O $string$ O $complex$ O $any$ O O $complex$ O $void$ O $complex$ O $complex$ O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O O $complex$ O $complex$ O $complex$ O $complex$ O $complex$ O O O O O O O $any$ O O O O O O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O O O O O $Report$ O $void$ O $complex$ O $string$ O $complex$ O $any$ O O $Report$ O $void$ O $complex$ O $string$ O $complex$ O $any$ O O $complex$ O $void$ O $complex$ O $complex$ O O $any$ O $complex$ O $any$ O O $any$ O $any$ O O O O O O $any$ O O O O O O O O O O O $string$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O O O O O $Report$ O $void$ O O O $string$ O O O $any$ O O $Report$ O $void$ O O O $string$ O O O $any$ O O $Report$ O $void$ O O O $string$ O O O $any$ O O $complex$ O $void$ O O O $complex$ O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O $complex$ O O O $complex$ O $complex$ O $complex$ O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O $complex$ O O O $complex$ O $complex$ O $complex$ O O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O O $complex$ O O O $complex$ O $complex$ O $complex$ O O O O O O O $any$ O O O O O O O O O O O $string$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O O O O O $Report$ O $void$ O O O $string$ O O O $any$ O O $Report$ O $void$ O O O $string$ O O O $any$ O O $Report$ O $void$ O O O $string$ O O O $any$ O O $Report$ O $void$ O O O $string$ O O $complex$ O $void$ O O O $complex$ O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O O O O O O O O O O O O $any$ O O O O O O O O $JQuery$ O O $JQuery$ O O $HTMLIFrameElement$ O O $HTMLIFrameElement$ O O $any$ O $any$ O $any$ O O $any$ O $any$ O $any$ O O $Promise$ O O O O O O O $Service$ O $any$ O $any$ O O $Report$ O $any$ O $any$ O O $Page$ O $any$ O $any$ O O $Report$ O $any$ O $any$ O $any$ O O O O O $Service$ O O $any$ O $any$ O $any$ O $IHpmFactory$ O $any$ O $IWpmpFactory$ O $any$ O $IRouterFactory$ O O $string$ O O O $boolean$ O O O $any$ O $any$ O O O O $any$ O $Document$ O $HTMLElement$ O O $any$ O $any$ O O O O $any$ O $Document$ O $HTMLElement$ O O O O O O O O $IEmbedConfiguration$ O $any$ O $any$ O O $string$ O O O $string$ O O O $string$ O O O $string$ O O O O $Report$ O O $any$ O $any$ O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O $Page$ O $Report$ O $Page$ O O O O $Report$ O O $any$ O $any$ O $Service$ O $Embed$ O $any$ O O O O $IEmbedConfiguration$ O O $HTMLIFrameElement$ O O $complex$ O $any$ O $any$ O O O O O O O $HTMLIFrameElement$ O O $complex$ O $any$ O $any$ O O O O O O O O O O O $Service$ O $any$ O O $any$ O $HTMLIFrameElement$ O $Window$ O $any$ O $any$ O $HTMLIFrameElement$ O $Window$ O $complex$ O $boolean$ O O O O $any$ O $any$ O $HTMLIFrameElement$ O $Window$ O $complex$ O $boolean$ O O O O O O $any$ O $any$ O $any$ O O O O O $any$ O $any$ O $any$ O O O O O $void$ O O O O $Promise<void>$ O O $PromiseConstructor$ O O O O O $void$ O $void$ O O O $HTMLIFrameElement$ O O O O O O O O O $void$ O O O O O O O O O O O $Promise<void>$ O O $PromiseConstructor$ O O O O O $void$ O $void$ O O O $HTMLIFrameElement$ O O O O O O O O O $void$ O O O O O O O O O O $Promise<void[]>$ O $PromiseConstructor$ O O O O O O O $Promise<void>$ O $Promise<void>$ O O O O O O $any$ O O O O O $Service$ O $void$ O $any$ O $any$ O O O O O $any$ O $any$ O O O $Service$ O $any$ O $any$ O O O O O O $any$ O O O O O O O $void$ O O O O O O $any$ O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O O $complex$ O O O $string$ O O O O O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Report$ O $Promise<void>$ O $complex$ O $complex$ O O $complex$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O $complex$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O $string$ O O O O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Report$ O $Promise<void>$ O $complex$ O $complex$ O O O O $void$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O $void$ O O $any$ O $undefined$ O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Report$ O $Promise<Page[]>$ O O O $complex$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O $complex$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O O $string$ O O O $string$ O O O $boolean$ O O O O O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Report$ O $Promise<Page[]>$ O O O O O $Page[]$ O O $any$ O O O $any$ O O $any$ O O O $Page[]$ O $void$ O $Page$ O O O $complex$ O $any$ O $T$ O $complex$ O $complex$ O $string$ O $Page$ O $string$ O $complex$ O $complex$ O O O O $complex$ O O $any$ O $Page$ O $string$ O O $any$ O $complex$ O $string$ O O $any$ O $Page$ O $boolean$ O O $any$ O $complex$ O $boolean$ O O O O $any$ O O O O $any$ O O O O O O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Report$ O $Promise<any[]>$ O O O $complex$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O $complex$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O O $string$ O O O O O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Report$ O $Promise<any[]>$ O O O O O $any[]$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any[]$ O O $any$ O $complex$ O $complex$ O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O $complex$ O O O $string$ O O O O O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Report$ O $Promise<void>$ O $complex$ O $any[]$ O O $complex$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $any[]$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O $complex$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Report$ O $Promise<void>$ O $complex$ O $any[]$ O O O O $void$ O O $any$ O O O $any$ O O $any$ O $complex$ O $any[]$ O O O O O $any$ O O O $any$ O O $any$ O $complex$ O $any[]$ O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Report$ O $Promise<void>$ O O O O O $void$ O O $any$ O O O $any$ O O $any$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Report$ O $Promise<void>$ O O O O O $void$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $void$ O O $any$ O $undefined$ O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Report$ O $Promise<void>$ O O O O O $void$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $void$ O O $any$ O $undefined$ O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $boolean$ O O O O $complex$ O O O $string$ O O O O O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Report$ O $Promise<void>$ O $complex$ O $complex$ O O $complex$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O $complex$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $boolean$ O O O O $complex$ O O O $string$ O O O O O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Report$ O $Promise<void>$ O $complex$ O $complex$ O O O O $void$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O $any$ O O $any$ O $complex$ O $complex$ O O $any$ O O O O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O $string$ O O O O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Page$ O $Promise<any[]>$ O O O $complex$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O $complex$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O O $string$ O O O O O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O $complex$ O $complex$ O O O $Page$ O $Promise<any[]>$ O O O O O $any[]$ O O $any$ O O O $any$ O O $any$ O O O $any$ O $any[]$ O O $any$ O $complex$ O $complex$ O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O $complex$ O O O $string$ O O O O O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Page$ O $Promise<void>$ O $complex$ O $any[]$ O O $complex$ O $any$ O O $any$ O O O $any$ O O $any$ O $complex$ O $any[]$ O O O O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O $complex$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $any[]$ O O O O $any$ O $any$ O O $string$ O O O $string$ O O O O O O O O O O O O O O $any$ O O O O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Page$ O $Promise<void>$ O $complex$ O $any[]$ O O O O $void$ O O $any$ O O O $any$ O O $any$ O $complex$ O $any[]$ O O O O O $any$ O O O $any$ O O $any$ O $complex$ O $any[]$ O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Page$ O $Promise<void>$ O O O O O $void$ O O $any$ O O O $any$ O O $any$ O O O $any$ O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O O $string$ O O O O O O $Promise<void[]>$ O O O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $Promise<T>$ O $complex$ O $complex$ O O O $Page$ O $Promise<void>$ O O O $complex$ O $any$ O O $any$ O O O $any$ O O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O $complex$ O O O $any$ O O O O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $complex$ O O O $string$ O O O O O O $Promise<void[]>$ O O O O O O O $number$ O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O O O $any$ O $any$ O $any$ O $PromiseConstructor$ O $complex$ O O O O O $Page$ O $Promise<void>$ O O O O O O O O O $any$ O O O $any$ O O $any$ O O O $any$ O O O $any$ O O $any$ O O O $any$ O O O O O O O O O O O O O O O O O O O O O O O $any$ O O O O O O O $any$ O O O O O O O O $complex$ O O $string$ O O O $any$ O $any$ O $any$ O O O O O O $void$ O O O O O $Report$ O $void$ O $complex$ O $string$ O $complex$ O $any$ O O O O $any$ O $void$ O O $any$ O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $string$ O O O $any$ O $any$ O $any$ O O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O O $complex$ O O $complex$ O O $string$ O O O $Page$ O $Report$ O $Page$ O O O O O O O O $any$ O $any$ O $any$ O $complex$ O $any$ O $Report$ O $void$ O $complex$ O $string$ O $complex$ O $any$ O O $any$ O $any$ O O O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O $any$ O $complex$ O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O $complex$ O $complex$ O $complex$ O $Page$ O $string$ O O $any$ O O O O O O O O O $any$ O O O O O $any$ O O O O O O $string$ O O O $string$ O O O $any$ O $any$ O $any$ O O O O $any$ O $any$ O $any$ O O O O $complex$ O O $string$ O O O $complex$ O O $string$ O O O $string$ O O O O O O $Report$ O $void$ O O O $string$ O O O $any$ O O $Report$ O $void$ O O O $string$ O O O $any$ O O $any$ O $any$ O O O O O $complex$ O O $any$ O $any$ O O $any$ O O O $any$ O O $any$ O $any$ O O O $any$ O O O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O $any$ O O O $any$ O $any$ O $any$ O O O $any$ O O O O $any$ O $any$ O $any$ O O $any$ O O O $complex$ O $complex$ O $string$ O O $any$ O O O O O O O O O $any$ O O O O O $any$ O O O $complex$ O O $string$ O O O $string$ O O O $any$ O $any$ O $any$ O O O O $complex$ O O $string$ O O O O O $Report$ O $void$ O $complex$ O $string$ O $complex$ O $any$ O O $any$ O $any$ O O O $complex$ O $complex$ O O $any$ O $any$ O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O $complex$ O O O $any$ O $complex$ O $any$ O O $any$ O $any$ O $any$ O O $complex$ O $complex$ O $complex$ O O O O $any$ O O O O O O O O O O O O O O O